{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\TrainingsTableViewStaff.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { Box, Grid, GridItem, Icon, Heading, IconButton, Spacer, Stack } from \"@chakra-ui/react\";\nimport { EditIcon, EmailIcon, ViewIcon } from \"@chakra-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { differenceInDays, addDays } from \"date-fns\";\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\nimport { selector, useRecoilState, useRecoilValueLoadable } from \"recoil\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useLeavesContext } from \"../context/leaves_context\";\nimport { leaves_url } from \"../utils/constants\";\nimport { useTrainings } from \"./trainings/useTrainings\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\n\nconst TrainingsTableViewStaff = () => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const {\n    trainings,\n    filter,\n    setFilter,\n    setTrainingId\n  } = useTrainings();\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const today = Date().toLocaleString();\n  useEffect(() => {\n    setFilter(loginLevel.loginUserId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h4\",\n          size: \"md\",\n          children: \"Trainings Schedule Expiry Within 90 days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton // variant=\"outline\"\n        , {\n          size: \"md\",\n          \"aria-label\": \"Edit\",\n          icon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 19\n          }, this),\n          onClick: () => history.push(\"/singleemployee\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), trainings.filter(i => differenceInDays(new Date(i.expiry_date), new Date(today)) < 90 && differenceInDays(new Date(today), new Date(i.expiry_date)) < 0).map(row => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          templateColumns: \"repeat(9, 1fr)\",\n          gap: 3,\n          p: 1,\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 3,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              w: \"100%\",\n              children: row.institute\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 3,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              w: \"100%\",\n              children: row.course\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 3,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              w: \"100%\",\n              children: row.expiry_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this) // <ListItem key={row.id}>\n        //   <Grid item sm={3} align=\"center\">\n        //     <ListItemText>{row.institute}</ListItemText>\n        //   </Grid>\n        //   <Grid item sm={3} align=\"center\">\n        //     <ListItemText>{row.course}</ListItemText>\n        //   </Grid>\n        //   <Grid item sm={3} align=\"center\">\n        //     <ListItemText>{row.expiry_date}</ListItemText>\n        //   </Grid>\n        // </ListItem>\n        ;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TrainingsTableViewStaff, \"5uMIHa5K0yMgBsgDb1obcr58h4M=\", false, function () {\n  return [useStyles, useHistory, useTrainings, useRecoilState];\n});\n\n_c = TrainingsTableViewStaff;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\nexport default TrainingsTableViewStaff;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrainingsTableViewStaff\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/TrainingsTableViewStaff.js"],"names":["React","useState","useEffect","makeStyles","clsx","Box","Grid","GridItem","Icon","Heading","IconButton","Spacer","Stack","EditIcon","EmailIcon","ViewIcon","useHistory","differenceInDays","addDays","List","ListItem","ListItemText","selector","useRecoilState","useRecoilValueLoadable","loginLevelState","useEmployeesContext","useLeavesContext","leaves_url","useTrainings","drawerWidth","TrainingsTableViewStaff","classes","useStyles","history","fixedHeightPaper","paper","fixedHeight","trainings","filter","setFilter","setTrainingId","loginLevel","setLoginLevel","today","Date","toLocaleString","loginUserId","root","push","i","expiry_date","map","row","institute","course","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  GridItem,\r\n  Icon,\r\n  Heading,\r\n  IconButton,\r\n  Spacer,\r\n  Stack,\r\n} from \"@chakra-ui/react\";\r\nimport { EditIcon, EmailIcon, ViewIcon } from \"@chakra-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { differenceInDays, addDays } from \"date-fns\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { selector, useRecoilState, useRecoilValueLoadable } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { leaves_url } from \"../utils/constants\";\r\nimport { useTrainings } from \"./trainings/useTrainings\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst TrainingsTableViewStaff = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { trainings, filter, setFilter, setTrainingId } = useTrainings();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const today = Date().toLocaleString();\r\n\r\n  useEffect(() => {\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <Grid direction=\"row\">\r\n        <Stack direction=\"row\">\r\n          <Heading as=\"h4\" size=\"md\">\r\n            Trainings Schedule Expiry Within 90 days\r\n          </Heading>\r\n          <Spacer />\r\n          <IconButton\r\n            // variant=\"outline\"\r\n            size=\"md\"\r\n            aria-label=\"Edit\"\r\n            icon={<EditIcon />}\r\n            onClick={() => history.push(\"/singleemployee\")}\r\n          />\r\n        </Stack>\r\n        {/* <Heading as=\"h4\" size=\"md\">\r\n          Trainings Schedule Expiry Within 90 days\r\n        </Heading> */}\r\n        {trainings\r\n          .filter(\r\n            (i) =>\r\n              differenceInDays(new Date(i.expiry_date), new Date(today)) < 90 &&\r\n              differenceInDays(new Date(today), new Date(i.expiry_date)) < 0\r\n          )\r\n          .map((row) => {\r\n            return (\r\n              <Grid templateColumns=\"repeat(9, 1fr)\" gap={3} p={1}>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.institute}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.course}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.expiry_date}</Box>\r\n                </GridItem>\r\n              </Grid>\r\n              // <ListItem key={row.id}>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.institute}</ListItemText>\r\n              //   </Grid>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.course}</ListItemText>\r\n              //   </Grid>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.expiry_date}</ListItemText>\r\n              //   </Grid>\r\n              // </ListItem>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default TrainingsTableViewStaff;\r\n"]},"metadata":{},"sourceType":"module"}