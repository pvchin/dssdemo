{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\dss\\\\src\\\\components\\\\ItemForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\nimport currency from \"currency.js\";\nimport { useRecoilState } from \"recoil\";\nimport * as emailjs from \"emailjs-com\";\nimport QRCode from \"react-qr-code\";\nimport { Box, Heading, Divider, Grid, GridItem, HStack, Select, SimpleGrid, Text, Modal, ModalOverlay, ModalContent //ModalHeader,\n//ModalFooter,\n, ModalBody, ModalCloseButton, Tabs, TabList, TabPanels, Tab, TabPanel, useDisclosure } from \"@chakra-ui/react\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useExpensesContext } from \"../context/expenses_context\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useCustomToast } from \"../helpers/useCustomToast\";\nimport { useExpenses } from \"./expenses/useExpenses\";\nimport { useAddItem } from \"./items/useAddItem\";\nimport { useDeleteItem } from \"./items/useDeleteItem\";\nimport { useUpdateItem } from \"./items/useUpdateItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\nconst TEMPLATE_ID = \"template_1y8odlq\";\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\nconst initial_values = {\n  name: \"\",\n  date: \"\",\n  purchased_date: \"\",\n  purchased_from: \"\",\n  description: \"\",\n  remark: \"\",\n  status: \"Pending\",\n  amount: 0\n};\n\nconst ExpenseForm = ({\n  formdata,\n  setFormdata,\n  handleDialogClose\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const toast = useCustomToast();\n  const {\n    expenses,\n    filter,\n    setFilter,\n    setExpenseId\n  } = useExpenses();\n  const updateItem = useUpdateItem();\n  const addItem = useAddItem();\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const {\n    isExpenseEditing,\n    editExpenseID\n  } = useExpensesContext();\n  const {\n    handleSubmit,\n    control\n  } = useForm();\n\n  const handleSentEmail = data => {\n    const {\n      date\n    } = data; //console.log(\"expense form\", loginLevel);\n\n    var emaildata = {\n      to_name: loginLevel.loginUser,\n      to_email: loginLevel.loginEmail,\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\n      cc_to: loginLevel.reporting_email\n    };\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(function (response) {\n      console.log(response.status, response.text);\n      toast({\n        title: `Email has sent successfully to ${emaildata.to_email}!`,\n        status: \"success\"\n      });\n    }, function (err) {\n      console.log(err);\n      toast({\n        title: `Email has fail to send to ${emaildata.to_email}!`,\n        status: \"warning\"\n      });\n    });\n  };\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n\n    if (isExpenseEditing) {\n      updateItem({\n        id: editExpenseID,\n        ...data\n      });\n    } else {\n      addItem({ ...data\n      });\n    }\n\n    handleDialogClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h3\",\n        children: \"ITEM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(SimpleGrid, {\n          children: /*#__PURE__*/_jsxDEV(Tabs, {\n            children: [/*#__PURE__*/_jsxDEV(TabList, {\n              children: [/*#__PURE__*/_jsxDEV(Tab, {\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                children: \"History\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TabPanels, {\n              children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: handleSubmit(onSubmit),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Controller, {\n                      name: \"itemno\",\n                      control: control,\n                      defaultValue: formdata.itemno,\n                      render: ({\n                        field: {\n                          onChange,\n                          value\n                        },\n                        fieldState: {\n                          error\n                        }\n                      }) => {\n                        return /*#__PURE__*/_jsxDEV(TextField, {\n                          label: \"Item No\",\n                          id: \"margin-normal3\",\n                          name: \"itemno\",\n                          defaultValue: formdata.itemno,\n                          className: classes.textField,\n                          onChange: onChange,\n                          error: !!error,\n                          helperText: error ? error.message : null\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 136,\n                          columnNumber: 29\n                        }, this);\n                      } // rules={{ required: \"Reason is required\" }}\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Controller, {\n                      name: \"desp\",\n                      control: control,\n                      defaultValue: formdata.desp,\n                      render: ({\n                        field: {\n                          onChange,\n                          value\n                        },\n                        fieldState: {\n                          error\n                        }\n                      }) => {\n                        return /*#__PURE__*/_jsxDEV(TextField, {\n                          label: \"Description\",\n                          id: \"margin-normal3\",\n                          name: \"desp\",\n                          defaultValue: formdata.desp,\n                          className: classes.textField,\n                          onChange: onChange,\n                          error: !!error,\n                          helperText: error ? error.message : null\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 162,\n                          columnNumber: 29\n                        }, this);\n                      } // rules={{ required: \"Reason is required\" }}\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Controller, {\n                      name: \"uprice\",\n                      control: control,\n                      defaultValue: formdata.uprice,\n                      render: ({\n                        field: {\n                          onChange,\n                          value\n                        },\n                        fieldState: {\n                          error\n                        }\n                      }) => {\n                        return /*#__PURE__*/_jsxDEV(TextField, {\n                          label: \"Unit Price\",\n                          type: \"number\",\n                          id: \"standard-number1\",\n                          name: \"uprice\",\n                          defaultValue: formdata.uprice,\n                          className: classes.textField //onChange={onChange}\n                          ,\n                          onChange: e => {\n                            onChange(parseInt(e.target.value, 10));\n                          },\n                          error: !!error,\n                          helperText: error ? error.message : null\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 187,\n                          columnNumber: 29\n                        }, this);\n                      } //rules={{ required: \"IC No required\" }}\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Controller, {\n                      name: \"qty\",\n                      control: control,\n                      defaultValue: formdata.qty,\n                      render: ({\n                        field: {\n                          onChange,\n                          value\n                        },\n                        fieldState: {\n                          error\n                        }\n                      }) => {\n                        return /*#__PURE__*/_jsxDEV(TextField, {\n                          label: \"Qty Onhand\",\n                          type: \"number\",\n                          id: \"standard-number1\",\n                          name: \"qty\",\n                          defaultValue: formdata.qty,\n                          className: classes.textField //onChange={onChange}\n                          ,\n                          onChange: e => {\n                            onChange(parseInt(e.target.value, 10));\n                          },\n                          error: !!error,\n                          helperText: error ? error.message : null\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 216,\n                          columnNumber: 29\n                        }, this);\n                      } //rules={{ required: \"IC No required\" }}\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Controller, {\n                      name: \"minqty\",\n                      control: control,\n                      defaultValue: formdata.minqty,\n                      render: ({\n                        field: {\n                          onChange,\n                          value\n                        },\n                        fieldState: {\n                          error\n                        }\n                      }) => {\n                        return /*#__PURE__*/_jsxDEV(TextField, {\n                          label: \"Minimum Qty\",\n                          type: \"number\",\n                          id: \"standard-number1\",\n                          name: \"minqty\",\n                          defaultValue: formdata.minqty,\n                          className: classes.textField //onChange={onChange}\n                          ,\n                          onChange: e => {\n                            onChange(parseInt(e.target.value, 10));\n                          },\n                          error: !!error,\n                          helperText: error ? error.message : null\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 245,\n                          columnNumber: 29\n                        }, this);\n                      } //rules={{ required: \"IC No required\" }}\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Controller, {\n                      name: \"remark\",\n                      control: control,\n                      defaultValue: formdata.remark,\n                      render: ({\n                        field: {\n                          onChange,\n                          value\n                        },\n                        fieldState: {\n                          error\n                        }\n                      }) => {\n                        return /*#__PURE__*/_jsxDEV(TextField, {\n                          label: \"Remark\",\n                          id: \"margin-normal5\",\n                          name: \"remark\",\n                          defaultValue: formdata.remark,\n                          className: classes.textField,\n                          onChange: onChange,\n                          error: !!error,\n                          helperText: error ? error.message : null\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 304,\n                          columnNumber: 29\n                        }, this);\n                      } // rules={{ required: \"Reason is required\" }}\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      variant: \"contained\",\n                      color: \"primary\",\n                      className: classes.button //onClick={() => handleSubmit(onSubmit)()}\n                      ,\n                      children: [\"Save \", /*#__PURE__*/_jsxDEV(Icon, {\n                        className: classes.rightIcon,\n                        children: \"send\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 328,\n                        columnNumber: 30\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n                    columns: columns,\n                    data: assetshistory,\n                    title: \"Assets Table\" // icons={{\n                    //   Add: (props) => <AddIcon />,\n                    //   Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\n                    //   Delete: (props) => <DeleteIcon />,\n                    //   Clear: (props) => <DeleteIcon />,\n                    //   Check: (props) => <CheckIcon />,\n                    //   Search: (props) => <SearchIcon />,\n                    //   ResetSearch: (props) => <DeleteIcon />,\n                    // }}\n                    ,\n                    options: {\n                      filtering: true,\n                      headerStyle: {\n                        backgroundColor: \"orange\",\n                        color: \"#FFF\"\n                      },\n                      showTitle: true\n                    },\n                    components: {}\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpenseForm, \"t9u+BX3qE44OsIVq2nmNMFwFkm4=\", false, function () {\n  return [useStyles, useCustomToast, useExpenses, useUpdateItem, useAddItem, useRecoilState, useExpensesContext, useForm];\n});\n\n_c = ExpenseForm;\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 300\n  }\n}));\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["D:/react-myprojects/dss/src/components/ItemForm.js"],"names":["React","Button","Icon","TextField","Paper","Typography","makeStyles","CurrencyTextField","currency","useRecoilState","emailjs","QRCode","Box","Heading","Divider","Grid","GridItem","HStack","Select","SimpleGrid","Text","Modal","ModalOverlay","ModalContent","ModalBody","ModalCloseButton","Tabs","TabList","TabPanels","Tab","TabPanel","useDisclosure","loginLevelState","MenuItem","useEmployeesContext","useExpensesContext","Controller","useForm","useCustomToast","useExpenses","useAddItem","useDeleteItem","useUpdateItem","SERVICE_ID","process","env","REACT_APP_EMAILJS_SERVICEID","TEMPLATE_ID","USER_ID","REACT_APP_EMAILJS_USERID","initial_values","name","date","purchased_date","purchased_from","description","remark","status","amount","ExpenseForm","formdata","setFormdata","handleDialogClose","classes","useStyles","toast","expenses","filter","setFilter","setExpenseId","updateItem","addItem","loginLevel","setLoginLevel","isExpenseEditing","editExpenseID","handleSubmit","control","handleSentEmail","data","emaildata","to_name","loginUser","to_email","loginEmail","message","cc_to","reporting_email","send","then","response","console","log","text","title","err","onSubmit","e","preventDefault","id","root","itemno","field","onChange","value","fieldState","error","textField","desp","uprice","parseInt","target","qty","minqty","button","rightIcon","columns","assetshistory","filtering","headerStyle","backgroundColor","color","showTitle","theme","margin","spacing","leftIcon","marginRight","marginLeft","iconSmall","fontSize","padding","container","display","flexWrap","width"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\nimport currency from \"currency.js\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport QRCode from \"react-qr-code\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Divider,\r\n  Grid,\r\n  GridItem,\r\n  HStack,\r\n  Select,\r\n  SimpleGrid,\r\n  Text,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  //ModalHeader,\r\n  //ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useExpenses } from \"./expenses/useExpenses\";\r\nimport { useAddItem } from \"./items/useAddItem\";\r\nimport { useDeleteItem } from \"./items/useDeleteItem\";\r\nimport { useUpdateItem } from \"./items/useUpdateItem\";\r\n\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  date: \"\",\r\n  purchased_date: \"\",\r\n  purchased_from: \"\",\r\n  description: \"\",\r\n  remark: \"\",\r\n  status: \"Pending\",\r\n  amount: 0,\r\n};\r\n\r\nconst ExpenseForm = ({ formdata, setFormdata, handleDialogClose }) => {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const { expenses, filter, setFilter, setExpenseId } = useExpenses();\r\n  const updateItem = useUpdateItem();\r\n  const addItem = useAddItem();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { isExpenseEditing, editExpenseID } = useExpensesContext();\r\n\r\n  const { handleSubmit, control } = useForm();\r\n\r\n  const handleSentEmail = (data) => {\r\n    const { date } = data;\r\n    //console.log(\"expense form\", loginLevel);\r\n    var emaildata = {\r\n      to_name: loginLevel.loginUser,\r\n      to_email: loginLevel.loginEmail,\r\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\r\n      cc_to: loginLevel.reporting_email,\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const onSubmit = (data, e) => {\r\n    e.preventDefault();\r\n    if (isExpenseEditing) {\r\n      updateItem({ id: editExpenseID, ...data });\r\n    } else {\r\n      addItem({ ...data });\r\n    }\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          ITEM\r\n        </Typography>\r\n        {/* <Typography component=\"p\">Expense Claim Application</Typography> */}\r\n        <Box>\r\n          <SimpleGrid>\r\n            <Tabs>\r\n              <TabList>\r\n                <Tab>Details</Tab>\r\n                <Tab>History</Tab>\r\n              </TabList>\r\n              <TabPanels>\r\n                <TabPanel>\r\n                  <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div>\r\n                      <Controller\r\n                        name=\"itemno\"\r\n                        control={control}\r\n                        defaultValue={formdata.itemno}\r\n                        render={({\r\n                          field: { onChange, value },\r\n                          fieldState: { error },\r\n                        }) => {\r\n                          return (\r\n                            <TextField\r\n                              label=\"Item No\"\r\n                              id=\"margin-normal3\"\r\n                              name=\"itemno\"\r\n                              defaultValue={formdata.itemno}\r\n                              className={classes.textField}\r\n                              onChange={onChange}\r\n                              error={!!error}\r\n                              helperText={error ? error.message : null}\r\n                            />\r\n                          );\r\n                        }}\r\n                        // rules={{ required: \"Reason is required\" }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div>\r\n                      <Controller\r\n                        name=\"desp\"\r\n                        control={control}\r\n                        defaultValue={formdata.desp}\r\n                        render={({\r\n                          field: { onChange, value },\r\n                          fieldState: { error },\r\n                        }) => {\r\n                          return (\r\n                            <TextField\r\n                              label=\"Description\"\r\n                              id=\"margin-normal3\"\r\n                              name=\"desp\"\r\n                              defaultValue={formdata.desp}\r\n                              className={classes.textField}\r\n                              onChange={onChange}\r\n                              error={!!error}\r\n                              helperText={error ? error.message : null}\r\n                            />\r\n                          );\r\n                        }}\r\n                        // rules={{ required: \"Reason is required\" }}\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <Controller\r\n                        name=\"uprice\"\r\n                        control={control}\r\n                        defaultValue={formdata.uprice}\r\n                        render={({\r\n                          field: { onChange, value },\r\n                          fieldState: { error },\r\n                        }) => {\r\n                          return (\r\n                            <TextField\r\n                              label=\"Unit Price\"\r\n                              type=\"number\"\r\n                              id=\"standard-number1\"\r\n                              name=\"uprice\"\r\n                              defaultValue={formdata.uprice}\r\n                              className={classes.textField}\r\n                              //onChange={onChange}\r\n                              onChange={(e) => {\r\n                                onChange(parseInt(e.target.value, 10));\r\n                              }}\r\n                              error={!!error}\r\n                              helperText={error ? error.message : null}\r\n                            />\r\n                          );\r\n                        }}\r\n                        //rules={{ required: \"IC No required\" }}\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <Controller\r\n                        name=\"qty\"\r\n                        control={control}\r\n                        defaultValue={formdata.qty}\r\n                        render={({\r\n                          field: { onChange, value },\r\n                          fieldState: { error },\r\n                        }) => {\r\n                          return (\r\n                            <TextField\r\n                              label=\"Qty Onhand\"\r\n                              type=\"number\"\r\n                              id=\"standard-number1\"\r\n                              name=\"qty\"\r\n                              defaultValue={formdata.qty}\r\n                              className={classes.textField}\r\n                              //onChange={onChange}\r\n                              onChange={(e) => {\r\n                                onChange(parseInt(e.target.value, 10));\r\n                              }}\r\n                              error={!!error}\r\n                              helperText={error ? error.message : null}\r\n                            />\r\n                          );\r\n                        }}\r\n                        //rules={{ required: \"IC No required\" }}\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <Controller\r\n                        name=\"minqty\"\r\n                        control={control}\r\n                        defaultValue={formdata.minqty}\r\n                        render={({\r\n                          field: { onChange, value },\r\n                          fieldState: { error },\r\n                        }) => {\r\n                          return (\r\n                            <TextField\r\n                              label=\"Minimum Qty\"\r\n                              type=\"number\"\r\n                              id=\"standard-number1\"\r\n                              name=\"minqty\"\r\n                              defaultValue={formdata.minqty}\r\n                              className={classes.textField}\r\n                              //onChange={onChange}\r\n                              onChange={(e) => {\r\n                                onChange(parseInt(e.target.value, 10));\r\n                              }}\r\n                              error={!!error}\r\n                              helperText={error ? error.message : null}\r\n                            />\r\n                          );\r\n                        }}\r\n                        //rules={{ required: \"IC No required\" }}\r\n                      />\r\n                    </div>\r\n                    {/* <div>\r\n            <Controller\r\n              name=\"date\"\r\n              control={control}\r\n              defaultValue={formdata.date}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Date\"\r\n                    type=\"date\"\r\n                    id=\"margin-normal2\"\r\n                    name=\"formdata.date\"\r\n                    value={value}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"From Date is required\" }}\r\n            />\r\n          </div> */}\r\n\r\n                    <div>\r\n                      <Controller\r\n                        name=\"remark\"\r\n                        control={control}\r\n                        defaultValue={formdata.remark}\r\n                        render={({\r\n                          field: { onChange, value },\r\n                          fieldState: { error },\r\n                        }) => {\r\n                          return (\r\n                            <TextField\r\n                              label=\"Remark\"\r\n                              id=\"margin-normal5\"\r\n                              name=\"remark\"\r\n                              defaultValue={formdata.remark}\r\n                              className={classes.textField}\r\n                              onChange={onChange}\r\n                              error={!!error}\r\n                              helperText={error ? error.message : null}\r\n                            />\r\n                          );\r\n                        }}\r\n                        // rules={{ required: \"Reason is required\" }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        //onClick={() => handleSubmit(onSubmit)()}\r\n                      >\r\n                        Save <Icon className={classes.rightIcon}>send</Icon>\r\n                      </Button>\r\n                    </div>\r\n                  </form>\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <Box>\r\n                    <MaterialTable\r\n                      columns={columns}\r\n                      data={assetshistory}\r\n                      title=\"Assets Table\"\r\n                      // icons={{\r\n                      //   Add: (props) => <AddIcon />,\r\n                      //   Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n                      //   Delete: (props) => <DeleteIcon />,\r\n                      //   Clear: (props) => <DeleteIcon />,\r\n                      //   Check: (props) => <CheckIcon />,\r\n                      //   Search: (props) => <SearchIcon />,\r\n                      //   ResetSearch: (props) => <DeleteIcon />,\r\n                      // }}\r\n\r\n                      options={{\r\n                        filtering: true,\r\n                        headerStyle: {\r\n                          backgroundColor: \"orange\",\r\n                          color: \"#FFF\",\r\n                        },\r\n                        showTitle: true,\r\n                      }}\r\n                      components={{}}\r\n                    />\r\n                  </Box>\r\n                </TabPanel>\r\n              </TabPanels>\r\n            </Tabs>\r\n          </SimpleGrid>\r\n        </Box>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 300,\r\n  },\r\n}));\r\n\r\nexport default ExpenseForm;\r\n"]},"metadata":{},"sourceType":"module"}