{"ast":null,"code":"import _regeneratorRuntime from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useState,useCallback}from\"react\";import{useQuery}from\"react-query\";import{payrun_url}from\"../../utils/constants\";import{filterByEmpId}from\"./utils\";import axios from\"axios\";import{queryKeys}from\"../react-query/constants\";function getPayrunStatus(_x){return _getPayrunStatus.apply(this,arguments);}function _getPayrunStatus(){_getPayrunStatus=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(status){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"\".concat(payrun_url,\"?fi=\").concat(status));case 2:_yield$axios$get=_context.sent;data=_yield$axios$get.data;return _context.abrupt(\"return\",data);case 5:case\"end\":return _context.stop();}}},_callee);}));return _getPayrunStatus.apply(this,arguments);}export function usePayrunStatus(empid){var _useState=useState(\"all\"),_useState2=_slicedToArray(_useState,2),filter=_useState2[0],setFilter=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),payrunstatusId=_useState4[0],setPayrunStatusId=_useState4[1];var selectFn=useCallback(function(unfiltered){return filterByEmpId(unfiltered,filter);},[filter]);var fallback=[];var _useQuery=useQuery([queryKeys.payrunstatus,{payrunstatusId:payrunstatusId}],//queryKeys.payrun,\nfunction(){return getPayrunStatus(payrunstatusId);},{select:filter!==\"all\"?selectFn:undefined}),_useQuery$data=_useQuery.data,payrunstatus=_useQuery$data===void 0?fallback:_useQuery$data;return{payrunstatus:payrunstatus,filter:filter,setFilter:setFilter,setPayrunStatusId:setPayrunStatusId};}","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/payrun/usePayrunStatus.js"],"names":["useState","useCallback","useQuery","payrun_url","filterByEmpId","axios","queryKeys","getPayrunStatus","status","get","data","usePayrunStatus","empid","filter","setFilter","payrunstatusId","setPayrunStatusId","selectFn","unfiltered","fallback","payrunstatus","select","undefined"],"mappings":"qcAAA,OAASA,QAAT,CAAmBC,WAAnB,KAAsC,OAAtC,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,UAAT,KAA2B,uBAA3B,CACA,OAASC,aAAT,KAA8B,SAA9B,CAEA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,0BAA1B,C,QAEeC,CAAAA,e,yJAAf,iBAA+BC,MAA/B,kKACyBH,CAAAA,KAAK,CAACI,GAAN,WAAaN,UAAb,gBAA8BK,MAA9B,EADzB,uCACUE,IADV,kBACUA,IADV,iCAGSA,IAHT,wD,kDAMA,MAAO,SAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,eACTZ,QAAQ,CAAC,KAAD,CADC,wCAC9Ba,MAD8B,eACtBC,SADsB,8BAEOd,QAAQ,CAAC,EAAD,CAFf,yCAE9Be,cAF8B,eAEdC,iBAFc,eAIrC,GAAMC,CAAAA,QAAQ,CAAGhB,WAAW,CAC1B,SAACiB,UAAD,QAAgBd,CAAAA,aAAa,CAACc,UAAD,CAAaL,MAAb,CAA7B,EAD0B,CAE1B,CAACA,MAAD,CAF0B,CAA5B,CAKA,GAAMM,CAAAA,QAAQ,CAAG,EAAjB,CATqC,cAUKjB,QAAQ,CAChD,CAACI,SAAS,CAACc,YAAX,CAAyB,CAAEL,cAAc,CAAdA,cAAF,CAAzB,CADgD,CAEhD;AACA,iBAAMR,CAAAA,eAAe,CAACQ,cAAD,CAArB,EAHgD,CAIhD,CACEM,MAAM,CAAER,MAAM,GAAK,KAAX,CAAmBI,QAAnB,CAA8BK,SADxC,CAJgD,CAVb,0BAU7BZ,IAV6B,CAUvBU,YAVuB,yBAURD,QAVQ,gBAmBrC,MAAO,CAAEC,YAAY,CAAZA,YAAF,CAAgBP,MAAM,CAANA,MAAhB,CAAwBC,SAAS,CAATA,SAAxB,CAAmCE,iBAAiB,CAAjBA,iBAAnC,CAAP,CACD","sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { payrun_url } from \"../../utils/constants\";\r\nimport { filterByEmpId } from \"./utils\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getPayrunStatus(status) {\r\n  const { data } = await axios.get(`${payrun_url}?fi=${status}`);\r\n  //const { data } = await axios.get(`${payrun_url}`);\r\n  return data;\r\n}\r\n\r\nexport function usePayrunStatus(empid) {\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [payrunstatusId, setPayrunStatusId] = useState(\"\");\r\n\r\n  const selectFn = useCallback(\r\n    (unfiltered) => filterByEmpId(unfiltered, filter),\r\n    [filter]\r\n  );\r\n\r\n  const fallback = [];\r\n  const { data: payrunstatus = fallback } = useQuery(\r\n    [queryKeys.payrunstatus, { payrunstatusId }],\r\n    //queryKeys.payrun,\r\n    () => getPayrunStatus(payrunstatusId),\r\n    {\r\n      select: filter !== \"all\" ? selectFn : undefined,\r\n    }\r\n  );\r\n\r\n  return { payrunstatus, filter, setFilter, setPayrunStatusId };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}