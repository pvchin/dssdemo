{"ast":null,"code":"import pdfMake from \"pdfmake/build/pdfmake\";\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\nimport { formatPrice } from \"../helpers/Utils\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { payrunState } from \"./data/atomdata\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\n\nconst PrintPDFTest = ({\n  singlebatchpayslip\n}) => {\n  const period = singlebatchpayslip[0].period;\n  const subtitle = `Payroll Summary for the period  ${period}`;\n  const names = singlebatchpayslip.map(r => {\n    return r.name;\n  });\n  const wages = singlebatchpayslip.map(r => {\n    const amount = formatPrice(r.wages);\n    return amount;\n  });\n  const tapamount = singlebatchpayslip.map(r => {\n    const amount = formatPrice(r.tap_amount);\n    return amount;\n  });\n  const scpamount = singlebatchpayslip.map(r => {\n    const amount = formatPrice(r.scp_amount);\n    return amount;\n  });\n  const sitesallowsamt = singlebatchpayslip.map(r => {\n    const amount = formatPrice(r.allows_type1amt);\n    return amount;\n  });\n  const expclaimsamt = singlebatchpayslip.map(r => {\n    const amount = formatPrice(r.allows_type2amt);\n    return amount;\n  });\n  const allowsamt = singlebatchpayslip.map(r => {\n    const amount = formatPrice(r.total_allowances);\n    return amount;\n  });\n  const deductsamt = singlebatchpayslip.map(r => {\n    const amount = formatPrice(r.total_deductions);\n    return amount;\n  });\n  const nettpay = singlebatchpayslip.map(r => {\n    const amount = formatPrice(r.nett_pay);\n    return amount;\n  });\n  const totalwages = singlebatchpayslip.reduce((acc, item) => {\n    return acc + item.wages;\n  }, 0);\n  const totaltap = singlebatchpayslip.reduce((acc, item) => {\n    return acc + item.tap_amount;\n  }, 0);\n  const totalscp = singlebatchpayslip.reduce((acc, item) => {\n    return acc + item.scp_amount;\n  }, 0);\n  const totalsitesallows = singlebatchpayslip.reduce((acc, item) => {\n    return acc + item.allows_type1amt;\n  }, 0);\n  const totalexpclaims = singlebatchpayslip.reduce((acc, item) => {\n    return acc + item.allows_type2amt;\n  }, 0);\n  const totalallows = singlebatchpayslip.reduce((acc, item) => {\n    return acc + item.total_allowances;\n  }, 0);\n  const totaldeducts = singlebatchpayslip.reduce((acc, item) => {\n    return acc + item.total_deductions;\n  }, 0);\n  const totalnettpay = singlebatchpayslip.reduce((acc, item) => {\n    return acc + item.nett_pay;\n  }, 0);\n  const {\n    vfs\n  } = vfsFonts.pdfMake;\n  pdfMake.vfs = vfs;\n  const documentDefinition = {\n    pageSize: \"A4\",\n    pageOrientation: \"landscape\",\n    content: [{\n      text: \"AppSmith Sutera Sdn Bhd\",\n      style: \"header\"\n    }, {\n      text: subtitle,\n      style: \"subheader\"\n    }, {\n      style: \"tableExample\",\n      table: {\n        widths: [150, 80, 80, 80, 80, 80, 80],\n        body: [[\"Name\", {\n          alignment: \"right\",\n          text: \"Wages\"\n        }, {\n          alignment: \"right\",\n          text: \"TAP Amount\"\n        }, {\n          alignment: \"right\",\n          text: \"SCP Amount\"\n        }, // { alignment: \"right\", text: \"Site Allows\" },\n        // { alignment: \"right\", text: \"Expenses Claims\" },\n        {\n          alignment: \"right\",\n          text: \"Allowances\"\n        }, {\n          alignment: \"right\",\n          text: \"Deductions\"\n        }, {\n          alignment: \"right\",\n          text: \"Nett Pay\"\n        }], [{\n          stack: [{\n            type: \"none\",\n            fontSize: 10,\n            ul: names\n          }]\n        }, {\n          stack: [{\n            type: \"none\",\n            fontSize: 10,\n            alignment: \"right\",\n            ul: wages\n          }]\n        }, {\n          stack: [{\n            type: \"none\",\n            fontSize: 10,\n            alignment: \"right\",\n            ul: tapamount\n          }]\n        }, {\n          stack: [{\n            type: \"none\",\n            fontSize: 10,\n            alignment: \"right\",\n            ul: scpamount\n          }]\n        }, // {\n        //   stack: [\n        //     {\n        //       type: \"none\",\n        //       fontSize: 10,\n        //       alignment: \"right\",\n        //       ul: sitesallowsamt,\n        //     },\n        //   ],\n        // },\n        // {\n        //   stack: [\n        //     {\n        //       type: \"none\",\n        //       fontSize: 10,\n        //       alignment: \"right\",\n        //       ul: expclaimsamt,\n        //     },\n        //   ],\n        // },\n        {\n          stack: [{\n            type: \"none\",\n            fontSize: 10,\n            alignment: \"right\",\n            ul: allowsamt\n          }]\n        }, {\n          stack: [{\n            type: \"none\",\n            fontSize: 10,\n            alignment: \"right\",\n            ul: deductsamt\n          }]\n        }, {\n          stack: [{\n            type: \"none\",\n            fontSize: 10,\n            alignment: \"right\",\n            ul: nettpay\n          }]\n        }], [\"\", {\n          alignment: \"right\",\n          text: formatPrice(totalwages)\n        }, {\n          alignment: \"right\",\n          text: formatPrice(totaltap)\n        }, {\n          alignment: \"right\",\n          text: formatPrice(totalscp)\n        }, {\n          alignment: \"right\",\n          text: formatPrice(totalsitesallows)\n        }, {\n          alignment: \"right\",\n          text: formatPrice(totalexpclaims)\n        }, {\n          alignment: \"right\",\n          text: formatPrice(totalallows)\n        }, {\n          alignment: \"right\",\n          text: formatPrice(totaldeducts)\n        }, {\n          alignment: \"right\",\n          text: formatPrice(totalnettpay)\n        }]]\n      }\n    }],\n    styles: {\n      header: {\n        fontSize: 18,\n        bold: true,\n        margin: [0, 0, 0, 10]\n      },\n      subheader: {\n        fontSize: 16,\n        bold: true,\n        margin: [0, 10, 0, 5]\n      },\n      tableExample: {\n        margin: [0, 5, 0, 15]\n      },\n      tableOpacityExample: {\n        margin: [0, 5, 0, 15],\n        fillColor: \"blue\",\n        fillOpacity: 0.3\n      },\n      tableHeader: {\n        bold: true,\n        fontSize: 13,\n        color: \"black\"\n      }\n    },\n    defaultStyle: {// alignment: 'justify'\n    }\n  };\n  pdfMake.createPdf(documentDefinition).open();\n};\n\n_c = PrintPDFTest;\nexport default PrintPDFTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrintPDFTest\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/PrintPaySummary.js"],"names":["pdfMake","vfsFonts","formatPrice","useRecoilState","useRecoilValue","payrunState","usePayslipsContext","PrintPDFTest","singlebatchpayslip","period","subtitle","names","map","r","name","wages","amount","tapamount","tap_amount","scpamount","scp_amount","sitesallowsamt","allows_type1amt","expclaimsamt","allows_type2amt","allowsamt","total_allowances","deductsamt","total_deductions","nettpay","nett_pay","totalwages","reduce","acc","item","totaltap","totalscp","totalsitesallows","totalexpclaims","totalallows","totaldeducts","totalnettpay","vfs","documentDefinition","pageSize","pageOrientation","content","text","style","table","widths","body","alignment","stack","type","fontSize","ul","styles","header","bold","margin","subheader","tableExample","tableOpacityExample","fillColor","fillOpacity","tableHeader","color","defaultStyle","createPdf","open"],"mappings":"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","sourcesContent":["import pdfMake from \"pdfmake/build/pdfmake\";\r\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\r\nimport { formatPrice } from \"../helpers/Utils\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { payrunState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\n\r\nconst PrintPDFTest = ({ singlebatchpayslip }) => {\r\n  const period = singlebatchpayslip[0].period;\r\n  const subtitle = `Payroll Summary for the period  ${period}`;\r\n  const names = singlebatchpayslip.map((r) => {\r\n    return r.name;\r\n  });\r\n  const wages = singlebatchpayslip.map((r) => {\r\n    const amount = formatPrice(r.wages);\r\n    return amount;\r\n  });\r\n  const tapamount = singlebatchpayslip.map((r) => {\r\n    const amount = formatPrice(r.tap_amount);\r\n    return amount;\r\n  });\r\n  const scpamount = singlebatchpayslip.map((r) => {\r\n    const amount = formatPrice(r.scp_amount);\r\n    return amount;\r\n  });\r\n  const sitesallowsamt = singlebatchpayslip.map((r) => {\r\n    const amount = formatPrice(r.allows_type1amt);\r\n    return amount;\r\n  });\r\n  const expclaimsamt = singlebatchpayslip.map((r) => {\r\n    const amount = formatPrice(r.allows_type2amt);\r\n    return amount;\r\n  });\r\n  const allowsamt = singlebatchpayslip.map((r) => {\r\n    const amount = formatPrice(r.total_allowances);\r\n    return amount;\r\n  });\r\n  const deductsamt = singlebatchpayslip.map((r) => {\r\n    const amount = formatPrice(r.total_deductions);\r\n    return amount;\r\n  });\r\n  const nettpay = singlebatchpayslip.map((r) => {\r\n    const amount = formatPrice(r.nett_pay);\r\n    return amount;\r\n  });\r\n  const totalwages = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.wages;\r\n  }, 0);\r\n  const totaltap = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.tap_amount;\r\n  }, 0);\r\n  const totalscp = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.scp_amount;\r\n  }, 0);\r\n  const totalsitesallows = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.allows_type1amt;\r\n  }, 0);\r\n  const totalexpclaims = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.allows_type2amt;\r\n  }, 0);\r\n  const totalallows = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.total_allowances;\r\n  }, 0);\r\n  const totaldeducts = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.total_deductions;\r\n  }, 0);\r\n  const totalnettpay = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.nett_pay;\r\n  }, 0);\r\n  const { vfs } = vfsFonts.pdfMake;\r\n  pdfMake.vfs = vfs;\r\n\r\n  const documentDefinition = {\r\n    pageSize: \"A4\",\r\n    pageOrientation: \"landscape\",\r\n    content: [\r\n      { text: \"AppSmith Sutera Sdn Bhd\", style: \"header\" },\r\n      { text: subtitle, style: \"subheader\" },\r\n\r\n      {\r\n        style: \"tableExample\",\r\n        table: {\r\n          widths: [150, 80, 80, 80, 80, 80, 80],\r\n          body: [\r\n            [\r\n              \"Name\",\r\n              { alignment: \"right\", text: \"Wages\" },\r\n              { alignment: \"right\", text: \"TAP Amount\" },\r\n              { alignment: \"right\", text: \"SCP Amount\" },\r\n              // { alignment: \"right\", text: \"Site Allows\" },\r\n              // { alignment: \"right\", text: \"Expenses Claims\" },\r\n              { alignment: \"right\", text: \"Allowances\" },\r\n              { alignment: \"right\", text: \"Deductions\" },\r\n              { alignment: \"right\", text: \"Nett Pay\" },\r\n            ],\r\n            [\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 10,\r\n                    ul: names,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 10,\r\n                    alignment: \"right\",\r\n                    ul: wages,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 10,\r\n                    alignment: \"right\",\r\n                    ul: tapamount,\r\n                  },\r\n                ],\r\n              },\r\n\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 10,\r\n                    alignment: \"right\",\r\n                    ul: scpamount,\r\n                  },\r\n                ],\r\n              },\r\n              // {\r\n              //   stack: [\r\n              //     {\r\n              //       type: \"none\",\r\n              //       fontSize: 10,\r\n              //       alignment: \"right\",\r\n              //       ul: sitesallowsamt,\r\n              //     },\r\n              //   ],\r\n              // },\r\n              // {\r\n              //   stack: [\r\n              //     {\r\n              //       type: \"none\",\r\n              //       fontSize: 10,\r\n              //       alignment: \"right\",\r\n              //       ul: expclaimsamt,\r\n              //     },\r\n              //   ],\r\n              // },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 10,\r\n                    alignment: \"right\",\r\n                    ul: allowsamt,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 10,\r\n                    alignment: \"right\",\r\n                    ul: deductsamt,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 10,\r\n                    alignment: \"right\",\r\n                    ul: nettpay,\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n            [\r\n              \"\",\r\n              { alignment: \"right\", text: formatPrice(totalwages) },\r\n              { alignment: \"right\", text: formatPrice(totaltap) },\r\n              { alignment: \"right\", text: formatPrice(totalscp) },\r\n              { alignment: \"right\", text: formatPrice(totalsitesallows) },\r\n              { alignment: \"right\", text: formatPrice(totalexpclaims) },\r\n              { alignment: \"right\", text: formatPrice(totalallows) },\r\n              { alignment: \"right\", text: formatPrice(totaldeducts) },\r\n              { alignment: \"right\", text: formatPrice(totalnettpay) },\r\n            ],\r\n          ],\r\n        },\r\n      },\r\n    ],\r\n    styles: {\r\n      header: {\r\n        fontSize: 18,\r\n        bold: true,\r\n        margin: [0, 0, 0, 10],\r\n      },\r\n      subheader: {\r\n        fontSize: 16,\r\n        bold: true,\r\n        margin: [0, 10, 0, 5],\r\n      },\r\n      tableExample: {\r\n        margin: [0, 5, 0, 15],\r\n      },\r\n      tableOpacityExample: {\r\n        margin: [0, 5, 0, 15],\r\n        fillColor: \"blue\",\r\n        fillOpacity: 0.3,\r\n      },\r\n      tableHeader: {\r\n        bold: true,\r\n        fontSize: 13,\r\n        color: \"black\",\r\n      },\r\n    },\r\n    defaultStyle: {\r\n      // alignment: 'justify'\r\n    },\r\n  };\r\n\r\n  pdfMake.createPdf(documentDefinition).open();\r\n};\r\n\r\nexport default PrintPDFTest;\r\n"]},"metadata":{},"sourceType":"module"}