{"ast":null,"code":"import pdfMake from \"pdfmake/build/pdfmake\";\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\nimport { formatPrice } from \"../helpers/Utils\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { payrunState } from \"./data/atomdata\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\n\nconst PrintPDFTest = ({\n  singlebatchpayslip\n}) => {\n  const period = singlebatchpayslip[0].period;\n  const subtitle = `Payroll Summary for the period  ${period}`; // const items = singlebatchpayslip.map((r) => {\n  //   return { r.name, r.wages_bnd };\n  // });\n\n  const names = singlebatchpayslip.map(r => {\n    return r.name;\n  });\n  const wages = singlebatchpayslip.map(r => {\n    const amount = formatPrice(r.wages_bnd);\n    return amount;\n  });\n  const tapamount = singlebatchpayslip.map(r => {\n    const amount = formatPrice(r.tap_amount_bnd);\n    return amount;\n  });\n  const scpamount = singlebatchpayslip.map(r => {\n    const amount = formatPrice(r.scp_amount_bnd);\n    return amount;\n  });\n  const sitesallowsamt = singlebatchpayslip.map(r => {\n    const amount = formatPrice(r.site_allows_bnd);\n    return amount;\n  });\n  const expclaimsamt = singlebatchpayslip.map(r => {\n    const amount = formatPrice(r.expenses_claims_bnd);\n    return amount;\n  });\n  const allowsamt = singlebatchpayslip.map(r => {\n    const amount = formatPrice(r.total_allowances_bnd);\n    return amount;\n  });\n  const deductsamt = singlebatchpayslip.map(r => {\n    const amount = formatPrice(r.total_deductions_bnd);\n    return amount;\n  });\n  const nettpay = singlebatchpayslip.map(r => {\n    const amount = formatPrice(r.nett_pay_bnd);\n    return amount;\n  });\n  const totalwages = singlebatchpayslip.reduce((acc, item) => {\n    return acc + item.wages_bnd;\n  }, 0);\n  const totaltap = singlebatchpayslip.reduce((acc, item) => {\n    return acc + item.tap_amount_bnd;\n  }, 0);\n  const totalscp = singlebatchpayslip.reduce((acc, item) => {\n    return acc + item.scp_amount_bnd;\n  }, 0);\n  const totalsitesallows = singlebatchpayslip.reduce((acc, item) => {\n    return acc + item.site_allows_bnd;\n  }, 0);\n  const totalexpclaims = singlebatchpayslip.reduce((acc, item) => {\n    return acc + item.expenses_claims_bnd;\n  }, 0);\n  const totalallows = singlebatchpayslip.reduce((acc, item) => {\n    return acc + item.total_allowances_bnd;\n  }, 0);\n  const totaldeducts = singlebatchpayslip.reduce((acc, item) => {\n    return acc + item.total_deductions_bnd;\n  }, 0);\n  const totalnettpay = singlebatchpayslip.reduce((acc, item) => {\n    return acc + item.nett_pay_bnd;\n  }, 0);\n  const {\n    vfs\n  } = vfsFonts.pdfMake;\n  pdfMake.vfs = vfs;\n  const documentDefinition = {\n    pageSize: \"A4\",\n    pageOrientation: \"landscape\",\n    content: [{\n      text: \"AppSmith Sutera Sdn Bhd\",\n      style: \"header\"\n    }, {\n      text: subtitle,\n      style: \"subheader\"\n    }, {\n      style: \"tableexample\",\n      table: {\n        body: [[\"Col1\", \"Col2\", \"Col3\"], [items, \"2\", \"3\"], [\"1\", \"2\", \"3\"]]\n      }\n    }],\n    styles: {\n      header: {\n        fontSize: 12,\n        bold: true,\n        margin: [0, 0, 0, 10]\n      },\n      subheader: {\n        fontSize: 9,\n        bold: true,\n        margin: [0, 10, 0, 5]\n      },\n      footer: {\n        fontSize: 8,\n        bold: true,\n        margin: [0, 10, 0, 5]\n      },\n      tableExample: {\n        margin: [0, 5, 0, 15]\n      },\n      tableOpacityExample: {\n        margin: [0, 5, 0, 15],\n        fillColor: \"blue\",\n        fillOpacity: 0.3\n      },\n      tableHeader: {\n        bold: true,\n        fontSize: 13,\n        color: \"black\"\n      }\n    },\n    defaultStyle: {// alignment: 'justify'\n    }\n  };\n  pdfMake.createPdf(documentDefinition).open();\n};\n\n_c = PrintPDFTest;\nexport default PrintPDFTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrintPDFTest\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/PrintPaySummary.js"],"names":["pdfMake","vfsFonts","formatPrice","useRecoilState","useRecoilValue","payrunState","usePayslipsContext","PrintPDFTest","singlebatchpayslip","period","subtitle","names","map","r","name","wages","amount","wages_bnd","tapamount","tap_amount_bnd","scpamount","scp_amount_bnd","sitesallowsamt","site_allows_bnd","expclaimsamt","expenses_claims_bnd","allowsamt","total_allowances_bnd","deductsamt","total_deductions_bnd","nettpay","nett_pay_bnd","totalwages","reduce","acc","item","totaltap","totalscp","totalsitesallows","totalexpclaims","totalallows","totaldeducts","totalnettpay","vfs","documentDefinition","pageSize","pageOrientation","content","text","style","table","body","items","styles","header","fontSize","bold","margin","subheader","footer","tableExample","tableOpacityExample","fillColor","fillOpacity","tableHeader","color","defaultStyle","createPdf","open"],"mappings":"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","sourcesContent":["import pdfMake from \"pdfmake/build/pdfmake\";\r\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\r\nimport { formatPrice } from \"../helpers/Utils\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { payrunState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\n\r\nconst PrintPDFTest = ({ singlebatchpayslip }) => {\r\n  const period = singlebatchpayslip[0].period;\r\n  const subtitle = `Payroll Summary for the period  ${period}`;\r\n  // const items = singlebatchpayslip.map((r) => {\r\n  //   return { r.name, r.wages_bnd };\r\n  // });\r\n  const names = singlebatchpayslip.map((r) => {\r\n    return r.name;\r\n  });\r\n  const wages = singlebatchpayslip.map((r) => {\r\n    const amount = formatPrice(r.wages_bnd);\r\n    return amount;\r\n  });\r\n  const tapamount = singlebatchpayslip.map((r) => {\r\n    const amount = formatPrice(r.tap_amount_bnd);\r\n    return amount;\r\n  });\r\n  const scpamount = singlebatchpayslip.map((r) => {\r\n    const amount = formatPrice(r.scp_amount_bnd);\r\n    return amount;\r\n  });\r\n  const sitesallowsamt = singlebatchpayslip.map((r) => {\r\n    const amount = formatPrice(r.site_allows_bnd);\r\n    return amount;\r\n  });\r\n  const expclaimsamt = singlebatchpayslip.map((r) => {\r\n    const amount = formatPrice(r.expenses_claims_bnd);\r\n    return amount;\r\n  });\r\n  const allowsamt = singlebatchpayslip.map((r) => {\r\n    const amount = formatPrice(r.total_allowances_bnd);\r\n    return amount;\r\n  });\r\n  const deductsamt = singlebatchpayslip.map((r) => {\r\n    const amount = formatPrice(r.total_deductions_bnd);\r\n    return amount;\r\n  });\r\n  const nettpay = singlebatchpayslip.map((r) => {\r\n    const amount = formatPrice(r.nett_pay_bnd);\r\n    return amount;\r\n  });\r\n  const totalwages = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.wages_bnd;\r\n  }, 0);\r\n  const totaltap = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.tap_amount_bnd;\r\n  }, 0);\r\n  const totalscp = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.scp_amount_bnd;\r\n  }, 0);\r\n  const totalsitesallows = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.site_allows_bnd;\r\n  }, 0);\r\n  const totalexpclaims = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.expenses_claims_bnd;\r\n  }, 0);\r\n  const totalallows = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.total_allowances_bnd;\r\n  }, 0);\r\n  const totaldeducts = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.total_deductions_bnd;\r\n  }, 0);\r\n  const totalnettpay = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.nett_pay_bnd;\r\n  }, 0);\r\n  const { vfs } = vfsFonts.pdfMake;\r\n  pdfMake.vfs = vfs;\r\n\r\n  const documentDefinition = {\r\n    pageSize: \"A4\",\r\n    pageOrientation: \"landscape\",\r\n    content: [\r\n      { text: \"AppSmith Sutera Sdn Bhd\", style: \"header\" },\r\n      { text: subtitle, style: \"subheader\" },\r\n      {\r\n        style: \"tableexample\",\r\n        table: {\r\n          body: [\r\n            [\"Col1\", \"Col2\", \"Col3\"],\r\n            [items, \"2\", \"3\"],\r\n            [\"1\", \"2\", \"3\"],\r\n          ],\r\n        },\r\n      },\r\n    ],\r\n    styles: {\r\n      header: {\r\n        fontSize: 12,\r\n        bold: true,\r\n        margin: [0, 0, 0, 10],\r\n      },\r\n      subheader: {\r\n        fontSize: 9,\r\n        bold: true,\r\n        margin: [0, 10, 0, 5],\r\n      },\r\n      footer: {\r\n        fontSize: 8,\r\n        bold: true,\r\n        margin: [0, 10, 0, 5],\r\n      },\r\n      tableExample: {\r\n        margin: [0, 5, 0, 15],\r\n      },\r\n      tableOpacityExample: {\r\n        margin: [0, 5, 0, 15],\r\n        fillColor: \"blue\",\r\n        fillOpacity: 0.3,\r\n      },\r\n      tableHeader: {\r\n        bold: true,\r\n        fontSize: 13,\r\n        color: \"black\",\r\n      },\r\n    },\r\n    defaultStyle: {\r\n      // alignment: 'justify'\r\n    },\r\n  };\r\n\r\n  pdfMake.createPdf(documentDefinition).open();\r\n};\r\n\r\nexport default PrintPDFTest;\r\n"]},"metadata":{},"sourceType":"module"}