{"ast":null,"code":"import { Qualifier } from \"../../../internal/qualifier/Qualifier\";\nimport { Action } from \"../../../internal/Action\";\n/**\n * @description The Action class of the blur Builder.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nclass BlurAction extends Action {\n  constructor(strength) {\n    super();\n    this._strength = strength;\n  }\n  /**\n   * @description Specifies the region to blur.\n   * @param {NamedRegion} blurRegion\n   */\n\n\n  region(blurRegion) {\n    this._region = blurRegion;\n    return this;\n  }\n  /**\n   * @description Sets the strength of the blur effect.\n   * @param {number | string} strength\n   */\n\n\n  strength(strength) {\n    this._strength = strength;\n    return this;\n  }\n\n  prepareQualifiers() {\n    /*\n     * Blur with region is a unique object in this codebase.\n     * On top of Blur being an Action with Qualifiers,\n     * it also accepts a Qualifier called Region.\n     *\n     * This Qualifier is in itself composite of qualifiers (such as height, or width).\n     * The existence of Region changes the output of Blur in non traditional ways\n     * which forced this relatively ad-hoc implementation.\n     *\n     * Aside from all of that, all of the Qualifiers in the component should be alphabetized\n     * This happens naturally in the Action class,\n     * however since we're dealing with two levels of qualifiers (Blur and Region),\n     * these need to be merged.\n     *\n     * This function will merge the Region qualifiers with Blur\n     * and add all needed implicit qualifiers (like g_ocr_text).\n     * We're not using the full Gravity Qualifier here to prevent the code import for such a simplistic case\n     */\n    const str = this._strength ? `:${this._strength}` : '';\n\n    if ('_region' in this) {\n      const qualifiers = this._region.qualifiers; // Copy qualifiers from the region \"action\" to the blur action\n\n      qualifiers.forEach(q => this.addQualifier(q));\n\n      if (this._region.regionType === 'named') {\n        this.addQualifier(new Qualifier('e', `blur_region${str}`));\n      }\n\n      if (this._region.regionType === 'ocr_text') {\n        this.addQualifier(new Qualifier('e', `blur_region${str}`));\n        this.addQualifier(new Qualifier('g', `ocr_text`));\n      }\n\n      if (this._region.regionType === 'faces') {\n        this.addQualifier(new Qualifier('e', `blur_faces${str}`));\n      }\n    } else {\n      this.addQualifier(new Qualifier('e', `blur${str}`));\n    }\n  }\n\n}\n\nexport { BlurAction };","map":{"version":3,"sources":["D:/react-myprojects/dss/node_modules/@cloudinary/base/actions/effect/blur/blur.js"],"names":["Qualifier","Action","BlurAction","constructor","strength","_strength","region","blurRegion","_region","prepareQualifiers","str","qualifiers","forEach","q","addQualifier","regionType"],"mappings":"AAAA,SAASA,SAAT,QAA0B,uCAA1B;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,UAAN,SAAyBD,MAAzB,CAAgC;AAC5BE,EAAAA,WAAW,CAACC,QAAD,EAAW;AAClB;AACA,SAAKC,SAAL,GAAiBD,QAAjB;AACH;AACD;AACJ;AACA;AACA;;;AACIE,EAAAA,MAAM,CAACC,UAAD,EAAa;AACf,SAAKC,OAAL,GAAeD,UAAf;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIH,EAAAA,QAAQ,CAACA,QAAD,EAAW;AACf,SAAKC,SAAL,GAAiBD,QAAjB;AACA,WAAO,IAAP;AACH;;AACDK,EAAAA,iBAAiB,GAAG;AAChB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,UAAMC,GAAG,GAAG,KAAKL,SAAL,GAAkB,IAAG,KAAKA,SAAU,EAApC,GAAwC,EAApD;;AACA,QAAI,aAAa,IAAjB,EAAuB;AACnB,YAAMM,UAAU,GAAG,KAAKH,OAAL,CAAaG,UAAhC,CADmB,CAEnB;;AACAA,MAAAA,UAAU,CAACC,OAAX,CAAoBC,CAAD,IAAO,KAAKC,YAAL,CAAkBD,CAAlB,CAA1B;;AACA,UAAI,KAAKL,OAAL,CAAaO,UAAb,KAA4B,OAAhC,EAAyC;AACrC,aAAKD,YAAL,CAAkB,IAAId,SAAJ,CAAc,GAAd,EAAoB,cAAaU,GAAI,EAArC,CAAlB;AACH;;AACD,UAAI,KAAKF,OAAL,CAAaO,UAAb,KAA4B,UAAhC,EAA4C;AACxC,aAAKD,YAAL,CAAkB,IAAId,SAAJ,CAAc,GAAd,EAAoB,cAAaU,GAAI,EAArC,CAAlB;AACA,aAAKI,YAAL,CAAkB,IAAId,SAAJ,CAAc,GAAd,EAAoB,UAApB,CAAlB;AACH;;AACD,UAAI,KAAKQ,OAAL,CAAaO,UAAb,KAA4B,OAAhC,EAAyC;AACrC,aAAKD,YAAL,CAAkB,IAAId,SAAJ,CAAc,GAAd,EAAoB,aAAYU,GAAI,EAApC,CAAlB;AACH;AACJ,KAdD,MAeK;AACD,WAAKI,YAAL,CAAkB,IAAId,SAAJ,CAAc,GAAd,EAAoB,OAAMU,GAAI,EAA9B,CAAlB;AACH;AACJ;;AA3D2B;;AA6DhC,SAASR,UAAT","sourcesContent":["import { Qualifier } from \"../../../internal/qualifier/Qualifier\";\nimport { Action } from \"../../../internal/Action\";\n/**\n * @description The Action class of the blur Builder.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass BlurAction extends Action {\n    constructor(strength) {\n        super();\n        this._strength = strength;\n    }\n    /**\n     * @description Specifies the region to blur.\n     * @param {NamedRegion} blurRegion\n     */\n    region(blurRegion) {\n        this._region = blurRegion;\n        return this;\n    }\n    /**\n     * @description Sets the strength of the blur effect.\n     * @param {number | string} strength\n     */\n    strength(strength) {\n        this._strength = strength;\n        return this;\n    }\n    prepareQualifiers() {\n        /*\n         * Blur with region is a unique object in this codebase.\n         * On top of Blur being an Action with Qualifiers,\n         * it also accepts a Qualifier called Region.\n         *\n         * This Qualifier is in itself composite of qualifiers (such as height, or width).\n         * The existence of Region changes the output of Blur in non traditional ways\n         * which forced this relatively ad-hoc implementation.\n         *\n         * Aside from all of that, all of the Qualifiers in the component should be alphabetized\n         * This happens naturally in the Action class,\n         * however since we're dealing with two levels of qualifiers (Blur and Region),\n         * these need to be merged.\n         *\n         * This function will merge the Region qualifiers with Blur\n         * and add all needed implicit qualifiers (like g_ocr_text).\n         * We're not using the full Gravity Qualifier here to prevent the code import for such a simplistic case\n         */\n        const str = this._strength ? `:${this._strength}` : '';\n        if ('_region' in this) {\n            const qualifiers = this._region.qualifiers;\n            // Copy qualifiers from the region \"action\" to the blur action\n            qualifiers.forEach((q) => this.addQualifier(q));\n            if (this._region.regionType === 'named') {\n                this.addQualifier(new Qualifier('e', `blur_region${str}`));\n            }\n            if (this._region.regionType === 'ocr_text') {\n                this.addQualifier(new Qualifier('e', `blur_region${str}`));\n                this.addQualifier(new Qualifier('g', `ocr_text`));\n            }\n            if (this._region.regionType === 'faces') {\n                this.addQualifier(new Qualifier('e', `blur_faces${str}`));\n            }\n        }\n        else {\n            this.addQualifier(new Qualifier('e', `blur${str}`));\n        }\n    }\n}\nexport { BlurAction };\n"]},"metadata":{},"sourceType":"module"}