{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\Payrunbatch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { Heading, Text } from \"@chakra-ui/react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport MaterialTable from \"material-table\";\nimport { useHistory } from \"react-router-dom\";\nimport { useCustomToast } from \"../helpers/useCustomToast\";\nimport { Button, ButtonGroup, Paper, Icon, Divider } from \"@material-ui/core\";\nimport { Box //Divider,\n, Grid, GridItem, Flex, Stack, Tabs, TabList, TabPanels, Tab, TabPanel, Table, Thead, Tbody, Tfoot, Tr, Th, Td, TableCaption } from \"@chakra-ui/react\";\nimport { Alert } from \"@material-ui/lab\";\nimport PayForm from \"./PayForm\";\nimport PaySummary from \"./PaySummary\";\nimport { usePayslipsBatch } from \"./payslips/usePayslipsBatch\";\nimport { useUpdatePayslips } from \"./payslips/useUpdatePayslips\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { useTablesContext } from \"../context/tables_context\";\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\nimport { payrunState, paydataState, payrunIdState, payrunStatusState } from \"./data/atomdata\";\nimport { useRecoilValue } from \"recoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\n\nconst Payrunbatch = () => {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const toast = useCustomToast();\n  const componentRef = useRef();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight); //const { register, handleSubmit, control, setValue, reset, watch } = useForm();\n\n  const {\n    payrun,\n    getSingleBatchPayslip,\n    //singlebatchpayslip,\n    payslip_period,\n    //updatePayslip,\n    updatePayrun,\n    singlebatch_payslip_loading,\n    singlebatch_payslip_error\n  } = usePayslipsContext();\n  const {\n    payslipsbatch,\n    psbpayrunId,\n    setPSBPayrunId\n  } = usePayslipsBatch();\n  const updatePayslip = useUpdatePayslips();\n  const {\n    loadPayitems,\n    payitems\n  } = useTablesContext();\n  const [payrundata, setPayrundata] = useRecoilState(payrunState);\n  const [payrunId, setPayrunId] = useRecoilState(payrunIdState);\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\n  const [loadFormdata, setLoadFormdata] = useState(false);\n  const [loadUpdatedata, setLoadUpdatedata] = useState(false);\n  const [formdata, setFormdata] = useState([]);\n  const [rowindex, setRowIndex] = useState(0);\n  const [emponclick, setEmponclick] = useState(false);\n  const [showSumm, setShowSumm] = useState(false);\n  const [isCalc, setIsCalc] = useState(false);\n  const singlebatchpayslip = payslipsbatch;\n  useEffect(() => {\n    loadPayitems();\n    setEmponclick(true); // getSingleBatchPayslip(payslip_period);\n  }, []);\n  useEffect(() => {\n    setRowIndex(0); // handleEmpButtonClick(0);\n\n    setEmponclick(false);\n  }, [emponclick]);\n  useEffect(() => {\n    setLoadFormdata(false);\n  }, [loadUpdatedata]);\n  useEffect(() => {\n    setPSBPayrunId(payslip_period);\n    setIsCalc(true);\n  }, [psbpayrunId]);\n  useEffect(() => {\n    calcPayrunTotals();\n    setIsCalc(false);\n  }, [isCalc]);\n\n  const handleShowSumm = e => {\n    e.preventDefault();\n    setShowSumm(!showSumm);\n  };\n\n  const handlePrintSummary = e => {\n    e.preventDefault();\n  };\n\n  const handleSavePayslips = e => {\n    e.preventDefault(); // eslint-disable-next-line no-lone-blocks\n\n    {\n      singlebatchpayslip.forEach(rec => {\n        const {\n          id,\n          rec_id,\n          tableData,\n          ...fields\n        } = rec;\n        updatePayslip({\n          id,\n          ...fields\n        });\n      });\n    } //update payrun\n\n    handleSavePayrun();\n    toast({\n      title: \"Changes have been saved!\",\n      status: \"success\"\n    });\n  };\n\n  const calcPayrunTotals = () => {\n    if (!psbpayrunId) {\n      return null;\n    }\n\n    console.log(\"calc\", singlebatchpayslip);\n    const totalpayroll = singlebatchpayslip.reduce((acc, item) => {\n      const value = isNaN(item.nett_pay_bnd) ? 0 : item.nett_pay_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalwages = singlebatchpayslip.reduce((acc, item, index) => {\n      const value = isNaN(item.wages_bnd) ? 0 : item.wages_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totaltap = singlebatchpayslip.reduce((acc, item) => {\n      const value = isNaN(item.tap_amount_bnd) ? 0 : item.tap_amount_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalscp = singlebatchpayslip.reduce((acc, item) => {\n      const value = isNaN(item.scp_amount_bnd) ? 0 : item.scp_amount_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalallows = singlebatchpayslip.reduce((acc, item) => {\n      const value = isNaN(item.total_allowances_bnd) ? 0 : item.total_allowances_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totaldeducts = singlebatchpayslip.reduce((acc, item) => {\n      const value = isNaN(item.total_deductions_bnd) ? 0 : item.total_deductions_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalsiteallows = singlebatchpayslip.reduce((acc, item) => {\n      const value = isNaN(item.site_allows_bnd) ? 0 : item.site_allows_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalexpensesclaims = singlebatchpayslip.reduce((acc, item) => {\n      const value = isNaN(item.expenses_claims_bnd) ? 0 : item.expenses_claims_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0); //console.log(\"total\", totalwages);\n\n    setPayrundata({ ...payrundata,\n      totalpayroll: totalpayroll,\n      totalwages: totalwages,\n      totaltap: totaltap,\n      totalscp: totalscp,\n      totalallows: totalallows,\n      totaldeducts: totaldeducts,\n      totalsiteallows: totalsiteallows,\n      totalexpensesclaims: totalexpensesclaims\n    });\n  };\n\n  const handleSavePayrun = () => {\n    // eslint-disable-next-line no-lone-blocks\n    updatePayrun({\n      id: payrunId,\n      totalpayroll: payrundata.totalpayroll,\n      totalwages: payrundata.totalwages,\n      totaltap: payrundata.totaltap,\n      totalscp: payrundata.totalscp,\n      totalallows: payrundata.totalallows,\n      totaldeducts: payrundata.totaldeducts,\n      totalsitesallows: payrundata.totalsitesallows,\n      totalexpensesclaims: payrundata.totalexpensesclaims\n    });\n  };\n\n  const handleVerifyPayslips = e => {\n    e.preventDefault();\n    setPayrunStatus(\"Verified\");\n    updatePayrun({\n      id: payrunId,\n      status: \"Verified\"\n    });\n    toast({\n      title: \"Batch has been verified!\",\n      status: \"success\"\n    });\n  };\n\n  const handleEmpButtonClick = index => {\n    const paydata = singlebatchpayslip[index];\n    setFormdata({ ...paydata\n    });\n    setFormdata({ ...paydata\n    });\n    setLoadFormdata(true);\n  }; // if (singlebatch_payslip_loading) {\n  //   return (\n  //     <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\n  //       <div>\n  //         <h2>Loading...Payslips</h2>\n  //       </div>\n  //     </Paper>\n  //   );\n  // }\n  // if (singlebatch_payslip_error) {\n  //   return (\n  //     <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\n  //       <div>\n  //         <h2>Internet connection problem!</h2>\n  //       </div>\n  //     </Paper>\n  //   );\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    marginLeft: 4,\n    marginTop: 70,\n    w: \"98%\",\n    h: \"100%\",\n    style: {\n      backgroundColor: \"lightcyan\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      templateRows: \"repeat(10,1fr)\",\n      templateColumns: \"repeat(1,1fr)\",\n      children: [/*#__PURE__*/_jsxDEV(GridItem, {\n        rowSpan: 1,\n        colSpan: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          templateRows: \"reprat(10,1fr)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            pl: \"10\",\n            pt: \"2\",\n            children: \"Payroll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        children: [/*#__PURE__*/_jsxDEV(TabList, {\n          marginLeft: 4,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(Heading, {\n                size: \"sm\",\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(Heading, {\n                size: \"sm\",\n                children: \"Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanels, {\n          children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              templateRows: \"repeat(1,1fr)\",\n              templateColumns: \"repeat(10,1fr)\",\n              children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                colSpan: 2,\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  textAlign: \"center\",\n                  p: 4,\n                  children: /*#__PURE__*/_jsxDEV(Heading, {\n                    size: \"sm\",\n                    alignItems: \"center\",\n                    children: \"Employees\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  backgroundColor: \"white\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  border: \"2px solid white\",\n                  backgroundColor: \"cyan.100\",\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    variant: \"simple\",\n                    children: /*#__PURE__*/_jsxDEV(Tbody, {\n                      children: payslipsbatch.map((item, index) => {\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(Button, {\n                            className: classes.empbtn,\n                            variant: \"outlined\" // ${index === value && \"activebtn\"}\n                            ,\n                            onClick: e => {\n                              setRowIndex(index);\n                              handleEmpButtonClick(index);\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: [\" \", item.name]\n                            }, item.id, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 338,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 329,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                            backgroundColor: \"white\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 340,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 328,\n                          columnNumber: 29\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 325,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                colSpan: 7,\n                children: /*#__PURE__*/_jsxDEV(PayForm, {\n                  formdata: formdata,\n                  setFormdata: setFormdata,\n                  loadFormdata: loadFormdata,\n                  setLoadFormdata: setLoadFormdata,\n                  payitems: payitems,\n                  setLoadUpdatedata: setLoadUpdatedata,\n                  singlebatchpayslip: singlebatchpayslip,\n                  rowindex: rowindex,\n                  isCalc: isCalc,\n                  setIsCalc: setIsCalc\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            children: /*#__PURE__*/_jsxDEV(PaySummary, {\n              payrundata: payrundata,\n              singlebatchpayslip: singlebatchpayslip\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Payrunbatch, \"H9trgthI6B9yUkF3D/9BAyO8bd4=\", false, function () {\n  return [useHistory, useStyles, useCustomToast, usePayslipsContext, usePayslipsBatch, useUpdatePayslips, useTablesContext, useRecoilState, useRecoilState, useRecoilState];\n});\n\n_c = Payrunbatch;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  container: {\n    margin: 0,\n    padding: 0,\n    width: \"80vw\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\n    gridAutoRows: \"10px\",\n    position: \"absolute\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    justifyContent: \"center\",\n    backgroundColor: \"primary\"\n  },\n  fixedHeight: {\n    height: 800\n  },\n  paper: {\n    paddingTop: theme.spacing(10),\n    // display: \"flex\",\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    border: \"1px solid\",\n    width: \"100%\",\n    color: \"primary\",\n    bcakgroundColor: \"white\"\n  },\n  card: {\n    backgroundColor: \"white\"\n  },\n  section: {\n    width: \"80vw\",\n    margin: \"1rem auto\",\n    maxWidth: \"var(--max-width)\"\n  },\n  underline: {\n    width: \"5rem\",\n    height: \"0.25rem\",\n    marginBottom: \"1.25rem\",\n    background: \"var(--clr-primary-5)\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  title: {\n    marginbottom: \"4rem\",\n    textAlign: \"center\"\n  },\n  empscenter: {\n    width: \"80vw\",\n    margin: \"0 auto\",\n    maxWidth: \"var(--max-width)\",\n    flexDirection: \"row\"\n  },\n  empcontainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginBottom: \"4rem\",\n    flexWrap: \"wrap\"\n  },\n  empbtn: {\n    background: \"transparent\",\n    borderColor: \"transparent\",\n    textTransform: \"capitalize\",\n    fontSize: \"1rem\",\n    letterSpacing: \"var(--spacing)\",\n    margin: \"0 0.5rem\",\n    transition: \"var(--transition)\",\n    cursor: \"pointer\",\n    padding: \"0.25rem 0\",\n    lineHeight: \"1\",\n    outlineColor: \"var(--clr-primary-10)\",\n    \"&:hover\": {\n      color: \"var(--clr-primary-5)\",\n      boxShadow: \"0 2px var(--clr-primary-5)\"\n    }\n  },\n  activebtn: {\n    color: \"var(--clr-primary-5)\",\n    boxShadow: \"0 2px var(--clr-primary-5)\"\n  },\n  empinfo: {\n    fontWeight: \"400\"\n  },\n  divider: {\n    // Theme Color, or use css color in quote\n    background: \"white\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 350\n  }\n}));\nexport default Payrunbatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payrunbatch\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Payrunbatch.js"],"names":["React","useState","useEffect","useRef","useReactToPrint","Heading","Text","makeStyles","clsx","MaterialTable","useHistory","useCustomToast","Button","ButtonGroup","Paper","Icon","Divider","Box","Grid","GridItem","Flex","Stack","Tabs","TabList","TabPanels","Tab","TabPanel","Table","Thead","Tbody","Tfoot","Tr","Th","Td","TableCaption","Alert","PayForm","PaySummary","usePayslipsBatch","useUpdatePayslips","usePayslipsContext","useTablesContext","useSetRecoilState","useRecoilState","payrunState","paydataState","payrunIdState","payrunStatusState","useRecoilValue","drawerWidth","Payrunbatch","history","classes","useStyles","toast","componentRef","fixedHeightPaper","paper","fixedHeight","payrun","getSingleBatchPayslip","payslip_period","updatePayrun","singlebatch_payslip_loading","singlebatch_payslip_error","payslipsbatch","psbpayrunId","setPSBPayrunId","updatePayslip","loadPayitems","payitems","payrundata","setPayrundata","payrunId","setPayrunId","payrunstatus","setPayrunStatus","loadFormdata","setLoadFormdata","loadUpdatedata","setLoadUpdatedata","formdata","setFormdata","rowindex","setRowIndex","emponclick","setEmponclick","showSumm","setShowSumm","isCalc","setIsCalc","singlebatchpayslip","calcPayrunTotals","handleShowSumm","e","preventDefault","handlePrintSummary","handleSavePayslips","forEach","rec","id","rec_id","tableData","fields","handleSavePayrun","title","status","console","log","totalpayroll","reduce","acc","item","value","isNaN","nett_pay_bnd","Math","round","Number","EPSILON","totalwages","index","wages_bnd","totaltap","tap_amount_bnd","totalscp","scp_amount_bnd","totalallows","total_allowances_bnd","totaldeducts","total_deductions_bnd","totalsiteallows","site_allows_bnd","totalexpensesclaims","expenses_claims_bnd","totalsitesallows","handleVerifyPayslips","handleEmpButtonClick","paydata","backgroundColor","map","empbtn","name","theme","root","flexGrow","button","margin","spacing","container","padding","width","display","gridTemplateColumns","gridAutoRows","position","left","transform","justifyContent","height","paddingTop","overflow","flexDirection","border","color","bcakgroundColor","card","section","maxWidth","underline","marginBottom","background","marginLeft","marginRight","marginbottom","textAlign","empscenter","empcontainer","flexWrap","borderColor","textTransform","fontSize","letterSpacing","transition","cursor","lineHeight","outlineColor","boxShadow","activebtn","empinfo","fontWeight","divider","textField"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport { Heading, Text } from \"@chakra-ui/react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport MaterialTable from \"material-table\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { Button, ButtonGroup, Paper, Icon, Divider } from \"@material-ui/core\";\r\nimport {\r\n  Box,\r\n  //Divider,\r\n  Grid,\r\n  GridItem,\r\n  Flex,\r\n  Stack,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tfoot,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption,\r\n} from \"@chakra-ui/react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport PayForm from \"./PayForm\";\r\nimport PaySummary from \"./PaySummary\";\r\nimport { usePayslipsBatch } from \"./payslips/usePayslipsBatch\";\r\nimport { useUpdatePayslips } from \"./payslips/useUpdatePayslips\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\r\nimport {\r\n  payrunState,\r\n  paydataState,\r\n  payrunIdState,\r\n  payrunStatusState,\r\n} from \"./data/atomdata\";\r\nimport { useRecoilValue } from \"recoil\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst Payrunbatch = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const componentRef = useRef();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  //const { register, handleSubmit, control, setValue, reset, watch } = useForm();\r\n\r\n  const {\r\n    payrun,\r\n    getSingleBatchPayslip,\r\n    //singlebatchpayslip,\r\n    payslip_period,\r\n    //updatePayslip,\r\n    updatePayrun,\r\n    singlebatch_payslip_loading,\r\n    singlebatch_payslip_error,\r\n  } = usePayslipsContext();\r\n  const { payslipsbatch, psbpayrunId, setPSBPayrunId } = usePayslipsBatch();\r\n  const updatePayslip = useUpdatePayslips();\r\n  const { loadPayitems, payitems } = useTablesContext();\r\n  const [payrundata, setPayrundata] = useRecoilState(payrunState);\r\n  const [payrunId, setPayrunId] = useRecoilState(payrunIdState);\r\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\r\n  const [loadFormdata, setLoadFormdata] = useState(false);\r\n  const [loadUpdatedata, setLoadUpdatedata] = useState(false);\r\n  const [formdata, setFormdata] = useState([]);\r\n  const [rowindex, setRowIndex] = useState(0);\r\n  const [emponclick, setEmponclick] = useState(false);\r\n  const [showSumm, setShowSumm] = useState(false);\r\n  const [isCalc, setIsCalc] = useState(false);\r\n  const singlebatchpayslip = payslipsbatch;\r\n\r\n  useEffect(() => {\r\n    loadPayitems();\r\n    setEmponclick(true);\r\n    // getSingleBatchPayslip(payslip_period);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setRowIndex(0);\r\n    // handleEmpButtonClick(0);\r\n    setEmponclick(false);\r\n  }, [emponclick]);\r\n\r\n  useEffect(() => {\r\n    setLoadFormdata(false);\r\n  }, [loadUpdatedata]);\r\n\r\n  useEffect(() => {\r\n    setPSBPayrunId(payslip_period);\r\n    setIsCalc(true);\r\n  }, [psbpayrunId]);\r\n\r\n  useEffect(() => {\r\n    calcPayrunTotals();\r\n    setIsCalc(false);\r\n  }, [isCalc]);\r\n\r\n  const handleShowSumm = (e) => {\r\n    e.preventDefault();\r\n    setShowSumm(!showSumm);\r\n  };\r\n\r\n  const handlePrintSummary = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleSavePayslips = (e) => {\r\n    e.preventDefault();\r\n    // eslint-disable-next-line no-lone-blocks\r\n    {\r\n      singlebatchpayslip.forEach((rec) => {\r\n        const { id, rec_id, tableData, ...fields } = rec;\r\n        updatePayslip({ id, ...fields });\r\n      });\r\n    }\r\n    //update payrun\r\n    handleSavePayrun();\r\n    toast({\r\n      title: \"Changes have been saved!\",\r\n      status: \"success\",\r\n    });\r\n  };\r\n\r\n  const calcPayrunTotals = () => {\r\n    if (!psbpayrunId) {\r\n      return null;\r\n    }\r\n    console.log(\"calc\", singlebatchpayslip);\r\n    const totalpayroll = singlebatchpayslip.reduce((acc, item) => {\r\n      const value = isNaN(item.nett_pay_bnd) ? 0 : item.nett_pay_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n    const totalwages = singlebatchpayslip.reduce((acc, item, index) => {\r\n      const value = isNaN(item.wages_bnd) ? 0 : item.wages_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n    const totaltap = singlebatchpayslip.reduce((acc, item) => {\r\n      const value = isNaN(item.tap_amount_bnd) ? 0 : item.tap_amount_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalscp = singlebatchpayslip.reduce((acc, item) => {\r\n      const value = isNaN(item.scp_amount_bnd) ? 0 : item.scp_amount_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalallows = singlebatchpayslip.reduce((acc, item) => {\r\n      const value = isNaN(item.total_allowances_bnd)\r\n        ? 0\r\n        : item.total_allowances_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totaldeducts = singlebatchpayslip.reduce((acc, item) => {\r\n      const value = isNaN(item.total_deductions_bnd)\r\n        ? 0\r\n        : item.total_deductions_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalsiteallows = singlebatchpayslip.reduce((acc, item) => {\r\n      const value = isNaN(item.site_allows_bnd) ? 0 : item.site_allows_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalexpensesclaims = singlebatchpayslip.reduce((acc, item) => {\r\n      const value = isNaN(item.expenses_claims_bnd)\r\n        ? 0\r\n        : item.expenses_claims_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    //console.log(\"total\", totalwages);\r\n    setPayrundata({\r\n      ...payrundata,\r\n      totalpayroll: totalpayroll,\r\n      totalwages: totalwages,\r\n      totaltap: totaltap,\r\n      totalscp: totalscp,\r\n      totalallows: totalallows,\r\n      totaldeducts: totaldeducts,\r\n      totalsiteallows: totalsiteallows,\r\n      totalexpensesclaims: totalexpensesclaims,\r\n    });\r\n  };\r\n\r\n  const handleSavePayrun = () => {\r\n    // eslint-disable-next-line no-lone-blocks\r\n    updatePayrun({\r\n      id: payrunId,\r\n      totalpayroll: payrundata.totalpayroll,\r\n      totalwages: payrundata.totalwages,\r\n      totaltap: payrundata.totaltap,\r\n      totalscp: payrundata.totalscp,\r\n      totalallows: payrundata.totalallows,\r\n      totaldeducts: payrundata.totaldeducts,\r\n      totalsitesallows: payrundata.totalsitesallows,\r\n      totalexpensesclaims: payrundata.totalexpensesclaims,\r\n    });\r\n  };\r\n\r\n  const handleVerifyPayslips = (e) => {\r\n    e.preventDefault();\r\n    setPayrunStatus(\"Verified\");\r\n    updatePayrun({ id: payrunId, status: \"Verified\" });\r\n    toast({\r\n      title: \"Batch has been verified!\",\r\n      status: \"success\",\r\n    });\r\n  };\r\n\r\n  const handleEmpButtonClick = (index) => {\r\n    const paydata = singlebatchpayslip[index];\r\n    setFormdata({ ...paydata });\r\n    setFormdata({ ...paydata });\r\n    setLoadFormdata(true);\r\n  };\r\n\r\n  // if (singlebatch_payslip_loading) {\r\n  //   return (\r\n  //     <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n  //       <div>\r\n  //         <h2>Loading...Payslips</h2>\r\n  //       </div>\r\n  //     </Paper>\r\n  //   );\r\n  // }\r\n\r\n  // if (singlebatch_payslip_error) {\r\n  //   return (\r\n  //     <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n  //       <div>\r\n  //         <h2>Internet connection problem!</h2>\r\n  //       </div>\r\n  //     </Paper>\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n    <Flex\r\n      marginLeft={4}\r\n      marginTop={70}\r\n      w=\"98%\"\r\n      h=\"100%\"\r\n      style={{ backgroundColor: \"lightcyan\" }}\r\n    >\r\n      <Grid templateRows=\"repeat(10,1fr)\" templateColumns=\"repeat(1,1fr)\">\r\n        <GridItem rowSpan={1} colSpan={1}>\r\n          <Grid templateRows=\"reprat(10,1fr)\">\r\n              \r\n          </Grid>\r\n          <Box textAlign=\"center\" alignItems=\"center\">\r\n            <Heading pl=\"10\" pt=\"2\">\r\n              Payroll\r\n            </Heading>\r\n          </Box>\r\n        </GridItem>\r\n\r\n        <Tabs>\r\n          <TabList marginLeft={4}>\r\n            <Tab>\r\n              <Box>\r\n                <Heading size=\"sm\">Details</Heading>\r\n              </Box>\r\n            </Tab>\r\n            <Tab>\r\n              <Box>\r\n                <Heading size=\"sm\">Summary</Heading>\r\n              </Box>\r\n            </Tab>\r\n          </TabList>\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <Grid\r\n                templateRows=\"repeat(1,1fr)\"\r\n                templateColumns=\"repeat(10,1fr)\"\r\n              >\r\n                <GridItem colSpan={2}>\r\n                  <Box textAlign=\"center\" p={4}>\r\n                    <Heading size=\"sm\" alignItems=\"center\">\r\n                      Employees\r\n                    </Heading>\r\n                  </Box>\r\n                  <Divider backgroundColor=\"white\" />\r\n                  <Box border=\"2px solid white\" backgroundColor=\"cyan.100\">\r\n                    {/* {payslipsbatch &&\r\n                      payslipsbatch.map((item, index) => {\r\n                        return (\r\n                          <div>\r\n                            <Button\r\n                              className={classes.empbtn}\r\n                              variant=\"outlined\"\r\n                              // ${index === value && \"activebtn\"}\r\n                              onClick={(e) => {\r\n                                setRowIndex(index);\r\n                                handleEmpButtonClick(index);\r\n                              }}\r\n                            >\r\n                              <div key={item.id}> {item.name}</div>\r\n                            </Button>\r\n                            <Divider\r\n                              variant=\"fullWidth\"\r\n                              className={classes.divider}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      })} */}\r\n                    <Table variant=\"simple\">\r\n                      {/* <Thead>\r\n                        <Tr>\r\n                          <Th>Employees</Th>\r\n                        </Tr>\r\n                      </Thead> */}\r\n                      <Tbody>\r\n                        {payslipsbatch.map((item, index) => {\r\n                          return (\r\n                            <div>\r\n                              <Button\r\n                                className={classes.empbtn}\r\n                                variant=\"outlined\"\r\n                                // ${index === value && \"activebtn\"}\r\n                                onClick={(e) => {\r\n                                  setRowIndex(index);\r\n                                  handleEmpButtonClick(index);\r\n                                }}\r\n                              >\r\n                                <div key={item.id}> {item.name}</div>\r\n                              </Button>\r\n                              <Divider backgroundColor=\"white\" />\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </Tbody>\r\n                    </Table>\r\n                  </Box>\r\n                </GridItem>\r\n                <GridItem colSpan={7}>\r\n                  <PayForm\r\n                    formdata={formdata}\r\n                    setFormdata={setFormdata}\r\n                    loadFormdata={loadFormdata}\r\n                    setLoadFormdata={setLoadFormdata}\r\n                    payitems={payitems}\r\n                    setLoadUpdatedata={setLoadUpdatedata}\r\n                    singlebatchpayslip={singlebatchpayslip}\r\n                    rowindex={rowindex}\r\n                    isCalc={isCalc}\r\n                    setIsCalc={setIsCalc}\r\n                  />\r\n                </GridItem>\r\n              </Grid>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <PaySummary\r\n                payrundata={payrundata}\r\n                singlebatchpayslip={singlebatchpayslip}\r\n              />\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Grid>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    paddingTop: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"white\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"white\",\r\n  },\r\n  section: {\r\n    width: \"80vw\",\r\n    margin: \"1rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  empscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  empcontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  empbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  empinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  divider: {\r\n    // Theme Color, or use css color in quote\r\n    background: \"white\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n}));\r\n\r\nexport default Payrunbatch;\r\n"]},"metadata":{},"sourceType":"module"}