{"ast":null,"code":"import _classCallCheck from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Action } from \"../../internal/Action\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { prepareColor } from \"../../internal/utils/prepareColor\";\n/**\n * @description Applies a shadow filter to the asset.\n * @memberOf Actions.Effect\n * @extends SDK.Action\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nvar ShadowEffectAction = /*#__PURE__*/function (_Action) {\n  _inherits(ShadowEffectAction, _Action);\n\n  var _super = _createSuper(ShadowEffectAction);\n\n  function ShadowEffectAction(effectType, strength) {\n    var _this;\n\n    _classCallCheck(this, ShadowEffectAction);\n\n    _this = _super.call(this);\n    _this.effectType = effectType;\n\n    _this.addQualifier(new Qualifier('e', new QualifierValue(['shadow', strength])));\n\n    return _this;\n  }\n  /**\n   * @description The strength of the shadow. (Range: 0 to 100, Server default: 40)\n   * @param {number} strength\n   * @return {this}\n   */\n\n\n  _createClass(ShadowEffectAction, [{\n    key: \"strength\",\n    value: function strength(_strength) {\n      return this.addQualifier(new Qualifier('e', new QualifierValue(['shadow', _strength])));\n    }\n    /**\n     * @description The X offset the shadow\n     * @param {number | SDK.ExpressionQualifier} x\n     * @return {this}\n     */\n\n  }, {\n    key: \"offsetX\",\n    value: function offsetX(x) {\n      return this.addQualifier(new Qualifier('x', new QualifierValue(x)));\n    }\n    /**\n     * @description The Y offset the shadow\n     * @param {number | SDK.ExpressionQualifier} y\n     * @return {this}\n     */\n\n  }, {\n    key: \"offsetY\",\n    value: function offsetY(y) {\n      return this.addQualifier(new Qualifier('y', new QualifierValue(y)));\n    }\n    /**\n     * @description The color of the shadow (Server default: gray)\n     * @param color\n     * @return {this}\n     */\n\n  }, {\n    key: \"color\",\n    value: function color(_color) {\n      return this.addQualifier(new Qualifier('co', new QualifierValue(prepareColor(_color))));\n    }\n  }]);\n\n  return ShadowEffectAction;\n}(Action);\n\nexport { ShadowEffectAction };","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/actions/effect/shadow.js"],"names":["Action","QualifierValue","Qualifier","prepareColor","ShadowEffectAction","effectType","strength","addQualifier","x","y","color"],"mappings":";;;;AAAA,SAASA,MAAT,QAAuB,uBAAvB;AACA,SAASC,cAAT,QAA+B,yCAA/B;AACA,SAASC,SAAT,QAA0B,oCAA1B;AACA,SAASC,YAAT,QAA6B,mCAA7B;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,kB;;;;;AACF,8BAAYC,UAAZ,EAAwBC,QAAxB,EAAkC;AAAA;;AAAA;;AAC9B;AACA,UAAKD,UAAL,GAAkBA,UAAlB;;AACA,UAAKE,YAAL,CAAkB,IAAIL,SAAJ,CAAc,GAAd,EAAmB,IAAID,cAAJ,CAAmB,CAAC,QAAD,EAAWK,QAAX,CAAnB,CAAnB,CAAlB;;AAH8B;AAIjC;AACD;AACJ;AACA;AACA;AACA;;;;;WACI,kBAASA,SAAT,EAAmB;AACf,aAAO,KAAKC,YAAL,CAAkB,IAAIL,SAAJ,CAAc,GAAd,EAAmB,IAAID,cAAJ,CAAmB,CAAC,QAAD,EAAWK,SAAX,CAAnB,CAAnB,CAAlB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,iBAAQE,CAAR,EAAW;AACP,aAAO,KAAKD,YAAL,CAAkB,IAAIL,SAAJ,CAAc,GAAd,EAAmB,IAAID,cAAJ,CAAmBO,CAAnB,CAAnB,CAAlB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,iBAAQC,CAAR,EAAW;AACP,aAAO,KAAKF,YAAL,CAAkB,IAAIL,SAAJ,CAAc,GAAd,EAAmB,IAAID,cAAJ,CAAmBQ,CAAnB,CAAnB,CAAlB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,eAAMC,MAAN,EAAa;AACT,aAAO,KAAKH,YAAL,CAAkB,IAAIL,SAAJ,CAAc,IAAd,EAAoB,IAAID,cAAJ,CAAmBE,YAAY,CAACO,MAAD,CAA/B,CAApB,CAAlB,CAAP;AACH;;;;EArC4BV,M;;AAuCjC,SAASI,kBAAT","sourcesContent":["import { Action } from \"../../internal/Action\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { prepareColor } from \"../../internal/utils/prepareColor\";\n/**\n * @description Applies a shadow filter to the asset.\n * @memberOf Actions.Effect\n * @extends SDK.Action\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass ShadowEffectAction extends Action {\n    constructor(effectType, strength) {\n        super();\n        this.effectType = effectType;\n        this.addQualifier(new Qualifier('e', new QualifierValue(['shadow', strength])));\n    }\n    /**\n     * @description The strength of the shadow. (Range: 0 to 100, Server default: 40)\n     * @param {number} strength\n     * @return {this}\n     */\n    strength(strength) {\n        return this.addQualifier(new Qualifier('e', new QualifierValue(['shadow', strength])));\n    }\n    /**\n     * @description The X offset the shadow\n     * @param {number | SDK.ExpressionQualifier} x\n     * @return {this}\n     */\n    offsetX(x) {\n        return this.addQualifier(new Qualifier('x', new QualifierValue(x)));\n    }\n    /**\n     * @description The Y offset the shadow\n     * @param {number | SDK.ExpressionQualifier} y\n     * @return {this}\n     */\n    offsetY(y) {\n        return this.addQualifier(new Qualifier('y', new QualifierValue(y)));\n    }\n    /**\n     * @description The color of the shadow (Server default: gray)\n     * @param color\n     * @return {this}\n     */\n    color(color) {\n        return this.addQualifier(new Qualifier('co', new QualifierValue(prepareColor(color))));\n    }\n}\nexport { ShadowEffectAction };\n"]},"metadata":{},"sourceType":"module"}