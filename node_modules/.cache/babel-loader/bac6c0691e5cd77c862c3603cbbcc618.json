{"ast":null,"code":"import { GradientDirectionQualifierValue } from \"./gradientDirection/GradientDirectionQualifierValue\";\n/**\n * @description Defines the direction for a background gradient fade effect.\n * @memberOf Qualifiers\n * @namespace GradientDirection\n */\n\n/**\n * @summary qualifier\n * @description Blend the colors horizontally.\n * @memberOf Qualifiers.GradientDirection\n * @return {Qualifiers.GradientDirection.GradientDirectionQualifierValue}\n */\n\nfunction horizontal() {\n  return new GradientDirectionQualifierValue('horizontal');\n}\n/**\n * @summary qualifier\n * @description Blend the colors vertically.\n * @memberOf Qualifiers.GradientDirection\n * @return {Qualifiers.GradientDirection.GradientDirectionQualifierValue}\n */\n\n\nfunction vertical() {\n  return new GradientDirectionQualifierValue('vertical');\n}\n/**\n * @summary qualifier\n * @description Blend the colors diagonally from top-left to bottom-right.\n * @memberOf Qualifiers.GradientDirection\n * @return {Qualifiers.GradientDirection.GradientDirectionQualifierValue}\n */\n\n\nfunction diagonalDesc() {\n  return new GradientDirectionQualifierValue('diagonal_desc');\n}\n/**\n * @summary qualifier\n * @description Blend the colors diagonally from bottom-left to top-right.\n * @memberOf Qualifiers.GradientDirection\n * @return {Qualifiers.GradientDirection.GradientDirectionQualifierValue}\n */\n\n\nfunction diagonalAsc() {\n  return new GradientDirectionQualifierValue('diagonal_asc');\n}\n\nvar GradientDirection = {\n  horizontal: horizontal,\n  vertical: vertical,\n  diagonalDesc: diagonalDesc,\n  diagonalAsc: diagonalAsc\n};\nexport { horizontal, vertical, diagonalDesc, diagonalAsc, GradientDirection };","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/qualifiers/gradientDirection.js"],"names":["GradientDirectionQualifierValue","horizontal","vertical","diagonalDesc","diagonalAsc","GradientDirection"],"mappings":"AAAA,SAASA,+BAAT,QAAgD,qDAAhD;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,GAAsB;AAClB,SAAO,IAAID,+BAAJ,CAAoC,YAApC,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,QAAT,GAAoB;AAChB,SAAO,IAAIF,+BAAJ,CAAoC,UAApC,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,YAAT,GAAwB;AACpB,SAAO,IAAIH,+BAAJ,CAAoC,eAApC,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,WAAT,GAAuB;AACnB,SAAO,IAAIJ,+BAAJ,CAAoC,cAApC,CAAP;AACH;;AACD,IAAMK,iBAAiB,GAAG;AACtBJ,EAAAA,UAAU,EAAVA,UADsB;AAEtBC,EAAAA,QAAQ,EAARA,QAFsB;AAGtBC,EAAAA,YAAY,EAAZA,YAHsB;AAItBC,EAAAA,WAAW,EAAXA;AAJsB,CAA1B;AAMA,SAASH,UAAT,EAAqBC,QAArB,EAA+BC,YAA/B,EAA6CC,WAA7C,EAA0DC,iBAA1D","sourcesContent":["import { GradientDirectionQualifierValue } from \"./gradientDirection/GradientDirectionQualifierValue\";\n/**\n * @description Defines the direction for a background gradient fade effect.\n * @memberOf Qualifiers\n * @namespace GradientDirection\n */\n/**\n * @summary qualifier\n * @description Blend the colors horizontally.\n * @memberOf Qualifiers.GradientDirection\n * @return {Qualifiers.GradientDirection.GradientDirectionQualifierValue}\n */\nfunction horizontal() {\n    return new GradientDirectionQualifierValue('horizontal');\n}\n/**\n * @summary qualifier\n * @description Blend the colors vertically.\n * @memberOf Qualifiers.GradientDirection\n * @return {Qualifiers.GradientDirection.GradientDirectionQualifierValue}\n */\nfunction vertical() {\n    return new GradientDirectionQualifierValue('vertical');\n}\n/**\n * @summary qualifier\n * @description Blend the colors diagonally from top-left to bottom-right.\n * @memberOf Qualifiers.GradientDirection\n * @return {Qualifiers.GradientDirection.GradientDirectionQualifierValue}\n */\nfunction diagonalDesc() {\n    return new GradientDirectionQualifierValue('diagonal_desc');\n}\n/**\n * @summary qualifier\n * @description Blend the colors diagonally from bottom-left to top-right.\n * @memberOf Qualifiers.GradientDirection\n * @return {Qualifiers.GradientDirection.GradientDirectionQualifierValue}\n */\nfunction diagonalAsc() {\n    return new GradientDirectionQualifierValue('diagonal_asc');\n}\nconst GradientDirection = {\n    horizontal,\n    vertical,\n    diagonalDesc,\n    diagonalAsc\n};\nexport { horizontal, vertical, diagonalDesc, diagonalAsc, GradientDirection };\n"]},"metadata":{},"sourceType":"module"}