{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\HocForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useRecoilState } from \"recoil\";\nimport * as emailjs from \"emailjs-com\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useExpensesContext } from \"../context/expenses_context\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useCustomToast } from \"../helpers/useCustomToast\";\nimport { useHoc } from \"./hoc/useHoc\";\nimport { useAddHoc } from \"./hoc/useAddHoc\";\nimport { useDeleteHoc } from \"./hoc/useDeleteHoc\";\nimport { useUpdateHoc } from \"./hoc/useUpdateHoc\";\nimport { useHoccategory } from \"./hoclookup/useHoccategory\";\nimport { useHocwhat } from \"./hoclookup/useHocwhat\";\nimport { useHocwhatdetails } from \"./hoclookup/useHocwhatdetails\";\nimport { useHocwhy } from \"./hoclookup/useHocwhy\";\nimport { useHocwhydetails } from \"./hoclookup/useHocwhydetails\";\nimport { useHoclocation } from \"./hoclocation/useHoclocation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\nconst TEMPLATE_ID = \"template_1y8odlq\";\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID; // const initial_values = {\n//   findings: \"\",\n//   risks: \"\",\n//   category: \"\",\n//   what: \"\",\n//   what_details: \"\",\n//   why: \"\",\n//   why_details: \"\",\n//   discussion: \"No\",\n//   action: \"\",\n//   isfollowup: \"No\",\n//   isworkrelated: \"No\",\n//   raisedby: \"\",\n//   raisedon: \"\",\n//   company: \"APPSMITHS SUTERA\",\n//   location: \"\",\n//   department: \"\",\n// };\n\nconst HocForm = ({\n  formdata,\n  setFormdata,\n  handleDialogClose,\n  isEditId\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const toast = useCustomToast();\n  const {\n    hoc,\n    filter,\n    setFilter,\n    setHocId\n  } = useHoc();\n  const {\n    hocwhat\n  } = useHocwhat();\n  const {\n    hocwhatdetails\n  } = useHocwhatdetails();\n  const {\n    hocwhy\n  } = useHocwhy();\n  const {\n    hocwhydetails\n  } = useHocwhydetails();\n  const {\n    hoccategory\n  } = useHoccategory();\n  const {\n    hoclocation,\n    setHoclocationId\n  } = useHoclocation();\n  const updateHoc = useUpdateHoc();\n  const addHoc = useAddHoc();\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const {\n    isExpenseEditing,\n    editExpenseID\n  } = useExpensesContext();\n  const {\n    handleSubmit,\n    control\n  } = useForm({\n    defaultValues: { ...formdata\n    }\n  });\n\n  const handleSentEmail = data => {\n    const {\n      date\n    } = data; //console.log(\"expense form\", loginLevel);\n\n    var emaildata = {\n      to_name: loginLevel.loginUser,\n      to_email: loginLevel.loginEmail,\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\n      cc_to: loginLevel.reporting_email\n    };\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(function (response) {\n      console.log(response.status, response.text);\n      toast({\n        title: `Email has sent successfully to ${emaildata.to_email}!`,\n        status: \"success\"\n      });\n    }, function (err) {\n      console.log(err);\n      toast({\n        title: `Email has fail to send to ${emaildata.to_email}!`,\n        status: \"warning\"\n      });\n    });\n  };\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n\n    if (data.id) {\n      const {\n        id,\n        tableData,\n        ...fields\n      } = data;\n      updateHoc({\n        id,\n        ...fields\n      });\n    } else {\n      const {\n        tableData,\n        ...fields\n      } = data;\n      addHoc({ ...fields,\n        empid: loginLevel.loginUserId\n      }); //handleSentEmail(data);\n    }\n\n    handleDialogClose();\n  };\n\n  useEffect(() => {\n    setHoclocationId(\"C\");\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h3\",\n        children: \"HOC FORM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"p\",\n        children: \"HOC Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"findings\",\n            control: control,\n            defaultValue: formdata.findings,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"What is/are the findings?\",\n                id: \"margin-findings\",\n                name: \"findings\",\n                defaultValue: formdata.findings,\n                className: classes.textField,\n                onChange: onChange,\n                multiline: true,\n                rows: 2,\n                error: !!error,\n                helperText: error ? error.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this);\n            },\n            rules: {\n              required: \"Findings is required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"risks\",\n            control: control,\n            defaultValue: formdata.risks,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"What is/are the potential hazard(s)/risk(s)?\",\n                id: \"margin-risks\",\n                name: \"risks\",\n                defaultValue: formdata.risks,\n                className: classes.textField,\n                onChange: onChange,\n                multiline: true,\n                rows: 2,\n                error: !!error,\n                helperText: error ? error.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this);\n            },\n            rules: {\n              required: \"Potential hazard/risk is required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"category\",\n            control: control,\n            defaultValue: formdata.category,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Type/Category\" //type=\"date\"\n                ,\n                id: \"margin-category\",\n                name: \"formdata.category\",\n                value: value,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null // InputLabelProps={{\n                //   shrink: true,\n                // }}\n                ,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, this), hoccategory && hoccategory.map(rec => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: rec.description,\n                    children: rec.description\n                  }, rec.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 29\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this);\n            },\n            rules: {\n              required: \"Category is required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"what\",\n            control: control,\n            defaultValue: formdata.what,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"What\",\n                id: \"margin-what\",\n                name: \"what\",\n                defaultValue: formdata.what,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 21\n                }, this), hocwhat && hocwhat //.filter((r) => r.group === \"What\")\n                .map(rec => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: rec.description,\n                    children: rec.description\n                  }, rec.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 29\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"What is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"what_details\",\n            control: control,\n            defaultValue: formdata.what_details,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"What Details\",\n                id: \"margin-whatdetails\",\n                name: \"what_details\",\n                defaultValue: formdata.what_details,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 21\n                }, this), hocwhatdetails && hocwhatdetails //.filter((r) => r.group === \"What Details\")\n                .map(rec => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: rec.description,\n                    children: rec.description\n                  }, rec.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 29\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"What detail is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"why\",\n            control: control,\n            defaultValue: formdata.why,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Why\" //type=\"number\"\n                ,\n                id: \"standard-why\",\n                name: \"why\",\n                defaultValue: formdata.why,\n                className: classes.textField //onChange={onChange}\n                ,\n                onChange: e => {\n                  onChange(parseInt(e.target.value, 10));\n                },\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 21\n                }, this), hocwhy && hocwhy //.filter((r) => r.group === \"Why\")\n                .map(rec => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: rec.description,\n                    children: rec.description\n                  }, rec.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 29\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"Why is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"why_details\",\n            control: control,\n            defaultValue: formdata.why_details,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Why Details\",\n                id: \"margin-whydetails\",\n                name: \"why_details\",\n                defaultValue: formdata.why_details,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 21\n                }, this), hoclookup && hoclookup.filter(r => r.group === \"Why Details\").map(rec => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: rec.description,\n                    children: rec.description\n                  }, rec.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 29\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"Why detail is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"discussion\",\n            control: control,\n            defaultValue: formdata.discussion,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Did a conversation take place?\",\n                id: \"margin-discussion\",\n                name: \"discussion\",\n                defaultValue: formdata.discussion,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Yes\",\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"No\",\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"Status is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"action\",\n            control: control,\n            defaultValue: formdata.action,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Was there an agreed remedial/corrective or preventive action? \",\n                id: \"margin-action\",\n                name: \"action\",\n                defaultValue: formdata.action,\n                className: classes.textField,\n                onChange: onChange,\n                multiline: true,\n                rows: 2,\n                error: !!error,\n                helperText: error ? error.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"Status is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"isfollowup\",\n            control: control,\n            defaultValue: formdata.isfollowup,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Follow-up required?\",\n                id: \"standard-isfollowup\",\n                name: \"isfollowup\",\n                defaultValue: formdata.isfollowup,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Yes\",\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"No\",\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"IC No required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"isworkrelated\",\n            control: control,\n            defaultValue: formdata.isworkrelated,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Work Related?\",\n                id: \"margin-workrelated\",\n                name: \"isworkrelated\",\n                defaultValue: formdata.isworkrelated,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Yes\",\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"No\",\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"Status is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"raisedby\",\n            control: control,\n            defaultValue: formdata.raisedby,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Raised By\",\n                id: \"margin-raisedby\",\n                name: \"raisedby\",\n                defaultValue: formdata.raisedby,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                inputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"Status is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"raisedon\",\n            control: control,\n            defaultValue: formdata.raisedon,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Raised On\",\n                id: \"margin-raisedon\",\n                name: \"raisedon\",\n                type: \"date\",\n                defaultValue: formdata.raisedon,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                InputLabelProps: {\n                  shrink: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"Status is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"company\",\n            control: control,\n            defaultValue: formdata.company,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Company\",\n                id: \"margin-company\",\n                name: \"company\",\n                defaultValue: formdata.company,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                inputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"Status is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"location\",\n            control: control,\n            defaultValue: formdata.location,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Location\",\n                id: \"margin-location\",\n                name: \"location\",\n                defaultValue: formdata.location,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 21\n                }, this), hoclocation && hoclocation.map(rec => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: rec.name,\n                    children: rec.name\n                  }, rec.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 595,\n                    columnNumber: 27\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"Status is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.button //onClick={() => handleSubmit(onSubmit)()}\n            ,\n            children: [\"Save \", /*#__PURE__*/_jsxDEV(Icon, {\n              className: classes.rightIcon,\n              children: \"send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HocForm, \"0z5MXwuAPx5p+fHxqvRKF14yIFw=\", false, function () {\n  return [useStyles, useCustomToast, useHoc, useHocwhat, useHocwhatdetails, useHocwhy, useHocwhydetails, useHoccategory, useHoclocation, useUpdateHoc, useAddHoc, useRecoilState, useExpensesContext, useForm];\n});\n\n_c = HocForm;\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 500\n  }\n}));\nexport default HocForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"HocForm\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/HocForm.js"],"names":["React","useEffect","Button","Icon","TextField","Paper","Typography","makeStyles","useRecoilState","emailjs","loginLevelState","MenuItem","useEmployeesContext","useExpensesContext","Controller","useForm","useCustomToast","useHoc","useAddHoc","useDeleteHoc","useUpdateHoc","useHoccategory","useHocwhat","useHocwhatdetails","useHocwhy","useHocwhydetails","useHoclocation","SERVICE_ID","process","env","REACT_APP_EMAILJS_SERVICEID","TEMPLATE_ID","USER_ID","REACT_APP_EMAILJS_USERID","HocForm","formdata","setFormdata","handleDialogClose","isEditId","classes","useStyles","toast","hoc","filter","setFilter","setHocId","hocwhat","hocwhatdetails","hocwhy","hocwhydetails","hoccategory","hoclocation","setHoclocationId","updateHoc","addHoc","loginLevel","setLoginLevel","isExpenseEditing","editExpenseID","handleSubmit","control","defaultValues","handleSentEmail","data","date","emaildata","to_name","loginUser","to_email","loginEmail","message","cc_to","reporting_email","send","then","response","console","log","status","text","title","err","onSubmit","e","preventDefault","id","tableData","fields","empid","loginUserId","root","findings","field","onChange","value","fieldState","error","textField","required","risks","category","map","rec","description","what","what_details","why","parseInt","target","why_details","hoclookup","r","group","discussion","action","isfollowup","isworkrelated","raisedby","readOnly","raisedon","shrink","company","location","name","button","rightIcon","theme","margin","spacing","leftIcon","marginRight","marginLeft","iconSmall","fontSize","padding","container","display","flexWrap","width"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useHoc } from \"./hoc/useHoc\";\r\nimport { useAddHoc } from \"./hoc/useAddHoc\";\r\nimport { useDeleteHoc } from \"./hoc/useDeleteHoc\";\r\nimport { useUpdateHoc } from \"./hoc/useUpdateHoc\";\r\nimport { useHoccategory } from \"./hoclookup/useHoccategory\";\r\nimport { useHocwhat } from \"./hoclookup/useHocwhat\";\r\nimport { useHocwhatdetails } from \"./hoclookup/useHocwhatdetails\";\r\nimport { useHocwhy } from \"./hoclookup/useHocwhy\";\r\nimport { useHocwhydetails } from \"./hoclookup/useHocwhydetails\";\r\nimport { useHoclocation } from \"./hoclocation/useHoclocation\";\r\n\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\n// const initial_values = {\r\n//   findings: \"\",\r\n//   risks: \"\",\r\n//   category: \"\",\r\n//   what: \"\",\r\n//   what_details: \"\",\r\n//   why: \"\",\r\n//   why_details: \"\",\r\n//   discussion: \"No\",\r\n//   action: \"\",\r\n//   isfollowup: \"No\",\r\n//   isworkrelated: \"No\",\r\n//   raisedby: \"\",\r\n//   raisedon: \"\",\r\n//   company: \"APPSMITHS SUTERA\",\r\n//   location: \"\",\r\n//   department: \"\",\r\n// };\r\n\r\nconst HocForm = ({ formdata, setFormdata, handleDialogClose, isEditId }) => {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const { hoc, filter, setFilter, setHocId } = useHoc();\r\n  const { hocwhat } = useHocwhat();\r\n  const { hocwhatdetails } = useHocwhatdetails();\r\n  const { hocwhy } = useHocwhy();\r\n   const { hocwhydetails } = useHocwhydetails();\r\n  const { hoccategory } = useHoccategory();\r\n  const { hoclocation, setHoclocationId } = useHoclocation();\r\n  const updateHoc = useUpdateHoc();\r\n  const addHoc = useAddHoc();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { isExpenseEditing, editExpenseID } = useExpensesContext();\r\n\r\n  const { handleSubmit, control } = useForm({\r\n    defaultValues: {\r\n      ...formdata,\r\n    },\r\n  });\r\n\r\n  const handleSentEmail = (data) => {\r\n    const { date } = data;\r\n    //console.log(\"expense form\", loginLevel);\r\n    var emaildata = {\r\n      to_name: loginLevel.loginUser,\r\n      to_email: loginLevel.loginEmail,\r\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\r\n      cc_to: loginLevel.reporting_email,\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const onSubmit = (data, e) => {\r\n    e.preventDefault();\r\n    \r\n    if (data.id) {\r\n      const { id, tableData, ...fields} = data\r\n      updateHoc({ id,  ...fields });\r\n    } else {\r\n      const { tableData, ...fields} = data\r\n      addHoc({ ...fields, empid: loginLevel.loginUserId });\r\n      //handleSentEmail(data);\r\n    }\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHoclocationId(\"C\");\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          HOC FORM\r\n        </Typography>\r\n        <Typography component=\"p\">HOC Form</Typography>\r\n\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Controller\r\n              name=\"findings\"\r\n              control={control}\r\n              defaultValue={formdata.findings}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"What is/are the findings?\"\r\n                    id=\"margin-findings\"\r\n                    name=\"findings\"\r\n                    defaultValue={formdata.findings}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    multiline\r\n                    rows={2}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              rules={{ required: \"Findings is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"risks\"\r\n              control={control}\r\n              defaultValue={formdata.risks}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"What is/are the potential hazard(s)/risk(s)?\"\r\n                    id=\"margin-risks\"\r\n                    name=\"risks\"\r\n                    defaultValue={formdata.risks}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    multiline\r\n                    rows={2}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              rules={{ required: \"Potential hazard/risk is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"category\"\r\n              control={control}\r\n              defaultValue={formdata.category}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Type/Category\"\r\n                    //type=\"date\"\r\n                    id=\"margin-category\"\r\n                    name=\"formdata.category\"\r\n                    value={value}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    // InputLabelProps={{\r\n                    //   shrink: true,\r\n                    // }}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {hoccategory &&\r\n                      hoccategory\r\n                          .map((rec) => {\r\n                          return (\r\n                            <MenuItem key={rec.id} value={rec.description}>\r\n                              {rec.description}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              rules={{ required: \"Category is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Controller\r\n              name=\"what\"\r\n              control={control}\r\n              defaultValue={formdata.what}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"What\"\r\n                    id=\"margin-what\"\r\n                    name=\"what\"\r\n                    defaultValue={formdata.what}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {hocwhat &&\r\n                      hocwhat\r\n                        //.filter((r) => r.group === \"What\")\r\n                        .map((rec) => {\r\n                          return (\r\n                            <MenuItem key={rec.id} value={rec.description}>\r\n                              {rec.description}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"What is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"what_details\"\r\n              control={control}\r\n              defaultValue={formdata.what_details}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"What Details\"\r\n                    id=\"margin-whatdetails\"\r\n                    name=\"what_details\"\r\n                    defaultValue={formdata.what_details}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {hocwhatdetails &&\r\n                      hocwhatdetails\r\n                        //.filter((r) => r.group === \"What Details\")\r\n                        .map((rec) => {\r\n                          return (\r\n                            <MenuItem key={rec.id} value={rec.description}>\r\n                              {rec.description}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"What detail is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"why\"\r\n              control={control}\r\n              defaultValue={formdata.why}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Why\"\r\n                    //type=\"number\"\r\n                    id=\"standard-why\"\r\n                    name=\"why\"\r\n                    defaultValue={formdata.why}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {hocwhy &&\r\n                      hocwhy\r\n                        //.filter((r) => r.group === \"Why\")\r\n                        .map((rec) => {\r\n                          return (\r\n                            <MenuItem key={rec.id} value={rec.description}>\r\n                              {rec.description}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Why is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"why_details\"\r\n              control={control}\r\n              defaultValue={formdata.why_details}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Why Details\"\r\n                    id=\"margin-whydetails\"\r\n                    name=\"why_details\"\r\n                    defaultValue={formdata.why_details}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {hoclookup &&\r\n                      hoclookup\r\n                        .filter((r) => r.group === \"Why Details\")\r\n                        .map((rec) => {\r\n                          return (\r\n                            <MenuItem key={rec.id} value={rec.description}>\r\n                              {rec.description}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Why detail is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"discussion\"\r\n              control={control}\r\n              defaultValue={formdata.discussion}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Did a conversation take place?\"\r\n                    id=\"margin-discussion\"\r\n                    name=\"discussion\"\r\n                    defaultValue={formdata.discussion}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"Yes\">Yes</MenuItem>\r\n                    <MenuItem value=\"No\">No</MenuItem>\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"action\"\r\n              control={control}\r\n              defaultValue={formdata.action}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Was there an agreed remedial/corrective or preventive action? \"\r\n                    id=\"margin-action\"\r\n                    name=\"action\"\r\n                    defaultValue={formdata.action}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    multiline\r\n                    rows={2}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"isfollowup\"\r\n              control={control}\r\n              defaultValue={formdata.isfollowup}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Follow-up required?\"\r\n                    id=\"standard-isfollowup\"\r\n                    name=\"isfollowup\"\r\n                    defaultValue={formdata.isfollowup}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"Yes\">Yes</MenuItem>\r\n                    <MenuItem value=\"No\">No</MenuItem>\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"isworkrelated\"\r\n              control={control}\r\n              defaultValue={formdata.isworkrelated}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Work Related?\"\r\n                    id=\"margin-workrelated\"\r\n                    name=\"isworkrelated\"\r\n                    defaultValue={formdata.isworkrelated}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"Yes\">Yes</MenuItem>\r\n                    <MenuItem value=\"No\">No</MenuItem>\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"raisedby\"\r\n              control={control}\r\n              defaultValue={formdata.raisedby}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Raised By\"\r\n                    id=\"margin-raisedby\"\r\n                    name=\"raisedby\"\r\n                    defaultValue={formdata.raisedby}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    inputProps={{ readOnly: true }}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"raisedon\"\r\n              control={control}\r\n              defaultValue={formdata.raisedon}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Raised On\"\r\n                    id=\"margin-raisedon\"\r\n                    name=\"raisedon\"\r\n                    type=\"date\"\r\n                    defaultValue={formdata.raisedon}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"company\"\r\n              control={control}\r\n              defaultValue={formdata.company}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Company\"\r\n                    id=\"margin-company\"\r\n                    name=\"company\"\r\n                    defaultValue={formdata.company}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    inputProps={{ readOnly: true }}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"location\"\r\n              control={control}\r\n              defaultValue={formdata.location}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Location\"\r\n                    id=\"margin-location\"\r\n                    name=\"location\"\r\n                    defaultValue={formdata.location}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {hoclocation &&\r\n                      hoclocation.map((rec) => {\r\n                        return (\r\n                          <MenuItem key={rec.id} value={rec.name}>\r\n                            {rec.name}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          {/* <div>\r\n            <Controller\r\n              name=\"department\"\r\n              control={control}\r\n              defaultValue={formdata.department}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Department\"\r\n                    id=\"margin-department\"\r\n                    name=\"department\"\r\n                    defaultValue={formdata.department}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div> */}\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              //onClick={() => handleSubmit(onSubmit)()}\r\n            >\r\n              Save <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 500,\r\n  },\r\n}));\r\n\r\nexport default HocForm;\r\n"]},"metadata":{},"sourceType":"module"}