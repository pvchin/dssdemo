{"ast":null,"code":"import _classCallCheck from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @memberOf Qualifiers.Source\n * @description An abstract class extended by all Source objects\n */\nvar BaseSource = /*#__PURE__*/function () {\n  function BaseSource() {\n    _classCallCheck(this, BaseSource);\n  }\n\n  _createClass(BaseSource, [{\n    key: \"encodeAssetPublicID\",\n    value:\n    /**\n     * @description Utility function to encode an asset publicID in an overlay\n     * @protected\n     * @example\n     * encodeAssetPublicID('foo/bar'); // -> foo:bar\n     */\n    function encodeAssetPublicID(publicID) {\n      return publicID.replace(/\\//g, ':');\n    }\n    /**\n     * @description\n     * Apply a transformation on the image source of the layer\n     * @param {SDK.ImageTransformation} t An image transformation to apply to the layer\n     * @returns {this}\n     */\n\n  }, {\n    key: \"transformation\",\n    value: function transformation(t) {\n      this._transformation = t;\n      return this;\n    }\n    /**\n     * @description Returns the Transformation of the source\n     * @return {SDK.Transformation}\n     */\n\n  }, {\n    key: \"getTransformation\",\n    value: function getTransformation() {\n      return this._transformation;\n    }\n  }]);\n\n  return BaseSource;\n}();\n\nexport { BaseSource };","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/qualifiers/source/BaseSource.js"],"names":["BaseSource","publicID","replace","t","_transformation"],"mappings":";;;AAAA;AACA;AACA;AACA;IACMA,U;;;;;;;;AACF;AACJ;AACA;AACA;AACA;AACA;AACI,iCAAoBC,QAApB,EAA8B;AAC1B,aAAOA,QAAQ,CAACC,OAAT,CAAiB,KAAjB,EAAwB,GAAxB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,wBAAeC,CAAf,EAAkB;AACd,WAAKC,eAAL,GAAuBD,CAAvB;AACA,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,6BAAoB;AAChB,aAAO,KAAKC,eAAZ;AACH;;;;;;AAEL,SAASJ,UAAT","sourcesContent":["/**\n * @memberOf Qualifiers.Source\n * @description An abstract class extended by all Source objects\n */\nclass BaseSource {\n    /**\n     * @description Utility function to encode an asset publicID in an overlay\n     * @protected\n     * @example\n     * encodeAssetPublicID('foo/bar'); // -> foo:bar\n     */\n    encodeAssetPublicID(publicID) {\n        return publicID.replace(/\\//g, ':');\n    }\n    /**\n     * @description\n     * Apply a transformation on the image source of the layer\n     * @param {SDK.ImageTransformation} t An image transformation to apply to the layer\n     * @returns {this}\n     */\n    transformation(t) {\n        this._transformation = t;\n        return this;\n    }\n    /**\n     * @description Returns the Transformation of the source\n     * @return {SDK.Transformation}\n     */\n    getTransformation() {\n        return this._transformation;\n    }\n}\nexport { BaseSource };\n"]},"metadata":{},"sourceType":"module"}