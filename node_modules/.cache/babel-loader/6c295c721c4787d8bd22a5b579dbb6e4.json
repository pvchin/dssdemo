{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { dailyallowances_url } from \"../../utils/constants\";\nimport { filterByEmpId } from \"./utils\";\nimport axios from \"axios\";\nimport { queryKeys } from \"../react-query/constants\";\n\nasync function getDailyAllows(payrunid) {\n  const {\n    data\n  } = await axios.get(`${dailyallowances_url}?fv=${payrunid}`); //const { data } = await axios.get(`${dailyallowances_url}`);\n\n  return data;\n}\n\nexport function useDailyAllowsBatch(empid) {\n  _s();\n\n  const [filter, setFilter] = useState(\"all\");\n  const [dailyAllowsPayrunId, setDailyAllowsPayrunId] = useState(\"\");\n  const [dailyAllowsEmpId, setDailyAllowsEmpId] = useState(\"\");\n  const selectFn = useCallback(unfiltered => filterByEmpId(unfiltered, filter), [filter]);\n  const fallback = [];\n  const {\n    data: dailyallows = fallback\n  } = useQuery([queryKeys.dailyallows, dailyAllowsPayrunId, dailyAllowsEmpId], //queryKeys.dailyallows,\n  () => getDailyAllows(dailyAllowsPayrunId), {\n    select: filter !== \"all\" ? selectFn : undefined\n  });\n  return {\n    dailyallows,\n    filter,\n    setFilter,\n    setDailyAllowsPayrunId,\n    setDailyAllowsEmpId\n  };\n}\n\n_s(useDailyAllowsBatch, \"mo/JyB3ub4OxvIJWUXC8QXMB7Bs=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/dailyallows/useDailyAllowsBatch.js"],"names":["useState","useCallback","useQuery","dailyallowances_url","filterByEmpId","axios","queryKeys","getDailyAllows","payrunid","data","get","useDailyAllowsBatch","empid","filter","setFilter","dailyAllowsPayrunId","setDailyAllowsPayrunId","dailyAllowsEmpId","setDailyAllowsEmpId","selectFn","unfiltered","fallback","dailyallows","select","undefined"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,aAAT,QAA8B,SAA9B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,0BAA1B;;AAEA,eAAeC,cAAf,CAA8BC,QAA9B,EAAwC;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMJ,KAAK,CAACK,GAAN,CAAW,GAAEP,mBAAoB,OAAMK,QAAS,EAAhD,CAAvB,CADsC,CAEtC;;AACA,SAAOC,IAAP;AACD;;AAED,OAAO,SAASE,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AACzC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACe,mBAAD,EAAsBC,sBAAtB,IAAgDhB,QAAQ,CAAC,EAAD,CAA9D;AACC,QAAM,CAACiB,gBAAD,EAAmBC,mBAAnB,IAA0ClB,QAAQ,CAAC,EAAD,CAAxD;AAED,QAAMmB,QAAQ,GAAGlB,WAAW,CACzBmB,UAAD,IAAgBhB,aAAa,CAACgB,UAAD,EAAaP,MAAb,CADH,EAE1B,CAACA,MAAD,CAF0B,CAA5B;AAKA,QAAMQ,QAAQ,GAAG,EAAjB;AACA,QAAM;AAAEZ,IAAAA,IAAI,EAAEa,WAAW,GAAGD;AAAtB,MAAmCnB,QAAQ,CAC/C,CAACI,SAAS,CAACgB,WAAX,EAAwBP,mBAAxB,EAA6CE,gBAA7C,CAD+C,EAE/C;AACA,QAAMV,cAAc,CAACQ,mBAAD,CAH2B,EAI/C;AACEQ,IAAAA,MAAM,EAAEV,MAAM,KAAK,KAAX,GAAmBM,QAAnB,GAA8BK;AADxC,GAJ+C,CAAjD;AASA,SAAO;AAAEF,IAAAA,WAAF;AAAeT,IAAAA,MAAf;AAAuBC,IAAAA,SAAvB;AAAkCE,IAAAA,sBAAlC;AAA0DE,IAAAA;AAA1D,GAAP;AACD;;GArBeP,mB;UAW2BT,Q","sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { dailyallowances_url } from \"../../utils/constants\";\r\nimport { filterByEmpId } from \"./utils\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getDailyAllows(payrunid) {\r\n  const { data } = await axios.get(`${dailyallowances_url}?fv=${payrunid}`);\r\n  //const { data } = await axios.get(`${dailyallowances_url}`);\r\n  return data;\r\n}\r\n\r\nexport function useDailyAllowsBatch(empid) {\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [dailyAllowsPayrunId, setDailyAllowsPayrunId] = useState(\"\");\r\n   const [dailyAllowsEmpId, setDailyAllowsEmpId] = useState(\"\");\r\n\r\n  const selectFn = useCallback(\r\n    (unfiltered) => filterByEmpId(unfiltered, filter),\r\n    [filter]\r\n  );\r\n\r\n  const fallback = [];\r\n  const { data: dailyallows = fallback } = useQuery(\r\n    [queryKeys.dailyallows, dailyAllowsPayrunId, dailyAllowsEmpId],\r\n    //queryKeys.dailyallows,\r\n    () => getDailyAllows(dailyAllowsPayrunId),\r\n    {\r\n      select: filter !== \"all\" ? selectFn : undefined,\r\n    }\r\n  );\r\n\r\n  return { dailyallows, filter, setFilter, setDailyAllowsPayrunId, setDailyAllowsEmpId };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}