{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\ExpenseTableViewSummary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport LeaveForm from \"./LeaveForm\";\nimport { CustomDialog } from \"../helpers/CustomDialog\";\nimport { AlertDialog } from \"../helpers/AlertDialogBox\";\nimport { useExpensesStatus } from \"./expenses/useExpensesStatus\";\nimport { useExpensesPeriod } from \"./expenses/useExpensesPeriod\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FILTERSTRING = \"Pending\";\nconst columns = [{\n  title: \"Name\",\n  field: \"name\"\n}, {\n  title: \"Date\",\n  field: \"date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  }\n}, {\n  title: \"Description\",\n  field: \"description\"\n}, {\n  title: \"Amount\",\n  field: \"amount\",\n  type: \"currency\"\n}, {\n  title: \"Status\",\n  field: \"status\"\n}];\nexport default function ExpenseTableView({\n  year,\n  month\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const {\n    loadEmployees\n  } = useEmployeesContext();\n  const {\n    expensesstatus,\n    setExpStatusId\n  } = useExpensesStatus();\n  const {\n    expensesperiod,\n    setExpPeriodYrId,\n    setExpPeriodMthId\n  } = useExpensesPeriod();\n  useEffect(() => {\n    setExpPeriodYrId(year);\n    setExpPeriodMthId(month);\n  }, []);\n\n  const totalamount = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: expensesperiod,\n        title: \"Leave Application\",\n        options: {\n          filtering: false,\n          search: false,\n          toolbar: false,\n          headerStyle: {\n            backgroundColor: \"rgba(75, 192, 192, 1)\",\n            color: \"white\"\n          },\n          showTitle: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseTableView, \"YuWQE6bU36swFgJZpqfHc2gSv5c=\", false, function () {\n  return [useStyles, useEmployeesContext, useExpensesStatus, useExpensesPeriod];\n});\n\n_c = ExpenseTableView;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseTableView\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/ExpenseTableViewSummary.js"],"names":["React","useState","useEffect","MaterialTable","TextField","MenuItem","makeStyles","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","LeaveForm","CustomDialog","AlertDialog","useExpensesStatus","useExpensesPeriod","useEmployeesContext","FILTERSTRING","columns","title","field","type","dateSetting","locale","ExpenseTableView","year","month","classes","useStyles","isDialogOpen","setIsDialogOpen","isAlertOpen","setIsAlertOpen","loadEmployees","expensesstatus","setExpStatusId","expensesperiod","setExpPeriodYrId","setExpPeriodMthId","totalamount","root","maxWidth","paddingTop","filtering","search","toolbar","headerStyle","backgroundColor","color","showTitle","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialogBox\";\r\nimport { useExpensesStatus } from \"./expenses/useExpensesStatus\";\r\nimport { useExpensesPeriod } from \"./expenses/useExpensesPeriod\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n\r\n  { title: \"Description\", field: \"description\" },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function ExpenseTableView({ year, month }) {\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const { loadEmployees } = useEmployeesContext();\r\n  const { expensesstatus, setExpStatusId } = useExpensesStatus();\r\n  const { expensesperiod, setExpPeriodYrId, setExpPeriodMthId } =\r\n    useExpensesPeriod();\r\n\r\n  useEffect(() => {\r\n    setExpPeriodYrId(year);\r\n    setExpPeriodMthId(month);\r\n  }, []);\r\n\r\n  const totalamount = () => {\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={expensesperiod}\r\n          title=\"Leave Application\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"white\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}