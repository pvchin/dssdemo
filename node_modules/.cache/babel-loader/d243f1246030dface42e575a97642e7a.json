{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\ExpenseTableManager.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as emailjs from \"emailjs-com\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport { useExpensesContext } from \"../context/expenses_context\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { CustomDialog } from \"../helpers/CustomDialog\";\nimport { AlertDialog } from \"../helpers/AlertDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FILTERSTRING = \"Pending\";\nconst columns = [{\n  title: \"Name\",\n  field: \"name\",\n  editable: \"never\"\n}, {\n  title: \"From Date\",\n  field: \"from_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editable: \"never\"\n}, {\n  title: \"To Date\",\n  field: \"to_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editable: \"never\"\n}, {\n  title: \"Description\",\n  field: \"description\",\n  editable: \"never\"\n}, {\n  title: \"Amount\",\n  field: \"amount\",\n  type: \"currency\",\n  editable: \"never\"\n}, {\n  title: \"Status\",\n  field: \"status\",\n  editComponent: props => /*#__PURE__*/_jsxDEV(TextField //defaultValue={props.value || null}\n  , {\n    onChange: e => props.onChange(e.target.value),\n    style: {\n      width: 100\n    },\n    value: props.value,\n    select: true,\n    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Pending\",\n      children: \"Pending\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Approve\",\n      children: \"Approve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Reject\",\n      children: \"Reject\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Cancel\",\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this)\n}];\nexport default function ExpenseTable({\n  expensesdata,\n  setExpensesdata,\n  handleDialogClose\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [isLoad, setIsLoad] = useState(false);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const {\n    loadEmployees\n  } = useEmployeesContext();\n  const {\n    editExpenseID,\n    updateExpense,\n    update_expense_error,\n    expenses_loading,\n    deleteExpense,\n    loadPendingExpenses\n  } = useExpensesContext(); // useEffect(() => {\n  //   setExpensesdata(expenses);\n  //   console.log(expensesdata)\n  // }, []);\n  // useEffect(() => {\n  //   loadEmployees();\n  // }, []);\n  // useEffect(() => {\n  //   if (expenses) {\n  //     setExpensesdata(expenses);\n  //     console.log(\"expenses\", expenses, expensesdata)\n  //   } else {\n  //     setIsLoad(!isLoad);\n  //   }\n  // }, [isLoad]);\n\n  const handleExpenseFormDialogOpen = () => {\n    setIsDialogOpen(true);\n  };\n\n  const handleExpenseFormDialogClose = () => {\n    setIsDialogOpen(false);\n    loadPendingExpenses(FILTERSTRING);\n  };\n\n  const handleExpenseFormAlertOpen = () => {\n    setIsAlertOpen(true);\n  };\n\n  const handleExpenseFormAlertClose = () => {\n    setIsAlertOpen(false);\n  };\n\n  const handleExpenseFormOnDeleteConfirm = () => {\n    const id = editExpenseID;\n    deleteExpense(id);\n    loadPendingExpenses(FILTERSTRING);\n  };\n\n  const handleSentEmail = (data, result) => {\n    const {\n      from_date,\n      to_date\n    } = data; //console.log(\"leave form\", data);\n\n    var emaildata = {\n      to_name: loginLevel.loginUser,\n      to_email: loginLevel.loginEmail,\n      message: `Your leave application from ${from_date} to ${to_date} has been ${result}!` // cc_to: loginLevel.reporting_email,\n\n    };\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(function (response) {\n      console.log(response.status, response.text);\n      toast({\n        title: `Email has sent successfully to ${emaildata.to_email}!`,\n        status: \"success\"\n      });\n    }, function (err) {\n      console.log(err);\n      toast({\n        title: `Email has fail to send to ${emaildata.to_email}!`,\n        status: \"warning\"\n      });\n    });\n  };\n\n  const Save_ExpenseData = () => {\n    expensesdata.forEach(data => {\n      const {\n        id\n      } = data;\n\n      if (id) {\n        const {\n          id,\n          rec_id,\n          tableData,\n          ...fields\n        } = data;\n        updateExpense({\n          id,\n          ...fields\n        });\n      }\n    });\n    handleDialogClose();\n  };\n\n  const Approve_ExpenseData = () => {\n    expensesdata.forEach(rec => {\n      if (rec.tableData.checked) {\n        updateExpense({\n          id: rec.id,\n          status: \"Approve\"\n        }); //update leavesdata\n\n        if (!update_expense_error) {\n          const recdata = expensesdata.filter(r => r.id === rec.id);\n          recdata[0].status = \"Approve\";\n        }\n      }\n    });\n    expensesdata.forEach(d => {\n      if (d.tableData) d.tableData.checked = false;\n    });\n  };\n\n  const Reject_ExpenseData = () => {\n    expensesdata.forEach(rec => {\n      if (rec.tableData.checked) {\n        updateExpense({\n          id: rec.id,\n          status: \"Reject\"\n        }); //update leavesdata\n\n        if (!update_expense_error) {\n          const recdata = expensesdata.filter(r => r.id === rec.id);\n          recdata[0].status = \"Reject\";\n        }\n      }\n    });\n    expensesdata.forEach(d => {\n      if (d.tableData) d.tableData.checked = false;\n    });\n  };\n\n  if (!expensesdata) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...Expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: expensesdata,\n        title: \"Expenses Claims Application\",\n        icons: {\n          Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this),\n          Edit: props => /*#__PURE__*/_jsxDEV(CheckCircleOutlineOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 30\n          }, this),\n          Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 32\n          }, this),\n          Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 31\n          }, this),\n          Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 31\n          }, this),\n          Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 32\n          }, this),\n          ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 37\n          }, this)\n        } // editable={{\n        //   onRowUpdate: (newData, oldData) =>\n        //     new Promise((resolve, reject) => {\n        //       setTimeout(() => {\n        //         const dataUpdate = [...expensesdata];\n        //         const index = oldData.tableData.id;\n        //         dataUpdate[index] = newData;\n        //         setExpensesdata([...dataUpdate]);\n        //         //approve_Expense(newData);\n        //         resolve();\n        //       }, 1000);\n        //     }),\n        // }}\n        ,\n        options: {\n          filtering: true,\n          selection: true,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"#FFF\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"5px 10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"secondary\",\n                className: classes.button,\n                onClick: Approve_ExpenseData,\n                children: [\"Approve \", /*#__PURE__*/_jsxDEV(Icon, {\n                  className: classes.rightIcon,\n                  children: \"send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"secondary\",\n                className: classes.button,\n                onClick: Reject_ExpenseData,\n                children: [\"Reject \", /*#__PURE__*/_jsxDEV(Icon, {\n                  className: classes.rightIcon,\n                  children: \"send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 28\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n        isOpen: isDialogOpen,\n        handleClose: handleExpenseFormDialogClose,\n        title: \"\",\n        showButton: true,\n        isFullscree: false,\n        children: /*#__PURE__*/_jsxDEV(ExpenseForm, {\n          handleDialogClose: handleExpenseFormDialogClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AlertDialog, {\n        handleClose: handleExpenseFormAlertClose,\n        onConfirm: handleExpenseFormOnDeleteConfirm,\n        isOpen: isAlertOpen,\n        title: \"Delete Expenses\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Are you sure you want to delete ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseTable, \"GiEkTrBqbgpxU4j2foC58bep2D8=\", false, function () {\n  return [useStyles, useEmployeesContext, useExpensesContext];\n});\n\n_c = ExpenseTable;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseTable\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/ExpenseTableManager.js"],"names":["React","useState","useEffect","MaterialTable","MTableToolbar","TextField","MenuItem","Button","Icon","makeStyles","emailjs","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","CheckCircleOutlineOutlinedIcon","ExpenseForm","useExpensesContext","useEmployeesContext","CustomDialog","AlertDialog","FILTERSTRING","columns","title","field","editable","type","dateSetting","locale","editComponent","props","e","onChange","target","value","width","ExpenseTable","expensesdata","setExpensesdata","handleDialogClose","classes","useStyles","isLoad","setIsLoad","isDialogOpen","setIsDialogOpen","isAlertOpen","setIsAlertOpen","loadEmployees","editExpenseID","updateExpense","update_expense_error","expenses_loading","deleteExpense","loadPendingExpenses","handleExpenseFormDialogOpen","handleExpenseFormDialogClose","handleExpenseFormAlertOpen","handleExpenseFormAlertClose","handleExpenseFormOnDeleteConfirm","id","handleSentEmail","data","result","from_date","to_date","emaildata","to_name","loginLevel","loginUser","to_email","loginEmail","message","send","SERVICE_ID","TEMPLATE_ID","USER_ID","then","response","console","log","status","text","toast","err","Save_ExpenseData","forEach","rec_id","tableData","fields","Approve_ExpenseData","rec","checked","recdata","filter","r","d","Reject_ExpenseData","root","maxWidth","paddingTop","Add","Edit","Delete","Clear","Check","Search","ResetSearch","filtering","selection","headerStyle","backgroundColor","color","showTitle","Toolbar","padding","button","rightIcon","theme","margin","spacing"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialog\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  { title: \"Name\", field: \"name\", editable: \"never\" },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Description\",\r\n    field: \"description\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\", editable: \"never\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function ExpenseTable({\r\n  expensesdata,\r\n  setExpensesdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const [isLoad, setIsLoad] = useState(false);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const { loadEmployees } = useEmployeesContext();\r\n  const {\r\n    editExpenseID,\r\n    updateExpense,\r\n    update_expense_error,\r\n    expenses_loading,\r\n    deleteExpense,\r\n    loadPendingExpenses,\r\n  } = useExpensesContext();\r\n\r\n  // useEffect(() => {\r\n  //   setExpensesdata(expenses);\r\n  //   console.log(expensesdata)\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   loadEmployees();\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (expenses) {\r\n  //     setExpensesdata(expenses);\r\n  //     console.log(\"expenses\", expenses, expensesdata)\r\n  //   } else {\r\n  //     setIsLoad(!isLoad);\r\n  //   }\r\n  // }, [isLoad]);\r\n\r\n  const handleExpenseFormDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleExpenseFormDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  const handleExpenseFormAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleExpenseFormAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleExpenseFormOnDeleteConfirm = () => {\r\n    const id = editExpenseID;\r\n    deleteExpense(id);\r\n    loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\nconst handleSentEmail = (data, result) => {\r\n  const { from_date, to_date } = data;\r\n  //console.log(\"leave form\", data);\r\n  var emaildata = {\r\n    to_name: loginLevel.loginUser,\r\n    to_email: loginLevel.loginEmail,\r\n    message: `Your leave application from ${from_date} to ${to_date} has been ${result}!`,\r\n    // cc_to: loginLevel.reporting_email,\r\n  };\r\n\r\n  emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n    function (response) {\r\n      console.log(response.status, response.text);\r\n      toast({\r\n        title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n        status: \"success\",\r\n      });\r\n    },\r\n    function (err) {\r\n      console.log(err);\r\n      toast({\r\n        title: `Email has fail to send to ${emaildata.to_email}!`,\r\n        status: \"warning\",\r\n      });\r\n    }\r\n  );\r\n};\r\n\r\n  const Save_ExpenseData = () => {\r\n    expensesdata.forEach((data) => {\r\n      const { id } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updateExpense({ id, ...fields });\r\n      }\r\n    });\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  const Approve_ExpenseData = () => {\r\n    expensesdata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updateExpense({ id: rec.id, status: \"Approve\" });\r\n        //update leavesdata\r\n        if (!update_expense_error) {\r\n          const recdata = expensesdata.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Approve\";\r\n        }\r\n      }\r\n    });\r\n    expensesdata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  const Reject_ExpenseData = () => {\r\n    expensesdata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updateExpense({ id: rec.id, status: \"Reject\" });\r\n        //update leavesdata\r\n        if (!update_expense_error) {\r\n          const recdata = expensesdata.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Reject\";\r\n        }\r\n      }\r\n    });\r\n    expensesdata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  if (!expensesdata) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Expenses</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={expensesdata}\r\n          title=\"Expenses Claims Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         const dataUpdate = [...expensesdata];\r\n          //         const index = oldData.tableData.id;\r\n          //         dataUpdate[index] = newData;\r\n          //         setExpensesdata([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          options={{\r\n            filtering: true,\r\n            selection: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Approve_ExpenseData}\r\n                  >\r\n                    Approve <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Reject_ExpenseData}\r\n                  >\r\n                    Reject <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                  {/* <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_ExpenseData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button> */}\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleExpenseFormDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n        >\r\n          <ExpenseForm handleDialogClose={handleExpenseFormDialogClose} />\r\n        </CustomDialog>\r\n\r\n        <AlertDialog\r\n          handleClose={handleExpenseFormAlertClose}\r\n          onConfirm={handleExpenseFormOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}