{"ast":null,"code":"import _slicedToArray from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import clsx from\"clsx\";import axios from\"axios\";import{Box,Grid,Heading,GridItem,Icon,IconButton,Stack,Spacer}from\"@chakra-ui/react\";import{EditIcon,ViewIcon}from\"@chakra-ui/icons\";import MaterialTable from\"material-table\";import{useHistory}from\"react-router-dom\";import{List,ListItem,ListItemText}from\"@material-ui/core\";import{selector,useRecoilState,useRecoilValueLoadable}from\"recoil\";import{loginLevelState}from\"./data/atomdata\";import{useExpensesContext}from\"../context/expenses_context\";import{expenses_url}from\"../utils/constants\";import{useExpenses}from\"./expenses/useExpenses\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var drawerWidth=240;var columns=[{title:\"Name\",field:\"name\"},{title:\"Date\",field:\"date\",type:\"date\",dateSetting:{locale:\"en-GB\"}},{title:\"Description\",field:\"description\"},{title:\"Amount\",field:\"amount\",type:\"currency\"},{title:\"Status\",field:\"status\"}];// const fetchExpensesDetails = selector({\n//   key: \"fetchExpensesDetailsSelector\",\n//   get: async ({ get }) => {\n//     try {\n//       const { data } = await axios.get(expenses_url);\n//       return data;\n//     } catch (error) {\n//       throw error;\n//     }\n//   },\n// });\nvar ExpenseTableViewStaff=function ExpenseTableViewStaff(){var classes=useStyles();var history=useHistory();var fixedHeightPaper=clsx(classes.paper,classes.fixedHeight);var _useRecoilState=useRecoilState(loginLevelState),_useRecoilState2=_slicedToArray(_useRecoilState,2),loginLevel=_useRecoilState2[0],setLoginLevel=_useRecoilState2[1];var _useExpenses=useExpenses(),expenses=_useExpenses.expenses,filter=_useExpenses.filter,setFilter=_useExpenses.setFilter,setExpenseId=_useExpenses.setExpenseId;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),userdata=_useState2[0],setUserdata=_useState2[1];//const [userdata, setUserdata] = useRecoilState(userdatastate);\n// const ExpensesDetails = useRecoilValueLoadable(fetchExpensesDetails);\n// const { state, contents } = ExpensesDetails;\nvar _useExpensesContext=useExpensesContext(),expenses_loading=_useExpensesContext.expenses_loading,expenses_error=_useExpensesContext.expenses_error,loadEmpExpenses=_useExpensesContext.loadEmpExpenses;useEffect(function(){setFilter(loginLevel.loginUserId);},[]);return/*#__PURE__*/_jsx(List,{className:classes.root,children:/*#__PURE__*/_jsxs(Grid,{direction:\"row\",children:[/*#__PURE__*/_jsxs(Stack,{direction:\"row\",children:[/*#__PURE__*/_jsx(Heading,{as:\"h4\",size:\"md\",children:\"Expenses Claims (Pending)\"}),/*#__PURE__*/_jsx(Spacer,{}),/*#__PURE__*/_jsx(IconButton// variant=\"outline\"\n,{size:\"md\",\"aria-label\":\"Edit\",icon:/*#__PURE__*/_jsx(EditIcon,{}),onClick:function onClick(){return history.push(\"/expenses\");}})]}),expenses.filter(function(i){return i.status===\"Pending\";}).map(function(row){return/*#__PURE__*/_jsxs(Grid,{templateColumns:\"repeat(15, 1fr)\",gap:3,p:1,children:[/*#__PURE__*/_jsx(GridItem,{colSpan:3,children:/*#__PURE__*/_jsx(Box,{w:\"100%\",children:row.name})}),/*#__PURE__*/_jsx(GridItem,{colSpan:3,children:/*#__PURE__*/_jsx(Box,{w:\"100%\",children:row.date})}),/*#__PURE__*/_jsx(GridItem,{colSpan:3,children:/*#__PURE__*/_jsx(Box,{w:\"100%\",children:row.description})}),/*#__PURE__*/_jsx(GridItem,{colSpan:3,children:/*#__PURE__*/_jsx(Box,{w:\"100%\",children:row.amount})}),/*#__PURE__*/_jsx(GridItem,{colSpan:3,children:/*#__PURE__*/_jsx(Box,{w:\"100%\",children:row.status})})]},row.id)// <ListItem key={row.id}>\n//   {/* <Grid item sm={2} align=\"center\">\n//     <ListItemText>{row.name}</ListItemText>\n//   </Grid> */}\n//   <Grid item sm={3} align=\"center\">\n//     <ListItemText>{row.date}</ListItemText>\n//   </Grid>\n//   <Grid item sm={3} align=\"center\">\n//     <ListItemText>{row.description}</ListItemText>\n//   </Grid>\n//   <Grid item sm={3} align=\"center\">\n//     <ListItemText>{row.amount}</ListItemText>\n//   </Grid>\n//   <Grid item sm={3} align=\"center\">\n//     <ListItemText>{row.status}</ListItemText>\n//   </Grid>\n// </ListItem>\n;})]})});};var useStyles=makeStyles(function(theme){return{root:{padding:0}};});export default ExpenseTableViewStaff;","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/ExpenseTableViewStaff.js"],"names":["React","useState","useEffect","makeStyles","clsx","axios","Box","Grid","Heading","GridItem","Icon","IconButton","Stack","Spacer","EditIcon","ViewIcon","MaterialTable","useHistory","List","ListItem","ListItemText","selector","useRecoilState","useRecoilValueLoadable","loginLevelState","useExpensesContext","expenses_url","useExpenses","drawerWidth","columns","title","field","type","dateSetting","locale","ExpenseTableViewStaff","classes","useStyles","history","fixedHeightPaper","paper","fixedHeight","loginLevel","setLoginLevel","expenses","filter","setFilter","setExpenseId","userdata","setUserdata","expenses_loading","expenses_error","loadEmpExpenses","loginUserId","root","push","i","status","map","row","name","date","description","amount","id","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Heading,\r\n  GridItem,\r\n  Icon,\r\n  IconButton,\r\n  Stack,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\nimport { EditIcon, ViewIcon } from \"@chakra-ui/icons\";\r\nimport MaterialTable from \"material-table\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { selector, useRecoilState, useRecoilValueLoadable } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { expenses_url } from \"../utils/constants\";\r\nimport { useExpenses } from \"./expenses/useExpenses\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n\r\n  { title: \"Description\", field: \"description\" },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\n// const fetchExpensesDetails = selector({\r\n//   key: \"fetchExpensesDetailsSelector\",\r\n//   get: async ({ get }) => {\r\n//     try {\r\n//       const { data } = await axios.get(expenses_url);\r\n\r\n//       return data;\r\n//     } catch (error) {\r\n//       throw error;\r\n//     }\r\n//   },\r\n// });\r\n\r\nconst ExpenseTableViewStaff = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { expenses, filter, setFilter, setExpenseId } = useExpenses();\r\n  const [userdata, setUserdata] = useState([]);\r\n  //const [userdata, setUserdata] = useRecoilState(userdatastate);\r\n  // const ExpensesDetails = useRecoilValueLoadable(fetchExpensesDetails);\r\n  // const { state, contents } = ExpensesDetails;\r\n  const { expenses_loading, expenses_error, loadEmpExpenses } =\r\n    useExpensesContext();\r\n\r\n  useEffect(() => {\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <Grid direction=\"row\">\r\n        <Stack direction=\"row\">\r\n          <Heading as=\"h4\" size=\"md\">\r\n            Expenses Claims (Pending)\r\n          </Heading>\r\n          <Spacer />\r\n          <IconButton\r\n            // variant=\"outline\"\r\n            size=\"md\"\r\n            aria-label=\"Edit\"\r\n            icon={<EditIcon />}\r\n            onClick={() => history.push(\"/expenses\")}\r\n          />\r\n        </Stack>\r\n        {/* <Heading as=\"h4\" size=\"md\">\r\n          Expenses Claims (Pending)\r\n        </Heading> */}\r\n        {expenses\r\n          .filter((i) => i.status === \"Pending\")\r\n          .map((row) => {\r\n            return (\r\n              <Grid\r\n                key={row.id}\r\n                templateColumns=\"repeat(15, 1fr)\"\r\n                gap={3}\r\n                p={1}\r\n              >\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.name}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.date}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.description}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.amount}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.status}</Box>\r\n                </GridItem>\r\n              </Grid>\r\n              // <ListItem key={row.id}>\r\n              //   {/* <Grid item sm={2} align=\"center\">\r\n              //     <ListItemText>{row.name}</ListItemText>\r\n              //   </Grid> */}\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.date}</ListItemText>\r\n              //   </Grid>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.description}</ListItemText>\r\n              //   </Grid>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.amount}</ListItemText>\r\n              //   </Grid>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.status}</ListItemText>\r\n              //   </Grid>\r\n              // </ListItem>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default ExpenseTableViewStaff;\r\n"]},"metadata":{},"sourceType":"module"}