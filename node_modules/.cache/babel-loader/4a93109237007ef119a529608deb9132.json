{"ast":null,"code":"import pdfMake from \"pdfmake/build/pdfmake\";\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\nimport { formatPrice } from \"../helpers/Utils\";\nimport { Divider } from \"@material-ui/core\";\n\nconst PrintPayslip = ({\n  data,\n  emp\n}) => {\n  const subtitle = \"Payslips for the period \" + data.rowData.period;\n  const {\n    empno,\n    address,\n    phone\n  } = emp[0];\n  const {\n    name,\n    total_allowances,\n    total_deductions\n  } = data.rowData;\n  const totalEarnings = data.rowData.wages + data.rowData.total_allowances;\n  const totalDeductions = data.rowData.tap_amount + data.rowData.scp_amount + data.rowData.total_deductions;\n  const earningsdesp = [\"Wages\", data.rowData.allows_type1, data.rowData.allows_type2, data.rowData.allows_type3, data.rowData.allows_type4, data.rowData.allows_type5, data.rowData.allows_type6, data.rowData.allows_type7, data.rowData.allows_type8];\n  const earningsamt = [formatPrice(data.rowData.wages), formatPrice(data.rowData.allows_type1amt), formatPrice(data.rowData.allows_type2amt), formatPrice(data.rowData.allows_type3amt), formatPrice(data.rowData.allows_type4amt), formatPrice(data.rowData.allows_type5amt), formatPrice(data.rowData.allows_type6amt), formatPrice(data.rowData.allows_type7amt), formatPrice(data.rowData.allows_type8amt)];\n  const deductionsdesp = [\"TAP Amount\", \"SCP Amount\", data.rowData.deducts_type1, data.rowData.deducts_type2, data.rowData.deducts_type3, data.rowData.deducts_type4, data.rowData.deducts_type5, data.rowData.deducts_type6, data.rowData.deducts_type7, data.rowData.deducts_type8];\n  const deductionsamt = [formatPrice(parseInt(data.rowData.tap_amount, 10)), formatPrice(parseInt(data.rowData.scp_amount, 10)), formatPrice(data.rowData.deducts_type1amt), formatPrice(data.rowData.deducts_type2amt), formatPrice(data.rowData.deducts_type3amt), formatPrice(data.rowData.deducts_type4amt), formatPrice(data.rowData.deducts_type5amt), formatPrice(data.rowData.deducts_type6amt), formatPrice(data.rowData.deducts_type7amt), formatPrice(data.rowData.deducts_type8amt)];\n  const {\n    vfs\n  } = vfsFonts.pdfMake;\n  pdfMake.vfs = vfs;\n  const documentDefinition = {\n    pageSize: \"A4\",\n    pageOrientation: \"portrait\",\n    content: [// {\n    //   image: \"logo\",\n    //   width: 200,\n    // },\n    {\n      text: \"AppSmith Sutera Sdn Bhd\",\n      style: \"header\"\n    }, {\n      text: subtitle + \"\\n\\n\",\n      style: \"subheader\"\n    }, {\n      canvas: [{\n        type: \"line\",\n        x1: 0,\n        y1: 60,\n        x2: 260,\n        y2: 60,\n        lineWidth: 2\n      }]\n    }, {\n      columns: [{\n        width: 90,\n        text: \"Emp No \"\n      }, {\n        width: 20,\n        text: \":\"\n      }, {\n        width: \"200\",\n        text: empno\n      }, {\n        width: \"*\",\n        text: \"\"\n      }]\n    }, {\n      columns: [{\n        width: 90,\n        text: \"Name \"\n      }, {\n        width: 20,\n        text: \":\"\n      }, {\n        width: 200,\n        text: name\n      }, {\n        width: \"*\",\n        text: \"\"\n      }]\n    }, {\n      columns: [{\n        width: 90,\n        text: \"Address \"\n      }, {\n        width: 20,\n        text: \":\"\n      }, {\n        width: 200,\n        text: address\n      }, {\n        width: \"*\",\n        text: \"\"\n      }]\n    }, {\n      columns: [{\n        width: 90,\n        text: \"Phone \"\n      }, {\n        width: 20,\n        text: \":\"\n      }, {\n        width: 200,\n        text: phone\n      }, {\n        width: \"*\",\n        text: \"\"\n      }]\n    }, // {\n    //   text: [\n    //     { text: \"Emp No : \" + empno + \"\\n\", style: \"text\" },\n    //     { text: \"Name   : \" + name + \"\\n\", style: \"text\" },\n    //     { text: \"Addess : \" + address + \"\\n\", style: \"text\" },\n    //     { text: \"Phone  : \" + phone + \"\\n\\n\", style: \"text\" },\n    //   ],\n    // },\n    {\n      table: {\n        headerRows: 1,\n        widths: [\"100%\"],\n        body: [[\"\"], [\"\"]]\n      },\n      layout: \"headerLineOnly\"\n    }, {\n      style: \"tableExample\",\n      table: {\n        widths: [150, 80, 150, 80],\n        body: [[{\n          alignment: \"left\",\n          text: \"Earnings\"\n        }, {\n          alignment: \"right\",\n          text: \"Amount\"\n        }, {\n          alignment: \"left\",\n          text: \"Deductions\"\n        }, {\n          alignment: \"right\",\n          text: \"Amount\"\n        }], [{\n          stack: [{\n            type: \"none\",\n            fontSize: 12,\n            ul: earningsdesp\n          }]\n        }, {\n          stack: [{\n            type: \"none\",\n            fontSize: 12,\n            alignment: \"right\",\n            ul: earningsamt\n          }]\n        }, {\n          stack: [{\n            type: \"none\",\n            fontSize: 12,\n            ul: deductionsdesp\n          }]\n        }, {\n          stack: [{\n            type: \"none\",\n            fontSize: 12,\n            alignment: \"right\",\n            ul: deductionsamt\n          }]\n        }], [{\n          alignment: \"left\",\n          text: \"Total Earnings\"\n        }, {\n          alignment: \"right\",\n          text: formatPrice(totalEarnings)\n        }, {\n          alignment: \"left\",\n          text: \"Total Deductions\"\n        }, {\n          alignment: \"right\",\n          text: formatPrice(totalDeductions)\n        }], [{\n          alignment: \"left\",\n          text: \"\"\n        }, {\n          alignment: \"right\",\n          text: \"\"\n        }, {\n          alignment: \"left\",\n          text: \"NettPay\"\n        }, {\n          alignment: \"right\",\n          text: formatPrice(data.rowData.nett_pay)\n        }]]\n      }\n    } // {\n    //   style: \"tableExample\",\n    //   table: {\n    //     widths: [480, 80],\n    //     body: [\n    //       [\n    //         { alignment: \"left\", text: \"Nettpay\" },\n    //         { alignment: \"right\", text: \"Amount\" },\n    //       ],\n    //     ],\n    //   },\n    // },\n    ],\n    styles: {\n      header: {\n        fontSize: 18,\n        bold: true,\n        margin: [0, 0, 0, 10]\n      },\n      subheader: {\n        fontSize: 16,\n        bold: true,\n        margin: [0, 10, 0, 5]\n      },\n      text: {\n        fontSize: 12,\n        bold: false,\n        margin: [0, 10, 0, 5]\n      },\n      tableExample: {\n        margin: [0, 5, 0, 15]\n      },\n      tableOpacityExample: {\n        margin: [0, 5, 0, 15],\n        fillColor: \"blue\",\n        fillOpacity: 0.3\n      },\n      tableHeader: {\n        bold: true,\n        fontSize: 13,\n        color: \"black\"\n      }\n    },\n    defaultStyle: {// alignment: 'justify'\n    }\n  };\n  pdfMake.createPdf(documentDefinition).open();\n};\n\n_c = PrintPayslip;\nexport default PrintPayslip;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrintPayslip\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/PrintPayslip.js"],"names":["pdfMake","vfsFonts","formatPrice","Divider","PrintPayslip","data","emp","subtitle","rowData","period","empno","address","phone","name","total_allowances","total_deductions","totalEarnings","wages","totalDeductions","tap_amount","scp_amount","earningsdesp","allows_type1","allows_type2","allows_type3","allows_type4","allows_type5","allows_type6","allows_type7","allows_type8","earningsamt","allows_type1amt","allows_type2amt","allows_type3amt","allows_type4amt","allows_type5amt","allows_type6amt","allows_type7amt","allows_type8amt","deductionsdesp","deducts_type1","deducts_type2","deducts_type3","deducts_type4","deducts_type5","deducts_type6","deducts_type7","deducts_type8","deductionsamt","parseInt","deducts_type1amt","deducts_type2amt","deducts_type3amt","deducts_type4amt","deducts_type5amt","deducts_type6amt","deducts_type7amt","deducts_type8amt","vfs","documentDefinition","pageSize","pageOrientation","content","text","style","canvas","type","x1","y1","x2","y2","lineWidth","columns","width","table","headerRows","widths","body","layout","alignment","stack","fontSize","ul","nett_pay","styles","header","bold","margin","subheader","tableExample","tableOpacityExample","fillColor","fillOpacity","tableHeader","color","defaultStyle","createPdf","open"],"mappings":"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","sourcesContent":["import pdfMake from \"pdfmake/build/pdfmake\";\r\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\r\nimport { formatPrice } from \"../helpers/Utils\";\r\nimport { Divider } from \"@material-ui/core\";\r\n\r\nconst PrintPayslip = ({ data, emp }) => {\r\n  const subtitle = \"Payslips for the period \" + data.rowData.period;\r\n  const { empno, address, phone } = emp[0];\r\n  const { name, total_allowances, total_deductions } = data.rowData;\r\n  const totalEarnings = data.rowData.wages + data.rowData.total_allowances;\r\n  const totalDeductions =\r\n    data.rowData.tap_amount +\r\n    data.rowData.scp_amount +\r\n    data.rowData.total_deductions;\r\n  const earningsdesp = [\r\n    \"Wages\",\r\n    data.rowData.allows_type1,\r\n    data.rowData.allows_type2,\r\n    data.rowData.allows_type3,\r\n    data.rowData.allows_type4,\r\n    data.rowData.allows_type5,\r\n    data.rowData.allows_type6,\r\n    data.rowData.allows_type7,\r\n    data.rowData.allows_type8,\r\n  ];\r\n  const earningsamt = [\r\n    formatPrice(data.rowData.wages),\r\n    formatPrice(data.rowData.allows_type1amt),\r\n    formatPrice(data.rowData.allows_type2amt),\r\n    formatPrice(data.rowData.allows_type3amt),\r\n    formatPrice(data.rowData.allows_type4amt),\r\n    formatPrice(data.rowData.allows_type5amt),\r\n    formatPrice(data.rowData.allows_type6amt),\r\n    formatPrice(data.rowData.allows_type7amt),\r\n    formatPrice(data.rowData.allows_type8amt),\r\n  ];\r\n  const deductionsdesp = [\r\n    \"TAP Amount\",\r\n    \"SCP Amount\",\r\n    data.rowData.deducts_type1,\r\n    data.rowData.deducts_type2,\r\n    data.rowData.deducts_type3,\r\n    data.rowData.deducts_type4,\r\n    data.rowData.deducts_type5,\r\n    data.rowData.deducts_type6,\r\n    data.rowData.deducts_type7,\r\n    data.rowData.deducts_type8,\r\n  ];\r\n  const deductionsamt = [\r\n    formatPrice(parseInt(data.rowData.tap_amount, 10)),\r\n    formatPrice(parseInt(data.rowData.scp_amount, 10)),\r\n    formatPrice(data.rowData.deducts_type1amt),\r\n    formatPrice(data.rowData.deducts_type2amt),\r\n    formatPrice(data.rowData.deducts_type3amt),\r\n    formatPrice(data.rowData.deducts_type4amt),\r\n    formatPrice(data.rowData.deducts_type5amt),\r\n    formatPrice(data.rowData.deducts_type6amt),\r\n    formatPrice(data.rowData.deducts_type7amt),\r\n    formatPrice(data.rowData.deducts_type8amt),\r\n  ];\r\n\r\n  const { vfs } = vfsFonts.pdfMake;\r\n  pdfMake.vfs = vfs;\r\n\r\n  const documentDefinition = {\r\n    pageSize: \"A4\",\r\n    pageOrientation: \"portrait\",\r\n    content: [\r\n      // {\r\n      //   image: \"logo\",\r\n      //   width: 200,\r\n      // },\r\n      { text: \"AppSmith Sutera Sdn Bhd\", style: \"header\" },\r\n      { text: subtitle + \"\\n\\n\", style: \"subheader\" },\r\n      {\r\n        canvas: [\r\n          {\r\n            type: \"line\",\r\n            x1: 0,\r\n            y1: 60,\r\n            x2: 260,\r\n            y2: 60,\r\n            lineWidth: 2,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        columns: [\r\n          {\r\n            width: 90,\r\n            text: \"Emp No \",\r\n          },\r\n          {\r\n            width: 20,\r\n            text: \":\",\r\n          },\r\n          {\r\n            width: \"200\",\r\n            text: empno,\r\n          },\r\n          {\r\n            width: \"*\",\r\n            text: \"\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        columns: [\r\n          {\r\n            width: 90,\r\n            text: \"Name \",\r\n          },\r\n          {\r\n            width: 20,\r\n            text: \":\",\r\n          },\r\n          {\r\n            width: 200,\r\n            text: name,\r\n          },\r\n          {\r\n            width: \"*\",\r\n            text: \"\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        columns: [\r\n          {\r\n            width: 90,\r\n            text: \"Address \",\r\n          },\r\n          {\r\n            width: 20,\r\n            text: \":\",\r\n          },\r\n          {\r\n            width: 200,\r\n            text: address,\r\n          },\r\n          {\r\n            width: \"*\",\r\n            text: \"\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        columns: [\r\n          {\r\n            width: 90,\r\n            text: \"Phone \",\r\n          },\r\n          {\r\n            width: 20,\r\n            text: \":\",\r\n          },\r\n          {\r\n            width: 200,\r\n            text: phone,\r\n          },\r\n          {\r\n            width: \"*\",\r\n            text: \"\",\r\n          },\r\n        ],\r\n      },\r\n      // {\r\n      //   text: [\r\n      //     { text: \"Emp No : \" + empno + \"\\n\", style: \"text\" },\r\n      //     { text: \"Name   : \" + name + \"\\n\", style: \"text\" },\r\n      //     { text: \"Addess : \" + address + \"\\n\", style: \"text\" },\r\n      //     { text: \"Phone  : \" + phone + \"\\n\\n\", style: \"text\" },\r\n      //   ],\r\n      // },\r\n\r\n      {\r\n        table: {\r\n          headerRows: 1,\r\n          widths: [\"100%\"],\r\n          body: [[\"\"], [\"\"]],\r\n        },\r\n        layout: \"headerLineOnly\",\r\n      },\r\n      {\r\n        style: \"tableExample\",\r\n        table: {\r\n          widths: [150, 80, 150, 80],\r\n          body: [\r\n            [\r\n              { alignment: \"left\", text: \"Earnings\" },\r\n              { alignment: \"right\", text: \"Amount\" },\r\n              { alignment: \"left\", text: \"Deductions\" },\r\n              { alignment: \"right\", text: \"Amount\" },\r\n            ],\r\n            [\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    ul: earningsdesp,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    alignment: \"right\",\r\n                    ul: earningsamt,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    ul: deductionsdesp,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    alignment: \"right\",\r\n                    ul: deductionsamt,\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n            [\r\n              { alignment: \"left\", text: \"Total Earnings\" },\r\n              { alignment: \"right\", text: formatPrice(totalEarnings) },\r\n              { alignment: \"left\", text: \"Total Deductions\" },\r\n              { alignment: \"right\", text: formatPrice(totalDeductions) },\r\n            ],\r\n            [\r\n              { alignment: \"left\", text: \"\" },\r\n              { alignment: \"right\", text: \"\" },\r\n              { alignment: \"left\", text: \"NettPay\" },\r\n              { alignment: \"right\", text: formatPrice(data.rowData.nett_pay) },\r\n            ],\r\n          ],\r\n        },\r\n      },\r\n      // {\r\n      //   style: \"tableExample\",\r\n      //   table: {\r\n      //     widths: [480, 80],\r\n      //     body: [\r\n      //       [\r\n      //         { alignment: \"left\", text: \"Nettpay\" },\r\n      //         { alignment: \"right\", text: \"Amount\" },\r\n      //       ],\r\n      //     ],\r\n      //   },\r\n      // },\r\n    ],\r\n    styles: {\r\n      header: {\r\n        fontSize: 18,\r\n        bold: true,\r\n        margin: [0, 0, 0, 10],\r\n      },\r\n      subheader: {\r\n        fontSize: 16,\r\n        bold: true,\r\n        margin: [0, 10, 0, 5],\r\n      },\r\n      text: {\r\n        fontSize: 12,\r\n        bold: false,\r\n        margin: [0, 10, 0, 5],\r\n      },\r\n      tableExample: {\r\n        margin: [0, 5, 0, 15],\r\n      },\r\n      tableOpacityExample: {\r\n        margin: [0, 5, 0, 15],\r\n        fillColor: \"blue\",\r\n        fillOpacity: 0.3,\r\n      },\r\n      tableHeader: {\r\n        bold: true,\r\n        fontSize: 13,\r\n        color: \"black\",\r\n      },\r\n    },\r\n    defaultStyle: {\r\n      // alignment: 'justify'\r\n    },\r\n  };\r\n\r\n  pdfMake.createPdf(documentDefinition).open();\r\n};\r\n\r\nexport default PrintPayslip;\r\n"]},"metadata":{},"sourceType":"module"}