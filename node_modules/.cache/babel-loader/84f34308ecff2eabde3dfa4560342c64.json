{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\PaySummary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useMemo } from \"react\";\nimport ReactToPrint, { useReactToPrint } from \"react-to-print\";\nimport currency from \"currency.js\";\nimport PrintPaySummary from \"./PrintPaySummary\";\nimport { Box, Heading, Text, Table, Thead, Tbody, Tr, Th, Td, chakra } from \"@chakra-ui/react\";\nimport { TriangleDownIcon, TriangleUpIcon } from \"@chakra-ui/icons\";\nimport { useTable, useSortBy } from \"react-table\";\nimport MaterialTable from \"material-table\";\nimport { Button, Icon, Grid, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useRecoilState } from \"recoil\";\nimport { formatPrice, formatPriceZero } from \"../helpers/Utils\";\nimport { payrunState, payrunStatusState } from \"./data/atomdata\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { ComponentToPrint } from \"./ComponentToPrint\";\nimport PaySummaryTable from \"./PaySummaryTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initial_state = [{\n  totalwages: 0,\n  totaltap: 0,\n  totalscp: 0,\n  totalallows: 0,\n  totaldeducts: 0,\n  totalpayroll: 0\n}];\n\nconst PaySummary = ({\n  singlebatchpayslip\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const componentRef = useRef();\n  const [state, setState] = useState(initial_state);\n  const [payrundata, setPayrundata] = useRecoilState(payrunState);\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\n  const [isCalc, setIsCalc] = useState(true);\n  const {\n    payrun,\n    updatePayrun,\n    payslip_period\n  } = usePayslipsContext();\n  const columns = [{\n    Header: \"Name\",\n    accessor: \"name\"\n  }, {\n    Header: \"Wages\",\n    accessor: \"wages_bnd\",\n    isNumeric: true,\n    Cell: props => formatPrice(props.value)\n  }, {\n    Header: \"TAP Amount\",\n    accessor: \"tap_amount_bnd\",\n    isNumeric: true,\n    Cell: props => formatPriceZero(props.value)\n  }, {\n    Header: \"SCP Amount\",\n    accessor: \"scp_amount_bnd\",\n    isNumeric: true,\n    Cell: props => formatPrice(props.value)\n  }, {\n    Header: \"Site Allowances\",\n    accessor: \"site_allows_bnd\",\n    isNumeric: true,\n    Cell: props => formatPrice(props.value)\n  }, {\n    Header: \"Expenses Claims\",\n    accessor: \"expenses_claims_bnd\",\n    isNumeric: true,\n    Cell: props => formatPrice(props.value)\n  }, {\n    Header: \"Allowances\",\n    accessor: \"total_allowances_bnd\",\n    isNumeric: true,\n    Cell: props => formatPrice(props.value)\n  }, {\n    Header: \"Deductions\",\n    accessor: \"total_deductions_bnd\",\n    isNumeric: true,\n    Cell: props => formatPrice(props.value)\n  }, {\n    Header: \"Nett Pay\",\n    accessor: \"nett_pay_bnd\",\n    isNumeric: true,\n    Cell: props => formatPrice(props.value)\n  }];\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current\n  });\n\n  const exportPdfTable = () => {\n    PrintPaySummary(singlebatchpayslip = {\n      singlebatchpayslip\n    });\n  };\n\n  const handleCalcTotals = () => {\n    const data = singlebatchpayslip;\n    const totalwages = data.reduce((acc, item) => {\n      return acc + item.wages_bnd;\n    }, 0);\n    const totalsitesallows = data.reduce((acc, item) => {\n      return acc + item.site_allows_bnd;\n    }, 0);\n    const totalexpclaims = data.reduce((acc, item) => {\n      return acc + item.expenses_claims_bnd;\n    }, 0);\n    const totalallows = data.reduce((acc, item) => {\n      return acc + item.total_allowances_bnd;\n    }, 0);\n    const totaldeducts = data.reduce((acc, item) => {\n      return acc + item.total_deductions_bnd;\n    }, 0);\n    const totaltap = data.reduce((acc, item) => {\n      return acc + item.tap_amount_bnd;\n    }, 0);\n    const totalscp = data.reduce((acc, item) => {\n      return acc + item.scp_amount_bnd;\n    }, 0);\n    const totalpayroll = data.reduce((acc, item) => {\n      return acc + item.nett_pay_bnd;\n    }, 0);\n    setPayrundata({ ...payrundata,\n      totalpayroll: totalpayroll,\n      totalwages: totalwages,\n      totaltap: totaltap,\n      totalscp: totalscp,\n      totalallows: totalallows,\n      totaldeducts: totaldeducts,\n      totalsitesallows: totalsitesallows,\n      totalexpensesclaims: totalexpclaims\n    }); // payrun\n    //   .filter((r) => r.payrun === payslip_period)\n    //   .map((rec) => {\n    //     //update payrun\n    //     return updatePayrun({\n    //       id: rec.id,\n    //       totalpayroll: totalpayroll,\n    //       totalwages: totalwages,\n    //       totaltap: totaltap,\n    //       totalscp: totalscp,\n    //       totalallows: totalallows,\n    //       totaldeducts: totaldeducts,\n    //       totalsitesallows: totalsitesallows,\n    //       totalexpensesclaims: totalexpclaims,\n    //     });\n    //   });\n    // console.log(\"payrundata\", payrundata);\n    // console.log(\n    //   \"totals\",\n    //   totalpayroll,\n    //   totalwages,\n    //   totaltap,\n    //   totalscp,\n    //   totalallows,\n    //   totaldeducts\n    // );\n  };\n\n  const handleSaveCalcTotals = e => {\n    e.preventDefault();\n    handleCalcTotals();\n  };\n\n  useEffect(() => {\n    handleCalcTotals();\n    setIsCalc(false);\n  }, [isCalc]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        style: {\n          border: \"1px solid black\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid // item\n        // sm={12}\n        // align=\"center\"\n        // style={{ border: \"1px solid black\" }}\n        , {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        style: {\n          border: \"1px solid white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Period\",\n              name: \"period\",\n              variant: \"filled\",\n              type: \"text\",\n              value: payrundata.period,\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Pay Run Batch\",\n              name: \"payrun\",\n              variant: \"filled\",\n              type: \"text\",\n              value: payrundata.payrun,\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Status\",\n              name: \"status\",\n              variant: \"filled\",\n              value: payrundata.status,\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Payroll Total\",\n              name: \"paytotal\",\n              variant: \"filled\",\n              type: \"number\",\n              value: currency(payrundata.totalpayroll),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        style: {\n          border: \"1px solid white\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 12,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            h: \"400\",\n            overflow: \"scroll\",\n            children: /*#__PURE__*/_jsxDEV(PaySummaryTable, {\n              columns: columns,\n              data: singlebatchpayslip\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        style: {\n          border: \"1px solid white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Total Wages\",\n              name: \"totalwages\",\n              variant: \"filled\",\n              type: \"currency\",\n              value: currency(payrundata.totalwages),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Total TAP\",\n              name: \"totaltap\",\n              variant: \"filled\",\n              type: \"currency\",\n              value: currency(payrundata.totaltap),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Total SCP\",\n              name: \"totalscp\",\n              variant: \"filled\",\n              type: \"currency\",\n              value: currency(payrundata.totalscp),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Total Sites Allows\",\n              name: \"totalsitesallows\",\n              variant: \"filled\",\n              type: \"currency\",\n              value: currency(payrundata.totalsiteallows),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Total Expenses Claims\",\n              name: \"totalsitesallows\",\n              variant: \"filled\",\n              type: \"currency\",\n              value: currency(payrundata.totalexpensesclaims),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Total Allowances\",\n              name: \"totalallows\",\n              variant: \"filled\",\n              type: \"currency\",\n              value: currency(payrundata.totalallows),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Total Deductions\",\n              name: \"totaldeducts\",\n              variant: \"filled\",\n              type: \"currency\",\n              value: currency(payrundata.totaldeducts),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Total Payroll\",\n              name: \"totalpayroll\",\n              variant: \"filled\",\n              type: \"currency\",\n              value: currency(payrundata.totalpayroll),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaySummary, \"xq4qwZsK4s6S2KP1x/A7dev3SK0=\", false, function () {\n  return [useStyles, useRecoilState, useRecoilState, usePayslipsContext, useReactToPrint];\n});\n\n_c = PaySummary;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  container: {\n    margin: 0,\n    padding: 0,\n    width: \"80vw\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\n    gridAutoRows: \"10px\",\n    position: \"absolute\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    justifyContent: \"center\",\n    backgroundColor: \"primary\"\n  },\n  fixedHeight: {\n    height: 800\n  },\n  paper: {\n    padding: theme.spacing(10),\n    // display: \"flex\",\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    border: \"1px solid\",\n    width: \"100%\",\n    color: \"primary\",\n    bcakgroundColor: \"black\"\n  },\n  card: {\n    backgroundColor: \"black\"\n  },\n  section: {\n    width: \"80vw\",\n    margin: \"1rem auto\",\n    maxWidth: \"var(--max-width)\"\n  },\n  underline: {\n    width: \"5rem\",\n    height: \"0.25rem\",\n    marginBottom: \"1.25rem\",\n    background: \"var(--clr-primary-5)\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  title: {\n    marginbottom: \"4rem\",\n    textAlign: \"center\"\n  },\n  jobscenter: {\n    width: \"80vw\",\n    margin: \"0 auto\",\n    maxWidth: \"var(--max-width)\",\n    flexDirection: \"row\"\n  },\n  btncontainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginBottom: \"4rem\",\n    flexWrap: \"wrap\"\n  },\n  jobbtn: {\n    background: \"transparent\",\n    borderColor: \"transparent\",\n    textTransform: \"capitalize\",\n    fontSize: \"1.25rem\",\n    letterSpacing: \"var(--spacing)\",\n    margin: \"0 0.5rem\",\n    transition: \"var(--transition)\",\n    cursor: \"pointer\",\n    padding: \"0.25rem 0\",\n    lineHeight: \"1\",\n    outlineColor: \"var(--clr-primary-10)\",\n    \"&:hover\": {\n      color: \"var(--clr-primary-5)\",\n      boxShadow: \"0 2px var(--clr-primary-5)\"\n    }\n  },\n  activebtn: {\n    color: \"var(--clr-primary-5)\",\n    boxShadow: \"0 2px var(--clr-primary-5)\"\n  },\n  jobinfo: {\n    fontWeight: \"400\"\n  },\n  divider: {\n    // Theme Color, or use css color in quote\n    background: \"white\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 350\n  },\n  divContainer: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  }\n}));\nexport default PaySummary;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaySummary\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/PaySummary.js"],"names":["React","useState","useEffect","useRef","useMemo","ReactToPrint","useReactToPrint","currency","PrintPaySummary","Box","Heading","Text","Table","Thead","Tbody","Tr","Th","Td","chakra","TriangleDownIcon","TriangleUpIcon","useTable","useSortBy","MaterialTable","Button","Icon","Grid","TextField","makeStyles","useRecoilState","formatPrice","formatPriceZero","payrunState","payrunStatusState","usePayslipsContext","ComponentToPrint","PaySummaryTable","initial_state","totalwages","totaltap","totalscp","totalallows","totaldeducts","totalpayroll","PaySummary","singlebatchpayslip","classes","useStyles","componentRef","state","setState","payrundata","setPayrundata","payrunstatus","setPayrunStatus","isCalc","setIsCalc","payrun","updatePayrun","payslip_period","columns","Header","accessor","isNumeric","Cell","props","value","handlePrint","content","current","exportPdfTable","handleCalcTotals","data","reduce","acc","item","wages_bnd","totalsitesallows","site_allows_bnd","totalexpclaims","expenses_claims_bnd","total_allowances_bnd","total_deductions_bnd","tap_amount_bnd","scp_amount_bnd","nett_pay_bnd","totalexpensesclaims","handleSaveCalcTotals","e","preventDefault","border","period","width","shrink","readOnly","status","totalsiteallows","theme","root","flexGrow","button","margin","spacing","container","padding","display","gridTemplateColumns","gridAutoRows","position","left","transform","justifyContent","backgroundColor","fixedHeight","height","paper","overflow","flexDirection","color","bcakgroundColor","card","section","maxWidth","underline","marginBottom","background","marginLeft","marginRight","title","marginbottom","textAlign","jobscenter","btncontainer","flexWrap","jobbtn","borderColor","textTransform","fontSize","letterSpacing","transition","cursor","lineHeight","outlineColor","boxShadow","activebtn","jobinfo","fontWeight","divider","textField","divContainer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from \"react\";\r\nimport ReactToPrint, { useReactToPrint } from \"react-to-print\";\r\nimport currency from \"currency.js\";\r\nimport PrintPaySummary from \"./PrintPaySummary\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  chakra,\r\n} from \"@chakra-ui/react\";\r\nimport { TriangleDownIcon, TriangleUpIcon } from \"@chakra-ui/icons\";\r\nimport { useTable, useSortBy } from \"react-table\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Button, Icon, Grid, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { formatPrice, formatPriceZero } from \"../helpers/Utils\";\r\nimport { payrunState, payrunStatusState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { ComponentToPrint } from \"./ComponentToPrint\";\r\nimport PaySummaryTable from \"./PaySummaryTable\";\r\n\r\nconst initial_state = [\r\n  {\r\n    totalwages: 0,\r\n    totaltap: 0,\r\n    totalscp: 0,\r\n    totalallows: 0,\r\n    totaldeducts: 0,\r\n    totalpayroll: 0,\r\n  },\r\n];\r\n\r\nconst PaySummary = ({ singlebatchpayslip }) => {\r\n  const classes = useStyles();\r\n  const componentRef = useRef();\r\n  const [state, setState] = useState(initial_state);\r\n  const [payrundata, setPayrundata] = useRecoilState(payrunState);\r\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\r\n  const [isCalc, setIsCalc] = useState(true);\r\n  const { payrun, updatePayrun, payslip_period } = usePayslipsContext();\r\n\r\n  const columns = [\r\n    {\r\n      Header: \"Name\",\r\n      accessor: \"name\",\r\n    },\r\n    {\r\n      Header: \"Wages\",\r\n      accessor: \"wages_bnd\",\r\n      isNumeric: true,\r\n      Cell: (props) => formatPrice(props.value),\r\n    },\r\n\r\n    {\r\n      Header: \"TAP Amount\",\r\n      accessor: \"tap_amount_bnd\",\r\n      isNumeric: true,\r\n      Cell: (props) => formatPriceZero(props.value),\r\n    },\r\n    {\r\n      Header: \"SCP Amount\",\r\n      accessor: \"scp_amount_bnd\",\r\n      isNumeric: true,\r\n      Cell: (props) => formatPrice(props.value),\r\n    },\r\n    {\r\n      Header: \"Site Allowances\",\r\n      accessor: \"site_allows_bnd\",\r\n      isNumeric: true,\r\n      Cell: (props) => formatPrice(props.value),\r\n    },\r\n    {\r\n      Header: \"Expenses Claims\",\r\n      accessor: \"expenses_claims_bnd\",\r\n      isNumeric: true,\r\n      Cell: (props) => formatPrice(props.value),\r\n    },\r\n    {\r\n      Header: \"Allowances\",\r\n      accessor: \"total_allowances_bnd\",\r\n      isNumeric: true,\r\n      Cell: (props) => formatPrice(props.value),\r\n    },\r\n    {\r\n      Header: \"Deductions\",\r\n      accessor: \"total_deductions_bnd\",\r\n      isNumeric: true,\r\n      Cell: (props) => formatPrice(props.value),\r\n    },\r\n    {\r\n      Header: \"Nett Pay\",\r\n      accessor: \"nett_pay_bnd\",\r\n      isNumeric: true,\r\n      Cell: (props) => formatPrice(props.value),\r\n    },\r\n  ];\r\n\r\n  const handlePrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n  });\r\n\r\n  const exportPdfTable = () => {\r\n    PrintPaySummary((singlebatchpayslip = { singlebatchpayslip }));\r\n  };\r\n\r\n  const handleCalcTotals = () => {\r\n    const data = singlebatchpayslip;\r\n    const totalwages = data.reduce((acc, item) => {\r\n      return acc + item.wages_bnd;\r\n    }, 0);\r\n    const totalsitesallows = data.reduce((acc, item) => {\r\n      return acc + item.site_allows_bnd;\r\n    }, 0);\r\n    const totalexpclaims = data.reduce((acc, item) => {\r\n      return acc + item.expenses_claims_bnd;\r\n    }, 0);\r\n    const totalallows = data.reduce((acc, item) => {\r\n      return acc + item.total_allowances_bnd;\r\n    }, 0);\r\n    const totaldeducts = data.reduce((acc, item) => {\r\n      return acc + item.total_deductions_bnd;\r\n    }, 0);\r\n    const totaltap = data.reduce((acc, item) => {\r\n      return acc + item.tap_amount_bnd;\r\n    }, 0);\r\n    const totalscp = data.reduce((acc, item) => {\r\n      return acc + item.scp_amount_bnd;\r\n    }, 0);\r\n    const totalpayroll = data.reduce((acc, item) => {\r\n      return acc + item.nett_pay_bnd;\r\n    }, 0);\r\n\r\n    setPayrundata({\r\n      ...payrundata,\r\n      totalpayroll: totalpayroll,\r\n      totalwages: totalwages,\r\n      totaltap: totaltap,\r\n      totalscp: totalscp,\r\n      totalallows: totalallows,\r\n      totaldeducts: totaldeducts,\r\n      totalsitesallows: totalsitesallows,\r\n      totalexpensesclaims: totalexpclaims,\r\n    });\r\n    // payrun\r\n    //   .filter((r) => r.payrun === payslip_period)\r\n    //   .map((rec) => {\r\n    //     //update payrun\r\n    //     return updatePayrun({\r\n    //       id: rec.id,\r\n    //       totalpayroll: totalpayroll,\r\n    //       totalwages: totalwages,\r\n    //       totaltap: totaltap,\r\n    //       totalscp: totalscp,\r\n    //       totalallows: totalallows,\r\n    //       totaldeducts: totaldeducts,\r\n    //       totalsitesallows: totalsitesallows,\r\n    //       totalexpensesclaims: totalexpclaims,\r\n    //     });\r\n    //   });\r\n    // console.log(\"payrundata\", payrundata);\r\n    // console.log(\r\n    //   \"totals\",\r\n    //   totalpayroll,\r\n    //   totalwages,\r\n    //   totaltap,\r\n    //   totalscp,\r\n    //   totalallows,\r\n    //   totaldeducts\r\n    // );\r\n  };\r\n\r\n  const handleSaveCalcTotals = (e) => {\r\n    e.preventDefault();\r\n    handleCalcTotals();\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleCalcTotals();\r\n    setIsCalc(false);\r\n  }, [isCalc]);\r\n\r\n  return (\r\n    <div>\r\n      {/* <div style={{ display: \"none\" }}> */}\r\n      <div>\r\n        {/* <div style={{ border: \"1px solid black\" }} align=\"center\">\r\n          <button onClick={() => exportPdfTable()}>\r\n            <Heading size=\"sm\">Print Payroll Summary Report!</Heading>\r\n          </button>\r\n        </div> */}\r\n        {/* <div>\r\n          <div style={{ display: \"none\" }}>\r\n            <ComponentToPrint ref={componentRef} />\r\n          </div>\r\n          <button onClick={handlePrint}>Print this out!</button>\r\n        </div> */}\r\n      </div>\r\n      <form>\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid black\" }}>\r\n          <Grid\r\n          // item\r\n          // sm={12}\r\n          // align=\"center\"\r\n          // style={{ border: \"1px solid black\" }}\r\n          >\r\n            <div>\r\n              {/* <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              style={{ marginLeft: 5 }}\r\n              onClick={(e) => handleSaveCalcTotals(e)}\r\n            >\r\n              Save <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button> */}\r\n              {/* <Heading size=\"sm\">Summary</Heading> */}\r\n              {/* <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                style={{ marginLeft: 5 }}\r\n                onClick={(e) => handle_Print(e)}\r\n              >\r\n                Print <Icon className={classes.rightIcon}>send</Icon>\r\n              </Button> */}\r\n              {/* <div>\r\n                <ReactToPrint\r\n                  trigger={(e) => {\r\n                    handle_Print(e);\r\n                  }}\r\n                  content={() => this.componentRef}\r\n                />\r\n                <ComponentToPrint ref={(el) => (this.componentRef = el)} />\r\n              </div> */}\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Period\"\r\n                name=\"period\"\r\n                variant=\"filled\"\r\n                type=\"text\"\r\n                value={payrundata.period}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Pay Run Batch\"\r\n                name=\"payrun\"\r\n                variant=\"filled\"\r\n                type=\"text\"\r\n                value={payrundata.payrun}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Status\"\r\n                name=\"status\"\r\n                variant=\"filled\"\r\n                value={payrundata.status}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Payroll Total\"\r\n                name=\"paytotal\"\r\n                variant=\"filled\"\r\n                type=\"number\"\r\n                value={currency(payrundata.totalpayroll)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n          <Grid\r\n            item\r\n            sm={12}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <Box h=\"400\" overflow=\"scroll\">\r\n              <PaySummaryTable columns={columns} data={singlebatchpayslip} />\r\n            </Box>\r\n            {/* <MaterialTable\r\n              columns={columns}\r\n              data={singlebatchpayslip}\r\n              title=\"Payroll\"\r\n              options={{\r\n                filtering: false,\r\n                search: false,\r\n                toolbar: false,\r\n\r\n                headerStyle: {\r\n                  backgroundColor: \"lightblue\",\r\n                  color: \"primary\",\r\n                },\r\n                showTitle: false,\r\n              }}\r\n            /> */}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Wages\"\r\n                name=\"totalwages\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalwages)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total TAP\"\r\n                name=\"totaltap\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totaltap)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total SCP\"\r\n                name=\"totalscp\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalscp)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Sites Allows\"\r\n                name=\"totalsitesallows\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalsiteallows)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Expenses Claims\"\r\n                name=\"totalsitesallows\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalexpensesclaims)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Allowances\"\r\n                name=\"totalallows\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalallows)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Deductions\"\r\n                name=\"totaldeducts\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totaldeducts)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Payroll\"\r\n                name=\"totalpayroll\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalpayroll)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"80vw\",\r\n    margin: \"1rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  divider: {\r\n    // Theme Color, or use css color in quote\r\n    background: \"white\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n  divContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n}));\r\n\r\nexport default PaySummary;\r\n"]},"metadata":{},"sourceType":"module"}