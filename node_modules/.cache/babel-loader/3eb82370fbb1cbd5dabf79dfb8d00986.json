{"ast":null,"code":"import { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\nimport { Action } from \"../../internal/Action\";\n/**\n * @description Applies a cartoon effect to an image.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nclass CartoonifyEffect extends Action {\n  constructor(effectName, strength) {\n    // We don't pass level in the constructor, we'll build it in the prepareParam\n    super();\n    this.cartoonifyStrength = strength;\n    this.effectName = effectName;\n  }\n  /**\n   * @description Sets the thickness of the lines.\n   * @param {number} lineStrength The thickness of the lines. (Range: 0 to 100, Server default: 50)\n   * @return {this}\n   */\n\n\n  lineStrength(lineStrength) {\n    this.cartoonifyStrength = lineStrength;\n    return this;\n  }\n  /**\n   * @description Achieves a black and white cartoon effect.\n   * @return {this}\n   */\n\n\n  blackwhite() {\n    this.colorReduction = 'bw';\n    return this;\n  }\n  /**\n   * @description\n   * Sets the decrease in the number of colors and corresponding saturation boost of the remaining colors. <br/>\n   * Higher reduction values result in a less realistic look.\n   * @param {number } level The decrease in the number of colors and corresponding saturation boost of the remaining colors. (Range: 0 to 100, Server default: automatically adjusts according to the line_strength value). Set to 'bw' for a black and white cartoon effect.\n   * @return {this}\n   */\n\n\n  colorReductionLevel(level) {\n    this.colorReduction = level;\n    return this;\n  }\n\n  prepareQualifiers() {\n    this.addQualifier(new Qualifier('e', new QualifierValue([this.effectName, this.cartoonifyStrength, this.colorReduction])));\n    return;\n  }\n\n}\n\nexport { CartoonifyEffect };","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/actions/effect/cartoonify.js"],"names":["Qualifier","QualifierValue","Action","CartoonifyEffect","constructor","effectName","strength","cartoonifyStrength","lineStrength","blackwhite","colorReduction","colorReductionLevel","level","prepareQualifiers","addQualifier"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oCAA1B;AACA,SAASC,cAAT,QAA+B,yCAA/B;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,gBAAN,SAA+BD,MAA/B,CAAsC;AAClCE,EAAAA,WAAW,CAACC,UAAD,EAAaC,QAAb,EAAuB;AAC9B;AACA;AACA,SAAKC,kBAAL,GAA0BD,QAA1B;AACA,SAAKD,UAAL,GAAkBA,UAAlB;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIG,EAAAA,YAAY,CAACA,YAAD,EAAe;AACvB,SAAKD,kBAAL,GAA0BC,YAA1B;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIC,EAAAA,UAAU,GAAG;AACT,SAAKC,cAAL,GAAsB,IAAtB;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIC,EAAAA,mBAAmB,CAACC,KAAD,EAAQ;AACvB,SAAKF,cAAL,GAAsBE,KAAtB;AACA,WAAO,IAAP;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,YAAL,CAAkB,IAAId,SAAJ,CAAc,GAAd,EAAmB,IAAIC,cAAJ,CAAmB,CAAC,KAAKI,UAAN,EAAkB,KAAKE,kBAAvB,EAA2C,KAAKG,cAAhD,CAAnB,CAAnB,CAAlB;AACA;AACH;;AAtCiC;;AAwCtC,SAASP,gBAAT","sourcesContent":["import { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\nimport { Action } from \"../../internal/Action\";\n/**\n * @description Applies a cartoon effect to an image.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass CartoonifyEffect extends Action {\n    constructor(effectName, strength) {\n        // We don't pass level in the constructor, we'll build it in the prepareParam\n        super();\n        this.cartoonifyStrength = strength;\n        this.effectName = effectName;\n    }\n    /**\n     * @description Sets the thickness of the lines.\n     * @param {number} lineStrength The thickness of the lines. (Range: 0 to 100, Server default: 50)\n     * @return {this}\n     */\n    lineStrength(lineStrength) {\n        this.cartoonifyStrength = lineStrength;\n        return this;\n    }\n    /**\n     * @description Achieves a black and white cartoon effect.\n     * @return {this}\n     */\n    blackwhite() {\n        this.colorReduction = 'bw';\n        return this;\n    }\n    /**\n     * @description\n     * Sets the decrease in the number of colors and corresponding saturation boost of the remaining colors. <br/>\n     * Higher reduction values result in a less realistic look.\n     * @param {number } level The decrease in the number of colors and corresponding saturation boost of the remaining colors. (Range: 0 to 100, Server default: automatically adjusts according to the line_strength value). Set to 'bw' for a black and white cartoon effect.\n     * @return {this}\n     */\n    colorReductionLevel(level) {\n        this.colorReduction = level;\n        return this;\n    }\n    prepareQualifiers() {\n        this.addQualifier(new Qualifier('e', new QualifierValue([this.effectName, this.cartoonifyStrength, this.colorReduction])));\n        return;\n    }\n}\nexport { CartoonifyEffect };\n"]},"metadata":{},"sourceType":"module"}