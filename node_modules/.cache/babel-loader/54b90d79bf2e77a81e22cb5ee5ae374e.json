{"ast":null,"code":"import { Action } from \"../../internal/Action\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\n/**\n * @description Simulates the way an image would appear to someone with the specified color blind condition\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nclass SimulateColorBlindEffectAction extends Action {\n  constructor() {\n    super();\n    this.addQualifier(new Qualifier('e', `simulate_colorblind`));\n  }\n\n  setQualifier(val) {\n    const strToAppend = `:${val}`;\n\n    if (val) {\n      this.addQualifier(new Qualifier('e', `simulate_colorblind${strToAppend}`));\n    }\n\n    return this;\n  }\n  /**\n   * @description Sets the color blind condition to simulate.\n   * @param {Qualifiers.simulateColorBlindValues | string} cond\n   * @return {this}\n   */\n\n\n  condition(cond) {\n    return this.setQualifier(cond);\n  }\n\n}\n\nexport { SimulateColorBlindEffectAction };","map":{"version":3,"sources":["D:/react-myprojects/dss/node_modules/@cloudinary/base/actions/effect/simulateColorBlind.js"],"names":["Action","Qualifier","SimulateColorBlindEffectAction","constructor","addQualifier","setQualifier","val","strToAppend","condition","cond"],"mappings":"AAAA,SAASA,MAAT,QAAuB,uBAAvB;AACA,SAASC,SAAT,QAA0B,oCAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,8BAAN,SAA6CF,MAA7C,CAAoD;AAChDG,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,YAAL,CAAkB,IAAIH,SAAJ,CAAc,GAAd,EAAoB,qBAApB,CAAlB;AACH;;AACDI,EAAAA,YAAY,CAACC,GAAD,EAAM;AACd,UAAMC,WAAW,GAAI,IAAGD,GAAI,EAA5B;;AACA,QAAIA,GAAJ,EAAS;AACL,WAAKF,YAAL,CAAkB,IAAIH,SAAJ,CAAc,GAAd,EAAoB,sBAAqBM,WAAY,EAArD,CAAlB;AACH;;AACD,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIC,EAAAA,SAAS,CAACC,IAAD,EAAO;AACZ,WAAO,KAAKJ,YAAL,CAAkBI,IAAlB,CAAP;AACH;;AAnB+C;;AAqBpD,SAASP,8BAAT","sourcesContent":["import { Action } from \"../../internal/Action\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\n/**\n * @description Simulates the way an image would appear to someone with the specified color blind condition\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass SimulateColorBlindEffectAction extends Action {\n    constructor() {\n        super();\n        this.addQualifier(new Qualifier('e', `simulate_colorblind`));\n    }\n    setQualifier(val) {\n        const strToAppend = `:${val}`;\n        if (val) {\n            this.addQualifier(new Qualifier('e', `simulate_colorblind${strToAppend}`));\n        }\n        return this;\n    }\n    /**\n     * @description Sets the color blind condition to simulate.\n     * @param {Qualifiers.simulateColorBlindValues | string} cond\n     * @return {this}\n     */\n    condition(cond) {\n        return this.setQualifier(cond);\n    }\n}\nexport { SimulateColorBlindEffectAction };\n"]},"metadata":{},"sourceType":"module"}