{"ast":null,"code":"import _classCallCheck from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Action } from \"../../internal/Action\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { prepareColor } from \"../../internal/utils/prepareColor\";\n/**\n * @description Adds an outline to a transparent image. For examples, see the Image Transformations guide.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nvar EffectOutline = /*#__PURE__*/function (_Action) {\n  _inherits(EffectOutline, _Action);\n\n  var _super = _createSuper(EffectOutline);\n\n  function EffectOutline() {\n    _classCallCheck(this, EffectOutline);\n\n    return _super.call(this);\n  }\n  /**\n   * @description\n   * How to apply the outline effect which can be one of the following values:\n   * inner, inner_fill, outer, fill.\n   * @param {string} mode  The type of outline effect. Use the constants defined in Outline.\n   * @return {this}\n   */\n\n\n  _createClass(EffectOutline, [{\n    key: \"mode\",\n    value: function mode(_mode) {\n      this._mode = _mode;\n      return this;\n    }\n    /**\n     * The thickness of the outline in pixels. (Range: 1 to 100, Server default: 5)\n     * @param {number} width\n     * @return {this}\n     */\n\n  }, {\n    key: \"width\",\n    value: function width(_width) {\n      this._width = _width;\n      return this;\n    }\n    /**\n     * @description\n     * The level of blur of the outline.\n     * Range: 0 to 2000, Server default: 0\n     * @param {number | string} lvl\n     * @return {this}\n     */\n\n  }, {\n    key: \"blurLevel\",\n    value: function blurLevel(lvl) {\n      this._blurLevel = lvl;\n      return this;\n    }\n    /**\n     * @param {string | Qualifiers.Color} color One of the SDK Color values, string, or rgba: '#fff'\n     * @return {this}\n     */\n\n  }, {\n    key: \"color\",\n    value: function color(_color) {\n      return this.addQualifier(new Qualifier('co', prepareColor(_color)));\n    }\n  }, {\n    key: \"prepareQualifiers\",\n    value: function prepareQualifiers() {\n      this.addQualifier(new Qualifier('e', new QualifierValue(['outline', this._mode, this._width, this._blurLevel]).setDelimiter(':')));\n    }\n  }]);\n\n  return EffectOutline;\n}(Action);\n\nexport { EffectOutline };","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/actions/effect/outline.js"],"names":["Action","QualifierValue","Qualifier","prepareColor","EffectOutline","mode","_mode","width","_width","lvl","_blurLevel","color","addQualifier","setDelimiter"],"mappings":";;;;AAAA,SAASA,MAAT,QAAuB,uBAAvB;AACA,SAASC,cAAT,QAA+B,yCAA/B;AACA,SAASC,SAAT,QAA0B,oCAA1B;AACA,SAASC,YAAT,QAA6B,mCAA7B;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,a;;;;;AACF,2BAAc;AAAA;;AAAA;AAEb;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;;WACI,cAAKC,KAAL,EAAW;AACP,WAAKC,KAAL,GAAaD,KAAb;AACA,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,eAAME,MAAN,EAAa;AACT,WAAKC,MAAL,GAAcD,MAAd;AACA,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,mBAAUE,GAAV,EAAe;AACX,WAAKC,UAAL,GAAkBD,GAAlB;AACA,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,eAAME,MAAN,EAAa;AACT,aAAO,KAAKC,YAAL,CAAkB,IAAIV,SAAJ,CAAc,IAAd,EAAoBC,YAAY,CAACQ,MAAD,CAAhC,CAAlB,CAAP;AACH;;;WACD,6BAAoB;AAChB,WAAKC,YAAL,CAAkB,IAAIV,SAAJ,CAAc,GAAd,EAAmB,IAAID,cAAJ,CAAmB,CAAC,SAAD,EAAY,KAAKK,KAAjB,EAAwB,KAAKE,MAA7B,EAAqC,KAAKE,UAA1C,CAAnB,EAA0EG,YAA1E,CAAuF,GAAvF,CAAnB,CAAlB;AACH;;;;EA5CuBb,M;;AA8C5B,SAASI,aAAT","sourcesContent":["import { Action } from \"../../internal/Action\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { prepareColor } from \"../../internal/utils/prepareColor\";\n/**\n * @description Adds an outline to a transparent image. For examples, see the Image Transformations guide.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass EffectOutline extends Action {\n    constructor() {\n        super();\n    }\n    /**\n     * @description\n     * How to apply the outline effect which can be one of the following values:\n     * inner, inner_fill, outer, fill.\n     * @param {string} mode  The type of outline effect. Use the constants defined in Outline.\n     * @return {this}\n     */\n    mode(mode) {\n        this._mode = mode;\n        return this;\n    }\n    /**\n     * The thickness of the outline in pixels. (Range: 1 to 100, Server default: 5)\n     * @param {number} width\n     * @return {this}\n     */\n    width(width) {\n        this._width = width;\n        return this;\n    }\n    /**\n     * @description\n     * The level of blur of the outline.\n     * Range: 0 to 2000, Server default: 0\n     * @param {number | string} lvl\n     * @return {this}\n     */\n    blurLevel(lvl) {\n        this._blurLevel = lvl;\n        return this;\n    }\n    /**\n     * @param {string | Qualifiers.Color} color One of the SDK Color values, string, or rgba: '#fff'\n     * @return {this}\n     */\n    color(color) {\n        return this.addQualifier(new Qualifier('co', prepareColor(color)));\n    }\n    prepareQualifiers() {\n        this.addQualifier(new Qualifier('e', new QualifierValue(['outline', this._mode, this._width, this._blurLevel]).setDelimiter(':')));\n    }\n}\nexport { EffectOutline };\n"]},"metadata":{},"sourceType":"module"}