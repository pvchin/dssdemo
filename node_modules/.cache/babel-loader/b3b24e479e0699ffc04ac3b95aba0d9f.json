{"ast":null,"code":"import pdfMake from \"pdfmake/build/pdfmake\";\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\n\nconst PrintPDFTest = () => {\n  const {\n    vfs\n  } = vfsFonts.pdfMake;\n  pdfMake.vfs = vfs;\n  const documentDefinition = {\n    pageSize: \"A4\",\n    pageOrientation: \"landscape\",\n    content: [{\n      text: \"Payroll Summary\\n\\n\",\n      style: \"header\"\n    }, {\n      text: [\"It is however possible to provide an array of texts \", \"to the paragraph (instead of a single string) and have\", {\n        text: \"a better\",\n        fontSize: 15,\n        bold: true\n      }, \"control over it. \\nEach inline can be\", {\n        text: \"styled\",\n        fontSize: 20\n      }, {\n        text: \"independently\",\n        italic: true,\n        fontSize: 40\n      }, \"then. \\n\\n\"]\n    }, {\n      style: \"bigger\",\n      italic: false,\n      text: [\"We can also mix named-styles and style-overrides at both paragraph and inline level.\", 'For example, this paragraph uses the \"bigger\" style, which changes fontSize to 15 and sets italics to true.', \"Texts are not italics though. it's because we've overriden italics back to false at\", \"the paragraph level. \\n\\n\", \"We can also change the style of a single inline. Let's use a named style called header:\", {\n        text: \"like here \\n\",\n        style: \"header\"\n      }, \"it got bigger and bold. \\n\\n\", {\n        text: \"Tables\",\n        style: \"header\"\n      }, {\n        text: \"noBorders:\",\n        fontSize: 14,\n        bold: true,\n        pageBreak: \"before\",\n        margin: [0, 0, 0, 8]\n      }, {\n        style: \"tableExample\",\n        table: {\n          headerRows: 1,\n          body: [[{\n            text: \"Header 1\",\n            style: \"tableHeader\"\n          }, {\n            text: \"Header 2\",\n            style: \"tableHeader\"\n          }, {\n            text: \"Header 3\",\n            style: \"tableHeader\"\n          }], [\"Sample value 1\", \"Sample value 2\", \"Sample value 3\"], [\"Sample value 1\", \"Sample value 2\", \"Sample value 3\"], [\"Sample value 1\", \"Sample value 2\", \"Sample value 3\"], [\"Sample value 1\", \"Sample value 2\", \"Sample value 3\"], [\"Sample value 1\", \"Sample value 2\", \"Sample value 3\"]]\n        },\n        layout: \"noBorders\"\n      }]\n    }],\n    styles: {\n      header: {\n        fontSize: 18,\n        bold: true\n      },\n      bigger: {\n        fontSize: 15,\n        italics: true\n      }\n    }\n  };\n  pdfMake.createPdf(documentDefinition).open();\n};\n\n_c = PrintPDFTest;\nexport default PrintPDFTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrintPDFTest\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/PrintPDFTest.js"],"names":["pdfMake","vfsFonts","PrintPDFTest","vfs","documentDefinition","pageSize","pageOrientation","content","text","style","fontSize","bold","italic","pageBreak","margin","table","headerRows","body","layout","styles","header","bigger","italics","createPdf","open"],"mappings":"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","sourcesContent":["import pdfMake from \"pdfmake/build/pdfmake\";\r\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\r\n\r\nconst PrintPDFTest = () => {\r\n  const { vfs } = vfsFonts.pdfMake;\r\n  pdfMake.vfs = vfs;\r\n\r\n  const documentDefinition = {\r\n    pageSize: \"A4\",\r\n    pageOrientation: \"landscape\",\r\n    content: [\r\n      {\r\n        text: \"Payroll Summary\\n\\n\",\r\n        style: \"header\",\r\n      },\r\n      {\r\n        text: [\r\n          \"It is however possible to provide an array of texts \",\r\n          \"to the paragraph (instead of a single string) and have\",\r\n          { text: \"a better\", fontSize: 15, bold: true },\r\n          \"control over it. \\nEach inline can be\",\r\n          { text: \"styled\", fontSize: 20 },\r\n          { text: \"independently\", italic: true, fontSize: 40 },\r\n          \"then. \\n\\n\",\r\n        ],\r\n      },\r\n      {\r\n        style: \"bigger\",\r\n        italic: false,\r\n        text: [\r\n          \"We can also mix named-styles and style-overrides at both paragraph and inline level.\",\r\n          'For example, this paragraph uses the \"bigger\" style, which changes fontSize to 15 and sets italics to true.',\r\n          \"Texts are not italics though. it's because we've overriden italics back to false at\",\r\n          \"the paragraph level. \\n\\n\",\r\n          \"We can also change the style of a single inline. Let's use a named style called header:\",\r\n          { text: \"like here \\n\", style: \"header\" },\r\n          \"it got bigger and bold. \\n\\n\",\r\n          { text: \"Tables\", style: \"header\" },\r\n          {\r\n            text: \"noBorders:\",\r\n            fontSize: 14,\r\n            bold: true,\r\n            pageBreak: \"before\",\r\n            margin: [0, 0, 0, 8],\r\n          },\r\n          {\r\n            style: \"tableExample\",\r\n            table: {\r\n              headerRows: 1,\r\n              body: [\r\n                [\r\n                  { text: \"Header 1\", style: \"tableHeader\" },\r\n                  { text: \"Header 2\", style: \"tableHeader\" },\r\n                  { text: \"Header 3\", style: \"tableHeader\" },\r\n                ],\r\n                [\"Sample value 1\", \"Sample value 2\", \"Sample value 3\"],\r\n                [\"Sample value 1\", \"Sample value 2\", \"Sample value 3\"],\r\n                [\"Sample value 1\", \"Sample value 2\", \"Sample value 3\"],\r\n                [\"Sample value 1\", \"Sample value 2\", \"Sample value 3\"],\r\n                [\"Sample value 1\", \"Sample value 2\", \"Sample value 3\"],\r\n              ],\r\n            },\r\n            layout: \"noBorders\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    styles: {\r\n      header: {\r\n        fontSize: 18,\r\n        bold: true,\r\n      },\r\n      bigger: {\r\n        fontSize: 15,\r\n        italics: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  pdfMake.createPdf(documentDefinition).open();\r\n};\r\n\r\nexport default PrintPDFTest;\r\n"]},"metadata":{},"sourceType":"module"}