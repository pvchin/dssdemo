{"ast":null,"code":"import _classCallCheck from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { CompassQualifier } from \"./gravity/qualifiers/compass/CompassQualifier\";\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description South center part (bottom center).\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\n\nfunction south() {\n  return new CompassQualifier('south');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description North center part (top center).\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\n\n\nfunction north() {\n  return new CompassQualifier('north');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description Middle east part (right).\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\n\n\nfunction east() {\n  return new CompassQualifier('east');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description Middle west part (left).\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\n\n\nfunction west() {\n  return new CompassQualifier('west');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description North west corner (top left).\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\n\n\nfunction northWest() {\n  return new CompassQualifier('north_west');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description North east corner (top right).\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\n\n\nfunction northEast() {\n  return new CompassQualifier('north_east');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description South west corner (bottom left).\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\n\n\nfunction southWest() {\n  return new CompassQualifier('south_west');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description South east corner (bottom right).\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\n\n\nfunction southEast() {\n  return new CompassQualifier('south_east');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description The center of the image.\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\n\n\nfunction center() {\n  return new CompassQualifier('center');\n}\n/**\n * @description Defines the focal Compass for certain methods of cropping.\n * @namespace Compass\n * @memberOf Qualifiers\n * @see Visit {@link Qualifiers.Gravity|Gravity} for an example\n */\n\n\nvar Compass = function Compass() {\n  _classCallCheck(this, Compass);\n};\n\nCompass.north = north;\nCompass.west = west;\nCompass.east = east;\nCompass.south = south;\nCompass.center = center;\nCompass.northWest = northWest;\nCompass.southEast = southEast;\nCompass.southWest = southWest;\nCompass.northEast = northEast;\nexport { Compass, north, west, east, south, center, northWest, southEast, southWest, northEast };","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/qualifiers/compass.js"],"names":["CompassQualifier","south","north","east","west","northWest","northEast","southWest","southEast","center","Compass"],"mappings":";AAAA,SAASA,gBAAT,QAAiC,+CAAjC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,KAAT,GAAiB;AACb,SAAO,IAAID,gBAAJ,CAAqB,OAArB,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,KAAT,GAAiB;AACb,SAAO,IAAIF,gBAAJ,CAAqB,OAArB,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,IAAT,GAAgB;AACZ,SAAO,IAAIH,gBAAJ,CAAqB,MAArB,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,IAAT,GAAgB;AACZ,SAAO,IAAIJ,gBAAJ,CAAqB,MAArB,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASK,SAAT,GAAqB;AACjB,SAAO,IAAIL,gBAAJ,CAAqB,YAArB,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASM,SAAT,GAAqB;AACjB,SAAO,IAAIN,gBAAJ,CAAqB,YAArB,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASO,SAAT,GAAqB;AACjB,SAAO,IAAIP,gBAAJ,CAAqB,YAArB,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASQ,SAAT,GAAqB;AACjB,SAAO,IAAIR,gBAAJ,CAAqB,YAArB,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASS,MAAT,GAAkB;AACd,SAAO,IAAIT,gBAAJ,CAAqB,QAArB,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;IACMU,O;;;;AAENA,OAAO,CAACR,KAAR,GAAgBA,KAAhB;AACAQ,OAAO,CAACN,IAAR,GAAeA,IAAf;AACAM,OAAO,CAACP,IAAR,GAAeA,IAAf;AACAO,OAAO,CAACT,KAAR,GAAgBA,KAAhB;AACAS,OAAO,CAACD,MAAR,GAAiBA,MAAjB;AACAC,OAAO,CAACL,SAAR,GAAoBA,SAApB;AACAK,OAAO,CAACF,SAAR,GAAoBA,SAApB;AACAE,OAAO,CAACH,SAAR,GAAoBA,SAApB;AACAG,OAAO,CAACJ,SAAR,GAAoBA,SAApB;AACA,SAASI,OAAT,EAAkBR,KAAlB,EAAyBE,IAAzB,EAA+BD,IAA/B,EAAqCF,KAArC,EAA4CQ,MAA5C,EAAoDJ,SAApD,EAA+DG,SAA/D,EAA0ED,SAA1E,EAAqFD,SAArF","sourcesContent":["import { CompassQualifier } from \"./gravity/qualifiers/compass/CompassQualifier\";\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description South center part (bottom center).\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\nfunction south() {\n    return new CompassQualifier('south');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description North center part (top center).\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\nfunction north() {\n    return new CompassQualifier('north');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description Middle east part (right).\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\nfunction east() {\n    return new CompassQualifier('east');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description Middle west part (left).\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\nfunction west() {\n    return new CompassQualifier('west');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description North west corner (top left).\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\nfunction northWest() {\n    return new CompassQualifier('north_west');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description North east corner (top right).\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\nfunction northEast() {\n    return new CompassQualifier('north_east');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description South west corner (bottom left).\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\nfunction southWest() {\n    return new CompassQualifier('south_west');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description South east corner (bottom right).\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\nfunction southEast() {\n    return new CompassQualifier('south_east');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description The center of the image.\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\nfunction center() {\n    return new CompassQualifier('center');\n}\n/**\n * @description Defines the focal Compass for certain methods of cropping.\n * @namespace Compass\n * @memberOf Qualifiers\n * @see Visit {@link Qualifiers.Gravity|Gravity} for an example\n */\nclass Compass {\n}\nCompass.north = north;\nCompass.west = west;\nCompass.east = east;\nCompass.south = south;\nCompass.center = center;\nCompass.northWest = northWest;\nCompass.southEast = southEast;\nCompass.southWest = southWest;\nCompass.northEast = northEast;\nexport { Compass, north, west, east, south, center, northWest, southEast, southWest, northEast };\n"]},"metadata":{},"sourceType":"module"}