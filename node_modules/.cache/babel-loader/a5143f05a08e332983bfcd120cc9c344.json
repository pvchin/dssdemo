{"ast":null,"code":"import { LeveledEffectAction } from \"../EffectActions/LeveledEffectAction\";\nimport { Qualifier } from \"../../../internal/qualifier/Qualifier\";\nimport { QualifierValue } from \"../../../internal/qualifier/QualifierValue\";\nimport { prepareColor } from \"../../../internal/utils/prepareColor\";\n/**\n * @description Makes the background of the image transparent (or solid white for formats that do not support transparency).\n * @extends LeveledEffectAction\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nclass MakeTransparentEffectAction extends LeveledEffectAction {\n  /**\n   * @description Sets the tolerance used to accommodate variance in the background color.\n   * @param {number | string} value The tolerance used to accommodate variance in the background color. (Range: 0 to 100, Server default: 10)\n   */\n  tolerance(value) {\n    return this.setLevel(value);\n  }\n  /**\n   * @description Sets the color to make transparent.\n   * @param {string} color The HTML name of the color (red, green, etc.) or RGB hex code.\n   * @return {this}\n   */\n\n\n  colorToReplace(color) {\n    return this.addQualifier(new Qualifier('co', new QualifierValue(prepareColor(color))));\n  }\n\n}\n\nexport { MakeTransparentEffectAction };","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/actions/effect/leveled/makeTransparent.js"],"names":["LeveledEffectAction","Qualifier","QualifierValue","prepareColor","MakeTransparentEffectAction","tolerance","value","setLevel","colorToReplace","color","addQualifier"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,sCAApC;AACA,SAASC,SAAT,QAA0B,uCAA1B;AACA,SAASC,cAAT,QAA+B,4CAA/B;AACA,SAASC,YAAT,QAA6B,sCAA7B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,2BAAN,SAA0CJ,mBAA1C,CAA8D;AAC1D;AACJ;AACA;AACA;AACIK,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACb,WAAO,KAAKC,QAAL,CAAcD,KAAd,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIE,EAAAA,cAAc,CAACC,KAAD,EAAQ;AAClB,WAAO,KAAKC,YAAL,CAAkB,IAAIT,SAAJ,CAAc,IAAd,EAAoB,IAAIC,cAAJ,CAAmBC,YAAY,CAACM,KAAD,CAA/B,CAApB,CAAlB,CAAP;AACH;;AAfyD;;AAiB9D,SAASL,2BAAT","sourcesContent":["import { LeveledEffectAction } from \"../EffectActions/LeveledEffectAction\";\nimport { Qualifier } from \"../../../internal/qualifier/Qualifier\";\nimport { QualifierValue } from \"../../../internal/qualifier/QualifierValue\";\nimport { prepareColor } from \"../../../internal/utils/prepareColor\";\n/**\n * @description Makes the background of the image transparent (or solid white for formats that do not support transparency).\n * @extends LeveledEffectAction\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass MakeTransparentEffectAction extends LeveledEffectAction {\n    /**\n     * @description Sets the tolerance used to accommodate variance in the background color.\n     * @param {number | string} value The tolerance used to accommodate variance in the background color. (Range: 0 to 100, Server default: 10)\n     */\n    tolerance(value) {\n        return this.setLevel(value);\n    }\n    /**\n     * @description Sets the color to make transparent.\n     * @param {string} color The HTML name of the color (red, green, etc.) or RGB hex code.\n     * @return {this}\n     */\n    colorToReplace(color) {\n        return this.addQualifier(new Qualifier('co', new QualifierValue(prepareColor(color))));\n    }\n}\nexport { MakeTransparentEffectAction };\n"]},"metadata":{},"sourceType":"module"}