{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { expenses_url } from \"../../utils/constants\";\nimport { filterByStatus } from \"./utils\";\nimport axios from \"axios\";\nimport { queryKeys } from \"../react-query/constants\";\n\nasync function getExpensesPeriod(expperiodMthId, expperiod) {\n  const {\n    data\n  } = await axios.get(`${expenses_url}?m=${month}&y=${year}`); //const { data } = await axios.get(`${expenses_url}`);\n\n  return data;\n}\n\nexport function useExpensesPeriod(payrun) {\n  _s();\n\n  const [expperiodfilter, setExpPeriodFilter] = useState(\"all\");\n  const [expperiodYrId, setExpPeriodYrId] = useState(\"\");\n  const [expperiodMthId, setExpPeriodMthId] = useState(\"\");\n  const selectFn = useCallback(unfiltered => filterByStatus(unfiltered, expperiodfilter), [expperiodfilter]);\n  const fallback = [];\n  const {\n    data: expensesperiod = fallback\n  } = useQuery([queryKeys.expensesperiod, expperiodMthId, expperiodYrId], //queryKeys.expenses_payrun,\n  () => getExpensesPeriod(expperiodMthId, expperiodYrId), {\n    select: expperiodfilter !== \"all\" ? selectFn : undefined\n  });\n  return {\n    expensesperiod,\n    expperiodfilter,\n    setExpPeriodFilter,\n    setExpPeriodYrId,\n    setExpPeriodMthId\n  };\n}\n\n_s(useExpensesPeriod, \"bzSV/TKJClpBp6y4ZwIqx6AUMSs=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/expenses/useExpensesPeriod.js"],"names":["useState","useCallback","useQuery","expenses_url","filterByStatus","axios","queryKeys","getExpensesPeriod","expperiodMthId","expperiod","data","get","month","year","useExpensesPeriod","payrun","expperiodfilter","setExpPeriodFilter","expperiodYrId","setExpPeriodYrId","setExpPeriodMthId","selectFn","unfiltered","fallback","expensesperiod","select","undefined"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,cAAT,QAA+B,SAA/B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,0BAA1B;;AAEA,eAAeC,iBAAf,CAAiCC,cAAjC,EAAiDC,SAAjD,EAA4D;AAC1D,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAML,KAAK,CAACM,GAAN,CAAW,GAAER,YAAa,MAAKS,KAAM,MAAKC,IAAK,EAA/C,CAAvB,CAD0D,CAE1D;;AACA,SAAOH,IAAP;AACD;;AAED,OAAO,SAASI,iBAAT,CAA2BC,MAA3B,EAAmC;AAAA;;AACxC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCjB,QAAQ,CAAC,KAAD,CAAtD;AACE,QAAM,CAACkB,aAAD,EAAgBC,gBAAhB,IAAoCnB,QAAQ,CAAC,EAAD,CAAlD;AACC,QAAM,CAACQ,cAAD,EAAiBY,iBAAjB,IAAsCpB,QAAQ,CAAC,EAAD,CAApD;AAEH,QAAMqB,QAAQ,GAAGpB,WAAW,CACzBqB,UAAD,IAAgBlB,cAAc,CAACkB,UAAD,EAAaN,eAAb,CADJ,EAE1B,CAACA,eAAD,CAF0B,CAA5B;AAKA,QAAMO,QAAQ,GAAG,EAAjB;AACA,QAAM;AAAEb,IAAAA,IAAI,EAAEc,cAAc,GAAGD;AAAzB,MAAsCrB,QAAQ,CAClD,CAACI,SAAS,CAACkB,cAAX,EAA2BhB,cAA3B,EAA2CU,aAA3C,CADkD,EAElD;AACE,QAAMX,iBAAiB,CAACC,cAAD,EAAgBU,aAAhB,CAHyB,EAIlD;AACEO,IAAAA,MAAM,EAAET,eAAe,KAAK,KAApB,GAA4BK,QAA5B,GAAuCK;AADjD,GAJkD,CAApD;AASA,SAAO;AACLF,IAAAA,cADK;AAELR,IAAAA,eAFK;AAGLC,IAAAA,kBAHK;AAILE,IAAAA,gBAJK;AAKLC,IAAAA;AALK,GAAP;AAOD;;GA3BeN,iB;UAW8BZ,Q","sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { expenses_url } from \"../../utils/constants\";\r\nimport { filterByStatus } from \"./utils\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getExpensesPeriod(expperiodMthId, expperiod) {\r\n  const { data } = await axios.get(`${expenses_url}?m=${month}&y=${year}`);\r\n  //const { data } = await axios.get(`${expenses_url}`);\r\n  return data;\r\n}\r\n\r\nexport function useExpensesPeriod(payrun) {\r\n  const [expperiodfilter, setExpPeriodFilter] = useState(\"all\");\r\n    const [expperiodYrId, setExpPeriodYrId] = useState(\"\");\r\n     const [expperiodMthId, setExpPeriodMthId] = useState(\"\");\r\n\r\n  const selectFn = useCallback(\r\n    (unfiltered) => filterByStatus(unfiltered, expperiodfilter),\r\n    [expperiodfilter]\r\n  );\r\n\r\n  const fallback = [];\r\n  const { data: expensesperiod = fallback } = useQuery(\r\n    [queryKeys.expensesperiod, expperiodMthId, expperiodYrId],\r\n    //queryKeys.expenses_payrun,\r\n      () => getExpensesPeriod(expperiodMthId,expperiodYrId),\r\n    {\r\n      select: expperiodfilter !== \"all\" ? selectFn : undefined,\r\n    }\r\n  );\r\n\r\n  return {\r\n    expensesperiod,\r\n    expperiodfilter,\r\n    setExpPeriodFilter,\r\n    setExpPeriodYrId,\r\n    setExpPeriodMthId,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}