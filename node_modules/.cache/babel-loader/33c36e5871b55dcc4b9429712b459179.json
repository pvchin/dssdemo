{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\PayslipTableViewSummary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\nimport { payPeriodState, payPeriodEndMonthState, payPeriodEmpIdState } from \"./data/atomdata\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { usePayrunStatus } from \"./payrun/usePayrunStatus\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FILTERSTRING = \"Pending\";\nconst columns = [// { title: \"Period\", field: \"period\" },\n{\n  title: \"Payrun Batch\",\n  field: \"payrun\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  }\n}, // {\n//   title: \"Pay Date\",\n//   field: \"pay_date\",\n//   type: \"date\",\n//   dateSetting: { locale: \"en-GB\" },\n// },\n{\n  title: \"Total Wages\",\n  field: \"totalwages\",\n  type: \"currency\"\n}, {\n  title: \"TAP Amount\",\n  field: \"totaltap\",\n  type: \"currency\"\n}, {\n  title: \"SCP Amount\",\n  field: \"totalscp\",\n  type: \"currency\"\n}, {\n  title: \"Site Allowances\",\n  field: \"totalsitesallows\",\n  type: \"currency\"\n}, {\n  title: \"Expenses Claims\",\n  field: \"totalexpensesclaims\",\n  type: \"currency\"\n}, {\n  title: \"Total Allowances\",\n  field: \"totalallows\",\n  type: \"currency\"\n}, {\n  title: \"Total Deductions\",\n  field: \"totaldeducts\",\n  type: \"currency\"\n}, {\n  title: \"Total Payroll\",\n  field: \"totalpayroll\",\n  type: \"currency\"\n}, {\n  title: \"Status\",\n  field: \"status\"\n}];\nexport default function PayslipTableVIew({\n  status\n}) {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\n  const {\n    payrun,\n    getPayrun,\n    payrun_loading,\n    loadPendingPayslips\n  } = usePayslipsContext(); //const { loadEmployees, employees } = useEmployeesContext();\n\n  const {\n    payrunstatus,\n    setPayrunStatusId\n  } = usePayrunStatus();\n  useEffect(() => {\n    setPayrunStatusId(status);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: payrunstatus,\n        title: \"Payslips\",\n        options: {\n          filtering: false,\n          search: false,\n          toolbar: false,\n          headerStyle: {\n            backgroundColor: \"rgba(75, 192, 192, 1)\",\n            color: \"#FFF\"\n          },\n          showTitle: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PayslipTableVIew, \"oR3Va/Uk0F4rGROv1bmphqB2byk=\", false, function () {\n  return [useHistory, useStyles, useSetRecoilState, usePayslipsContext, usePayrunStatus];\n});\n\n_c = PayslipTableVIew;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"PayslipTableVIew\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/PayslipTableViewSummary.js"],"names":["React","useEffect","MaterialTable","MTableToolbar","makeStyles","useHistory","Link","useSetRecoilState","useRecoilValue","payPeriodState","payPeriodEndMonthState","payPeriodEmpIdState","usePayslipsContext","useEmployeesContext","usePayrunStatus","FILTERSTRING","columns","title","field","type","dateSetting","locale","PayslipTableVIew","status","history","classes","useStyles","setPayPeriodEmpId","payrun","getPayrun","payrun_loading","loadPendingPayslips","payrunstatus","setPayrunStatusId","root","maxWidth","paddingTop","filtering","search","toolbar","headerStyle","backgroundColor","color","showTitle","theme","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,IAAwBC,aAAxB,QAA6C,gBAA7C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,SAASC,iBAAT,EAA4BC,cAA5B,QAAkD,QAAlD;AACA,SACEC,cADF,EAEEC,sBAFF,EAGEC,mBAHF,QAIO,iBAJP;AAKA,SAASC,kBAAT,QAAmC,6BAAnC;AACA,SAASC,mBAAT,QAAoC,8BAApC;AACA,SAASC,eAAT,QAA+B,0BAA/B;;AAEA,MAAMC,YAAY,GAAG,SAArB;AAEA,MAAMC,OAAO,GAAG,CACd;AACA;AACEC,EAAAA,KAAK,EAAE,cADT;AAEEC,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,IAAI,EAAE,MAHR;AAIEC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV;AAJf,CAFc,EAQd;AACA;AACA;AACA;AACA;AACA;AACA;AAAEJ,EAAAA,KAAK,EAAE,aAAT;AAAwBC,EAAAA,KAAK,EAAE,YAA/B;AAA6CC,EAAAA,IAAI,EAAE;AAAnD,CAdc,EAed;AAAEF,EAAAA,KAAK,EAAE,YAAT;AAAuBC,EAAAA,KAAK,EAAE,UAA9B;AAA0CC,EAAAA,IAAI,EAAE;AAAhD,CAfc,EAgBd;AAAEF,EAAAA,KAAK,EAAE,YAAT;AAAuBC,EAAAA,KAAK,EAAE,UAA9B;AAA0CC,EAAAA,IAAI,EAAE;AAAhD,CAhBc,EAiBd;AAAEF,EAAAA,KAAK,EAAE,iBAAT;AAA4BC,EAAAA,KAAK,EAAE,kBAAnC;AAAuDC,EAAAA,IAAI,EAAE;AAA7D,CAjBc,EAkBd;AAAEF,EAAAA,KAAK,EAAE,iBAAT;AAA4BC,EAAAA,KAAK,EAAE,qBAAnC;AAA0DC,EAAAA,IAAI,EAAE;AAAhE,CAlBc,EAmBd;AAAEF,EAAAA,KAAK,EAAE,kBAAT;AAA6BC,EAAAA,KAAK,EAAE,aAApC;AAAmDC,EAAAA,IAAI,EAAE;AAAzD,CAnBc,EAoBd;AAAEF,EAAAA,KAAK,EAAE,kBAAT;AAA6BC,EAAAA,KAAK,EAAE,cAApC;AAAoDC,EAAAA,IAAI,EAAE;AAA1D,CApBc,EAqBd;AAAEF,EAAAA,KAAK,EAAE,eAAT;AAA0BC,EAAAA,KAAK,EAAE,cAAjC;AAAiDC,EAAAA,IAAI,EAAE;AAAvD,CArBc,EAsBd;AAAEF,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAtBc,CAAhB;AA0BA,eAAe,SAASI,gBAAT,CAA0B;AAACC,EAAAA;AAAD,CAA1B,EAAoC;AAAA;;AACjD,MAAIC,OAAO,GAAGnB,UAAU,EAAxB;AACA,QAAMoB,OAAO,GAAGC,SAAS,EAAzB;AACA,QAAMC,iBAAiB,GAAGpB,iBAAiB,CAACI,mBAAD,CAA3C;AACA,QAAM;AAAEiB,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAoBC,IAAAA,cAApB;AAAoCC,IAAAA;AAApC,MACJnB,kBAAkB,EADpB,CAJiD,CAMjD;;AACA,QAAM;AAAEoB,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAqCnB,eAAe,EAA1D;AAGAb,EAAAA,SAAS,CAAC,MAAM;AACdgC,IAAAA,iBAAiB,CAACV,MAAD,CAAjB;AACD,GAFQ,EAEN,EAFM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAEE,OAAO,CAACS,IAAxB;AAAA,2BACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,UAAU,EAAE;AAAhC,OAAZ;AAAA,6BACE,QAAC,aAAD;AACE,QAAA,OAAO,EAAEpB,OADX;AAEE,QAAA,IAAI,EAAEgB,YAFR;AAGE,QAAA,KAAK,EAAC,UAHR;AAIE,QAAA,OAAO,EAAE;AACPK,UAAAA,SAAS,EAAE,KADJ;AAEPC,UAAAA,MAAM,EAAE,KAFD;AAGPC,UAAAA,OAAO,EAAE,KAHF;AAIPC,UAAAA,WAAW,EAAE;AACXC,YAAAA,eAAe,EAAE,uBADN;AAEXC,YAAAA,KAAK,EAAE;AAFI,WAJN;AAQPC,UAAAA,SAAS,EAAE;AARJ;AAJX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GApCuBrB,gB;UACRjB,U,EACEqB,S,EACUnB,iB,EAExBK,kB,EAEyCE,e;;;KAPrBQ,gB;AAsCxB,MAAMI,SAAS,GAAGtB,UAAU,CAAEwC,KAAD,KAAY;AACvCV,EAAAA,IAAI,EAAE;AACJW,IAAAA,OAAO,EAAE;AADL;AADiC,CAAZ,CAAD,CAA5B","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { usePayrunStatus} from \"./payrun/usePayrunStatus\"\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  // { title: \"Period\", field: \"period\" },\r\n  {\r\n    title: \"Payrun Batch\",\r\n    field: \"payrun\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  // {\r\n  //   title: \"Pay Date\",\r\n  //   field: \"pay_date\",\r\n  //   type: \"date\",\r\n  //   dateSetting: { locale: \"en-GB\" },\r\n  // },\r\n  { title: \"Total Wages\", field: \"totalwages\", type: \"currency\" },\r\n  { title: \"TAP Amount\", field: \"totaltap\", type: \"currency\" },\r\n  { title: \"SCP Amount\", field: \"totalscp\", type: \"currency\" },\r\n  { title: \"Site Allowances\", field: \"totalsitesallows\", type: \"currency\" },\r\n  { title: \"Expenses Claims\", field: \"totalexpensesclaims\", type: \"currency\" },\r\n  { title: \"Total Allowances\", field: \"totalallows\", type: \"currency\" },\r\n  { title: \"Total Deductions\", field: \"totaldeducts\", type: \"currency\" },\r\n  { title: \"Total Payroll\", field: \"totalpayroll\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\n\r\nexport default function PayslipTableVIew({status}) {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\r\n  const { payrun, getPayrun,payrun_loading, loadPendingPayslips } =\r\n    usePayslipsContext();\r\n  //const { loadEmployees, employees } = useEmployeesContext();\r\n  const { payrunstatus, setPayrunStatusId} = usePayrunStatus()\r\n  \r\n  \r\n  useEffect(() => {\r\n    setPayrunStatusId(status);\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payrunstatus}\r\n          title=\"Payslips\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}