{"ast":null,"code":"/**\n * @description Contains functions to select the rotation mode.\n * </br><b>Learn more</b>: {@link https://cloudinary.com/documentation/image_transformations#rotating_images | Rotating images}\n * </br><b>Learn more</b>: {@link https://cloudinary.com/documentation/video_manipulation_and_delivery#rotating_videos | Rotating videos}\n * @memberOf Qualifiers\n * @namespace RotationMode\n * @see Visit {@link Actions.Rotate|Rotate Action} for an example\n */\nimport { RotationModeQualifierValue } from \"./rotate/RotationModeQualifierValue\";\n/**\n * @summary qualifier\n * @description Rotate image 90 degrees clockwise only if the requested aspect ratio does not match the image's aspect ratio.\n * @memberOf Qualifiers.RotationMode\n * @return {Qualifiers.RotationMode.RotationModeQualifierValue}\n */\n\nfunction autoRight() {\n  return new RotationModeQualifierValue('auto_right');\n}\n/**\n * @summary qualifier\n * @description Rotate image 90 degrees counterclockwise only if the requested aspect ratio does not match the image's aspect ratio.\n * @memberOf Qualifiers.RotationMode\n * @return {Qualifiers.RotationMode.RotationModeQualifierValue}\n */\n\n\nfunction autoLeft() {\n  return new RotationModeQualifierValue('auto_left');\n}\n/**\n * @summary qualifier\n * @description Vertical mirror flip of the image.\n * @memberOf Qualifiers.RotationMode\n * @return {Qualifiers.RotationMode.RotationModeQualifierValue}\n */\n\n\nfunction verticalFlip() {\n  return new RotationModeQualifierValue('vflip');\n}\n/**\n * @summary qualifier\n * @description Horizontal mirror flip of the image.\n * @memberOf Qualifiers.RotationMode\n * @return {Qualifiers.RotationMode.RotationModeQualifierValue}\n */\n\n\nfunction horizontalFlip() {\n  return new RotationModeQualifierValue('hflip');\n}\n/**\n * @summary qualifier\n * @description By default, the image is automatically rotated according to the EXIF data stored by the camera when the image\n *                           was taken. Set the angle to 'ignore' if you do not want the image to be automatically rotated.\n * @memberOf Qualifiers.RotationMode\n * @return {Qualifiers.RotationMode.RotationModeQualifierValue}\n */\n\n\nfunction ignore() {\n  return new RotationModeQualifierValue('ignore');\n}\n\nvar RotationMode = {\n  autoLeft: autoLeft,\n  autoRight: autoRight,\n  horizontalFlip: horizontalFlip,\n  ignore: ignore,\n  verticalFlip: verticalFlip\n};\nexport { RotationMode, autoLeft, autoRight, horizontalFlip, ignore, verticalFlip };","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/qualifiers/rotationMode.js"],"names":["RotationModeQualifierValue","autoRight","autoLeft","verticalFlip","horizontalFlip","ignore","RotationMode"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,0BAAT,QAA2C,qCAA3C;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,SAAT,GAAqB;AACjB,SAAO,IAAID,0BAAJ,CAA+B,YAA/B,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,QAAT,GAAoB;AAChB,SAAO,IAAIF,0BAAJ,CAA+B,WAA/B,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,YAAT,GAAwB;AACpB,SAAO,IAAIH,0BAAJ,CAA+B,OAA/B,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,cAAT,GAA0B;AACtB,SAAO,IAAIJ,0BAAJ,CAA+B,OAA/B,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASK,MAAT,GAAkB;AACd,SAAO,IAAIL,0BAAJ,CAA+B,QAA/B,CAAP;AACH;;AACD,IAAMM,YAAY,GAAG;AAAEJ,EAAAA,QAAQ,EAARA,QAAF;AAAYD,EAAAA,SAAS,EAATA,SAAZ;AAAuBG,EAAAA,cAAc,EAAdA,cAAvB;AAAuCC,EAAAA,MAAM,EAANA,MAAvC;AAA+CF,EAAAA,YAAY,EAAZA;AAA/C,CAArB;AACA,SAASG,YAAT,EAAuBJ,QAAvB,EAAiCD,SAAjC,EAA4CG,cAA5C,EAA4DC,MAA5D,EAAoEF,YAApE","sourcesContent":["/**\n * @description Contains functions to select the rotation mode.\n * </br><b>Learn more</b>: {@link https://cloudinary.com/documentation/image_transformations#rotating_images | Rotating images}\n * </br><b>Learn more</b>: {@link https://cloudinary.com/documentation/video_manipulation_and_delivery#rotating_videos | Rotating videos}\n * @memberOf Qualifiers\n * @namespace RotationMode\n * @see Visit {@link Actions.Rotate|Rotate Action} for an example\n */\nimport { RotationModeQualifierValue } from \"./rotate/RotationModeQualifierValue\";\n/**\n * @summary qualifier\n * @description Rotate image 90 degrees clockwise only if the requested aspect ratio does not match the image's aspect ratio.\n * @memberOf Qualifiers.RotationMode\n * @return {Qualifiers.RotationMode.RotationModeQualifierValue}\n */\nfunction autoRight() {\n    return new RotationModeQualifierValue('auto_right');\n}\n/**\n * @summary qualifier\n * @description Rotate image 90 degrees counterclockwise only if the requested aspect ratio does not match the image's aspect ratio.\n * @memberOf Qualifiers.RotationMode\n * @return {Qualifiers.RotationMode.RotationModeQualifierValue}\n */\nfunction autoLeft() {\n    return new RotationModeQualifierValue('auto_left');\n}\n/**\n * @summary qualifier\n * @description Vertical mirror flip of the image.\n * @memberOf Qualifiers.RotationMode\n * @return {Qualifiers.RotationMode.RotationModeQualifierValue}\n */\nfunction verticalFlip() {\n    return new RotationModeQualifierValue('vflip');\n}\n/**\n * @summary qualifier\n * @description Horizontal mirror flip of the image.\n * @memberOf Qualifiers.RotationMode\n * @return {Qualifiers.RotationMode.RotationModeQualifierValue}\n */\nfunction horizontalFlip() {\n    return new RotationModeQualifierValue('hflip');\n}\n/**\n * @summary qualifier\n * @description By default, the image is automatically rotated according to the EXIF data stored by the camera when the image\n *                           was taken. Set the angle to 'ignore' if you do not want the image to be automatically rotated.\n * @memberOf Qualifiers.RotationMode\n * @return {Qualifiers.RotationMode.RotationModeQualifierValue}\n */\nfunction ignore() {\n    return new RotationModeQualifierValue('ignore');\n}\nconst RotationMode = { autoLeft, autoRight, horizontalFlip, ignore, verticalFlip };\nexport { RotationMode, autoLeft, autoRight, horizontalFlip, ignore, verticalFlip };\n"]},"metadata":{},"sourceType":"module"}