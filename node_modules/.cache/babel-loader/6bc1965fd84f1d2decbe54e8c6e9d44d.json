{"ast":null,"code":"import { Action } from \"../../internal/Action\";\nimport { toFloatAsString } from \"../../internal/utils/toFloatAsString\";\n/**\n * @description Class for creating a preview of a video\n * @memberOf Actions.VideoEdit\n * @extends SDK.Action\n * @see Visit {@link Actions.VideoEdit|VideoEdit} for an example\n */\n\nclass PreviewAction extends Action {\n  constructor() {\n    super();\n  }\n  /**\n   * @description Control the duration of the video segments\n   * @param {string|number} minSegDuration The duration of a video segment\n   * @return {this}\n   */\n\n\n  minimumSegmentDuration(minSegDuration) {\n    this._minSeg = minSegDuration;\n    return this;\n  }\n  /**\n   * @description Control the number of the video segments\n   * @param {string|number} maxSeg The number of the video segments.\n   * @return {this}\n   */\n\n\n  maximumSegments(maxSeg) {\n    this._maxSeg = maxSeg;\n    return this;\n  }\n  /**\n   * @description control the length of the generated preview\n   * @param {string|number} duration The duration in seconds such as 1.2, or 5.0\n   * @return {this}\n   */\n\n\n  duration(duration) {\n    this._duration = duration;\n    return this;\n  }\n\n  toString() {\n    return ['e_preview', this._duration && `duration_${toFloatAsString(this._duration)}`, this._minSeg && `min_seg_dur_${toFloatAsString(this._minSeg)}`, this._maxSeg && `max_seg_${toFloatAsString(this._maxSeg)}`].filter(a => a).join(':');\n  }\n\n}\n\nexport { PreviewAction };","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/actions/videoEdit/PreviewAction.js"],"names":["Action","toFloatAsString","PreviewAction","constructor","minimumSegmentDuration","minSegDuration","_minSeg","maximumSegments","maxSeg","_maxSeg","duration","_duration","toString","filter","a","join"],"mappings":"AAAA,SAASA,MAAT,QAAuB,uBAAvB;AACA,SAASC,eAAT,QAAgC,sCAAhC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,aAAN,SAA4BF,MAA5B,CAAmC;AAC/BG,EAAAA,WAAW,GAAG;AACV;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIC,EAAAA,sBAAsB,CAACC,cAAD,EAAiB;AACnC,SAAKC,OAAL,GAAeD,cAAf;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIE,EAAAA,eAAe,CAACC,MAAD,EAAS;AACpB,SAAKC,OAAL,GAAeD,MAAf;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIE,EAAAA,QAAQ,CAACA,QAAD,EAAW;AACf,SAAKC,SAAL,GAAiBD,QAAjB;AACA,WAAO,IAAP;AACH;;AACDE,EAAAA,QAAQ,GAAG;AACP,WAAO,CACH,WADG,EAEH,KAAKD,SAAL,IAAmB,YAAWV,eAAe,CAAC,KAAKU,SAAN,CAAiB,EAF3D,EAGH,KAAKL,OAAL,IAAiB,eAAcL,eAAe,CAAC,KAAKK,OAAN,CAAe,EAH1D,EAIH,KAAKG,OAAL,IAAiB,WAAUR,eAAe,CAAC,KAAKQ,OAAN,CAAe,EAJtD,EAKLI,MALK,CAKGC,CAAD,IAAOA,CALT,EAKYC,IALZ,CAKiB,GALjB,CAAP;AAMH;;AAtC8B;;AAwCnC,SAASb,aAAT","sourcesContent":["import { Action } from \"../../internal/Action\";\nimport { toFloatAsString } from \"../../internal/utils/toFloatAsString\";\n/**\n * @description Class for creating a preview of a video\n * @memberOf Actions.VideoEdit\n * @extends SDK.Action\n * @see Visit {@link Actions.VideoEdit|VideoEdit} for an example\n */\nclass PreviewAction extends Action {\n    constructor() {\n        super();\n    }\n    /**\n     * @description Control the duration of the video segments\n     * @param {string|number} minSegDuration The duration of a video segment\n     * @return {this}\n     */\n    minimumSegmentDuration(minSegDuration) {\n        this._minSeg = minSegDuration;\n        return this;\n    }\n    /**\n     * @description Control the number of the video segments\n     * @param {string|number} maxSeg The number of the video segments.\n     * @return {this}\n     */\n    maximumSegments(maxSeg) {\n        this._maxSeg = maxSeg;\n        return this;\n    }\n    /**\n     * @description control the length of the generated preview\n     * @param {string|number} duration The duration in seconds such as 1.2, or 5.0\n     * @return {this}\n     */\n    duration(duration) {\n        this._duration = duration;\n        return this;\n    }\n    toString() {\n        return [\n            'e_preview',\n            this._duration && `duration_${toFloatAsString(this._duration)}`,\n            this._minSeg && `min_seg_dur_${toFloatAsString(this._minSeg)}`,\n            this._maxSeg && `max_seg_${toFloatAsString(this._maxSeg)}`\n        ].filter((a) => a).join(':');\n    }\n}\nexport { PreviewAction };\n"]},"metadata":{},"sourceType":"module"}