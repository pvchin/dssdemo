{"ast":null,"code":"import _classCallCheck from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { LeveledEffectAction } from \"./LeveledEffectAction\";\n/**\n * @description A class for all effects that include a blendPercentage method\n * @extends {Actions.Effect.LeveledEffectAction}\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nvar EffectActionWithBlend = /*#__PURE__*/function (_LeveledEffectAction) {\n  _inherits(EffectActionWithBlend, _LeveledEffectAction);\n\n  var _super = _createSuper(EffectActionWithBlend);\n\n  function EffectActionWithBlend() {\n    _classCallCheck(this, EffectActionWithBlend);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(EffectActionWithBlend, [{\n    key: \"blend\",\n    value: function blend(value) {\n      return this.setLevel(value);\n    }\n  }]);\n\n  return EffectActionWithBlend;\n}(LeveledEffectAction);\n\nexport { EffectActionWithBlend };","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/actions/effect/EffectActions/EffectActionWithBlend.js"],"names":["LeveledEffectAction","EffectActionWithBlend","value","setLevel"],"mappings":";;;;AAAA,SAASA,mBAAT,QAAoC,uBAApC;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,qB;;;;;;;;;;;;;WACF,eAAMC,KAAN,EAAa;AACT,aAAO,KAAKC,QAAL,CAAcD,KAAd,CAAP;AACH;;;;EAH+BF,mB;;AAKpC,SAASC,qBAAT","sourcesContent":["import { LeveledEffectAction } from \"./LeveledEffectAction\";\n/**\n * @description A class for all effects that include a blendPercentage method\n * @extends {Actions.Effect.LeveledEffectAction}\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass EffectActionWithBlend extends LeveledEffectAction {\n    blend(value) {\n        return this.setLevel(value);\n    }\n}\nexport { EffectActionWithBlend };\n"]},"metadata":{},"sourceType":"module"}