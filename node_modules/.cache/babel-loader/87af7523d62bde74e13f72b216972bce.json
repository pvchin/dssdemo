{"ast":null,"code":"import _classCallCheck from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { lossy as _lossy, preserveTransparency as _preserveTransparency, progressive as _progressive } from \"../../qualifiers/flag\";\nimport { DeliveryAction } from \"./DeliveryAction\";\nimport { ProgressiveQualifier } from \"../../qualifiers/progressive\";\n/**\n * @memberOf Actions.Delivery\n * @extends {Actions.Delivery.DeliveryAction}\n * @see Visit {@link Actions.Delivery|Delivery} for an example\n */\n\nvar DeliveryFormat = /*#__PURE__*/function (_DeliveryAction) {\n  _inherits(DeliveryFormat, _DeliveryAction);\n\n  var _super = _createSuper(DeliveryFormat);\n\n  function DeliveryFormat() {\n    _classCallCheck(this, DeliveryFormat);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DeliveryFormat, [{\n    key: \"lossy\",\n    value:\n    /**\n     * @description Uses lossy compression when delivering animated GIF files.\n     * @return {this}\n     */\n    function lossy() {\n      this.addFlag(_lossy());\n      return this;\n    }\n    /**\n     * @description Uses progressive compression when delivering JPG file format.\n     * @return {this}\n     */\n\n  }, {\n    key: \"progressive\",\n    value: function progressive(mode) {\n      if (mode instanceof ProgressiveQualifier) {\n        this.addFlag(mode);\n      } else {\n        this.addFlag(_progressive(mode));\n      }\n\n      return this;\n    }\n    /**\n     * @description Ensures that images with a transparency channel are delivered in PNG format.\n     */\n\n  }, {\n    key: \"preserveTransparency\",\n    value: function preserveTransparency() {\n      this.addFlag(_preserveTransparency());\n      return this;\n    }\n  }]);\n\n  return DeliveryFormat;\n}(DeliveryAction);\n\nexport { DeliveryFormat };","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/actions/delivery/DeliveryFormat.js"],"names":["lossy","preserveTransparency","progressive","DeliveryAction","ProgressiveQualifier","DeliveryFormat","addFlag","mode"],"mappings":";;;;AAAA,SAASA,KAAK,IAALA,MAAT,EAAgBC,oBAAoB,IAApBA,qBAAhB,EAAsCC,WAAW,IAAXA,YAAtC,QAAyD,uBAAzD;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,oBAAT,QAAqC,8BAArC;AACA;AACA;AACA;AACA;AACA;;IACMC,c;;;;;;;;;;;;;;AACF;AACJ;AACA;AACA;AACI,qBAAQ;AACJ,WAAKC,OAAL,CAAaN,MAAK,EAAlB;AACA,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,qBAAYO,IAAZ,EAAkB;AACd,UAAIA,IAAI,YAAYH,oBAApB,EAA0C;AACtC,aAAKE,OAAL,CAAaC,IAAb;AACH,OAFD,MAGK;AACD,aAAKD,OAAL,CAAaJ,YAAW,CAACK,IAAD,CAAxB;AACH;;AACD,aAAO,IAAP;AACH;AACD;AACJ;AACA;;;;WACI,gCAAuB;AACnB,WAAKD,OAAL,CAAaL,qBAAoB,EAAjC;AACA,aAAO,IAAP;AACH;;;;EA5BwBE,c;;AA8B7B,SAASE,cAAT","sourcesContent":["import { lossy, preserveTransparency, progressive } from \"../../qualifiers/flag\";\nimport { DeliveryAction } from \"./DeliveryAction\";\nimport { ProgressiveQualifier } from \"../../qualifiers/progressive\";\n/**\n * @memberOf Actions.Delivery\n * @extends {Actions.Delivery.DeliveryAction}\n * @see Visit {@link Actions.Delivery|Delivery} for an example\n */\nclass DeliveryFormat extends DeliveryAction {\n    /**\n     * @description Uses lossy compression when delivering animated GIF files.\n     * @return {this}\n     */\n    lossy() {\n        this.addFlag(lossy());\n        return this;\n    }\n    /**\n     * @description Uses progressive compression when delivering JPG file format.\n     * @return {this}\n     */\n    progressive(mode) {\n        if (mode instanceof ProgressiveQualifier) {\n            this.addFlag(mode);\n        }\n        else {\n            this.addFlag(progressive(mode));\n        }\n        return this;\n    }\n    /**\n     * @description Ensures that images with a transparency channel are delivered in PNG format.\n     */\n    preserveTransparency() {\n        this.addFlag(preserveTransparency());\n        return this;\n    }\n}\nexport { DeliveryFormat };\n"]},"metadata":{},"sourceType":"module"}