{"ast":null,"code":"import _regeneratorRuntime from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useState,useCallback}from\"react\";import{useQuery}from\"react-query\";import{payslips_url}from\"../../utils/constants\";import{filterByPayrun}from\"./utils\";import axios from\"axios\";import{queryKeys}from\"../react-query/constants\";function getPayslips(_x){return _getPayslips.apply(this,arguments);}function _getPayslips(){_getPayslips=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(payrun){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"\".concat(payslips_url,\"?fv=\").concat(payrun));case 2:_yield$axios$get=_context.sent;data=_yield$axios$get.data;return _context.abrupt(\"return\",data);case 5:case\"end\":return _context.stop();}}},_callee);}));return _getPayslips.apply(this,arguments);}export function usePayslipsBatch(payrun){var _useState=useState(\"all\"),_useState2=_slicedToArray(_useState,2),filter=_useState2[0],setFilter=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),psbpayrunId=_useState4[0],setPSBPayrunId=_useState4[1];var selectFn=useCallback(function(unfiltered){return filterByPayrun(unfiltered,filter);},[filter]);var fallback=[];var _useQuery=useQuery([queryKeys.payslipsbatch,psbpayrunId],//queryKeys.payslips,\nfunction(){return getPayslips(psbpayrunId);},{select:filter!==\"all\"?selectFn:undefined}),_useQuery$data=_useQuery.data,payslipsbatch=_useQuery$data===void 0?fallback:_useQuery$data;return{payslipsbatch:payslipsbatch,filter:filter,setFilter:setFilter,setPSBPayrunId:setPSBPayrunId};}","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/payslips/usePayslipsBatch.js"],"names":["useState","useCallback","useQuery","payslips_url","filterByPayrun","axios","queryKeys","getPayslips","payrun","get","data","usePayslipsBatch","filter","setFilter","psbpayrunId","setPSBPayrunId","selectFn","unfiltered","fallback","payslipsbatch","select","undefined"],"mappings":"qcAAA,OAASA,QAAT,CAAmBC,WAAnB,KAAsC,OAAtC,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,YAAT,KAA6B,uBAA7B,CACA,OAASC,cAAT,KAA+B,SAA/B,CAEA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,0BAA1B,C,QAEeC,CAAAA,W,6IAAf,iBAA2BC,MAA3B,kKACyBH,CAAAA,KAAK,CAACI,GAAN,WAAaN,YAAb,gBAAgCK,MAAhC,EADzB,uCACUE,IADV,kBACUA,IADV,iCAGSA,IAHT,wD,8CAMA,MAAO,SAASC,CAAAA,gBAAT,CAA0BH,MAA1B,CAAkC,eACXR,QAAQ,CAAC,KAAD,CADG,wCAChCY,MADgC,eACxBC,SADwB,8BAEDb,QAAQ,CAAC,EAAD,CAFP,yCAEhCc,WAFgC,eAEnBC,cAFmB,eAIvC,GAAMC,CAAAA,QAAQ,CAAGf,WAAW,CAC1B,SAACgB,UAAD,QAAgBb,CAAAA,cAAc,CAACa,UAAD,CAAaL,MAAb,CAA9B,EAD0B,CAE1B,CAACA,MAAD,CAF0B,CAA5B,CAKA,GAAMM,CAAAA,QAAQ,CAAG,EAAjB,CATuC,cAUIhB,QAAQ,CACjD,CAACI,SAAS,CAACa,aAAX,CAA0BL,WAA1B,CADiD,CAEjD;AACA,iBAAMP,CAAAA,WAAW,CAACO,WAAD,CAAjB,EAHiD,CAIjD,CACEM,MAAM,CAAER,MAAM,GAAK,KAAX,CAAmBI,QAAnB,CAA8BK,SADxC,CAJiD,CAVZ,0BAU/BX,IAV+B,CAUzBS,aAVyB,yBAUTD,QAVS,gBAmBvC,MAAO,CAAEC,aAAa,CAAbA,aAAF,CAAiBP,MAAM,CAANA,MAAjB,CAAyBC,SAAS,CAATA,SAAzB,CAAoCE,cAAc,CAAdA,cAApC,CAAP,CACD","sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { payslips_url } from \"../../utils/constants\";\r\nimport { filterByPayrun } from \"./utils\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getPayslips(payrun) {\r\n  const { data } = await axios.get(`${payslips_url}?fv=${payrun}`);\r\n  //const { data } = await axios.get(`${payslips_url}`);\r\n  return data;\r\n}\r\n\r\nexport function usePayslipsBatch(payrun) {\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [psbpayrunId, setPSBPayrunId] = useState(\"\");\r\n\r\n  const selectFn = useCallback(\r\n    (unfiltered) => filterByPayrun(unfiltered, filter),\r\n    [filter]\r\n  );\r\n\r\n  const fallback = [];\r\n  const { data: payslipsbatch = fallback } = useQuery(\r\n    [queryKeys.payslipsbatch, psbpayrunId],\r\n    //queryKeys.payslips,\r\n    () => getPayslips(psbpayrunId),\r\n    {\r\n      select: filter !== \"all\" ? selectFn : undefined,\r\n    }\r\n  );\r\n\r\n  return { payslipsbatch, filter, setFilter, setPSBPayrunId };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}