{"ast":null,"code":"import { Action } from \"../../internal/Action\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description  Defines the video bitrate in bits per second.\n *\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/video_manipulation_and_delivery#bitrate_control | Bitrate control}\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\n\nclass BitRateAction extends Action {\n  constructor(bitRate) {\n    super();\n    this.isConstant = false;\n    this.bitRate = bitRate;\n  }\n  /**\n   * @description video plays with a constant bitrate (CBR).\n   */\n\n\n  constant() {\n    this.isConstant = true;\n    return this;\n  }\n\n  prepareQualifiers() {\n    let qualifierValue;\n\n    if (this.isConstant) {\n      qualifierValue = new QualifierValue([this.bitRate, 'constant']).setDelimiter(':');\n    } else {\n      qualifierValue = new QualifierValue(this.bitRate);\n    }\n\n    this.addQualifier(new Qualifier('br', qualifierValue));\n    return this;\n  }\n\n}\n\nexport default BitRateAction;","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/actions/transcode/BitRateAction.js"],"names":["Action","Qualifier","QualifierValue","BitRateAction","constructor","bitRate","isConstant","constant","prepareQualifiers","qualifierValue","setDelimiter","addQualifier"],"mappings":"AAAA,SAASA,MAAT,QAAuB,uBAAvB;AACA,SAASC,SAAT,QAA0B,oCAA1B;AACA,SAASC,cAAT,QAA+B,yCAA/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,aAAN,SAA4BH,MAA5B,CAAmC;AAC/BI,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKD,OAAL,GAAeA,OAAf;AACH;AACD;AACJ;AACA;;;AACIE,EAAAA,QAAQ,GAAG;AACP,SAAKD,UAAL,GAAkB,IAAlB;AACA,WAAO,IAAP;AACH;;AACDE,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,cAAJ;;AACA,QAAI,KAAKH,UAAT,EAAqB;AACjBG,MAAAA,cAAc,GAAG,IAAIP,cAAJ,CAAmB,CAAC,KAAKG,OAAN,EAAe,UAAf,CAAnB,EAA+CK,YAA/C,CAA4D,GAA5D,CAAjB;AACH,KAFD,MAGK;AACDD,MAAAA,cAAc,GAAG,IAAIP,cAAJ,CAAmB,KAAKG,OAAxB,CAAjB;AACH;;AACD,SAAKM,YAAL,CAAkB,IAAIV,SAAJ,CAAc,IAAd,EAAoBQ,cAApB,CAAlB;AACA,WAAO,IAAP;AACH;;AAvB8B;;AAyBnC,eAAeN,aAAf","sourcesContent":["import { Action } from \"../../internal/Action\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description  Defines the video bitrate in bits per second.\n *\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/video_manipulation_and_delivery#bitrate_control | Bitrate control}\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\nclass BitRateAction extends Action {\n    constructor(bitRate) {\n        super();\n        this.isConstant = false;\n        this.bitRate = bitRate;\n    }\n    /**\n     * @description video plays with a constant bitrate (CBR).\n     */\n    constant() {\n        this.isConstant = true;\n        return this;\n    }\n    prepareQualifiers() {\n        let qualifierValue;\n        if (this.isConstant) {\n            qualifierValue = new QualifierValue([this.bitRate, 'constant']).setDelimiter(':');\n        }\n        else {\n            qualifierValue = new QualifierValue(this.bitRate);\n        }\n        this.addQualifier(new Qualifier('br', qualifierValue));\n        return this;\n    }\n}\nexport default BitRateAction;\n"]},"metadata":{},"sourceType":"module"}