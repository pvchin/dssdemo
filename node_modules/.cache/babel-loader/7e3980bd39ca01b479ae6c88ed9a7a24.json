{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\dss\\\\src\\\\components\\\\SamplesForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Heading, Divider, FormControl, Grid, GridItem, HStack, Input, InputGroup, InputLeftAddon, InputLeftElement, Select, SimpleGrid, Text, Modal, ModalOverlay, ModalContent //ModalHeader,\n//ModalFooter,\n, ModalBody, ModalCloseButton, Tabs, TabList, TabPanels, Tab, TabPanel, useDisclosure } from \"@chakra-ui/react\";\nimport { useRecoilState } from \"recoil\";\nimport * as emailjs from \"emailjs-com\";\nimport QRCode from \"react-qr-code\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useExpensesContext } from \"../context/expenses_context\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useCustomToast } from \"../helpers/useCustomToast\";\nimport { useSamples } from \"./samples/useSamples\";\nimport { useAddSample } from \"./samples/useAddSample\";\nimport { useDeleteSample } from \"./samples/useDeleteSample\";\nimport { useUpdateSample } from \"./samples/useUpdateSample\";\nimport { useSampleshistory } from \"./sampleshistory.js/useSampleshistory\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\nconst TEMPLATE_ID = \"template_1y8odlq\";\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\nconst initial_values = {\n  assetno: \"\",\n  desp: \"\",\n  date: \"\",\n  type: \"\",\n  client: \"\",\n  remark: \"\",\n  status: \"\"\n};\nconst columns = [{\n  title: \"Asset No\",\n  field: \"assetno\",\n  editable: \"never\"\n}, {\n  title: \"Description\",\n  field: \"desp\",\n  editable: \"never\"\n}, {\n  title: \"Date\",\n  field: \"date\",\n  editable: \"never\"\n}, {\n  title: \"Type\",\n  field: \"type\",\n  editable: \"never\"\n}, {\n  title: \"Client\",\n  field: \"client\",\n  editable: \"never\"\n}, {\n  title: \"Status\",\n  field: \"status\",\n  editable: \"never\"\n}, {\n  title: \"Remark\",\n  field: \"remark\",\n  editable: \"never\"\n}];\n\nconst ExpenseForm = ({\n  formdata,\n  setFormdata,\n  handleDialogClose\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const toast = useCustomToast();\n  const field_width = \"138\";\n  const {\n    samples\n  } = useSamples();\n  const {\n    sampleshistory\n  } = useSampleshistory();\n  const updateSample = useUpdateSample();\n  const addSample = useAddSample();\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const {\n    isExpenseEditing,\n    editExpenseID\n  } = useExpensesContext();\n  const {\n    handleSubmit,\n    control\n  } = useForm();\n\n  const handleSentEmail = data => {\n    const {\n      date\n    } = data; //console.log(\"expense form\", loginLevel);\n\n    var emaildata = {\n      to_name: loginLevel.loginUser,\n      to_email: loginLevel.loginEmail,\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\n      cc_to: loginLevel.reporting_email\n    };\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(function (response) {\n      console.log(response.status, response.text);\n      toast({\n        title: `Email has sent successfully to ${emaildata.to_email}!`,\n        status: \"success\"\n      });\n    }, function (err) {\n      console.log(err);\n      toast({\n        title: `Email has fail to send to ${emaildata.to_email}!`,\n        status: \"warning\"\n      });\n    });\n  };\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n\n    if (isExpenseEditing) {\n      updateSample({\n        id: editExpenseID,\n        ...data\n      });\n    } else {\n      addSample({\n        empid: loginLevel.loginUserId,\n        ...data\n      });\n      handleSentEmail(data);\n    }\n\n    handleDialogClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h3\",\n        children: \"SAMPLE ITEMS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(SimpleGrid, {\n          children: /*#__PURE__*/_jsxDEV(Tabs, {\n            children: [/*#__PURE__*/_jsxDEV(TabList, {\n              children: [/*#__PURE__*/_jsxDEV(Tab, {\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                children: \"Findings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TabPanels, {\n              children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: handleSubmit(onSubmit),\n                  children: [/*#__PURE__*/_jsxDEV(HStack, {\n                    children: /*#__PURE__*/_jsxDEV(FormControl, {\n                      children: /*#__PURE__*/_jsxDEV(Controller, {\n                        control: control,\n                        name: \"sampleid\",\n                        defaultValue: formdata.sampleid,\n                        render: ({\n                          field: {\n                            onChange,\n                            value,\n                            ref\n                          }\n                        }) => /*#__PURE__*/_jsxDEV(InputGroup, {\n                          children: /*#__PURE__*/_jsxDEV(HStack, {\n                            w: \"100%\",\n                            py: 1,\n                            children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                              children: \"Sample Id\",\n                              minWidth: field_width\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 177,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(Input, {\n                              name: \"sampleid\",\n                              value: value,\n                              width: \"full\",\n                              onChange: onChange,\n                              borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                              ,\n                              ref: ref,\n                              placeholder: \"sample id\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 181,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 176,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 175,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 170,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(FormControl, {\n                      children: /*#__PURE__*/_jsxDEV(Controller, {\n                        control: control,\n                        name: \"desp\",\n                        defaultValue: formdata.desp,\n                        render: ({\n                          field: {\n                            onChange,\n                            value,\n                            ref\n                          }\n                        }) => /*#__PURE__*/_jsxDEV(InputGroup, {\n                          children: /*#__PURE__*/_jsxDEV(HStack, {\n                            w: \"100%\",\n                            py: 1,\n                            children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                              children: \"Description\",\n                              minWidth: field_width\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 210,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(Input, {\n                              name: \"desp\",\n                              value: value,\n                              width: \"full\",\n                              onChange: onChange,\n                              borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                              ,\n                              ref: ref,\n                              placeholder: \"description\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 214,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 209,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 208,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 203,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(FormControl, {\n                      children: /*#__PURE__*/_jsxDEV(Controller, {\n                        control: control,\n                        name: \"assetno\",\n                        defaultValue: formdata.assetno,\n                        render: ({\n                          field: {\n                            onChange,\n                            value,\n                            ref\n                          }\n                        }) => /*#__PURE__*/_jsxDEV(InputGroup, {\n                          children: /*#__PURE__*/_jsxDEV(HStack, {\n                            w: \"100%\",\n                            py: 1,\n                            children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                              children: \"Asset No\",\n                              minWidth: field_width\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 240,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(Input, {\n                              name: \"assetno\",\n                              value: value,\n                              width: \"full\",\n                              onChange: onChange,\n                              borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                              ,\n                              ref: ref,\n                              placeholder: \"asset no\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 244,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 239,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 238,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(FormControl, {\n                      children: /*#__PURE__*/_jsxDEV(Controller, {\n                        control: control,\n                        name: \"client\",\n                        defaultValue: formdata.client,\n                        render: ({\n                          field: {\n                            onChange,\n                            value,\n                            ref\n                          }\n                        }) => /*#__PURE__*/_jsxDEV(InputGroup, {\n                          children: /*#__PURE__*/_jsxDEV(HStack, {\n                            w: \"100%\",\n                            py: 1,\n                            children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                              children: \"Client\",\n                              minWidth: field_width\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 269,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(Select, {\n                              name: \"client\",\n                              value: value,\n                              width: \"full\",\n                              onChange: onChange,\n                              borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                              ,\n                              ref: ref //placeholder=\"category\"\n                              ,\n                              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"Marketing Department\",\n                                children: \"Marketing Department\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 283,\n                                columnNumber: 35\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"Operation Department\",\n                                children: \"Operation Department\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 284,\n                                columnNumber: 35\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"Warehouse\",\n                                children: \"Warehouse\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 285,\n                                columnNumber: 35\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 273,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 268,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 267,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 262,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(FormControl, {\n                      children: /*#__PURE__*/_jsxDEV(Controller, {\n                        control: control,\n                        name: \"recdate\",\n                        defaultValue: formdata.recdate,\n                        render: ({\n                          field: {\n                            onChange,\n                            value,\n                            ref\n                          }\n                        }) => /*#__PURE__*/_jsxDEV(InputGroup, {\n                          children: /*#__PURE__*/_jsxDEV(HStack, {\n                            w: \"100%\",\n                            py: 1,\n                            children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                              children: \"Received Date\",\n                              minWidth: field_width\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 302,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(Input, {\n                              name: \"recdate\",\n                              type: \"date\",\n                              value: value,\n                              width: \"full\",\n                              onChange: onChange,\n                              borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                              ,\n                              ref: ref,\n                              placeholder: \"received date\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 306,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 301,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 300,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 295,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(FormControl, {\n                      children: /*#__PURE__*/_jsxDEV(Controller, {\n                        control: control,\n                        name: \"status\",\n                        defaultValue: formdata.status,\n                        render: ({\n                          field: {\n                            onChange,\n                            value,\n                            ref\n                          }\n                        }) => /*#__PURE__*/_jsxDEV(InputGroup, {\n                          children: /*#__PURE__*/_jsxDEV(HStack, {\n                            w: \"100%\",\n                            py: 1,\n                            children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                              children: \"Status\",\n                              minWidth: field_width\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 333,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(Select, {\n                              name: \"status\",\n                              value: value,\n                              width: \"full\",\n                              onChange: onChange,\n                              borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                              ,\n                              ref: ref //placeholder=\"category\"\n                              ,\n                              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"In Progress\",\n                                children: \"In Progress\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 347,\n                                columnNumber: 35\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"Completed\",\n                                children: \"Completed\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 350,\n                                columnNumber: 35\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 337,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 332,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 331,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 326,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 325,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      variant: \"contained\",\n                      color: \"primary\",\n                      className: classes.button //onClick={() => handleSubmit(onSubmit)()}\n                      ,\n                      children: [\"Save \", /*#__PURE__*/_jsxDEV(Icon, {\n                        className: classes.rightIcon,\n                        children: \"send\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 367,\n                        columnNumber: 30\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 360,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  children: /*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: handleSubmit(onSubmit),\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(FormControl, {\n                        children: /*#__PURE__*/_jsxDEV(Controller, {\n                          control: control,\n                          name: \"testmethod\",\n                          defaultValue: formdata.testmethod,\n                          render: ({\n                            field: {\n                              onChange,\n                              value,\n                              ref\n                            }\n                          }) => /*#__PURE__*/_jsxDEV(InputGroup, {\n                            children: /*#__PURE__*/_jsxDEV(HStack, {\n                              w: \"100%\",\n                              py: 1,\n                              children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                                children: \"Test Method\",\n                                minWidth: field_width\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 385,\n                                columnNumber: 35\n                              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                name: \"testmethod\",\n                                value: value,\n                                width: \"full\",\n                                onChange: onChange,\n                                borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                                ,\n                                ref: ref //placeholder=\"category\"\n                                ,\n                                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"Method A\",\n                                  children: \"Method A\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 399,\n                                  columnNumber: 37\n                                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"Method C\",\n                                  children: \"Method B\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 400,\n                                  columnNumber: 37\n                                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"Method C\",\n                                  children: \"Method C\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 401,\n                                  columnNumber: 37\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 389,\n                                columnNumber: 35\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 384,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 383,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 378,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 377,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 376,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(FormControl, {\n                        children: /*#__PURE__*/_jsxDEV(Controller, {\n                          control: control,\n                          name: \"datapath\",\n                          defaultValue: formdata.datapath,\n                          render: ({\n                            field: {\n                              onChange,\n                              value,\n                              ref\n                            }\n                          }) => /*#__PURE__*/_jsxDEV(InputGroup, {\n                            children: /*#__PURE__*/_jsxDEV(HStack, {\n                              w: \"100%\",\n                              py: 1,\n                              children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                                children: \"Data Path\",\n                                minWidth: field_width\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 418,\n                                columnNumber: 35\n                              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                name: \"datapath\",\n                                value: value,\n                                thpe: \"file\",\n                                width: \"full\",\n                                onChange: onChange,\n                                borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                                ,\n                                ref: ref,\n                                placeholder: \"data path\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 422,\n                                columnNumber: 35\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 417,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 416,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 411,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 410,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 409,\n                      columnNumber: 24\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 439,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(FormControl, {\n                        children: /*#__PURE__*/_jsxDEV(Controller, {\n                          control: control,\n                          name: \"results\",\n                          defaultValue: formdata.results,\n                          render: ({\n                            field: {\n                              onChange,\n                              value,\n                              ref\n                            }\n                          }) => /*#__PURE__*/_jsxDEV(InputGroup, {\n                            children: /*#__PURE__*/_jsxDEV(HStack, {\n                              w: \"100%\",\n                              py: 1,\n                              children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                                children: \"Results\",\n                                minWidth: field_width\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 449,\n                                columnNumber: 35\n                              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                name: \"results\",\n                                value: value,\n                                width: \"full\",\n                                onChange: onChange,\n                                borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                                ,\n                                ref: ref,\n                                placeholder: \"results\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 453,\n                                columnNumber: 35\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 448,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 447,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 442,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 441,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 440,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(FormControl, {\n                        children: /*#__PURE__*/_jsxDEV(Controller, {\n                          control: control,\n                          name: \"conclusion\",\n                          defaultValue: formdata.conclusion,\n                          render: ({\n                            field: {\n                              onChange,\n                              value,\n                              ref\n                            }\n                          }) => /*#__PURE__*/_jsxDEV(InputGroup, {\n                            children: /*#__PURE__*/_jsxDEV(HStack, {\n                              w: \"100%\",\n                              py: 1,\n                              children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                                children: \"Conclusion\",\n                                minWidth: field_width\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 478,\n                                columnNumber: 35\n                              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                name: \"conclusion\",\n                                value: value,\n                                width: \"full\",\n                                onChange: onChange,\n                                borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                                ,\n                                ref: ref,\n                                placeholder: \"conclusion\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 482,\n                                columnNumber: 35\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 477,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 476,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 471,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 470,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 469,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(FormControl, {\n                        children: /*#__PURE__*/_jsxDEV(Controller, {\n                          control: control,\n                          name: \"status\",\n                          defaultValue: formdata.status,\n                          render: ({\n                            field: {\n                              onChange,\n                              value,\n                              ref\n                            }\n                          }) => /*#__PURE__*/_jsxDEV(InputGroup, {\n                            children: /*#__PURE__*/_jsxDEV(HStack, {\n                              w: \"100%\",\n                              py: 1,\n                              children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                                children: \"Status\",\n                                minWidth: field_width\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 508,\n                                columnNumber: 35\n                              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                name: \"status\",\n                                value: value,\n                                width: \"full\",\n                                onChange: onChange,\n                                borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                                ,\n                                ref: ref //placeholder=\"category\"\n                                ,\n                                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"In Progress\",\n                                  children: \"In Progress\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 522,\n                                  columnNumber: 37\n                                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"Completed\",\n                                  children: \"Completed\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 525,\n                                  columnNumber: 37\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 512,\n                                columnNumber: 35\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 507,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 506,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 501,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 500,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 499,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        type: \"submit\",\n                        variant: \"contained\",\n                        color: \"primary\",\n                        className: classes.button //onClick={() => handleSubmit(onSubmit)()}\n                        ,\n                        children: [\"Save \", /*#__PURE__*/_jsxDEV(Icon, {\n                          className: classes.rightIcon,\n                          children: \"send\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 542,\n                          columnNumber: 32\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 535,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 534,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpenseForm, \"+sGsyRguelu/3SFHGEUPnIuLUs8=\", false, function () {\n  return [useStyles, useCustomToast, useSamples, useSampleshistory, useUpdateSample, useAddSample, useRecoilState, useExpensesContext, useForm];\n});\n\n_c = ExpenseForm;\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  }\n}));\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["D:/react-myprojects/dss/src/components/SamplesForm.js"],"names":["React","Button","Icon","TextField","Paper","Typography","MaterialTable","MTableToolbar","makeStyles","Box","Heading","Divider","FormControl","Grid","GridItem","HStack","Input","InputGroup","InputLeftAddon","InputLeftElement","Select","SimpleGrid","Text","Modal","ModalOverlay","ModalContent","ModalBody","ModalCloseButton","Tabs","TabList","TabPanels","Tab","TabPanel","useDisclosure","useRecoilState","emailjs","QRCode","loginLevelState","MenuItem","useEmployeesContext","useExpensesContext","Controller","useForm","useCustomToast","useSamples","useAddSample","useDeleteSample","useUpdateSample","useSampleshistory","SERVICE_ID","process","env","REACT_APP_EMAILJS_SERVICEID","TEMPLATE_ID","USER_ID","REACT_APP_EMAILJS_USERID","initial_values","assetno","desp","date","type","client","remark","status","columns","title","field","editable","ExpenseForm","formdata","setFormdata","handleDialogClose","classes","useStyles","toast","field_width","samples","sampleshistory","updateSample","addSample","loginLevel","setLoginLevel","isExpenseEditing","editExpenseID","handleSubmit","control","handleSentEmail","data","emaildata","to_name","loginUser","to_email","loginEmail","message","cc_to","reporting_email","send","then","response","console","log","text","err","onSubmit","e","preventDefault","id","empid","loginUserId","root","sampleid","onChange","value","ref","recdate","button","rightIcon","testmethod","datapath","results","conclusion","theme","margin","spacing","leftIcon","marginRight","marginLeft","iconSmall","fontSize","padding","container","display","flexWrap","textField","width"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Divider,\r\n  FormControl,\r\n  Grid,\r\n  GridItem,\r\n  HStack,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftAddon,\r\n  InputLeftElement,\r\n  Select,\r\n  SimpleGrid,\r\n  Text,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  //ModalHeader,\r\n  //ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport QRCode from \"react-qr-code\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useSamples } from \"./samples/useSamples\";\r\nimport { useAddSample } from \"./samples/useAddSample\";\r\nimport { useDeleteSample } from \"./samples/useDeleteSample\";\r\nimport { useUpdateSample } from \"./samples/useUpdateSample\";\r\nimport { useSampleshistory } from \"./sampleshistory.js/useSampleshistory\";\r\n\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\nconst initial_values = {\r\n  assetno: \"\",\r\n  desp: \"\",\r\n  date: \"\",\r\n  type: \"\",\r\n  client: \"\",\r\n  remark: \"\",\r\n  status: \"\",\r\n};\r\n\r\nconst columns = [\r\n  { title: \"Asset No\", field: \"assetno\", editable: \"never\" },\r\n\r\n  {\r\n    title: \"Description\",\r\n    field: \"desp\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Type\",\r\n    field: \"type\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Client\",\r\n    field: \"client\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Remark\",\r\n    field: \"remark\",\r\n    editable: \"never\",\r\n  },\r\n];\r\n\r\nconst ExpenseForm = ({ formdata, setFormdata, handleDialogClose }) => {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n   const field_width = \"138\";\r\n  const { samples } = useSamples();\r\n  const { sampleshistory } = useSampleshistory();\r\n  const updateSample = useUpdateSample();\r\n  const addSample = useAddSample();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { isExpenseEditing, editExpenseID } = useExpensesContext();\r\n\r\n  const { handleSubmit, control } = useForm();\r\n\r\n  const handleSentEmail = (data) => {\r\n    const { date } = data;\r\n    //console.log(\"expense form\", loginLevel);\r\n    var emaildata = {\r\n      to_name: loginLevel.loginUser,\r\n      to_email: loginLevel.loginEmail,\r\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\r\n      cc_to: loginLevel.reporting_email,\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const onSubmit = (data, e) => {\r\n    e.preventDefault();\r\n    if (isExpenseEditing) {\r\n      updateSample({ id: editExpenseID, ...data });\r\n    } else {\r\n      addSample({ empid: loginLevel.loginUserId, ...data });\r\n      handleSentEmail(data);\r\n    }\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          SAMPLE ITEMS\r\n        </Typography>\r\n        {/* <Typography component=\"p\">Expense Claim Application</Typography> */}\r\n        <Box>\r\n          <SimpleGrid>\r\n            <Tabs>\r\n              <TabList>\r\n                <Tab>Details</Tab>\r\n                <Tab>Findings</Tab>\r\n              </TabList>\r\n              <TabPanels>\r\n                <TabPanel>\r\n                  <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <HStack>\r\n                      <FormControl>\r\n                        <Controller\r\n                          control={control}\r\n                          name=\"sampleid\"\r\n                          defaultValue={formdata.sampleid}\r\n                          render={({ field: { onChange, value, ref } }) => (\r\n                            <InputGroup>\r\n                              <HStack w=\"100%\" py={1}>\r\n                                <InputLeftAddon\r\n                                  children=\"Sample Id\"\r\n                                  minWidth={field_width}\r\n                                />\r\n                                <Input\r\n                                  name=\"sampleid\"\r\n                                  value={value}\r\n                                  width=\"full\"\r\n                                  onChange={onChange}\r\n                                  borderColor=\"gray.400\"\r\n                                  //textTransform=\"capitalize\"\r\n                                  ref={ref}\r\n                                  placeholder=\"sample id\"\r\n                                />\r\n                              </HStack>\r\n                            </InputGroup>\r\n                          )}\r\n                        />\r\n                      </FormControl>\r\n\r\n                      {/* <div>\r\n                        {isExpenseEditing && <QRCode value={formdata.assetno} size=\"50\" />}\r\n                      </div> */}\r\n                    </HStack>\r\n                    <div>\r\n                      <FormControl>\r\n                        <Controller\r\n                          control={control}\r\n                          name=\"desp\"\r\n                          defaultValue={formdata.desp}\r\n                          render={({ field: { onChange, value, ref } }) => (\r\n                            <InputGroup>\r\n                              <HStack w=\"100%\" py={1}>\r\n                                <InputLeftAddon\r\n                                  children=\"Description\"\r\n                                  minWidth={field_width}\r\n                                />\r\n                                <Input\r\n                                  name=\"desp\"\r\n                                  value={value}\r\n                                  width=\"full\"\r\n                                  onChange={onChange}\r\n                                  borderColor=\"gray.400\"\r\n                                  //textTransform=\"capitalize\"\r\n                                  ref={ref}\r\n                                  placeholder=\"description\"\r\n                                />\r\n                              </HStack>\r\n                            </InputGroup>\r\n                          )}\r\n                        />\r\n                      </FormControl>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <FormControl>\r\n                        <Controller\r\n                          control={control}\r\n                          name=\"assetno\"\r\n                          defaultValue={formdata.assetno}\r\n                          render={({ field: { onChange, value, ref } }) => (\r\n                            <InputGroup>\r\n                              <HStack w=\"100%\" py={1}>\r\n                                <InputLeftAddon\r\n                                  children=\"Asset No\"\r\n                                  minWidth={field_width}\r\n                                />\r\n                                <Input\r\n                                  name=\"assetno\"\r\n                                  value={value}\r\n                                  width=\"full\"\r\n                                  onChange={onChange}\r\n                                  borderColor=\"gray.400\"\r\n                                  //textTransform=\"capitalize\"\r\n                                  ref={ref}\r\n                                  placeholder=\"asset no\"\r\n                                />\r\n                              </HStack>\r\n                            </InputGroup>\r\n                          )}\r\n                        />\r\n                      </FormControl>\r\n                    </div>\r\n                    <div>\r\n                      <FormControl>\r\n                        <Controller\r\n                          control={control}\r\n                          name=\"client\"\r\n                          defaultValue={formdata.client}\r\n                          render={({ field: { onChange, value, ref } }) => (\r\n                            <InputGroup>\r\n                              <HStack w=\"100%\" py={1}>\r\n                                <InputLeftAddon\r\n                                  children=\"Client\"\r\n                                  minWidth={field_width}\r\n                                />\r\n                                <Select\r\n                                  name=\"client\"\r\n                                  value={value}\r\n                                  width=\"full\"\r\n                                  onChange={onChange}\r\n                                  borderColor=\"gray.400\"\r\n                                  //textTransform=\"capitalize\"\r\n                                  ref={ref}\r\n                                  //placeholder=\"category\"\r\n                                >\r\n                                  <option value=\"Marketing Department\">Marketing Department</option>\r\n                                  <option value=\"Operation Department\">Operation Department</option>\r\n                                  <option value=\"Warehouse\">Warehouse</option>\r\n                                </Select>\r\n                              </HStack>\r\n                            </InputGroup>\r\n                          )}\r\n                        />\r\n                      </FormControl>\r\n                    </div>\r\n                    <div>\r\n                      <FormControl>\r\n                        <Controller\r\n                          control={control}\r\n                          name=\"recdate\"\r\n                          defaultValue={formdata.recdate}\r\n                          render={({ field: { onChange, value, ref } }) => (\r\n                            <InputGroup>\r\n                              <HStack w=\"100%\" py={1}>\r\n                                <InputLeftAddon\r\n                                  children=\"Received Date\"\r\n                                  minWidth={field_width}\r\n                                />\r\n                                <Input\r\n                                  name=\"recdate\"\r\n                                  type=\"date\"\r\n                                  value={value}\r\n                                  width=\"full\"\r\n                                  onChange={onChange}\r\n                                  borderColor=\"gray.400\"\r\n                                  //textTransform=\"capitalize\"\r\n                                  ref={ref}\r\n                                  placeholder=\"received date\"\r\n                                />\r\n                              </HStack>\r\n                            </InputGroup>\r\n                          )}\r\n                        />\r\n                      </FormControl>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <FormControl>\r\n                        <Controller\r\n                          control={control}\r\n                          name=\"status\"\r\n                          defaultValue={formdata.status}\r\n                          render={({ field: { onChange, value, ref } }) => (\r\n                            <InputGroup>\r\n                              <HStack w=\"100%\" py={1}>\r\n                                <InputLeftAddon\r\n                                  children=\"Status\"\r\n                                  minWidth={field_width}\r\n                                />\r\n                                <Select\r\n                                  name=\"status\"\r\n                                  value={value}\r\n                                  width=\"full\"\r\n                                  onChange={onChange}\r\n                                  borderColor=\"gray.400\"\r\n                                  //textTransform=\"capitalize\"\r\n                                  ref={ref}\r\n                                  //placeholder=\"category\"\r\n                                >\r\n                                  <option value=\"In Progress\">\r\n                                    In Progress\r\n                                  </option>\r\n                                  <option value=\"Completed\">Completed</option>\r\n                                </Select>\r\n                              </HStack>\r\n                            </InputGroup>\r\n                          )}\r\n                        />\r\n                      </FormControl>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        //onClick={() => handleSubmit(onSubmit)()}\r\n                      >\r\n                        Save <Icon className={classes.rightIcon}>send</Icon>\r\n                      </Button>\r\n                    </div>\r\n                  </form>\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <Box>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                     \r\n                      <div>\r\n                        <FormControl>\r\n                          <Controller\r\n                            control={control}\r\n                            name=\"testmethod\"\r\n                            defaultValue={formdata.testmethod}\r\n                            render={({ field: { onChange, value, ref } }) => (\r\n                              <InputGroup>\r\n                                <HStack w=\"100%\" py={1}>\r\n                                  <InputLeftAddon\r\n                                    children=\"Test Method\"\r\n                                    minWidth={field_width}\r\n                                  />\r\n                                  <Select\r\n                                    name=\"testmethod\"\r\n                                    value={value}\r\n                                    width=\"full\"\r\n                                    onChange={onChange}\r\n                                    borderColor=\"gray.400\"\r\n                                    //textTransform=\"capitalize\"\r\n                                    ref={ref}\r\n                                    //placeholder=\"category\"\r\n                                  >\r\n                                    <option value=\"Method A\">Method A</option>\r\n                                    <option value=\"Method C\">Method B</option>\r\n                                    <option value=\"Method C\">Method C</option>\r\n                                  </Select>\r\n                                </HStack>\r\n                              </InputGroup>\r\n                            )}\r\n                          />\r\n                        </FormControl>\r\n                      </div>\r\n                       <div>\r\n                        <FormControl>\r\n                          <Controller\r\n                            control={control}\r\n                            name=\"datapath\"\r\n                            defaultValue={formdata.datapath}\r\n                            render={({ field: { onChange, value, ref } }) => (\r\n                              <InputGroup>\r\n                                <HStack w=\"100%\" py={1}>\r\n                                  <InputLeftAddon\r\n                                    children=\"Data Path\"\r\n                                    minWidth={field_width}\r\n                                  />\r\n                                  <Input\r\n                                    name=\"datapath\"\r\n                                    value={value}\r\n                                    thpe=\"file\"\r\n                                    width=\"full\"\r\n                                    onChange={onChange}\r\n                                    borderColor=\"gray.400\"\r\n                                    //textTransform=\"capitalize\"\r\n                                    ref={ref}\r\n                                    placeholder=\"data path\"\r\n                                  />\r\n                                </HStack>\r\n                              </InputGroup>\r\n                            )}\r\n                          />\r\n                        </FormControl>\r\n                      </div>\r\n                      <div></div>\r\n                      <div>\r\n                        <FormControl>\r\n                          <Controller\r\n                            control={control}\r\n                            name=\"results\"\r\n                            defaultValue={formdata.results}\r\n                            render={({ field: { onChange, value, ref } }) => (\r\n                              <InputGroup>\r\n                                <HStack w=\"100%\" py={1}>\r\n                                  <InputLeftAddon\r\n                                    children=\"Results\"\r\n                                    minWidth={field_width}\r\n                                  />\r\n                                  <Input\r\n                                    name=\"results\"\r\n                                    value={value}\r\n                                    width=\"full\"\r\n                                    onChange={onChange}\r\n                                    borderColor=\"gray.400\"\r\n                                    //textTransform=\"capitalize\"\r\n                                    ref={ref}\r\n                                    placeholder=\"results\"\r\n                                  />\r\n                                </HStack>\r\n                              </InputGroup>\r\n                            )}\r\n                          />\r\n                        </FormControl>\r\n                      </div>\r\n                      <div>\r\n                        <FormControl>\r\n                          <Controller\r\n                            control={control}\r\n                            name=\"conclusion\"\r\n                            defaultValue={formdata.conclusion}\r\n                            render={({ field: { onChange, value, ref } }) => (\r\n                              <InputGroup>\r\n                                <HStack w=\"100%\" py={1}>\r\n                                  <InputLeftAddon\r\n                                    children=\"Conclusion\"\r\n                                    minWidth={field_width}\r\n                                  />\r\n                                  <Input\r\n                                    name=\"conclusion\"\r\n                                    value={value}\r\n                                    width=\"full\"\r\n                                    onChange={onChange}\r\n                                    borderColor=\"gray.400\"\r\n                                    //textTransform=\"capitalize\"\r\n                                    ref={ref}\r\n                                    placeholder=\"conclusion\"\r\n                                  />\r\n                                </HStack>\r\n                              </InputGroup>\r\n                            )}\r\n                          />\r\n                        </FormControl>\r\n                      </div>\r\n\r\n                      <div>\r\n                        <FormControl>\r\n                          <Controller\r\n                            control={control}\r\n                            name=\"status\"\r\n                            defaultValue={formdata.status}\r\n                            render={({ field: { onChange, value, ref } }) => (\r\n                              <InputGroup>\r\n                                <HStack w=\"100%\" py={1}>\r\n                                  <InputLeftAddon\r\n                                    children=\"Status\"\r\n                                    minWidth={field_width}\r\n                                  />\r\n                                  <Select\r\n                                    name=\"status\"\r\n                                    value={value}\r\n                                    width=\"full\"\r\n                                    onChange={onChange}\r\n                                    borderColor=\"gray.400\"\r\n                                    //textTransform=\"capitalize\"\r\n                                    ref={ref}\r\n                                    //placeholder=\"category\"\r\n                                  >\r\n                                    <option value=\"In Progress\">\r\n                                      In Progress\r\n                                    </option>\r\n                                    <option value=\"Completed\">Completed</option>\r\n                                  </Select>\r\n                                </HStack>\r\n                              </InputGroup>\r\n                            )}\r\n                          />\r\n                        </FormControl>\r\n                      </div>\r\n\r\n                      <div>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className={classes.button}\r\n                          //onClick={() => handleSubmit(onSubmit)()}\r\n                        >\r\n                          Save <Icon className={classes.rightIcon}>send</Icon>\r\n                        </Button>\r\n                      </div>\r\n                    </form>\r\n                  </Box>\r\n                </TabPanel>\r\n              </TabPanels>\r\n            </Tabs>\r\n          </SimpleGrid>\r\n        </Box>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default ExpenseForm;\r\n"]},"metadata":{},"sourceType":"module"}