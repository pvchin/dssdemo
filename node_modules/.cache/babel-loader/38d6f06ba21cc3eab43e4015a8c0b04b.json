{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\BarChartStack.js\";\nimport React from \"react\";\nimport { Bar, char } from \"react-chartjs-2\";\nimport { Box } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [{\n    label: 'My First dataset',\n    backgroundColor: 'rgba(255,99,132,0.2)',\n    borderColor: 'rgba(255,99,132,1)',\n    borderWidth: 1,\n    stack: 1,\n    hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n    hoverBorderColor: 'rgba(255,99,132,1)',\n    data: [65, 59, 80, 81, 56, 55, 40]\n  }, {\n    label: 'My second dataset',\n    backgroundColor: 'rgba(155,231,91,0.2)',\n    borderColor: 'rgba(255,99,132,1)',\n    borderWidth: 1,\n    stack: 1,\n    hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n    hoverBorderColor: 'rgba(255,99,132,1)',\n    data: [45, 79, 10, 41, 16, 85, 20]\n  }]\n};\nexport default function BarChartStack() {\n  const options = {\n    responsive: true,\n    legend: {\n      display: false\n    },\n    type: \"bar\",\n    scales: {\n      xAxes: [{\n        stacked: true\n      }],\n      yAxes: [{\n        stacked: true\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      pointStyle: \"star\",\n      data: {\n        labels: data.labels,\n        responsive: true,\n        offset: true,\n        datasets: [{\n          label: \"Mobile\",\n          pointStyle: \"rectRounded\",\n          backgroundColor: \"#6ED3FF\",\n          barThickness: 40,\n          categoryPercentage: 1,\n          data: data.previousDate.dataSet //From API\n\n        }, {\n          label: \"Desktop\",\n          backgroundColor: \"#1497FF\",\n          barThickness: 40,\n          categoryPercentage: 1,\n          pointStyle: \"triangle\",\n          data: data.currentDate.dataSet //From API\n\n        }]\n      },\n      height: 220,\n      options: {\n        offsetGridLines: true,\n        drawTicks: true,\n        layout: {\n          padding: {\n            top: 30,\n            right: 40,\n            bottom: 40\n          }\n        },\n        legend: {\n          display: true,\n          position: \"right\",\n          align: \"start\",\n          labels: {\n            usePointStyle: true\n          }\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          xAxes: [{\n            stacked: true,\n            ticks: {\n              padding: 5\n            },\n            gridLines: {\n              display: false\n            }\n          }],\n          yAxes: [{\n            stacked: false,\n            gridLines: {\n              drawBorder: false\n            },\n            ticks: {\n              beginAtZero: true,\n              maxTicksLimit: 6,\n              padding: 20,\n\n              callback(n) {\n                if (n < 1e3) return n;\n                if (n >= 1e3) return +(n / 1e3).toFixed(1) + \"K\";\n              }\n\n            }\n          }]\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_c = BarChartStack;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChartStack\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/BarChartStack.js"],"names":["React","Bar","char","Box","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","stack","hoverBackgroundColor","hoverBorderColor","BarChartStack","options","responsive","legend","display","type","scales","xAxes","stacked","yAxes","offset","pointStyle","barThickness","categoryPercentage","previousDate","dataSet","currentDate","offsetGridLines","drawTicks","layout","padding","top","right","bottom","position","align","usePointStyle","maintainAspectRatio","ticks","gridLines","drawBorder","beginAtZero","maxTicksLimit","callback","n","toFixed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,iBAA1B;AACA,SAASC,GAAT,QAAoB,kBAApB;;AAEA,MAAMC,IAAI,GAAG;AACDC,EAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,CADP;AAEDC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,kBADT;AAEEC,IAAAA,eAAe,EAAE,sBAFnB;AAGEC,IAAAA,WAAW,EAAE,oBAHf;AAIEC,IAAAA,WAAW,EAAE,CAJf;AAKEC,IAAAA,KAAK,EAAE,CALT;AAMEC,IAAAA,oBAAoB,EAAE,sBANxB;AAOEC,IAAAA,gBAAgB,EAAE,oBAPpB;AAQET,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AARR,GADQ,EAWR;AACEG,IAAAA,KAAK,EAAE,mBADT;AAEEC,IAAAA,eAAe,EAAE,sBAFnB;AAGEC,IAAAA,WAAW,EAAE,oBAHf;AAIEC,IAAAA,WAAW,EAAE,CAJf;AAKEC,IAAAA,KAAK,EAAE,CALT;AAMEC,IAAAA,oBAAoB,EAAE,sBANxB;AAOEC,IAAAA,gBAAgB,EAAE,oBAPpB;AAQET,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AARR,GAXQ;AAFT,CAAb;AA0BA,eAAe,SAASU,aAAT,GAAyB;AACpC,QAAMC,OAAO,GAAG;AACdC,IAAAA,UAAU,EAAE,IADE;AAEdC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE;AADH,KAFM;AAKdC,IAAAA,IAAI,EAAE,KALQ;AAMdC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,OAAO,EAAE;AADX,OADK,CADD;AAMNC,MAAAA,KAAK,EAAE,CACL;AACED,QAAAA,OAAO,EAAE;AADX,OADK;AAND;AANM,GAAhB;AAmBF,sBACE,QAAC,GAAD;AAAA,2BACE,QAAC,GAAD;AACE,MAAA,UAAU,EAAC,MADb;AAEE,MAAA,IAAI,EAAE;AACJjB,QAAAA,MAAM,EAAED,IAAI,CAACC,MADT;AAEJW,QAAAA,UAAU,EAAE,IAFR;AAGJQ,QAAAA,MAAM,EAAE,IAHJ;AAIJlB,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,QADT;AAEEkB,UAAAA,UAAU,EAAE,aAFd;AAGEjB,UAAAA,eAAe,EAAE,SAHnB;AAIEkB,UAAAA,YAAY,EAAE,EAJhB;AAKEC,UAAAA,kBAAkB,EAAE,CALtB;AAMEvB,UAAAA,IAAI,EAAEA,IAAI,CAACwB,YAAL,CAAkBC,OAN1B,CAMmC;;AANnC,SADQ,EASR;AACEtB,UAAAA,KAAK,EAAE,SADT;AAEEC,UAAAA,eAAe,EAAE,SAFnB;AAGEkB,UAAAA,YAAY,EAAE,EAHhB;AAIEC,UAAAA,kBAAkB,EAAE,CAJtB;AAKEF,UAAAA,UAAU,EAAE,UALd;AAMErB,UAAAA,IAAI,EAAEA,IAAI,CAAC0B,WAAL,CAAiBD,OANzB,CAMkC;;AANlC,SATQ;AAJN,OAFR;AAyBE,MAAA,MAAM,EAAE,GAzBV;AA0BE,MAAA,OAAO,EAAE;AACPE,QAAAA,eAAe,EAAE,IADV;AAEPC,QAAAA,SAAS,EAAE,IAFJ;AAGPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,OAAO,EAAE;AACPC,YAAAA,GAAG,EAAE,EADE;AAEPC,YAAAA,KAAK,EAAE,EAFA;AAGPC,YAAAA,MAAM,EAAE;AAHD;AADH,SAHD;AAUPpB,QAAAA,MAAM,EAAE;AACNC,UAAAA,OAAO,EAAE,IADH;AAENoB,UAAAA,QAAQ,EAAE,OAFJ;AAGNC,UAAAA,KAAK,EAAE,OAHD;AAINlC,UAAAA,MAAM,EAAE;AACNmC,YAAAA,aAAa,EAAE;AADT;AAJF,SAVD;AAkBPxB,QAAAA,UAAU,EAAE,IAlBL;AAmBPyB,QAAAA,mBAAmB,EAAE,KAnBd;AAoBPrB,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CACL;AACEC,YAAAA,OAAO,EAAE,IADX;AAEEoB,YAAAA,KAAK,EAAE;AACLR,cAAAA,OAAO,EAAE;AADJ,aAFT;AAKES,YAAAA,SAAS,EAAE;AACTzB,cAAAA,OAAO,EAAE;AADA;AALb,WADK,CADD;AAYNK,UAAAA,KAAK,EAAE,CACL;AACED,YAAAA,OAAO,EAAE,KADX;AAEEqB,YAAAA,SAAS,EAAE;AACTC,cAAAA,UAAU,EAAE;AADH,aAFb;AAKEF,YAAAA,KAAK,EAAE;AACLG,cAAAA,WAAW,EAAE,IADR;AAELC,cAAAA,aAAa,EAAE,CAFV;AAGLZ,cAAAA,OAAO,EAAE,EAHJ;;AAILa,cAAAA,QAAQ,CAACC,CAAD,EAAI;AACV,oBAAIA,CAAC,GAAG,GAAR,EAAa,OAAOA,CAAP;AACb,oBAAIA,CAAC,IAAI,GAAT,EAAc,OAAO,CAAC,CAACA,CAAC,GAAG,GAAL,EAAUC,OAAV,CAAkB,CAAlB,CAAD,GAAwB,GAA/B;AACf;;AAPI;AALT,WADK;AAZD;AApBD;AA1BX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkFD;KAtGuBnC,a","sourcesContent":["import React from \"react\";\r\nimport { Bar, char } from \"react-chartjs-2\";\r\nimport { Box } from \"@chakra-ui/react\"\r\n\r\nconst data = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [\r\n              {\r\n                label: 'My First dataset',\r\n                backgroundColor: 'rgba(255,99,132,0.2)',\r\n                borderColor: 'rgba(255,99,132,1)',\r\n                borderWidth: 1,\r\n                stack: 1,\r\n                hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n                hoverBorderColor: 'rgba(255,99,132,1)',\r\n                data: [65, 59, 80, 81, 56, 55, 40]\r\n              },\r\n              {\r\n                label: 'My second dataset',\r\n                backgroundColor: 'rgba(155,231,91,0.2)',\r\n                borderColor: 'rgba(255,99,132,1)',\r\n                borderWidth: 1,\r\n                stack: 1,\r\n                hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n                hoverBorderColor: 'rgba(255,99,132,1)',\r\n                data: [45, 79, 10, 41, 16, 85, 20]\r\n              }\r\n            ]\r\n        }\r\n\r\nexport default function BarChartStack() {\r\n    const options = {\r\n      responsive: true,\r\n      legend: {\r\n        display: false,\r\n      },\r\n      type: \"bar\",\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            stacked: true,\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            stacked: true,\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  return (\r\n    <Box>\r\n      <Bar\r\n        pointStyle=\"star\"\r\n        data={{\r\n          labels: data.labels,\r\n          responsive: true,\r\n          offset: true,\r\n          datasets: [\r\n            {\r\n              label: \"Mobile\",\r\n              pointStyle: \"rectRounded\",\r\n              backgroundColor: \"#6ED3FF\",\r\n              barThickness: 40,\r\n              categoryPercentage: 1,\r\n              data: data.previousDate.dataSet, //From API\r\n            },\r\n            {\r\n              label: \"Desktop\",\r\n              backgroundColor: \"#1497FF\",\r\n              barThickness: 40,\r\n              categoryPercentage: 1,\r\n              pointStyle: \"triangle\",\r\n              data: data.currentDate.dataSet, //From API\r\n            },\r\n          ],\r\n        }}\r\n        height={220}\r\n        options={{\r\n          offsetGridLines: true,\r\n          drawTicks: true,\r\n          layout: {\r\n            padding: {\r\n              top: 30,\r\n              right: 40,\r\n              bottom: 40,\r\n            },\r\n          },\r\n          legend: {\r\n            display: true,\r\n            position: \"right\",\r\n            align: \"start\",\r\n            labels: {\r\n              usePointStyle: true,\r\n            },\r\n          },\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                stacked: true,\r\n                ticks: {\r\n                  padding: 5,\r\n                },\r\n                gridLines: {\r\n                  display: false,\r\n                },\r\n              },\r\n            ],\r\n            yAxes: [\r\n              {\r\n                stacked: false,\r\n                gridLines: {\r\n                  drawBorder: false,\r\n                },\r\n                ticks: {\r\n                  beginAtZero: true,\r\n                  maxTicksLimit: 6,\r\n                  padding: 20,\r\n                  callback(n) {\r\n                    if (n < 1e3) return n;\r\n                    if (n >= 1e3) return +(n / 1e3).toFixed(1) + \"K\";\r\n                  },\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}