{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { dailyallowsdetls_url } from \"../../utils/constants\";\nimport { filterByEmpId } from \"./utils\";\nimport axios from \"axios\";\nimport { queryKeys } from \"../react-query/constants\";\n\nasync function getDailyAllowsDetlsBatch(empid, period) {\n  const {\n    data\n  } = await axios.get(`${dailyallowsdetls_url}?fv=${empid}?period=${period}`); //const { data } = await axios.get(`${dailyallowsdetls_url}`);\n\n  return data;\n}\n\nexport function useDailyAllowsDetlsBatch(empid) {\n  _s();\n\n  const [dailyAllowsDetlsfilter, setDailyAllowsDetlsFilter] = useState(\"all\");\n  const [dailyAllowsDetlsId, setDailyAllowsDetlsId] = useState(\"\");\n  const [dailyAllowsDetlsPeriod, setDailyAllowsDetlsPeriod] = useState(\"\");\n  const selectFn = useCallback(unfiltered => filterByEmpId(unfiltered, dailyAllowsDetlsfilter), [dailyAllowsDetlsfilter]);\n  const fallback = [];\n  const {\n    data: dailyallowsdetlsbatch = fallback\n  } = useQuery([queryKeys.dailyallowsbatch, dailyAllowsDetlsId, dailyAllowsDetlsPeriod], //queryKeys.dailyallowsdetls,\n  () => getDailyAllowsDetlsBatch(dailyAllowsDetlsId, dailyAllowsDetlsPeriod), {\n    select: dailyAllowsDetlsfilter !== \"all\" ? selectFn : undefined\n  });\n  return {\n    dailyallowsdetlsbatch,\n    dailyAllowsDetlsfilter,\n    setDailyAllowsDetlsFilter,\n    setDailyAllowsDetlsId,\n    setDailyAllowsDetlsPeriod\n  };\n}\n\n_s(useDailyAllowsDetlsBatch, \"TnPoMAEyAp6QKuFoEuj/YgkGNZ0=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/dailyallowsdetls/useDailyAllowsDetlsBatch.js"],"names":["useState","useCallback","useQuery","dailyallowsdetls_url","filterByEmpId","axios","queryKeys","getDailyAllowsDetlsBatch","empid","period","data","get","useDailyAllowsDetlsBatch","dailyAllowsDetlsfilter","setDailyAllowsDetlsFilter","dailyAllowsDetlsId","setDailyAllowsDetlsId","dailyAllowsDetlsPeriod","setDailyAllowsDetlsPeriod","selectFn","unfiltered","fallback","dailyallowsdetlsbatch","dailyallowsbatch","select","undefined"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,oBAAT,QAAqC,uBAArC;AACA,SAASC,aAAT,QAA8B,SAA9B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,0BAA1B;;AAEA,eAAeC,wBAAf,CAAwCC,KAAxC,EAA+CC,MAA/C,EAAuD;AACrD,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAML,KAAK,CAACM,GAAN,CACpB,GAAER,oBAAqB,OAAMK,KAAM,WAAUC,MAAO,EADhC,CAAvB,CADqD,CAIrD;;AACA,SAAOC,IAAP;AACD;;AAED,OAAO,SAASE,wBAAT,CAAkCJ,KAAlC,EAAyC;AAAA;;AAC9C,QAAM,CAACK,sBAAD,EAAyBC,yBAAzB,IAAsDd,QAAQ,CAAC,KAAD,CAApE;AACA,QAAM,CAACe,kBAAD,EAAqBC,qBAArB,IAA8ChB,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACiB,sBAAD,EAAyBC,yBAAzB,IAAsDlB,QAAQ,CAAC,EAAD,CAApE;AAEA,QAAMmB,QAAQ,GAAGlB,WAAW,CACzBmB,UAAD,IAAgBhB,aAAa,CAACgB,UAAD,EAAaP,sBAAb,CADH,EAE1B,CAACA,sBAAD,CAF0B,CAA5B;AAKA,QAAMQ,QAAQ,GAAG,EAAjB;AACA,QAAM;AAAEX,IAAAA,IAAI,EAAEY,qBAAqB,GAAGD;AAAhC,MAA6CnB,QAAQ,CACzD,CAACI,SAAS,CAACiB,gBAAX,EAA6BR,kBAA7B,EAAiDE,sBAAjD,CADyD,EAEzD;AACA,QAAMV,wBAAwB,CAACQ,kBAAD,EAAqBE,sBAArB,CAH2B,EAIzD;AACEO,IAAAA,MAAM,EAAEX,sBAAsB,KAAK,KAA3B,GAAmCM,QAAnC,GAA8CM;AADxD,GAJyD,CAA3D;AASA,SAAO;AACLH,IAAAA,qBADK;AAELT,IAAAA,sBAFK;AAGLC,IAAAA,yBAHK;AAILE,IAAAA,qBAJK;AAKLE,IAAAA;AALK,GAAP;AAOD;;GA3BeN,wB;UAWqCV,Q","sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { dailyallowsdetls_url } from \"../../utils/constants\";\r\nimport { filterByEmpId } from \"./utils\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getDailyAllowsDetlsBatch(empid, period) {\r\n  const { data } = await axios.get(\r\n    `${dailyallowsdetls_url}?fv=${empid}?period=${period}`\r\n  );\r\n  //const { data } = await axios.get(`${dailyallowsdetls_url}`);\r\n  return data;\r\n}\r\n\r\nexport function useDailyAllowsDetlsBatch(empid) {\r\n  const [dailyAllowsDetlsfilter, setDailyAllowsDetlsFilter] = useState(\"all\");\r\n  const [dailyAllowsDetlsId, setDailyAllowsDetlsId] = useState(\"\");\r\n  const [dailyAllowsDetlsPeriod, setDailyAllowsDetlsPeriod] = useState(\"\");\r\n\r\n  const selectFn = useCallback(\r\n    (unfiltered) => filterByEmpId(unfiltered, dailyAllowsDetlsfilter),\r\n    [dailyAllowsDetlsfilter]\r\n  );\r\n\r\n  const fallback = [];\r\n  const { data: dailyallowsdetlsbatch = fallback } = useQuery(\r\n    [queryKeys.dailyallowsbatch, dailyAllowsDetlsId, dailyAllowsDetlsPeriod],\r\n    //queryKeys.dailyallowsdetls,\r\n    () => getDailyAllowsDetlsBatch(dailyAllowsDetlsId, dailyAllowsDetlsPeriod),\r\n    {\r\n      select: dailyAllowsDetlsfilter !== \"all\" ? selectFn : undefined,\r\n    }\r\n  );\r\n\r\n  return {\r\n    dailyallowsdetlsbatch,\r\n    dailyAllowsDetlsfilter,\r\n    setDailyAllowsDetlsFilter,\r\n    setDailyAllowsDetlsId,\r\n    setDailyAllowsDetlsPeriod,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}