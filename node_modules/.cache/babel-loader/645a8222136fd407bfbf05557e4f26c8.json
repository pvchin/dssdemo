{"ast":null,"code":"import _classCallCheck from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Action } from \"../../internal/Action\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\nimport { clip, clipEvenOdd } from \"../../qualifiers/flag\";\n/**\n * @description  Defines the clipping path to use when trimming pixels.\n * @extends SDK.Action\n * @memberOf Actions.PSDTools\n * @see Visit {@link Actions.PSDTools| PSDTools} for an example\n */\n\nvar ClipAction = /*#__PURE__*/function (_Action) {\n  _inherits(ClipAction, _Action);\n\n  var _super = _createSuper(ClipAction);\n\n  function ClipAction() {\n    var _this;\n\n    _classCallCheck(this, ClipAction);\n\n    _this = _super.call(this);\n    _this.isEvenOdd = false;\n    return _this;\n  }\n  /**\n   * @description The name of the path to clip by\n   * @param {string} path\n   * @return {this}\n   */\n\n\n  _createClass(ClipAction, [{\n    key: \"byName\",\n    value: function byName(path) {\n      this.path = path;\n      return this;\n    }\n    /**\n     * @description The index of the path to clip by\n     * @param {number} path\n     * @return {this}\n     */\n\n  }, {\n    key: \"byIndex\",\n    value: function byIndex(path) {\n      this.path = path;\n      return this;\n    }\n    /**\n     * @description Trims pixels according to a clipping path included in the original image using an evenodd clipping rule.\n     * @return {this}\n     */\n\n  }, {\n    key: \"evenOdd\",\n    value: function evenOdd() {\n      this.isEvenOdd = true;\n      return this;\n    }\n  }, {\n    key: \"prepareQualifiers\",\n    value: function prepareQualifiers() {\n      var qualifierValue;\n\n      if (typeof this.path === 'string') {\n        qualifierValue = new QualifierValue(['name', this.path]).setDelimiter(':');\n      } else {\n        qualifierValue = new QualifierValue(this.path);\n      } //handles flag\n\n\n      if (this.isEvenOdd) {\n        this.addFlag(clipEvenOdd());\n      } else {\n        this.addFlag(clip());\n      }\n\n      this.addQualifier(new Qualifier('pg', qualifierValue));\n      return this;\n    }\n  }]);\n\n  return ClipAction;\n}(Action);\n\nexport { ClipAction };","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/actions/psdTools/ClipAction.js"],"names":["Action","Qualifier","QualifierValue","clip","clipEvenOdd","ClipAction","isEvenOdd","path","qualifierValue","setDelimiter","addFlag","addQualifier"],"mappings":";;;;AAAA,SAASA,MAAT,QAAuB,uBAAvB;AACA,SAASC,SAAT,QAA0B,oCAA1B;AACA,SAASC,cAAT,QAA+B,yCAA/B;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,uBAAlC;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,U;;;;;AACF,wBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,SAAL,GAAiB,KAAjB;AAFU;AAGb;AACD;AACJ;AACA;AACA;AACA;;;;;WACI,gBAAOC,IAAP,EAAa;AACT,WAAKA,IAAL,GAAYA,IAAZ;AACA,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,iBAAQA,IAAR,EAAc;AACV,WAAKA,IAAL,GAAYA,IAAZ;AACA,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,mBAAU;AACN,WAAKD,SAAL,GAAiB,IAAjB;AACA,aAAO,IAAP;AACH;;;WACD,6BAAoB;AAChB,UAAIE,cAAJ;;AACA,UAAI,OAAO,KAAKD,IAAZ,KAAqB,QAAzB,EAAmC;AAC/BC,QAAAA,cAAc,GAAG,IAAIN,cAAJ,CAAmB,CAAC,MAAD,EAAS,KAAKK,IAAd,CAAnB,EAAwCE,YAAxC,CAAqD,GAArD,CAAjB;AACH,OAFD,MAGK;AACDD,QAAAA,cAAc,GAAG,IAAIN,cAAJ,CAAmB,KAAKK,IAAxB,CAAjB;AACH,OAPe,CAQhB;;;AACA,UAAI,KAAKD,SAAT,EAAoB;AAChB,aAAKI,OAAL,CAAaN,WAAW,EAAxB;AACH,OAFD,MAGK;AACD,aAAKM,OAAL,CAAaP,IAAI,EAAjB;AACH;;AACD,WAAKQ,YAAL,CAAkB,IAAIV,SAAJ,CAAc,IAAd,EAAoBO,cAApB,CAAlB;AACA,aAAO,IAAP;AACH;;;;EAhDoBR,M;;AAkDzB,SAASK,UAAT","sourcesContent":["import { Action } from \"../../internal/Action\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\nimport { clip, clipEvenOdd } from \"../../qualifiers/flag\";\n/**\n * @description  Defines the clipping path to use when trimming pixels.\n * @extends SDK.Action\n * @memberOf Actions.PSDTools\n * @see Visit {@link Actions.PSDTools| PSDTools} for an example\n */\nclass ClipAction extends Action {\n    constructor() {\n        super();\n        this.isEvenOdd = false;\n    }\n    /**\n     * @description The name of the path to clip by\n     * @param {string} path\n     * @return {this}\n     */\n    byName(path) {\n        this.path = path;\n        return this;\n    }\n    /**\n     * @description The index of the path to clip by\n     * @param {number} path\n     * @return {this}\n     */\n    byIndex(path) {\n        this.path = path;\n        return this;\n    }\n    /**\n     * @description Trims pixels according to a clipping path included in the original image using an evenodd clipping rule.\n     * @return {this}\n     */\n    evenOdd() {\n        this.isEvenOdd = true;\n        return this;\n    }\n    prepareQualifiers() {\n        let qualifierValue;\n        if (typeof this.path === 'string') {\n            qualifierValue = new QualifierValue(['name', this.path]).setDelimiter(':');\n        }\n        else {\n            qualifierValue = new QualifierValue(this.path);\n        }\n        //handles flag\n        if (this.isEvenOdd) {\n            this.addFlag(clipEvenOdd());\n        }\n        else {\n            this.addFlag(clip());\n        }\n        this.addQualifier(new Qualifier('pg', qualifierValue));\n        return this;\n    }\n}\nexport { ClipAction };\n"]},"metadata":{},"sourceType":"module"}