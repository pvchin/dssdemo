{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\LeaveTableViewAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { useHistory } from \"react-router-dom\";\nimport { differenceInDays, differenceInMonths } from \"date-fns\";\nimport axios from \"axios\";\nimport MaterialTable from \"material-table\";\nimport { Box, Grid, Heading, GridItem, Icon, IconButton, Stack, Spacer } from \"@chakra-ui/react\";\nimport { EditIcon, ViewIcon } from \"@chakra-ui/icons\";\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\nimport { selector, useRecoilState, useRecoilValueLoadable } from \"recoil\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useLeavesContext } from \"../context/leaves_context\";\nimport { leaves_url } from \"../utils/constants\";\nimport { useLeaves } from \"./leaves/useLeaves\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240; // const fetchExpensesDetails = selector({\n//   key: \"fetchExpensesDetailsSelector\",\n//   get: async ({ get }) => {\n//     try {\n//       const { data } = await axios.get(expenses_url);\n//       const wpexpirydata = data;\n//       return data;\n//     } catch (error) {\n//       throw error;\n//     }\n//   },\n// });\n\nconst LeaveTableViewStaff = () => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const {\n    leaves,\n    filter,\n    setFilter,\n    setLeaveId\n  } = useLeaves();\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const [userdata, setUserdata] = useState([]); //const [userdata, setUserdata] = useRecoilState(userdatastate);\n  //const ExpensesDetails = useRecoilValueLoadable(fetchExpensesDetails);\n  //const { state, contents } = ExpensesDetails;\n\n  const {\n    editEmployeeID\n  } = useEmployeesContext();\n  const {\n    leaves_loading,\n    leaves_error,\n    loadEmpLeaves\n  } = useLeavesContext();\n  const today = Date().toLocaleString();\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h4\",\n          size: \"md\",\n          children: \"Leaves Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton // variant=\"outline\"\n        , {\n          size: \"md\",\n          \"aria-label\": \"Edit\",\n          icon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this),\n          onClick: () => history.push(\"/leave\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), leaves.filter(i => i.status === \"Approve\" && differenceInDays(new Date(i.from_date), new Date(today)) < 60 && differenceInDays(new Date(i.to_date), new Date(today)) < 60 && differenceInDays(new Date(i.from_date), new Date(today)) > 0).map(row => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          templateColumns: \"repeat(13, 1fr)\",\n          gap: 3,\n          p: 1,\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 1,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              w: \"100%\",\n              children: /*#__PURE__*/_jsxDEV(ViewIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 3,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              w: \"100%\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 3,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              w: \"100%\",\n              children: row.from_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 3,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              w: \"100%\",\n              children: row.to_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 3,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              w: \"100%\",\n              children: row.reason\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this) // <ListItem key={row.id}>\n        //   <Grid item sm={3} align=\"center\">\n        //     <ListItemText>{row.name}</ListItemText>\n        //   </Grid>\n        //   <Grid item sm={3} align=\"center\">\n        //     <ListItemText>{row.from_date}</ListItemText>\n        //   </Grid>\n        //   <Grid item sm={3} align=\"center\">\n        //     <ListItemText>{row.to_date}</ListItemText>\n        //   </Grid>\n        //   <Grid item sm={3} align=\"center\">\n        //     <ListItemText>{row.reason}</ListItemText>\n        //   </Grid>\n        //   <Grid item sm={3} align=\"center\">\n        //     <ListItemText>{row.status}</ListItemText>\n        //   </Grid>\n        // </ListItem>\n        ;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LeaveTableViewStaff, \"s5dB17Rk7QbNr6X+TYdZzvBxvt4=\", false, function () {\n  return [useStyles, useHistory, useLeaves, useRecoilState, useEmployeesContext, useLeavesContext];\n});\n\n_c = LeaveTableViewStaff;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\nexport default LeaveTableViewStaff;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeaveTableViewStaff\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/LeaveTableViewAdmin.js"],"names":["React","useState","useEffect","makeStyles","clsx","useHistory","differenceInDays","differenceInMonths","axios","MaterialTable","Box","Grid","Heading","GridItem","Icon","IconButton","Stack","Spacer","EditIcon","ViewIcon","List","ListItem","ListItemText","selector","useRecoilState","useRecoilValueLoadable","loginLevelState","useEmployeesContext","useLeavesContext","leaves_url","useLeaves","drawerWidth","LeaveTableViewStaff","classes","useStyles","history","fixedHeightPaper","paper","fixedHeight","leaves","filter","setFilter","setLeaveId","loginLevel","setLoginLevel","userdata","setUserdata","editEmployeeID","leaves_loading","leaves_error","loadEmpLeaves","today","Date","toLocaleString","root","push","i","status","from_date","to_date","map","row","name","reason","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { useHistory} from \"react-router-dom\"\r\nimport { differenceInDays, differenceInMonths } from \"date-fns\";\r\nimport axios from \"axios\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Box, Grid,Heading,GridItem, Icon, IconButton,Stack, Spacer } from \"@chakra-ui/react\";\r\nimport { EditIcon, ViewIcon } from \"@chakra-ui/icons\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { selector, useRecoilState, useRecoilValueLoadable } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { leaves_url } from \"../utils/constants\";\r\nimport { useLeaves } from \"./leaves/useLeaves\";\r\n\r\nconst drawerWidth = 240;\r\n\r\n// const fetchExpensesDetails = selector({\r\n//   key: \"fetchExpensesDetailsSelector\",\r\n//   get: async ({ get }) => {\r\n//     try {\r\n//       const { data } = await axios.get(expenses_url);\r\n//       const wpexpirydata = data;\r\n\r\n//       return data;\r\n//     } catch (error) {\r\n//       throw error;\r\n//     }\r\n//   },\r\n// });\r\n\r\nconst LeaveTableViewStaff = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory()\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { leaves, filter, setFilter, setLeaveId } = useLeaves();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [userdata, setUserdata] = useState([]);\r\n  //const [userdata, setUserdata] = useRecoilState(userdatastate);\r\n  //const ExpensesDetails = useRecoilValueLoadable(fetchExpensesDetails);\r\n  //const { state, contents } = ExpensesDetails;\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const { leaves_loading, leaves_error, loadEmpLeaves } = useLeavesContext();\r\n  const today = Date().toLocaleString();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <Grid container direction=\"row\">\r\n        <Stack direction=\"row\">\r\n          <Heading as=\"h4\" size=\"md\">\r\n            Leaves Schedule\r\n          </Heading>\r\n          <Spacer />\r\n          <IconButton\r\n            // variant=\"outline\"\r\n            size=\"md\"\r\n            aria-label=\"Edit\"\r\n            icon={<EditIcon />}\r\n            onClick={() => history.push(\"/leave\")}\r\n          />\r\n        </Stack>\r\n       \r\n        {leaves\r\n          .filter(\r\n            (i) =>\r\n              i.status === \"Approve\" &&\r\n              differenceInDays(new Date(i.from_date), new Date(today)) < 60 &&\r\n              differenceInDays(new Date(i.to_date), new Date(today)) < 60 &&\r\n              differenceInDays(new Date(i.from_date), new Date(today)) > 0\r\n          )\r\n          .map((row) => {\r\n            return (\r\n              <Grid templateColumns=\"repeat(13, 1fr)\" gap={3} p={1}>\r\n                <GridItem colSpan={1}>\r\n                  <Box w=\"100%\">\r\n                    <ViewIcon />\r\n                  </Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.name}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.from_date}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.to_date}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.reason}</Box>\r\n                </GridItem>\r\n              </Grid>\r\n              // <ListItem key={row.id}>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.name}</ListItemText>\r\n              //   </Grid>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.from_date}</ListItemText>\r\n              //   </Grid>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.to_date}</ListItemText>\r\n              //   </Grid>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.reason}</ListItemText>\r\n              //   </Grid>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.status}</ListItemText>\r\n              //   </Grid>\r\n              // </ListItem>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default LeaveTableViewStaff;\r\n"]},"metadata":{},"sourceType":"module"}