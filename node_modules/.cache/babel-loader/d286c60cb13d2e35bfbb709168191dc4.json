{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\LeaveTableApproval.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport { Button, HStack } from \"@chakra-ui/react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport LeaveFormAdmin from \"./LeaveFormAdmin\";\nimport { CustomDialog } from \"../helpers/CustomDialog\";\nimport { useCustomToast } from \"../helpers/useCustomToast\";\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\nimport { useLeavesContext } from \"../context/leaves_context\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useLeaves } from \"./leaves/useLeaves\";\nimport { useLeavesStatus } from \"./leaves/useLeavesStatus\";\nimport { useAddLeaves } from \"./leaves/useAddLeaves\";\nimport { useDeleteLeaves } from \"./leaves/useDeleteLeaves\";\nimport { useUpdateLeaves } from \"./leaves/useUpdateLeaves\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initial_form = {\n  name: \"\",\n  to_date: \"\",\n  from_date: \"\",\n  reason: \"\",\n  status: \"Pending\",\n  no_of_days: 0,\n  leave_bal: 0\n};\nconst columns = [{\n  title: \"Name\",\n  field: \"name\",\n  editable: \"never\"\n}, {\n  title: \"From Date\",\n  field: \"from_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editable: \"never\"\n}, {\n  title: \"To Date\",\n  field: \"to_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editable: \"never\"\n}, {\n  title: \"Leave Balance\",\n  field: \"leave_bal\",\n  type: \"numeric\",\n  editable: \"never\"\n}, {\n  title: \"No of Days\",\n  field: \"no_of_days\",\n  type: \"numeric\",\n  editable: \"never\"\n}, {\n  title: \"Reason\",\n  field: \"reason\",\n  editable: \"never\"\n}, {\n  title: \"Status\",\n  field: \"status\",\n  editComponent: props => /*#__PURE__*/_jsxDEV(TextField //defaultValue={props.value || null}\n  , {\n    onChange: e => props.onChange(e.target.value),\n    style: {\n      width: 100\n    },\n    value: props.value,\n    select: true,\n    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Pending\",\n      children: \"Pending\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Approve\",\n      children: \"Approve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Reject\",\n      children: \"Reject\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Cancel\",\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }, this)\n}];\nexport default function LeaveTableApproval() {\n  _s();\n\n  const classes = useStyles();\n  const toast = useCustomToast(); //const { leaves, filter, setFilter, setLeaveId } = useLeaves();\n\n  const {\n    leavesstatus,\n    setLeaveStatusId\n  } = useLeavesStatus();\n  const updateLeaves = useUpdateLeaves();\n  const addLeaves = useAddLeaves();\n  const deleteLeaves = useDeleteLeaves();\n  const [formdata, setFormdata] = useState(initial_form);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const [isUpdate, setIsUpdate] = useState(true);\n  const {\n    // leaves,\n    editLeaveID,\n    leaves_loading,\n    deleteLeave,\n    loadLeaves,\n    getSingleLeave,\n    setEditLeaveID,\n    setIsLeaveEditingOn,\n    setIsLeaveEditingOff,\n    resetSingleLeave\n  } = useLeavesContext();\n  useEffect(() => {\n    setLeaveStatusId(\"Pending\");\n    setIsUpdate(false);\n  }, [isUpdate]); // const update_Leave = async (data) => {\n  //   const { id } = data;\n  //   setFormdata({ ...data });\n  //   setEditLeaveID(id);\n  //   setIsLeaveEditingOn();\n  //   getSingleLeave(id);\n  //   handleDialogOpen();\n  //   //history.push(\"/singleleave\");\n  // };\n  // const add_Leave = async (data) => {\n  //   // const { id } = data;\n  //   setFormdata({ ...data });\n  //   resetSingleLeave();\n  //   setEditLeaveID(\"\");\n  //   setIsLeaveEditingOff();\n  //   handleDialogOpen();\n  //   //history.push(\"/singleleave\");\n  // };\n  // const delete_Leave = (data) => {\n  //   const { id } = data;\n  //   setEditLeaveID(id);\n  //   handleAlertOpen();\n  //   //deleteLeave(id);\n  //   //loadLeaves();\n  // };\n\n  const handleDialogOpen = () => {\n    setIsDialogOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setIsDialogOpen(false);\n  };\n\n  const handleAlertOpen = () => {\n    setIsAlertOpen(true);\n  };\n\n  const handleAlertClose = () => {\n    setIsAlertOpen(false);\n  };\n\n  const handleOnDeleteConfirm = () => {\n    const id = editLeaveID;\n    deleteLeaves(id);\n  };\n\n  const Approve_Leave = () => {\n    leavesstatus.forEach(rec => {\n      if (rec.tableData.checked) {\n        updateLeaves({\n          id: rec.id,\n          status: \"Approved\"\n        });\n        toast({\n          title: \"Leave record being approved!\",\n          status: \"success\"\n        }); //update leavesdata\n        // if (!update_dailyallowance_error) {\n        //   const recdata = dailyallowancesdata.filter((r) => r.id === rec.id);\n        //   recdata[0].status = \"Approved\";\n        // }\n      }\n    });\n    leavesstatus.forEach(d => {\n      if (d.tableData) d.tableData.checked = false;\n    });\n  };\n\n  const Reject_Leave = () => {\n    leavesstatus.forEach(rec => {\n      if (rec.tableData.checked) {\n        updateLeaves({\n          id: rec.id,\n          status: \"Rejected\"\n        });\n        toast({\n          title: \"Leave record being rejected!\",\n          status: \"success\"\n        }); //update leavesdata\n        // if (!update_dailyallowance_error) {\n        //   const recdata = dailyallowancesdata.filter((r) => r.id === rec.id);\n        //   recdata[0].status = \"Approved\";\n        // }\n      }\n    });\n    leavesstatus.forEach(d => {\n      if (d.tableData) d.tableData.checked = false;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: leavesstatus,\n        title: \"Leave Application\",\n        icons: {\n          Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this),\n          Edit: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 30\n          }, this),\n          View: props => /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 30\n          }, this),\n          Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 32\n          }, this),\n          Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 31\n          }, this),\n          Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 31\n          }, this),\n          Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 32\n          }, this),\n          ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 37\n          }, this)\n        },\n        actions: [// {\n          //   icon: () => <VisibilityIcon />,\n          //   tooltip: \"Edit Record\",\n          //   onClick: (event, rowData) => {\n          //     update_Leave(rowData);\n          //   },\n          // },\n          // {\n          //   icon: \"delete\",\n          //   tooltip: \"Delete Record\",\n          //   onClick: (event, rowData) => {\n          //     delete_Leave(rowData);\n          //   },\n          // },\n          // {\n          //   icon: \"add\",\n          //   tooltip: \"Add Record\",\n          //   isFreeAction: true,\n          //   onClick: (event, rowData) => {\n          //     add_Leave(rowData);\n          //   },\n          // },\n        ],\n        options: {\n          filtering: true,\n          selection: true,\n          paging: false,\n          headerStyle: {\n            backgroundColor: \"rgba(75, 192, 192, 1)\",\n            color: \"white\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(HStack, {\n              p: 2,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"solid\",\n                color: \"white\",\n                bgColor: \"red\" //className={classes.button}\n                ,\n                onClick: Approve_Leave,\n                children: \"Approve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"solid\",\n                color: \"white\",\n                bgColor: \"red\" //className={classes.button}\n                ,\n                onClick: Reject_Leave,\n                children: \"Reject\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n        isOpen: isDialogOpen,\n        handleClose: handleDialogClose,\n        title: \"\",\n        showButton: true,\n        isFullscree: false,\n        children: /*#__PURE__*/_jsxDEV(LeaveFormAdmin, {\n          formdata: formdata,\n          setFormdata: setFormdata,\n          handleDialogClose: handleDialogClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AlertDialogBox, {\n        onClose: handleAlertClose,\n        onConfirm: handleOnDeleteConfirm,\n        isOpen: isAlertOpen,\n        title: \"Delete Expenses\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Are you sure you want to delete ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LeaveTableApproval, \"3l/UMlmqvt9C4MWSO5hZsVl3xHY=\", false, function () {\n  return [useStyles, useCustomToast, useLeavesStatus, useUpdateLeaves, useAddLeaves, useDeleteLeaves, useLeavesContext];\n});\n\n_c = LeaveTableApproval;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"LeaveTableApproval\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/LeaveTableApproval.js"],"names":["React","useState","useEffect","MaterialTable","MTableToolbar","TextField","MenuItem","Button","HStack","makeStyles","AddIcon","VisibilityIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","LeaveFormAdmin","CustomDialog","useCustomToast","AlertDialogBox","useLeavesContext","useEmployeesContext","useLeaves","useLeavesStatus","useAddLeaves","useDeleteLeaves","useUpdateLeaves","initial_form","name","to_date","from_date","reason","status","no_of_days","leave_bal","columns","title","field","editable","type","dateSetting","locale","editComponent","props","e","onChange","target","value","width","LeaveTableApproval","classes","useStyles","toast","leavesstatus","setLeaveStatusId","updateLeaves","addLeaves","deleteLeaves","formdata","setFormdata","isDialogOpen","setIsDialogOpen","isAlertOpen","setIsAlertOpen","isUpdate","setIsUpdate","editLeaveID","leaves_loading","deleteLeave","loadLeaves","getSingleLeave","setEditLeaveID","setIsLeaveEditingOn","setIsLeaveEditingOff","resetSingleLeave","handleDialogOpen","handleDialogClose","handleAlertOpen","handleAlertClose","handleOnDeleteConfirm","id","Approve_Leave","forEach","rec","tableData","checked","d","Reject_Leave","root","maxWidth","paddingTop","Add","Edit","View","Delete","Clear","Check","Search","ResetSearch","filtering","selection","paging","headerStyle","backgroundColor","color","showTitle","Toolbar","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { Button, HStack } from \"@chakra-ui/react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveFormAdmin from \"./LeaveFormAdmin\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeaves } from \"./leaves/useLeaves\";\r\nimport { useLeavesStatus } from \"./leaves/useLeavesStatus\";\r\nimport { useAddLeaves } from \"./leaves/useAddLeaves\";\r\nimport { useDeleteLeaves } from \"./leaves/useDeleteLeaves\";\r\nimport { useUpdateLeaves } from \"./leaves/useUpdateLeaves\";\r\n\r\nconst initial_form = {\r\n  name: \"\",\r\n  to_date: \"\",\r\n  from_date: \"\",\r\n  reason: \"\",\r\n  status: \"Pending\",\r\n  no_of_days: 0,\r\n  leave_bal: 0,\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Leave Balance\",\r\n    field: \"leave_bal\",\r\n    type: \"numeric\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"No of Days\",\r\n    field: \"no_of_days\",\r\n    type: \"numeric\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Reason\",\r\n    field: \"reason\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function LeaveTableApproval() {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast()\r\n  //const { leaves, filter, setFilter, setLeaveId } = useLeaves();\r\n  const { leavesstatus, setLeaveStatusId} = useLeavesStatus()\r\n  const updateLeaves = useUpdateLeaves();\r\n  const addLeaves = useAddLeaves();\r\n  const deleteLeaves = useDeleteLeaves();\r\n  const [formdata, setFormdata] = useState(initial_form);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [isUpdate, setIsUpdate] = useState(true)\r\n  const {\r\n    // leaves,\r\n    editLeaveID,\r\n    leaves_loading,\r\n    deleteLeave,\r\n    loadLeaves,\r\n    getSingleLeave,\r\n    setEditLeaveID,\r\n    setIsLeaveEditingOn,\r\n    setIsLeaveEditingOff,\r\n    resetSingleLeave,\r\n  } = useLeavesContext();\r\n\r\n  useEffect(() => {\r\n    setLeaveStatusId(\"Pending\");\r\n    setIsUpdate(false)\r\n  }, [isUpdate]);\r\n\r\n  // const update_Leave = async (data) => {\r\n  //   const { id } = data;\r\n  //   setFormdata({ ...data });\r\n  //   setEditLeaveID(id);\r\n  //   setIsLeaveEditingOn();\r\n  //   getSingleLeave(id);\r\n  //   handleDialogOpen();\r\n  //   //history.push(\"/singleleave\");\r\n  // };\r\n\r\n  // const add_Leave = async (data) => {\r\n  //   // const { id } = data;\r\n  //   setFormdata({ ...data });\r\n  //   resetSingleLeave();\r\n  //   setEditLeaveID(\"\");\r\n  //   setIsLeaveEditingOff();\r\n  //   handleDialogOpen();\r\n  //   //history.push(\"/singleleave\");\r\n  // };\r\n\r\n  // const delete_Leave = (data) => {\r\n  //   const { id } = data;\r\n  //   setEditLeaveID(id);\r\n  //   handleAlertOpen();\r\n  //   //deleteLeave(id);\r\n  //   //loadLeaves();\r\n  // };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editLeaveID;\r\n    deleteLeaves(id);\r\n  };\r\n\r\nconst Approve_Leave = () => {\r\n  leavesstatus.forEach((rec) => {\r\n    if (rec.tableData.checked) {\r\n      updateLeaves({ id: rec.id, status: \"Approved\" });\r\n      toast({\r\n        title: \"Leave record being approved!\",\r\n        status: \"success\",\r\n      });\r\n      //update leavesdata\r\n      // if (!update_dailyallowance_error) {\r\n      //   const recdata = dailyallowancesdata.filter((r) => r.id === rec.id);\r\n      //   recdata[0].status = \"Approved\";\r\n      // }\r\n    }\r\n  });\r\n  leavesstatus.forEach((d) => {\r\n    if (d.tableData) d.tableData.checked = false;\r\n  });\r\n  };\r\n  \r\n  const Reject_Leave = () => {\r\n    leavesstatus.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updateLeaves({ id: rec.id, status: \"Rejected\" });\r\n        toast({\r\n          title: \"Leave record being rejected!\",\r\n          status: \"success\",\r\n        });\r\n        //update leavesdata\r\n        // if (!update_dailyallowance_error) {\r\n        //   const recdata = dailyallowancesdata.filter((r) => r.id === rec.id);\r\n        //   recdata[0].status = \"Approved\";\r\n        // }\r\n      }\r\n    });\r\n    leavesstatus.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={leavesstatus}\r\n          title=\"Leave Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <AddIcon />,\r\n            View: (props) => <VisibilityIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          actions={\r\n            [\r\n              // {\r\n              //   icon: () => <VisibilityIcon />,\r\n              //   tooltip: \"Edit Record\",\r\n              //   onClick: (event, rowData) => {\r\n              //     update_Leave(rowData);\r\n              //   },\r\n              // },\r\n              // {\r\n              //   icon: \"delete\",\r\n              //   tooltip: \"Delete Record\",\r\n              //   onClick: (event, rowData) => {\r\n              //     delete_Leave(rowData);\r\n              //   },\r\n              // },\r\n              // {\r\n              //   icon: \"add\",\r\n              //   tooltip: \"Add Record\",\r\n              //   isFreeAction: true,\r\n              //   onClick: (event, rowData) => {\r\n              //     add_Leave(rowData);\r\n              //   },\r\n              // },\r\n            ]\r\n          }\r\n          options={{\r\n            filtering: true,\r\n            selection: true,\r\n            paging: false,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"white\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <HStack p={2}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"solid\"\r\n                    color=\"white\"\r\n                    bgColor=\"red\"\r\n                    //className={classes.button}\r\n                    onClick={Approve_Leave}\r\n                  >\r\n                    Approve\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"solid\"\r\n                    color=\"white\"\r\n                    bgColor=\"red\"\r\n                    //className={classes.button}\r\n                    onClick={Reject_Leave}\r\n                  >\r\n                    Reject\r\n                  </Button>\r\n                </HStack>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n        >\r\n          <LeaveFormAdmin\r\n            formdata={formdata}\r\n            setFormdata={setFormdata}\r\n            handleDialogClose={handleDialogClose}\r\n          />\r\n        </CustomDialog>\r\n\r\n        <AlertDialogBox\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}