{"ast":null,"code":"import _classCallCheck from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Action } from \"../../internal/Action\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\n/**\n * @description Represents a layer in a Photoshop document.\n * </br><b>Learn more:</b> {@link https://cloudinary.com/documentation/paged_and_layered_media#deliver_selected_layers_of_a_psd_image | Deliver selected layers of a PSD image}\n * @extends SDK.Action\n * @memberOf Actions.PSDTools\n * @see Visit {@link Actions.PSDTools| PSDTools} for an example\n */\n\nvar GetLayerAction = /*#__PURE__*/function (_Action) {\n  _inherits(GetLayerAction, _Action);\n\n  var _super = _createSuper(GetLayerAction);\n\n  function GetLayerAction() {\n    var _this;\n\n    _classCallCheck(this, GetLayerAction);\n\n    _this = _super.call(this);\n    _this.qualifierValue = new QualifierValue();\n    _this.qualifierValue.delimiter = ';';\n    return _this;\n  }\n  /**\n   * @description deliver an image containing only specified layer of a Photoshop image from The layer index\n   * @param {string|number} from the index of the layer\n   */\n\n\n  _createClass(GetLayerAction, [{\n    key: \"byIndex\",\n    value: function byIndex(from) {\n      this.qualifierValue.addValue(from);\n      return this;\n    }\n    /**\n     * @description deliver an image containing only specified range of layers of a Photoshop image\n     * @param {string|number} from The layer number\n     * @param {string|number} to The layer number\n     */\n\n  }, {\n    key: \"byRange\",\n    value: function byRange(from, to) {\n      var range = new QualifierValue(from);\n      range.addValue(to);\n      range.delimiter = '-';\n      this.qualifierValue.addValue(range);\n      return this;\n    }\n    /**\n     * @description deliver an image containing only specified layer by name of a Photoshop image\n     * @param {string|number} name The layer by name\n     */\n\n  }, {\n    key: \"byName\",\n    value: function byName(name) {\n      this.name = name;\n      this.qualifierValue.addValue(name);\n      return this;\n    }\n  }, {\n    key: \"prepareQualifiers\",\n    value: function prepareQualifiers() {\n      var qualifierValue = this.qualifierValue;\n\n      if (this.name) {\n        qualifierValue = new QualifierValue(['name', this.qualifierValue]).setDelimiter(':');\n      }\n\n      this.addQualifier(new Qualifier('pg', qualifierValue));\n      return this;\n    }\n  }]);\n\n  return GetLayerAction;\n}(Action);\n\nexport { GetLayerAction };","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/actions/psdTools/GetLayerAction.js"],"names":["Action","Qualifier","QualifierValue","GetLayerAction","qualifierValue","delimiter","from","addValue","to","range","name","setDelimiter","addQualifier"],"mappings":";;;;AAAA,SAASA,MAAT,QAAuB,uBAAvB;AACA,SAASC,SAAT,QAA0B,oCAA1B;AACA,SAASC,cAAT,QAA+B,yCAA/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,c;;;;;AACF,4BAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,cAAL,GAAsB,IAAIF,cAAJ,EAAtB;AACA,UAAKE,cAAL,CAAoBC,SAApB,GAAgC,GAAhC;AAHU;AAIb;AACD;AACJ;AACA;AACA;;;;;WACI,iBAAQC,IAAR,EAAc;AACV,WAAKF,cAAL,CAAoBG,QAApB,CAA6BD,IAA7B;AACA,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,iBAAQA,IAAR,EAAcE,EAAd,EAAkB;AACd,UAAMC,KAAK,GAAG,IAAIP,cAAJ,CAAmBI,IAAnB,CAAd;AACAG,MAAAA,KAAK,CAACF,QAAN,CAAeC,EAAf;AACAC,MAAAA,KAAK,CAACJ,SAAN,GAAkB,GAAlB;AACA,WAAKD,cAAL,CAAoBG,QAApB,CAA6BE,KAA7B;AACA,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,gBAAOC,IAAP,EAAa;AACT,WAAKA,IAAL,GAAYA,IAAZ;AACA,WAAKN,cAAL,CAAoBG,QAApB,CAA6BG,IAA7B;AACA,aAAO,IAAP;AACH;;;WACD,6BAAoB;AAChB,UAAIN,cAAc,GAAG,KAAKA,cAA1B;;AACA,UAAI,KAAKM,IAAT,EAAe;AACXN,QAAAA,cAAc,GAAG,IAAIF,cAAJ,CAAmB,CAAC,MAAD,EAAS,KAAKE,cAAd,CAAnB,EAAkDO,YAAlD,CAA+D,GAA/D,CAAjB;AACH;;AACD,WAAKC,YAAL,CAAkB,IAAIX,SAAJ,CAAc,IAAd,EAAoBG,cAApB,CAAlB;AACA,aAAO,IAAP;AACH;;;;EA1CwBJ,M;;AA4C7B,SAASG,cAAT","sourcesContent":["import { Action } from \"../../internal/Action\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\n/**\n * @description Represents a layer in a Photoshop document.\n * </br><b>Learn more:</b> {@link https://cloudinary.com/documentation/paged_and_layered_media#deliver_selected_layers_of_a_psd_image | Deliver selected layers of a PSD image}\n * @extends SDK.Action\n * @memberOf Actions.PSDTools\n * @see Visit {@link Actions.PSDTools| PSDTools} for an example\n */\nclass GetLayerAction extends Action {\n    constructor() {\n        super();\n        this.qualifierValue = new QualifierValue();\n        this.qualifierValue.delimiter = ';';\n    }\n    /**\n     * @description deliver an image containing only specified layer of a Photoshop image from The layer index\n     * @param {string|number} from the index of the layer\n     */\n    byIndex(from) {\n        this.qualifierValue.addValue(from);\n        return this;\n    }\n    /**\n     * @description deliver an image containing only specified range of layers of a Photoshop image\n     * @param {string|number} from The layer number\n     * @param {string|number} to The layer number\n     */\n    byRange(from, to) {\n        const range = new QualifierValue(from);\n        range.addValue(to);\n        range.delimiter = '-';\n        this.qualifierValue.addValue(range);\n        return this;\n    }\n    /**\n     * @description deliver an image containing only specified layer by name of a Photoshop image\n     * @param {string|number} name The layer by name\n     */\n    byName(name) {\n        this.name = name;\n        this.qualifierValue.addValue(name);\n        return this;\n    }\n    prepareQualifiers() {\n        let qualifierValue = this.qualifierValue;\n        if (this.name) {\n            qualifierValue = new QualifierValue(['name', this.qualifierValue]).setDelimiter(':');\n        }\n        this.addQualifier(new Qualifier('pg', qualifierValue));\n        return this;\n    }\n}\nexport { GetLayerAction };\n"]},"metadata":{},"sourceType":"module"}