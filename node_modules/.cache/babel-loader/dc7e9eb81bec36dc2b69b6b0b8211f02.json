{"ast":null,"code":"import React,{useEffect}from\"react\";import MaterialTable,{MTableToolbar}from\"material-table\";import{makeStyles}from\"@material-ui/core/styles\";import{useHistory,Link}from\"react-router-dom\";import{useSetRecoilState,useRecoilValue}from\"recoil\";import{payPeriodState,payPeriodEndMonthState,payPeriodEmpIdState}from\"./data/atomdata\";import{usePayslipsContext}from\"../context/payslips_context\";import{useEmployeesContext}from\"../context/employees_context\";import{usePayrunStatus}from\"./payrun/usePayrunStatus\";import{jsx as _jsx}from\"react/jsx-runtime\";var FILTERSTRING=\"Pending\";var columns=[// { title: \"Period\", field: \"period\" },\n{title:\"Payrun Batch\",field:\"payrun\",type:\"date\",dateSetting:{locale:\"en-GB\"}},// {\n//   title: \"Pay Date\",\n//   field: \"pay_date\",\n//   type: \"date\",\n//   dateSetting: { locale: \"en-GB\" },\n// },\n{title:\"Total Wages\",field:\"totalwages\",type:\"currency\"},{title:\"TAP Amount\",field:\"totaltap\",type:\"currency\"},{title:\"SCP Amount\",field:\"totalscp\",type:\"currency\"},{title:\"Site Allowances\",field:\"totalsitesallows\",type:\"currency\"},{title:\"Expenses Claims\",field:\"totalexpensesclaims\",type:\"currency\"},{title:\"Total Allowances\",field:\"totalallows\",type:\"currency\"},{title:\"Total Deductions\",field:\"totaldeducts\",type:\"currency\"},{title:\"Total Payroll\",field:\"totalpayroll\",type:\"currency\"},{title:\"Status\",field:\"status\"}];export default function PayslipTableVIew(_ref){var status=_ref.status;var history=useHistory();var classes=useStyles();var setPayPeriodEmpId=useSetRecoilState(payPeriodEmpIdState);var _usePayslipsContext=usePayslipsContext(),payrun=_usePayslipsContext.payrun,getPayrun=_usePayslipsContext.getPayrun,payrun_loading=_usePayslipsContext.payrun_loading,loadPendingPayslips=_usePayslipsContext.loadPendingPayslips;//const { loadEmployees, employees } = useEmployeesContext();\nvar _usePayrunStatus=usePayrunStatus(),payrunstatus=_usePayrunStatus.payrunstatus,setPayrunStatusId=_usePayrunStatus.setPayrunStatusId;useEffect(function(){setPayrunStatusId(status);},[]);return/*#__PURE__*/_jsx(\"div\",{className:classes.root,children:/*#__PURE__*/_jsx(\"div\",{style:{maxWidth:\"100%\",paddingTop:\"5px\"},children:/*#__PURE__*/_jsx(MaterialTable,{columns:columns,data:payrunstatus,title:\"Payslips\",options:{filtering:false,search:false,toolbar:false,headerStyle:{backgroundColor:\"rgba(75, 192, 192, 1)\",color:\"#FFF\"},showTitle:false}})})});}var useStyles=makeStyles(function(theme){return{root:{padding:0}};});","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/PayslipTableViewSummary.js"],"names":["React","useEffect","MaterialTable","MTableToolbar","makeStyles","useHistory","Link","useSetRecoilState","useRecoilValue","payPeriodState","payPeriodEndMonthState","payPeriodEmpIdState","usePayslipsContext","useEmployeesContext","usePayrunStatus","FILTERSTRING","columns","title","field","type","dateSetting","locale","PayslipTableVIew","status","history","classes","useStyles","setPayPeriodEmpId","payrun","getPayrun","payrun_loading","loadPendingPayslips","payrunstatus","setPayrunStatusId","root","maxWidth","paddingTop","filtering","search","toolbar","headerStyle","backgroundColor","color","showTitle","theme","padding"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { usePayrunStatus} from \"./payrun/usePayrunStatus\"\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  // { title: \"Period\", field: \"period\" },\r\n  {\r\n    title: \"Payrun Batch\",\r\n    field: \"payrun\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  // {\r\n  //   title: \"Pay Date\",\r\n  //   field: \"pay_date\",\r\n  //   type: \"date\",\r\n  //   dateSetting: { locale: \"en-GB\" },\r\n  // },\r\n  { title: \"Total Wages\", field: \"totalwages\", type: \"currency\" },\r\n  { title: \"TAP Amount\", field: \"totaltap\", type: \"currency\" },\r\n  { title: \"SCP Amount\", field: \"totalscp\", type: \"currency\" },\r\n  { title: \"Site Allowances\", field: \"totalsitesallows\", type: \"currency\" },\r\n  { title: \"Expenses Claims\", field: \"totalexpensesclaims\", type: \"currency\" },\r\n  { title: \"Total Allowances\", field: \"totalallows\", type: \"currency\" },\r\n  { title: \"Total Deductions\", field: \"totaldeducts\", type: \"currency\" },\r\n  { title: \"Total Payroll\", field: \"totalpayroll\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\n\r\nexport default function PayslipTableVIew({status}) {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\r\n  const { payrun, getPayrun,payrun_loading, loadPendingPayslips } =\r\n    usePayslipsContext();\r\n  //const { loadEmployees, employees } = useEmployeesContext();\r\n  const { payrunstatus, setPayrunStatusId} = usePayrunStatus()\r\n  \r\n  \r\n  useEffect(() => {\r\n    setPayrunStatusId(status);\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payrunstatus}\r\n          title=\"Payslips\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}