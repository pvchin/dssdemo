{"ast":null,"code":"import _classCallCheck from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Action } from \"../../internal/Action\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { tiled as _tiled } from \"../flag\";\nimport { noOverflow } from \"../flag\";\n/**\n * @description\n * Defines the position of a layer: overlay or underlay.</br>\n * Even though Position is technically an action qualifier, it implements exactly the same functionality as an action.</br>\n * This is true because Position is compounded of multiple qualifiers</br>\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/image_transformations#image_and_text_overlays|Applying overlays to images} | {@link https://cloudinary.com/documentation/video_manipulation_and_delivery#adding_image_overlays|Applying overlays to videos}\n *\n * @extends {SDK.Actions}\n */\n\nvar PositionQualifier = /*#__PURE__*/function (_Action) {\n  _inherits(PositionQualifier, _Action);\n\n  var _super = _createSuper(PositionQualifier);\n\n  function PositionQualifier() {\n    _classCallCheck(this, PositionQualifier);\n\n    return _super.call(this);\n  }\n\n  _createClass(PositionQualifier, [{\n    key: \"gravity\",\n    value: function gravity(gravityQualifier) {\n      this.addQualifier(gravityQualifier);\n      return this;\n    }\n    /**\n     * @description Tiles the overlay across your image.\n     * <b>Learn more:</b> {@link https://cloudinary.com/documentation/image_transformations#tiling_overlays | Tiling overlay}\n     */\n\n  }, {\n    key: \"tiled\",\n    value: function tiled() {\n      this.addFlag(_tiled());\n      return this;\n    }\n    /**\n     * TODO - This should accept a boolean value\n     * @description Prevents an image or text overlay from extending a delivered image canvas beyond the dimensions of the base image\n     * <b>Learn more:</b> {@link https://cloudinary.com/documentation/transformation_reference#fl_no_overflow | Overflow in overlays}\n     */\n\n  }, {\n    key: \"allowOverflow\",\n    value: function allowOverflow() {\n      var bool = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (bool === false) {\n        this.addFlag(noOverflow());\n      }\n\n      return this;\n    }\n    /**\n     * @description Set the X Offset\n     * @param {number | string} offsetX\n     * @return {this}\n     */\n\n  }, {\n    key: \"offsetX\",\n    value: function offsetX(_offsetX) {\n      this.addQualifier(new Qualifier('x', _offsetX));\n      return this;\n    }\n    /**\n     * @description Set the Y Offset\n     * @param {number | string} offsetY\n     * @return {this}\n     */\n\n  }, {\n    key: \"offsetY\",\n    value: function offsetY(_offsetY) {\n      this.addQualifier(new Qualifier('y', _offsetY));\n      return this;\n    }\n  }]);\n\n  return PositionQualifier;\n}(Action);\n\nexport { PositionQualifier };","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/qualifiers/position/PositionQualifier.js"],"names":["Action","Qualifier","tiled","noOverflow","PositionQualifier","gravityQualifier","addQualifier","addFlag","bool","offsetX","offsetY"],"mappings":";;;;AAAA,SAASA,MAAT,QAAuB,uBAAvB;AACA,SAASC,SAAT,QAA0B,oCAA1B;AACA,SAASC,KAAK,IAALA,MAAT,QAAsB,SAAtB;AACA,SAASC,UAAT,QAA2B,SAA3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,iB;;;;;AACF,+BAAc;AAAA;;AAAA;AAEb;;;;WACD,iBAAQC,gBAAR,EAA0B;AACtB,WAAKC,YAAL,CAAkBD,gBAAlB;AACA,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,iBAAQ;AACJ,WAAKE,OAAL,CAAaL,MAAK,EAAlB;AACA,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,yBAA2B;AAAA,UAAbM,IAAa,uEAAN,IAAM;;AACvB,UAAIA,IAAI,KAAK,KAAb,EAAoB;AAChB,aAAKD,OAAL,CAAaJ,UAAU,EAAvB;AACH;;AACD,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,iBAAQM,QAAR,EAAiB;AACb,WAAKH,YAAL,CAAkB,IAAIL,SAAJ,CAAc,GAAd,EAAmBQ,QAAnB,CAAlB;AACA,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,iBAAQC,QAAR,EAAiB;AACb,WAAKJ,YAAL,CAAkB,IAAIL,SAAJ,CAAc,GAAd,EAAmBS,QAAnB,CAAlB;AACA,aAAO,IAAP;AACH;;;;EA5C2BV,M;;AA8ChC,SAASI,iBAAT","sourcesContent":["import { Action } from \"../../internal/Action\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { tiled } from \"../flag\";\nimport { noOverflow } from \"../flag\";\n/**\n * @description\n * Defines the position of a layer: overlay or underlay.</br>\n * Even though Position is technically an action qualifier, it implements exactly the same functionality as an action.</br>\n * This is true because Position is compounded of multiple qualifiers</br>\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/image_transformations#image_and_text_overlays|Applying overlays to images} | {@link https://cloudinary.com/documentation/video_manipulation_and_delivery#adding_image_overlays|Applying overlays to videos}\n *\n * @extends {SDK.Actions}\n */\nclass PositionQualifier extends Action {\n    constructor() {\n        super();\n    }\n    gravity(gravityQualifier) {\n        this.addQualifier(gravityQualifier);\n        return this;\n    }\n    /**\n     * @description Tiles the overlay across your image.\n     * <b>Learn more:</b> {@link https://cloudinary.com/documentation/image_transformations#tiling_overlays | Tiling overlay}\n     */\n    tiled() {\n        this.addFlag(tiled());\n        return this;\n    }\n    /**\n     * TODO - This should accept a boolean value\n     * @description Prevents an image or text overlay from extending a delivered image canvas beyond the dimensions of the base image\n     * <b>Learn more:</b> {@link https://cloudinary.com/documentation/transformation_reference#fl_no_overflow | Overflow in overlays}\n     */\n    allowOverflow(bool = true) {\n        if (bool === false) {\n            this.addFlag(noOverflow());\n        }\n        return this;\n    }\n    /**\n     * @description Set the X Offset\n     * @param {number | string} offsetX\n     * @return {this}\n     */\n    offsetX(offsetX) {\n        this.addQualifier(new Qualifier('x', offsetX));\n        return this;\n    }\n    /**\n     * @description Set the Y Offset\n     * @param {number | string} offsetY\n     * @return {this}\n     */\n    offsetY(offsetY) {\n        this.addQualifier(new Qualifier('y', offsetY));\n        return this;\n    }\n}\nexport { PositionQualifier };\n"]},"metadata":{},"sourceType":"module"}