{"ast":null,"code":"import _classCallCheck from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { GravityQualifier } from \"../GravityQualifier\";\n/**\n * @description The class for the FocusOn builder\n * @memberOf Qualifiers.Gravity\n * @extends {Qualifiers.Gravity.GravityQualifier}\n */\n\nvar FocusOnGravity = /*#__PURE__*/function (_GravityQualifier) {\n  _inherits(FocusOnGravity, _GravityQualifier);\n\n  var _super = _createSuper(FocusOnGravity);\n\n  function FocusOnGravity(FocusOnObjects) {\n    _classCallCheck(this, FocusOnGravity);\n\n    // Required due to https://github.com/microsoft/TypeScript/issues/13029\n\n    /* istanbul ignore next */\n    return _super.call(this, FocusOnObjects);\n  }\n  /**\n   * @description Specifies the gravity to use if none of the other gravity objects are found.\n   * @param {Qualifiers.Gravity.AutoGravity} val\n   */\n\n\n  _createClass(FocusOnGravity, [{\n    key: \"fallbackGravity\",\n    value: function fallbackGravity(val) {\n      /*\n       *  FocusOnGravity(this) is already a qualifier, with a key and a value g_{obj1}\n       *  fallBackGravity also attempts to add a value, to reach the result of g_{obj1}:auto:{obj2}\n       *  Since AutoGravity is a Qualifier, it also comes with its own g_ key, which needs to be removed.\n       *  To solve it, we take only the value from the qualifier, instead of the whole thing\n       */\n      this.addValue(val.qualifierValue);\n      return this;\n    }\n  }]);\n\n  return FocusOnGravity;\n}(GravityQualifier);\n\nexport { FocusOnGravity };","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/qualifiers/gravity/focusOnGravity/FocusOnGravity.js"],"names":["GravityQualifier","FocusOnGravity","FocusOnObjects","val","addValue","qualifierValue"],"mappings":";;;;AAAA,SAASA,gBAAT,QAAiC,qBAAjC;AACA;AACA;AACA;AACA;AACA;;IACMC,c;;;;;AACF,0BAAYC,cAAZ,EAA4B;AAAA;;AACxB;;AACA;AAFwB,6BAGlBA,cAHkB;AAI3B;AACD;AACJ;AACA;AACA;;;;;WACI,yBAAgBC,GAAhB,EAAqB;AACjB;AACR;AACA;AACA;AACA;AACA;AACQ,WAAKC,QAAL,CAAcD,GAAG,CAACE,cAAlB;AACA,aAAO,IAAP;AACH;;;;EAnBwBL,gB;;AAqB7B,SAASC,cAAT","sourcesContent":["import { GravityQualifier } from \"../GravityQualifier\";\n/**\n * @description The class for the FocusOn builder\n * @memberOf Qualifiers.Gravity\n * @extends {Qualifiers.Gravity.GravityQualifier}\n */\nclass FocusOnGravity extends GravityQualifier {\n    constructor(FocusOnObjects) {\n        // Required due to https://github.com/microsoft/TypeScript/issues/13029\n        /* istanbul ignore next */\n        super(FocusOnObjects);\n    }\n    /**\n     * @description Specifies the gravity to use if none of the other gravity objects are found.\n     * @param {Qualifiers.Gravity.AutoGravity} val\n     */\n    fallbackGravity(val) {\n        /*\n         *  FocusOnGravity(this) is already a qualifier, with a key and a value g_{obj1}\n         *  fallBackGravity also attempts to add a value, to reach the result of g_{obj1}:auto:{obj2}\n         *  Since AutoGravity is a Qualifier, it also comes with its own g_ key, which needs to be removed.\n         *  To solve it, we take only the value from the qualifier, instead of the whole thing\n         */\n        this.addValue(val.qualifierValue);\n        return this;\n    }\n}\nexport { FocusOnGravity };\n"]},"metadata":{},"sourceType":"module"}