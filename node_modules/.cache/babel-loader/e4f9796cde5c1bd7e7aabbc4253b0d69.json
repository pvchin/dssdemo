{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\dss\\\\src\\\\components\\\\SamplesTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\nimport { Box, Heading, Divider, Grid, GridItem, HStack, Select, SimpleGrid, Text, Modal, ModalOverlay, ModalContent //ModalHeader,\n//ModalFooter,\n, ModalBody, ModalCloseButton, Tabs, TabList, TabPanels, Tab, TabPanel, useDisclosure } from \"@chakra-ui/react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useRecoilState } from \"recoil\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport { useCustomToast } from \"../helpers/useCustomToast\";\nimport { useExpensesContext } from \"../context/expenses_context\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { CustomDialog } from \"../helpers/CustomDialog\";\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\nimport { useSamples } from \"./samples/useSamples\";\nimport { useAddSample } from \"./samples/useAddSample\";\nimport { useDeleteSample } from \"./samples/useDeleteSample\";\nimport { useUpdateSample } from \"./samples/useUpdateSample\";\nimport AssetForm from \"./AssetForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initial_form = {\n  sampleid: \"\",\n  desp: \"\",\n  date: \"\",\n  type: \"\",\n  client: \"\",\n  remark: \"\",\n  status: \"\"\n};\nconst columns = [{\n  title: \"Sample Id\",\n  field: \"sampleid\",\n  editable: \"never\"\n}, {\n  title: \"Description\",\n  field: \"desp\",\n  editable: \"never\"\n}, {\n  title: \"Test Method\",\n  field: \"testmethod\",\n  editable: \"never\"\n}, {\n  title: \"Results\",\n  field: \"results\",\n  editable: \"never\"\n}, {\n  title: \"Concusion\",\n  field: \"conclusion\",\n  editable: \"never\"\n}, {\n  title: \"Status\",\n  field: \"status\",\n  editable: \"never\"\n}];\nconst columns_despatch = [{\n  title: \"Asset No\",\n  field: \"assetno\",\n  editable: \"never\"\n}, {\n  title: \"Description\",\n  field: \"desp\",\n  editable: \"never\"\n}, {\n  title: \"Despatch To\",\n  field: \"despatched\",\n  editable: \"never\"\n}, {\n  title: \"Despatched Date\",\n  field: \"despatchdate\",\n  editable: \"never\"\n}, {\n  title: \"Status\",\n  field: \"status\",\n  editComponent: props => /*#__PURE__*/_jsxDEV(TextField //defaultValue={props.value || null}\n  , {\n    onChange: e => props.onChange(e.target.value),\n    style: {\n      width: 100\n    },\n    value: props.value,\n    select: true,\n    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Pending\",\n      children: \"Pending\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Approve\",\n      children: \"Approve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Reject\",\n      children: \"Reject\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Cancel\",\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 7\n  }, this)\n}];\nconst columns_inprogress = [{\n  title: \"Asset No\",\n  field: \"assetno\",\n  editable: \"never\"\n}, {\n  title: \"Description\",\n  field: \"desp\",\n  editable: \"never\"\n}, {\n  title: \"Received From\",\n  field: \"despatched\",\n  editable: \"never\"\n}, {\n  title: \"Received Date\",\n  field: \"receiveddate\",\n  editable: \"never\"\n}, {\n  title: \"Status\",\n  field: \"status\",\n  editComponent: props => /*#__PURE__*/_jsxDEV(TextField //defaultValue={props.value || null}\n  , {\n    onChange: e => props.onChange(e.target.value),\n    style: {\n      width: 100\n    },\n    value: props.value,\n    select: true,\n    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Pending\",\n      children: \"Pending\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Approve\",\n      children: \"Approve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Reject\",\n      children: \"Reject\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Cancel\",\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 7\n  }, this)\n}];\nexport default function ExpenseTable() {\n  _s();\n\n  const classes = useStyles();\n  const toast = useCustomToast();\n  const [isLoad, setIsLoad] = useState(false);\n  const {\n    samples\n  } = useSamples();\n  const updateSample = useUpdateSample();\n  const addSample = useAddSample();\n  const deleteSample = useDeleteSample();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const [expensesdata, setExpensesdata] = useState([]);\n  const [alertSuccess, setAlertSuccess] = useState(false);\n  const [formdata, setFormdata] = useState(initial_form);\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const {\n    editEmployeeID\n  } = useEmployeesContext();\n  const {\n    //expenses,\n    editExpenseID,\n    updateExpense,\n    addExpense,\n    deleteExpense,\n    setEditExpenseID,\n    setIsExpenseEditingOn,\n    setIsExpenseEditingOff\n  } = useExpensesContext(); // useEffect(() => {\n  //   setFilter(loginLevel.loginUserId);\n  // }, []);\n\n  const add_Expense = async data => {\n    // const { id } = data;\n    setFormdata(initial_form);\n    setFormdata(initial_form);\n    setIsExpenseEditingOff();\n    handleDialogOpen(); // history.push(\"/singleexpense\");\n  };\n\n  const update_Expense = async data => {\n    const {\n      id\n    } = data;\n    setFormdata({ ...data\n    });\n    setFormdata({ ...data\n    });\n    setEditExpenseID(id);\n    setIsExpenseEditingOn();\n    handleDialogOpen(); // history.push(\"/singleexpense\");\n  };\n\n  const delete_Expense = data => {\n    const {\n      id\n    } = data;\n    setEditExpenseID(id);\n    handleAlertOpen(); // deleteExpense(id);\n    // loadExpenses();\n  };\n\n  const handleDialogOpen = () => {\n    setIsDialogOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setIsDialogOpen(false);\n  };\n\n  const handleAlertOpen = () => {\n    setIsAlertOpen(true);\n  };\n\n  const handleAlertClose = () => {\n    setIsAlertOpen(false);\n  };\n\n  const handleOnDeleteConfirm = () => {\n    const id = editExpenseID;\n    deleteSample(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      maxW: \"x3\",\n      padding: \"4\",\n      width: \"100%\",\n      height: \"700\",\n      borderColor: \"blue.500\",\n      borderWidth: \"1px\",\n      borderRadius: \"lg\",\n      overflow: \"scroll\",\n      children: /*#__PURE__*/_jsxDEV(SimpleGrid, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h2\",\n            size: \"lg\",\n            children: \"Samples Table\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          children: [/*#__PURE__*/_jsxDEV(TabList, {\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              children: \"In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TabPanels, {\n            children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n              children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n                columns: columns,\n                data: samples,\n                title: \"Samples Table\",\n                icons: {\n                  Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 37\n                  }, this),\n                  Edit: props => /*#__PURE__*/_jsxDEV(CheckCircleOutlineOutlinedIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 38\n                  }, this),\n                  Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 40\n                  }, this),\n                  Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 39\n                  }, this),\n                  Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 39\n                  }, this),\n                  Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 40\n                  }, this),\n                  ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 45\n                  }, this)\n                },\n                actions: [rowData => ({\n                  //disabled: rowData.status !== \"Pending\",\n                  icon: \"edit\",\n                  tooltip: \"Edit Record\",\n                  onClick: (event, rowData) => {\n                    update_Expense(rowData);\n                  }\n                }), rowData => ({\n                  //disabled: rowData.status !== \"Pending\",\n                  icon: \"delete\",\n                  tooltip: \"Delete Record\",\n                  onClick: (event, rowData) => {\n                    delete_Expense(rowData);\n                  }\n                }), {\n                  icon: \"add\",\n                  tooltip: \"Add Record\",\n                  isFreeAction: true,\n                  onClick: (event, rowData) => {\n                    add_Expense(rowData);\n                  }\n                }],\n                options: {\n                  filtering: true,\n                  headerStyle: {\n                    backgroundColor: \"orange\",\n                    color: \"#FFF\"\n                  },\n                  showTitle: true\n                },\n                components: {\n                  Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 23\n                  }, this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n                columns: columns,\n                data: samples,\n                title: \"Samples Table\",\n                icons: {\n                  Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 37\n                  }, this),\n                  Edit: props => /*#__PURE__*/_jsxDEV(CheckCircleOutlineOutlinedIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 38\n                  }, this),\n                  Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 40\n                  }, this),\n                  Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 39\n                  }, this),\n                  Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 39\n                  }, this),\n                  Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 40\n                  }, this),\n                  ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 45\n                  }, this)\n                },\n                actions: [rowData => ({\n                  disabled: rowData.status !== \"Pending\",\n                  icon: \"edit\",\n                  tooltip: \"Edit Record\",\n                  onClick: (event, rowData) => {\n                    update_Expense(rowData);\n                  }\n                }), rowData => ({\n                  disabled: rowData.status !== \"Pending\",\n                  icon: \"delete\",\n                  tooltip: \"Delete Record\",\n                  onClick: (event, rowData) => {\n                    delete_Expense(rowData);\n                  }\n                }), {\n                  icon: \"add\",\n                  tooltip: \"Add Record\",\n                  isFreeAction: true,\n                  onClick: (event, rowData) => {\n                    add_Expense(rowData);\n                  }\n                }],\n                options: {\n                  filtering: true,\n                  headerStyle: {\n                    backgroundColor: \"orange\",\n                    color: \"#FFF\"\n                  },\n                  showTitle: true\n                },\n                components: {\n                  Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 380,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 23\n                  }, this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CustomDialog, {\n        isOpen: isDialogOpen,\n        handleClose: handleDialogClose,\n        title: \"\",\n        showButton: true,\n        isFullscreen: false,\n        isFullwidth: false,\n        children: /*#__PURE__*/_jsxDEV(AssetForm, {\n          formdata: formdata,\n          setFormdata: setFormdata,\n          handleDialogClose: handleDialogClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AlertDialogBox, {\n        onClose: handleAlertClose,\n        onConfirm: handleOnDeleteConfirm,\n        isOpen: isAlertOpen,\n        title: \"Delete Asset Item\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Are you sure you want to delete ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseTable, \"BSG1EJ/HWrKTok99z3Cw/I+ygag=\", false, function () {\n  return [useStyles, useCustomToast, useSamples, useUpdateSample, useAddSample, useDeleteSample, useRecoilState, useEmployeesContext, useExpensesContext];\n});\n\n_c = ExpenseTable;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseTable\");","map":{"version":3,"sources":["D:/react-myprojects/dss/src/components/SamplesTable.js"],"names":["React","useState","useEffect","MaterialTable","MTableToolbar","TextField","MenuItem","Button","Icon","Box","Heading","Divider","Grid","GridItem","HStack","Select","SimpleGrid","Text","Modal","ModalOverlay","ModalContent","ModalBody","ModalCloseButton","Tabs","TabList","TabPanels","Tab","TabPanel","useDisclosure","makeStyles","useRecoilState","loginLevelState","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","CheckCircleOutlineOutlinedIcon","ExpenseForm","useCustomToast","useExpensesContext","useEmployeesContext","CustomDialog","AlertDialogBox","useSamples","useAddSample","useDeleteSample","useUpdateSample","AssetForm","initial_form","sampleid","desp","date","type","client","remark","status","columns","title","field","editable","columns_despatch","editComponent","props","e","onChange","target","value","width","columns_inprogress","ExpenseTable","classes","useStyles","toast","isLoad","setIsLoad","samples","updateSample","addSample","deleteSample","isDialogOpen","setIsDialogOpen","isAlertOpen","setIsAlertOpen","expensesdata","setExpensesdata","alertSuccess","setAlertSuccess","formdata","setFormdata","loginLevel","setLoginLevel","editEmployeeID","editExpenseID","updateExpense","addExpense","deleteExpense","setEditExpenseID","setIsExpenseEditingOn","setIsExpenseEditingOff","add_Expense","data","handleDialogOpen","update_Expense","id","delete_Expense","handleAlertOpen","handleDialogClose","handleAlertClose","handleOnDeleteConfirm","root","Add","Edit","Delete","Clear","Check","Search","ResetSearch","rowData","icon","tooltip","onClick","event","isFreeAction","filtering","headerStyle","backgroundColor","color","showTitle","Toolbar","disabled","maxWidth","paddingTop","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Divider,\r\n  Grid,\r\n  GridItem,\r\n  HStack,\r\n  Select,\r\n  SimpleGrid,\r\n  Text,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  //ModalHeader,\r\n  //ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { useSamples } from \"./samples/useSamples\";\r\nimport { useAddSample } from \"./samples/useAddSample\";\r\nimport { useDeleteSample } from \"./samples/useDeleteSample\";\r\nimport { useUpdateSample } from \"./samples/useUpdateSample\";\r\nimport AssetForm from \"./AssetForm\";\r\n\r\nconst initial_form = {\r\n  sampleid: \"\",\r\n  desp: \"\",\r\n  date: \"\",\r\n  type: \"\",\r\n  client: \"\",\r\n  remark: \"\",\r\n  status: \"\",\r\n};\r\n\r\nconst columns = [\r\n  { title: \"Sample Id\", field: \"sampleid\", editable: \"never\" },\r\n\r\n  {\r\n    title: \"Description\",\r\n    field: \"desp\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Test Method\",\r\n    field: \"testmethod\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Results\",\r\n    field: \"results\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Concusion\",\r\n    field: \"conclusion\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editable: \"never\",\r\n  },\r\n];\r\n\r\nconst columns_despatch = [\r\n  { title: \"Asset No\", field: \"assetno\", editable: \"never\" },\r\n\r\n  {\r\n    title: \"Description\",\r\n    field: \"desp\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Despatch To\",\r\n    field: \"despatched\",\r\n    editable: \"never\",\r\n  },\r\n\r\n  {\r\n    title: \"Despatched Date\",\r\n    field: \"despatchdate\",\r\n    editable: \"never\",\r\n  },\r\n\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nconst columns_inprogress = [\r\n  { title: \"Asset No\", field: \"assetno\", editable: \"never\" },\r\n\r\n  {\r\n    title: \"Description\",\r\n    field: \"desp\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Received From\",\r\n    field: \"despatched\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Received Date\",\r\n    field: \"receiveddate\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function ExpenseTable() {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const [isLoad, setIsLoad] = useState(false);\r\n  const { samples } = useSamples();\r\n  const updateSample = useUpdateSample();\r\n  const addSample = useAddSample();\r\n  const deleteSample = useDeleteSample();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [expensesdata, setExpensesdata] = useState([]);\r\n  const [alertSuccess, setAlertSuccess] = useState(false);\r\n  const [formdata, setFormdata] = useState(initial_form);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    //expenses,\r\n    editExpenseID,\r\n    updateExpense,\r\n    addExpense,\r\n    deleteExpense,\r\n    setEditExpenseID,\r\n    setIsExpenseEditingOn,\r\n    setIsExpenseEditingOff,\r\n  } = useExpensesContext();\r\n\r\n  // useEffect(() => {\r\n  //   setFilter(loginLevel.loginUserId);\r\n  // }, []);\r\n\r\n  const add_Expense = async (data) => {\r\n    // const { id } = data;\r\n    setFormdata(initial_form);\r\n    setFormdata(initial_form);\r\n    setIsExpenseEditingOff();\r\n    handleDialogOpen();\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const update_Expense = async (data) => {\r\n    const { id } = data;\r\n    setFormdata({ ...data });\r\n    setFormdata({ ...data });\r\n    setEditExpenseID(id);\r\n    setIsExpenseEditingOn();\r\n    handleDialogOpen();\r\n\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const delete_Expense = (data) => {\r\n    const { id } = data;\r\n    setEditExpenseID(id);\r\n    handleAlertOpen();\r\n\r\n    // deleteExpense(id);\r\n    // loadExpenses();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editExpenseID;\r\n    deleteSample(id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box\r\n        maxW=\"x3\"\r\n        padding=\"4\"\r\n        width=\"100%\"\r\n        height=\"700\"\r\n        borderColor=\"blue.500\"\r\n        borderWidth=\"1px\"\r\n        borderRadius=\"lg\"\r\n        overflow=\"scroll\"\r\n      >\r\n        <SimpleGrid>\r\n          <Box>\r\n            <Heading as=\"h2\" size=\"lg\">\r\n              Samples Table\r\n            </Heading>\r\n          </Box>\r\n          <Divider />\r\n          <Tabs>\r\n            <TabList>\r\n              <Tab>In Progress</Tab>\r\n              <Tab>Completed</Tab>\r\n            </TabList>\r\n            <TabPanels>\r\n              <TabPanel>\r\n                <MaterialTable\r\n                  columns={columns}\r\n                  data={samples}\r\n                  title=\"Samples Table\"\r\n                  icons={{\r\n                    Add: (props) => <AddIcon />,\r\n                    Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n                    Delete: (props) => <DeleteIcon />,\r\n                    Clear: (props) => <DeleteIcon />,\r\n                    Check: (props) => <CheckIcon />,\r\n                    Search: (props) => <SearchIcon />,\r\n                    ResetSearch: (props) => <DeleteIcon />,\r\n                  }}\r\n                  actions={[\r\n                    (rowData) => ({\r\n                      //disabled: rowData.status !== \"Pending\",\r\n                      icon: \"edit\",\r\n                      tooltip: \"Edit Record\",\r\n                      onClick: (event, rowData) => {\r\n                        update_Expense(rowData);\r\n                      },\r\n                    }),\r\n                    (rowData) => ({\r\n                      //disabled: rowData.status !== \"Pending\",\r\n                      icon: \"delete\",\r\n                      tooltip: \"Delete Record\",\r\n                      onClick: (event, rowData) => {\r\n                        delete_Expense(rowData);\r\n                      },\r\n                    }),\r\n                    {\r\n                      icon: \"add\",\r\n                      tooltip: \"Add Record\",\r\n                      isFreeAction: true,\r\n                      onClick: (event, rowData) => {\r\n                        add_Expense(rowData);\r\n                      },\r\n                    },\r\n                  ]}\r\n                  options={{\r\n                    filtering: true,\r\n                    headerStyle: {\r\n                      backgroundColor: \"orange\",\r\n                      color: \"#FFF\",\r\n                    },\r\n                    showTitle: true,\r\n                  }}\r\n                  components={{\r\n                    Toolbar: (props) => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                />\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <MaterialTable\r\n                  columns={columns}\r\n                  data={samples}\r\n                  title=\"Samples Table\"\r\n                  icons={{\r\n                    Add: (props) => <AddIcon />,\r\n                    Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n                    Delete: (props) => <DeleteIcon />,\r\n                    Clear: (props) => <DeleteIcon />,\r\n                    Check: (props) => <CheckIcon />,\r\n                    Search: (props) => <SearchIcon />,\r\n                    ResetSearch: (props) => <DeleteIcon />,\r\n                  }}\r\n                  actions={[\r\n                    (rowData) => ({\r\n                      disabled: rowData.status !== \"Pending\",\r\n                      icon: \"edit\",\r\n                      tooltip: \"Edit Record\",\r\n                      onClick: (event, rowData) => {\r\n                        update_Expense(rowData);\r\n                      },\r\n                    }),\r\n                    (rowData) => ({\r\n                      disabled: rowData.status !== \"Pending\",\r\n                      icon: \"delete\",\r\n                      tooltip: \"Delete Record\",\r\n                      onClick: (event, rowData) => {\r\n                        delete_Expense(rowData);\r\n                      },\r\n                    }),\r\n                    {\r\n                      icon: \"add\",\r\n                      tooltip: \"Add Record\",\r\n                      isFreeAction: true,\r\n                      onClick: (event, rowData) => {\r\n                        add_Expense(rowData);\r\n                      },\r\n                    },\r\n                  ]}\r\n                  options={{\r\n                    filtering: true,\r\n                    headerStyle: {\r\n                      backgroundColor: \"orange\",\r\n                      color: \"#FFF\",\r\n                    },\r\n                    showTitle: true,\r\n                  }}\r\n                  components={{\r\n                    Toolbar: (props) => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                />\r\n              </TabPanel>\r\n            </TabPanels>\r\n          </Tabs>\r\n        </SimpleGrid>\r\n      </Box>\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        {/* <MaterialTable\r\n          columns={columns}\r\n          data={items}\r\n          title=\"Assets Table\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n        \r\n          actions={[\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Expense(rowData);\r\n              },\r\n            }),\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Expense(rowData);\r\n              },\r\n            }),\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Expense(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        /> */}\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <AssetForm\r\n            formdata={formdata}\r\n            setFormdata={setFormdata}\r\n            handleDialogClose={handleDialogClose}\r\n          />\r\n        </CustomDialog>\r\n\r\n        <AlertDialogBox\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Asset Item\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}