{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport getFirebase from \"../utils/firebase\";\nimport { Button, ButtonGroup } from \"@material-ui/core\";\nimport { RecoilRoot, atom, selector, useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport LoginForm from \"./LoginForm\";\nimport DashboardMain from \"./DashboardMain\";\nimport DashboardStaff from \"./DashboardStaff\";\nimport DashboardAdmin from \"./DashboardAdmin\";\nimport DashboardAdminManager from \"./DashboardAdminManager\";\nimport DashboardManager from \"./DashboardManager\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const {\n    single_employee,\n    single_employee_loading,\n    single_employee_error,\n    getSingleEmployeeEmail\n  } = useEmployeesContext();\n  useEffect(() => {\n    const firebase = getFirebase();\n\n    if (firebase) {\n      firebase.auth().onAuthStateChanged(authUser => {\n        if (authUser) {\n          setCurrentUser(authUser.email);\n        } else {\n          setCurrentUser(null);\n        }\n      });\n    }\n  }, []);\n\n  const SwitchCase = () => {\n    //console.log(loginLevel);\n    switch (loginLevel.loginLevel) {\n      case \"Staff\":\n        return /*#__PURE__*/_jsxDEV(DashboardStaff, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 16\n        }, this);\n\n      case \"Admin\":\n        return /*#__PURE__*/_jsxDEV(DashboardAdmin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 16\n        }, this);\n\n      case \"AdminManager\":\n        return /*#__PURE__*/_jsxDEV(DashboardAdminManager, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }, this);\n\n      case \"Manager\":\n        return /*#__PURE__*/_jsxDEV(DashboardManager, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 16\n        }, this);\n\n      default:\n        return \"You are not authorised user!\";\n    }\n  };\n\n  if (!currentUser) {\n    return /*#__PURE__*/_jsxDEV(LoginForm, {\n      currentUser: currentUser,\n      setCurrentUser: setCurrentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        onClick: e => setRole(\"Staff\"),\n        children: \"Staff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        onClick: e => setRole(\"Admin\"),\n        children: \"Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        onClick: e => setRole(\"AdminManager\"),\n        children: \"Admin Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        onClick: e => setRole(\"Manager\"),\n        children: \"Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this) // <div>\n  //   <SwitchCase />\n  // </div>\n  ;\n};\n\n_s(Main, \"0KTK3Ri4zbBVMbUUv8LIFo8/J7M=\", false, function () {\n  return [useRecoilState, useEmployeesContext];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Main.js"],"names":["React","useState","useEffect","getFirebase","Button","ButtonGroup","RecoilRoot","atom","selector","useRecoilState","useRecoilValue","useSetRecoilState","LoginForm","DashboardMain","DashboardStaff","DashboardAdmin","DashboardAdminManager","DashboardManager","loginLevelState","useEmployeesContext","Main","currentUser","setCurrentUser","loginLevel","setLoginLevel","single_employee","single_employee_loading","single_employee_error","getSingleEmployeeEmail","firebase","auth","onAuthStateChanged","authUser","email","SwitchCase","textAlign","classes","button","e","setRole"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport getFirebase from \"../utils/firebase\";\r\nimport { Button, ButtonGroup} from \"@material-ui/core\"\r\nimport {\r\n  RecoilRoot,\r\n  atom,\r\n  selector,\r\n  useRecoilState,\r\n  useRecoilValue,\r\n  useSetRecoilState,\r\n} from \"recoil\";\r\n\r\nimport LoginForm from \"./LoginForm\";\r\nimport DashboardMain from \"./DashboardMain\";\r\nimport DashboardStaff from \"./DashboardStaff\";\r\nimport DashboardAdmin from \"./DashboardAdmin\";\r\nimport DashboardAdminManager from \"./DashboardAdminManager\";\r\nimport DashboardManager from \"./DashboardManager\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst Main = () => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const {\r\n    single_employee,\r\n    single_employee_loading,\r\n    single_employee_error,\r\n    getSingleEmployeeEmail,\r\n  } = useEmployeesContext();\r\n\r\n  useEffect(() => {\r\n    const firebase = getFirebase();\r\n\r\n    if (firebase) {\r\n      firebase.auth().onAuthStateChanged((authUser) => {\r\n        if (authUser) {\r\n          setCurrentUser(authUser.email);\r\n        } else {\r\n          setCurrentUser(null);\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const SwitchCase = () => {\r\n    //console.log(loginLevel);\r\n    switch (loginLevel.loginLevel) {\r\n      case \"Staff\":\r\n        return <DashboardStaff />;\r\n      case \"Admin\":\r\n        return <DashboardAdmin />;\r\n      case \"AdminManager\":\r\n        return <DashboardAdminManager />;\r\n      case \"Manager\":\r\n        return <DashboardManager />;\r\n      default:\r\n        return \"You are not authorised user!\";\r\n    }\r\n  };\r\n\r\n  if (!currentUser) {\r\n    return (\r\n      <LoginForm currentUser={currentUser} setCurrentUser={setCurrentUser} />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <ButtonGroup>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={(e) => setRole(\"Staff\")}\r\n        >\r\n          Staff\r\n        </Button>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={(e) => setRole(\"Admin\")}\r\n        >\r\n          Admin\r\n        </Button>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={(e) => setRole(\"AdminManager\")}\r\n        >\r\n          Admin Manager\r\n        </Button>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={(e) => setRole(\"Manager\")}\r\n        >\r\n          Manager\r\n        </Button>\r\n      </ButtonGroup>\r\n    </div>\r\n    // <div>\r\n    //   <SwitchCase />\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}