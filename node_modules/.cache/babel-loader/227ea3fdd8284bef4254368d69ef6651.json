{"ast":null,"code":"import { Action } from \"../../internal/Action\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { animatedWebP } from \"../../qualifiers/flag\";\nimport { animated } from \"../../qualifiers/flag\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description Converts a video to an animated webp or gif.\n * The resulting transformation includes format (f_format) and the animated flag (fl_animated).\n * The flag fl_awebp is added only when an animated webp is requested.\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\n\nclass ToAnimatedAction extends Action {\n  constructor(animatedFormat) {\n    super();\n\n    if (animatedFormat.toString() === 'webp') {\n      this.addFlag(animatedWebP());\n    }\n\n    this.addFlag(animated());\n    this.addQualifier(new Qualifier('f', animatedFormat));\n  }\n  /**\n   * @description Sets the time between frames.\n   * @param delayValue The time in milliseconds.\n   */\n\n\n  delay(delayValue) {\n    this.addQualifier(new Qualifier('dl', delayValue));\n    return this;\n  }\n  /**\n   * @description Sets the frequency at which the video is sampled.\n   * @param sampling As a string (e.g. '2.3s'), samples one frame every 2.3 seconds.<br>As a number (e.g. 20),\n   * samples that many equally spaced frames over the duration of the video.\n   */\n\n\n  sampling(sampling) {\n    this.addQualifier(new Qualifier('vs', sampling));\n    return this;\n  }\n\n}\n\nexport default ToAnimatedAction;","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/actions/transcode/ToAnimatedAction.js"],"names":["Action","Qualifier","animatedWebP","animated","ToAnimatedAction","constructor","animatedFormat","toString","addFlag","addQualifier","delay","delayValue","sampling"],"mappings":"AAAA,SAASA,MAAT,QAAuB,uBAAvB;AACA,SAASC,SAAT,QAA0B,oCAA1B;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,gBAAN,SAA+BJ,MAA/B,CAAsC;AAClCK,EAAAA,WAAW,CAACC,cAAD,EAAiB;AACxB;;AACA,QAAIA,cAAc,CAACC,QAAf,OAA8B,MAAlC,EAA0C;AACtC,WAAKC,OAAL,CAAaN,YAAY,EAAzB;AACH;;AACD,SAAKM,OAAL,CAAaL,QAAQ,EAArB;AACA,SAAKM,YAAL,CAAkB,IAAIR,SAAJ,CAAc,GAAd,EAAmBK,cAAnB,CAAlB;AACH;AACD;AACJ;AACA;AACA;;;AACII,EAAAA,KAAK,CAACC,UAAD,EAAa;AACd,SAAKF,YAAL,CAAkB,IAAIR,SAAJ,CAAc,IAAd,EAAoBU,UAApB,CAAlB;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIC,EAAAA,QAAQ,CAACA,QAAD,EAAW;AACf,SAAKH,YAAL,CAAkB,IAAIR,SAAJ,CAAc,IAAd,EAAoBW,QAApB,CAAlB;AACA,WAAO,IAAP;AACH;;AAzBiC;;AA2BtC,eAAeR,gBAAf","sourcesContent":["import { Action } from \"../../internal/Action\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { animatedWebP } from \"../../qualifiers/flag\";\nimport { animated } from \"../../qualifiers/flag\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description Converts a video to an animated webp or gif.\n * The resulting transformation includes format (f_format) and the animated flag (fl_animated).\n * The flag fl_awebp is added only when an animated webp is requested.\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\nclass ToAnimatedAction extends Action {\n    constructor(animatedFormat) {\n        super();\n        if (animatedFormat.toString() === 'webp') {\n            this.addFlag(animatedWebP());\n        }\n        this.addFlag(animated());\n        this.addQualifier(new Qualifier('f', animatedFormat));\n    }\n    /**\n     * @description Sets the time between frames.\n     * @param delayValue The time in milliseconds.\n     */\n    delay(delayValue) {\n        this.addQualifier(new Qualifier('dl', delayValue));\n        return this;\n    }\n    /**\n     * @description Sets the frequency at which the video is sampled.\n     * @param sampling As a string (e.g. '2.3s'), samples one frame every 2.3 seconds.<br>As a number (e.g. 20),\n     * samples that many equally spaced frames over the duration of the video.\n     */\n    sampling(sampling) {\n        this.addQualifier(new Qualifier('vs', sampling));\n        return this;\n    }\n}\nexport default ToAnimatedAction;\n"]},"metadata":{},"sourceType":"module"}