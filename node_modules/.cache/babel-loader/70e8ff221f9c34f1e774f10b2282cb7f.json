{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\Payrunbatch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { Heading, Text } from \"@chakra-ui/react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { useHistory } from \"react-router-dom\";\nimport { useCustomToast } from \"../helpers/useCustomToast\";\nimport { Button, ButtonGroup, Paper, Grid, Icon, Divider } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport PayForm from \"./PayForm\";\nimport PaySummary from \"./PaySummary\";\nimport { usePayslipsBatch } from \"./payslips/usePayslipsBatch\";\nimport { useUpdatePayslips } from \"./payslips/useUpdatePayslips\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { useTablesContext } from \"../context/tables_context\";\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\nimport { payrunState, paydataState, payrunIdState, payrunStatusState } from \"./data/atomdata\";\nimport { useRecoilValue } from \"recoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\n\nconst Payrunbatch = () => {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const toast = useCustomToast();\n  const componentRef = useRef();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight); //const { register, handleSubmit, control, setValue, reset, watch } = useForm();\n\n  const {\n    payrun,\n    getSingleBatchPayslip,\n    //singlebatchpayslip,\n    payslip_period,\n    //updatePayslip,\n    updatePayrun,\n    singlebatch_payslip_loading,\n    singlebatch_payslip_error\n  } = usePayslipsContext();\n  const {\n    payslipsbatch,\n    psbpayrunId,\n    setPSBPayrunId\n  } = usePayslipsBatch();\n  const updatePayslip = useUpdatePayslips();\n  const {\n    loadPayitems,\n    payitems\n  } = useTablesContext();\n  const [payrundata, setPayrundata] = useRecoilState(payrunState);\n  const [payrunId, setPayrunId] = useRecoilState(payrunIdState);\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\n  const [loadFormdata, setLoadFormdata] = useState(false);\n  const [loadUpdatedata, setLoadUpdatedata] = useState(false);\n  const [formdata, setFormdata] = useState([]);\n  const [rowindex, setRowIndex] = useState(0);\n  const [empon, setEmpon] = useState(false);\n  const [showSumm, setShowSumm] = useState(false);\n  const [isCalc, setIsCalc] = useState(false);\n  const singlebatchpayslip = payslipsbatch;\n  useEffect(() => {\n    loadPayitems(); // getSingleBatchPayslip(payslip_period);\n  }, []);\n  useEffect(() => {\n    handle;\n  });\n  useEffect(() => {\n    setLoadFormdata(false);\n  }, [loadUpdatedata]);\n  useEffect(() => {\n    setPSBPayrunId(payslip_period);\n    setIsCalc(true);\n  }, [psbpayrunId]);\n  useEffect(() => {\n    calcPayrunTotals();\n    setIsCalc(false);\n  }, [isCalc]);\n\n  const handleShowSumm = e => {\n    e.preventDefault();\n    setShowSumm(!showSumm);\n  };\n\n  const handlePrintSummary = e => {\n    e.preventDefault();\n  };\n\n  const handleSavePayslips = e => {\n    e.preventDefault(); // eslint-disable-next-line no-lone-blocks\n\n    {\n      singlebatchpayslip.forEach(rec => {\n        const {\n          id,\n          rec_id,\n          tableData,\n          ...fields\n        } = rec;\n        updatePayslip({\n          id,\n          ...fields\n        });\n      });\n    } //update payrun\n\n    handleSavePayrun();\n    toast({\n      title: \"Changes have been saved!\",\n      status: \"success\"\n    });\n  };\n\n  const calcPayrunTotals = () => {\n    if (!psbpayrunId) {\n      return null;\n    }\n\n    console.log(\"calc\", singlebatchpayslip);\n    const totalpayroll = singlebatchpayslip.reduce((acc, item) => {\n      const value = isNaN(item.nett_pay_bnd) ? 0 : item.nett_pay_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalwages = singlebatchpayslip.reduce((acc, item, index) => {\n      const value = isNaN(item.wages_bnd) ? 0 : item.wages_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totaltap = singlebatchpayslip.reduce((acc, item) => {\n      const value = isNaN(item.tap_amount_bnd) ? 0 : item.tap_amount_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalscp = singlebatchpayslip.reduce((acc, item) => {\n      const value = isNaN(item.scp_amount_bnd) ? 0 : item.scp_amount_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalallows = singlebatchpayslip.reduce((acc, item) => {\n      const value = isNaN(item.total_allowances_bnd) ? 0 : item.total_allowances_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totaldeducts = singlebatchpayslip.reduce((acc, item) => {\n      const value = isNaN(item.total_deductions_bnd) ? 0 : item.total_deductions_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalsiteallows = singlebatchpayslip.reduce((acc, item) => {\n      const value = isNaN(item.site_allows_bnd) ? 0 : item.site_allows_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalexpensesclaims = singlebatchpayslip.reduce((acc, item) => {\n      const value = isNaN(item.expenses_claims_bnd) ? 0 : item.expenses_claims_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0); //console.log(\"total\", totalwages);\n\n    setPayrundata({ ...payrundata,\n      totalpayroll: totalpayroll,\n      totalwages: totalwages,\n      totaltap: totaltap,\n      totalscp: totalscp,\n      totalallows: totalallows,\n      totaldeducts: totaldeducts,\n      totalsiteallows: totalsiteallows,\n      totalexpensesclaims: totalexpensesclaims\n    });\n  };\n\n  const handleSavePayrun = () => {\n    // eslint-disable-next-line no-lone-blocks\n    updatePayrun({\n      id: payrunId,\n      totalpayroll: payrundata.totalpayroll,\n      totalwages: payrundata.totalwages,\n      totaltap: payrundata.totaltap,\n      totalscp: payrundata.totalscp,\n      totalallows: payrundata.totalallows,\n      totaldeducts: payrundata.totaldeducts,\n      totalsitesallows: payrundata.totalsitesallows,\n      totalexpensesclaims: payrundata.totalexpensesclaims\n    });\n  };\n\n  const handleVerifyPayslips = e => {\n    e.preventDefault();\n    setPayrunStatus(\"Verified\");\n    updatePayrun({\n      id: payrunId,\n      status: \"Verified\"\n    });\n    toast({\n      title: \"Batch has been verified!\",\n      status: \"success\"\n    });\n  };\n\n  const handleEmpButtonClick = index => {\n    const paydata = singlebatchpayslip[index];\n    setFormdata({ ...paydata\n    });\n    setFormdata({ ...paydata\n    });\n    setLoadFormdata(true);\n  }; // if (singlebatch_payslip_loading) {\n  //   return (\n  //     <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\n  //       <div>\n  //         <h2>Loading...Payslips</h2>\n  //       </div>\n  //     </Paper>\n  //   );\n  // }\n  // if (singlebatch_payslip_error) {\n  //   return (\n  //     <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\n  //       <div>\n  //         <h2>Internet connection problem!</h2>\n  //       </div>\n  //     </Paper>\n  //   );\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: fixedHeightPaper,\n    style: {\n      backgroundColor: \"lightcyan\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.section,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        style: {\n          border: \"1px solid black\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 2,\n          align: \"center\",\n          style: {\n            border: \"1px solid black\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h4\",\n            size: \"md\",\n            children: \"Employees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 10,\n          style: {\n            border: \"1px solid black\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: 14,\n              display: \"inline-flex\",\n              flexDirection: \"row\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginLeft: 14,\n                display: \"inline-flex\",\n                flexDirection: \"row\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Heading, {\n                as: \"h4\",\n                size: \"md\",\n                children: \"Payroll Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 10,\n                marginLeft: 20\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 2,\n          align: \"center\",\n          style: {\n            border: \"1px solid black\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: payslipsbatch && payslipsbatch.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: classes.empbtn // ${index === value && \"activebtn\"}\n                  ,\n                  onClick: e => {\n                    setRowIndex(index);\n                    handleEmpButtonClick(index);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\" \", item.name]\n                  }, item.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  variant: \"fullWidth\",\n                  className: classes.divider\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 10,\n          align: \"center\",\n          style: {\n            border: \"1px solid black\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            style: {\n              border: \"1px solid black\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sm: 12,\n              align: \"left\",\n              style: {\n                border: \"1px solid black\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  padding: 5\n                },\n                children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                  color: \"primary\",\n                  \"aria-label\": \"outlined primary button group\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                    className: classes.button,\n                    onClick: e => handleShowSumm(e),\n                    style: {\n                      marginLeft: 10\n                    },\n                    children: [\"Details \", /*#__PURE__*/_jsxDEV(Icon, {\n                      className: classes.rightIcon,\n                      children: \"send\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: e => handleShowSumm(e),\n                    className: classes.button,\n                    style: {\n                      marginLeft: 10\n                    },\n                    children: [\"Summary \", /*#__PURE__*/_jsxDEV(Icon, {\n                      className: classes.rightIcon,\n                      children: \"send\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 342,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                    className: classes.button,\n                    style: {\n                      marginLeft: 5\n                    },\n                    onClick: e => handleSavePayslips(e),\n                    children: [\"Save \", /*#__PURE__*/_jsxDEV(Icon, {\n                      className: classes.rightIcon,\n                      children: \"send\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 352,\n                      columnNumber: 28\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 21\n                  }, this), payrunId && /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                    className: classes.button,\n                    style: {\n                      marginLeft: 5\n                    },\n                    onClick: e => handleVerifyPayslips(e),\n                    children: [\"Verify \", /*#__PURE__*/_jsxDEV(Icon, {\n                      className: classes.rightIcon,\n                      children: \"send\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 373,\n                      columnNumber: 32\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), !showSumm && /*#__PURE__*/_jsxDEV(PayForm, {\n            formdata: formdata,\n            setFormdata: setFormdata,\n            loadFormdata: loadFormdata,\n            setLoadFormdata: setLoadFormdata,\n            payitems: payitems,\n            setLoadUpdatedata: setLoadUpdatedata,\n            singlebatchpayslip: singlebatchpayslip,\n            rowindex: rowindex,\n            isCalc: isCalc,\n            setIsCalc: setIsCalc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this), showSumm && /*#__PURE__*/_jsxDEV(PaySummary, {\n            payrundata: payrundata,\n            singlebatchpayslip: singlebatchpayslip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Payrunbatch, \"C9Is6uzI3aEEpfWhpuZVNZZoOVk=\", false, function () {\n  return [useHistory, useStyles, useCustomToast, usePayslipsContext, usePayslipsBatch, useUpdatePayslips, useTablesContext, useRecoilState, useRecoilState, useRecoilState];\n});\n\n_c = Payrunbatch;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  container: {\n    margin: 0,\n    padding: 0,\n    width: \"80vw\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\n    gridAutoRows: \"10px\",\n    position: \"absolute\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    justifyContent: \"center\",\n    backgroundColor: \"primary\"\n  },\n  fixedHeight: {\n    height: 800\n  },\n  paper: {\n    paddingTop: theme.spacing(10),\n    // display: \"flex\",\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    border: \"1px solid\",\n    width: \"100%\",\n    color: \"primary\",\n    bcakgroundColor: \"white\"\n  },\n  card: {\n    backgroundColor: \"white\"\n  },\n  section: {\n    width: \"80vw\",\n    margin: \"1rem auto\",\n    maxWidth: \"var(--max-width)\"\n  },\n  underline: {\n    width: \"5rem\",\n    height: \"0.25rem\",\n    marginBottom: \"1.25rem\",\n    background: \"var(--clr-primary-5)\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  title: {\n    marginbottom: \"4rem\",\n    textAlign: \"center\"\n  },\n  empscenter: {\n    width: \"80vw\",\n    margin: \"0 auto\",\n    maxWidth: \"var(--max-width)\",\n    flexDirection: \"row\"\n  },\n  empcontainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginBottom: \"4rem\",\n    flexWrap: \"wrap\"\n  },\n  empbtn: {\n    background: \"transparent\",\n    borderColor: \"transparent\",\n    textTransform: \"capitalize\",\n    fontSize: \"1rem\",\n    letterSpacing: \"var(--spacing)\",\n    margin: \"0 0.5rem\",\n    transition: \"var(--transition)\",\n    cursor: \"pointer\",\n    padding: \"0.25rem 0\",\n    lineHeight: \"1\",\n    outlineColor: \"var(--clr-primary-10)\",\n    \"&:hover\": {\n      color: \"var(--clr-primary-5)\",\n      boxShadow: \"0 2px var(--clr-primary-5)\"\n    }\n  },\n  activebtn: {\n    color: \"var(--clr-primary-5)\",\n    boxShadow: \"0 2px var(--clr-primary-5)\"\n  },\n  empinfo: {\n    fontWeight: \"400\"\n  },\n  divider: {\n    // Theme Color, or use css color in quote\n    background: \"white\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 350\n  }\n}));\nexport default Payrunbatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payrunbatch\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Payrunbatch.js"],"names":["React","useState","useEffect","useRef","useReactToPrint","Heading","Text","makeStyles","clsx","useHistory","useCustomToast","Button","ButtonGroup","Paper","Grid","Icon","Divider","Alert","PayForm","PaySummary","usePayslipsBatch","useUpdatePayslips","usePayslipsContext","useTablesContext","useSetRecoilState","useRecoilState","payrunState","paydataState","payrunIdState","payrunStatusState","useRecoilValue","drawerWidth","Payrunbatch","history","classes","useStyles","toast","componentRef","fixedHeightPaper","paper","fixedHeight","payrun","getSingleBatchPayslip","payslip_period","updatePayrun","singlebatch_payslip_loading","singlebatch_payslip_error","payslipsbatch","psbpayrunId","setPSBPayrunId","updatePayslip","loadPayitems","payitems","payrundata","setPayrundata","payrunId","setPayrunId","payrunstatus","setPayrunStatus","loadFormdata","setLoadFormdata","loadUpdatedata","setLoadUpdatedata","formdata","setFormdata","rowindex","setRowIndex","empon","setEmpon","showSumm","setShowSumm","isCalc","setIsCalc","singlebatchpayslip","handle","calcPayrunTotals","handleShowSumm","e","preventDefault","handlePrintSummary","handleSavePayslips","forEach","rec","id","rec_id","tableData","fields","handleSavePayrun","title","status","console","log","totalpayroll","reduce","acc","item","value","isNaN","nett_pay_bnd","Math","round","Number","EPSILON","totalwages","index","wages_bnd","totaltap","tap_amount_bnd","totalscp","scp_amount_bnd","totalallows","total_allowances_bnd","totaldeducts","total_deductions_bnd","totalsiteallows","site_allows_bnd","totalexpensesclaims","expenses_claims_bnd","totalsitesallows","handleVerifyPayslips","handleEmpButtonClick","paydata","backgroundColor","section","border","marginLeft","display","flexDirection","marginTop","map","empbtn","name","divider","padding","button","rightIcon","theme","root","flexGrow","margin","spacing","container","width","gridTemplateColumns","gridAutoRows","position","left","transform","justifyContent","height","paddingTop","overflow","color","bcakgroundColor","card","maxWidth","underline","marginBottom","background","marginRight","marginbottom","textAlign","empscenter","empcontainer","flexWrap","borderColor","textTransform","fontSize","letterSpacing","transition","cursor","lineHeight","outlineColor","boxShadow","activebtn","empinfo","fontWeight","textField"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport { Heading, Text } from \"@chakra-ui/react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Paper,\r\n  Grid,\r\n  Icon,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport PayForm from \"./PayForm\";\r\nimport PaySummary from \"./PaySummary\";\r\nimport { usePayslipsBatch } from \"./payslips/usePayslipsBatch\";\r\nimport { useUpdatePayslips } from \"./payslips/useUpdatePayslips\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\r\nimport {\r\n  payrunState,\r\n  paydataState,\r\n  payrunIdState,\r\n  payrunStatusState,\r\n} from \"./data/atomdata\";\r\nimport { useRecoilValue } from \"recoil\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst Payrunbatch = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const componentRef = useRef();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  //const { register, handleSubmit, control, setValue, reset, watch } = useForm();\r\n\r\n  const {\r\n    payrun,\r\n    getSingleBatchPayslip,\r\n    //singlebatchpayslip,\r\n    payslip_period,\r\n    //updatePayslip,\r\n    updatePayrun,\r\n    singlebatch_payslip_loading,\r\n    singlebatch_payslip_error,\r\n  } = usePayslipsContext();\r\n  const { payslipsbatch, psbpayrunId, setPSBPayrunId } = usePayslipsBatch();\r\n  const updatePayslip = useUpdatePayslips();\r\n  const { loadPayitems, payitems } = useTablesContext();\r\n  const [payrundata, setPayrundata] = useRecoilState(payrunState);\r\n  const [payrunId, setPayrunId] = useRecoilState(payrunIdState);\r\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\r\n  const [loadFormdata, setLoadFormdata] = useState(false);\r\n  const [loadUpdatedata, setLoadUpdatedata] = useState(false);\r\n  const [formdata, setFormdata] = useState([]);\r\n  const [rowindex, setRowIndex] = useState(0);\r\n  const [empon, setEmpon] = useState(false);\r\n   const [showSumm, setShowSumm] = useState(false);\r\n  const [isCalc, setIsCalc] = useState(false);\r\n  const singlebatchpayslip = payslipsbatch;\r\n\r\n  useEffect(() => {\r\n    loadPayitems();\r\n    // getSingleBatchPayslip(payslip_period);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n   handle\r\n })\r\n\r\n  useEffect(() => {\r\n    setLoadFormdata(false);\r\n  }, [loadUpdatedata]);\r\n\r\n  useEffect(() => {\r\n    setPSBPayrunId(payslip_period);\r\n    setIsCalc(true);\r\n  }, [psbpayrunId]);\r\n\r\n  useEffect(() => {\r\n    calcPayrunTotals();\r\n    setIsCalc(false);\r\n  }, [isCalc]);\r\n\r\n  const handleShowSumm = (e) => {\r\n    e.preventDefault();\r\n    setShowSumm(!showSumm);\r\n  };\r\n\r\n  const handlePrintSummary = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleSavePayslips = (e) => {\r\n    e.preventDefault();\r\n    // eslint-disable-next-line no-lone-blocks\r\n    {\r\n      singlebatchpayslip.forEach((rec) => {\r\n        const { id, rec_id, tableData, ...fields } = rec;\r\n        updatePayslip({ id, ...fields });\r\n      });\r\n    }\r\n    //update payrun\r\n    handleSavePayrun();\r\n    toast({\r\n      title: \"Changes have been saved!\",\r\n      status: \"success\",\r\n    });\r\n  };\r\n\r\n  const calcPayrunTotals = () => {\r\n    if (!psbpayrunId) {\r\n      return null;\r\n    }\r\n    console.log(\"calc\", singlebatchpayslip);\r\n    const totalpayroll = singlebatchpayslip.reduce((acc, item) => {\r\n      const value = isNaN(item.nett_pay_bnd) ? 0 : item.nett_pay_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n    const totalwages = singlebatchpayslip.reduce((acc, item, index) => {\r\n      const value = isNaN(item.wages_bnd) ? 0 : item.wages_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n    const totaltap = singlebatchpayslip.reduce((acc, item) => {\r\n      const value = isNaN(item.tap_amount_bnd) ? 0 : item.tap_amount_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalscp = singlebatchpayslip.reduce((acc, item) => {\r\n      const value = isNaN(item.scp_amount_bnd) ? 0 : item.scp_amount_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalallows = singlebatchpayslip.reduce((acc, item) => {\r\n      const value = isNaN(item.total_allowances_bnd)\r\n        ? 0\r\n        : item.total_allowances_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totaldeducts = singlebatchpayslip.reduce((acc, item) => {\r\n      const value = isNaN(item.total_deductions_bnd)\r\n        ? 0\r\n        : item.total_deductions_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalsiteallows = singlebatchpayslip.reduce((acc, item) => {\r\n      const value = isNaN(item.site_allows_bnd) ? 0 : item.site_allows_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalexpensesclaims = singlebatchpayslip.reduce((acc, item) => {\r\n      const value = isNaN(item.expenses_claims_bnd)\r\n        ? 0\r\n        : item.expenses_claims_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    //console.log(\"total\", totalwages);\r\n    setPayrundata({\r\n      ...payrundata,\r\n      totalpayroll: totalpayroll,\r\n      totalwages: totalwages,\r\n      totaltap: totaltap,\r\n      totalscp: totalscp,\r\n      totalallows: totalallows,\r\n      totaldeducts: totaldeducts,\r\n      totalsiteallows: totalsiteallows,\r\n      totalexpensesclaims: totalexpensesclaims,\r\n    });\r\n  };\r\n\r\n  const handleSavePayrun = () => {\r\n    // eslint-disable-next-line no-lone-blocks\r\n    updatePayrun({\r\n      id: payrunId,\r\n      totalpayroll: payrundata.totalpayroll,\r\n      totalwages: payrundata.totalwages,\r\n      totaltap: payrundata.totaltap,\r\n      totalscp: payrundata.totalscp,\r\n      totalallows: payrundata.totalallows,\r\n      totaldeducts: payrundata.totaldeducts,\r\n      totalsitesallows: payrundata.totalsitesallows,\r\n      totalexpensesclaims: payrundata.totalexpensesclaims,\r\n    });\r\n  };\r\n\r\n  const handleVerifyPayslips = (e) => {\r\n    e.preventDefault();\r\n    setPayrunStatus(\"Verified\");\r\n    updatePayrun({ id: payrunId, status: \"Verified\" });\r\n    toast({\r\n      title: \"Batch has been verified!\",\r\n      status: \"success\",\r\n    });\r\n  };\r\n\r\n  const handleEmpButtonClick = (index) => {\r\n    const paydata = singlebatchpayslip[index];\r\n    setFormdata({ ...paydata });\r\n    setFormdata({ ...paydata });\r\n    setLoadFormdata(true);\r\n  };\r\n\r\n  // if (singlebatch_payslip_loading) {\r\n  //   return (\r\n  //     <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n  //       <div>\r\n  //         <h2>Loading...Payslips</h2>\r\n  //       </div>\r\n  //     </Paper>\r\n  //   );\r\n  // }\r\n\r\n  // if (singlebatch_payslip_error) {\r\n  //   return (\r\n  //     <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n  //       <div>\r\n  //         <h2>Internet connection problem!</h2>\r\n  //       </div>\r\n  //     </Paper>\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n    <Paper\r\n      className={fixedHeightPaper}\r\n      style={{ backgroundColor: \"lightcyan\" }}\r\n    >\r\n      <section className={classes.section}>\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid black\" }}>\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid black\" }}\r\n          >\r\n            <Heading as=\"h4\" size=\"md\">\r\n              Employees\r\n            </Heading>\r\n          </Grid>\r\n          <Grid item sm={10} style={{ border: \"1px solid black\" }}>\r\n            <div\r\n              style={{\r\n                marginLeft: 14,\r\n                display: \"inline-flex\",\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  marginLeft: 14,\r\n                  display: \"inline-flex\",\r\n                  flexDirection: \"row\",\r\n                }}\r\n              >\r\n                <Heading as=\"h4\" size=\"md\">\r\n                  Payroll Details\r\n                </Heading>\r\n              </div>\r\n\r\n              <div style={{ marginTop: 10, marginLeft: 20 }}></div>\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid black\" }}\r\n          >\r\n            <div>\r\n              {payslipsbatch &&\r\n                payslipsbatch.map((item, index) => {\r\n                  return (\r\n                    <div>\r\n                      <Button\r\n                        className={classes.empbtn}\r\n                        // ${index === value && \"activebtn\"}\r\n                        onClick={(e) => {\r\n                          setRowIndex(index);\r\n                          handleEmpButtonClick(index);\r\n                        }}\r\n                      >\r\n                        <div key={item.id}> {item.name}</div>\r\n                      </Button>\r\n                      <Divider\r\n                        variant=\"fullWidth\"\r\n                        className={classes.divider}\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={10}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid black\" }}\r\n          >\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              style={{ border: \"1px solid black\" }}\r\n            >\r\n              <Grid\r\n                item\r\n                sm={12}\r\n                align=\"left\"\r\n                style={{ border: \"1px solid black\" }}\r\n              >\r\n                <div style={{ padding: 5 }}>\r\n                  <ButtonGroup\r\n                    color=\"primary\"\r\n                    aria-label=\"outlined primary button group\"\r\n                  >\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      onClick={(e) => handleShowSumm(e)}\r\n                      style={{ marginLeft: 10 }}\r\n                    >\r\n                      Details <Icon className={classes.rightIcon}>send</Icon>\r\n                    </Button>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={(e) => handleShowSumm(e)}\r\n                      className={classes.button}\r\n                      style={{ marginLeft: 10 }}\r\n                    >\r\n                      Summary <Icon className={classes.rightIcon}>send</Icon>\r\n                    </Button>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      style={{ marginLeft: 5 }}\r\n                      onClick={(e) => handleSavePayslips(e)}\r\n                    >\r\n                      Save <Icon className={classes.rightIcon}>send</Icon>\r\n                    </Button>\r\n                    {/* <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      style={{ marginLeft: 5 }}\r\n                      onClick={(e) => handlePrintSummary(e)}\r\n                    >\r\n                      Print <Icon className={classes.rightIcon}>send</Icon>\r\n                    </Button> */}\r\n                    {payrunId && (\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        style={{ marginLeft: 5 }}\r\n                        onClick={(e) => handleVerifyPayslips(e)}\r\n                      >\r\n                        Verify <Icon className={classes.rightIcon}>send</Icon>\r\n                      </Button>\r\n                    )}\r\n                  </ButtonGroup>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n            {!showSumm && (\r\n              <PayForm\r\n                formdata={formdata}\r\n                setFormdata={setFormdata}\r\n                loadFormdata={loadFormdata}\r\n                setLoadFormdata={setLoadFormdata}\r\n                payitems={payitems}\r\n                setLoadUpdatedata={setLoadUpdatedata}\r\n                singlebatchpayslip={singlebatchpayslip}\r\n                rowindex={rowindex}\r\n                isCalc={isCalc}\r\n                setIsCalc={setIsCalc}\r\n              />\r\n            )}\r\n            {showSumm && (\r\n              <PaySummary\r\n                payrundata={payrundata}\r\n                singlebatchpayslip={singlebatchpayslip}\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </section>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    paddingTop: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"white\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"white\",\r\n  },\r\n  section: {\r\n    width: \"80vw\",\r\n    margin: \"1rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  empscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  empcontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  empbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  empinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  divider: {\r\n    // Theme Color, or use css color in quote\r\n    background: \"white\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n}));\r\n\r\nexport default Payrunbatch;\r\n"]},"metadata":{},"sourceType":"module"}