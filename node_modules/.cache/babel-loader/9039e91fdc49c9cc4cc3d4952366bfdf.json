{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\LeaveTableViewAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { Heading } from \"@chakra-ui/react\";\nimport { differenceInDays, differenceInMonths } from \"date-fns\";\nimport axios from \"axios\";\nimport MaterialTable from \"material-table\";\nimport { Box, Grid } from \"@chakra-ui/react\";\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\nimport { selector, useRecoilState, useRecoilValueLoadable } from \"recoil\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useLeavesContext } from \"../context/leaves_context\";\nimport { leaves_url } from \"../utils/constants\";\nimport { useLeaves } from \"./leaves/useLeaves\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240; // const fetchExpensesDetails = selector({\n//   key: \"fetchExpensesDetailsSelector\",\n//   get: async ({ get }) => {\n//     try {\n//       const { data } = await axios.get(expenses_url);\n//       const wpexpirydata = data;\n//       return data;\n//     } catch (error) {\n//       throw error;\n//     }\n//   },\n// });\n\nconst LeaveTableViewStaff = () => {\n  _s();\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const {\n    leaves,\n    filter,\n    setFilter,\n    setLeaveId\n  } = useLeaves();\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const [userdata, setUserdata] = useState([]); //const [userdata, setUserdata] = useRecoilState(userdatastate);\n  //const ExpensesDetails = useRecoilValueLoadable(fetchExpensesDetails);\n  //const { state, contents } = ExpensesDetails;\n\n  const {\n    editEmployeeID\n  } = useEmployeesContext();\n  const {\n    leaves_loading,\n    leaves_error,\n    loadEmpLeaves\n  } = useLeavesContext();\n  const today = Date().toLocaleString();\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h4\",\n        size: \"md\",\n        children: \"Leaves Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), leaves.filter(i => i.status === \"Approve\" && differenceInDays(new Date(i.from_date), new Date(today)) < 60 && differenceInDays(new Date(i.to_date), new Date(today)) < 60 && differenceInDays(new Date(i.from_date), new Date(today)) > 0).map(row => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          templateColumns: \"repeat(5, 1fr)\",\n          gap: 6,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            w: \"100%\",\n            children: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            w: \"100%\",\n            children: row.from_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            w: \"100%\",\n            children: row.to_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            w: \"100%\",\n            children: row.reason\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this) // <ListItem key={row.id}>\n        //   <Grid item sm={3} align=\"center\">\n        //     <ListItemText>{row.name}</ListItemText>\n        //   </Grid>\n        //   <Grid item sm={3} align=\"center\">\n        //     <ListItemText>{row.from_date}</ListItemText>\n        //   </Grid>\n        //   <Grid item sm={3} align=\"center\">\n        //     <ListItemText>{row.to_date}</ListItemText>\n        //   </Grid>\n        //   <Grid item sm={3} align=\"center\">\n        //     <ListItemText>{row.reason}</ListItemText>\n        //   </Grid>\n        //   <Grid item sm={3} align=\"center\">\n        //     <ListItemText>{row.status}</ListItemText>\n        //   </Grid>\n        // </ListItem>\n        ;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LeaveTableViewStaff, \"hyy+i29crl51mvWn5BJsc0HPVg0=\", false, function () {\n  return [useStyles, useLeaves, useRecoilState, useEmployeesContext, useLeavesContext];\n});\n\n_c = LeaveTableViewStaff;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\nexport default LeaveTableViewStaff;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeaveTableViewStaff\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/LeaveTableViewAdmin.js"],"names":["React","useState","useEffect","makeStyles","clsx","Heading","differenceInDays","differenceInMonths","axios","MaterialTable","Box","Grid","List","ListItem","ListItemText","selector","useRecoilState","useRecoilValueLoadable","loginLevelState","useEmployeesContext","useLeavesContext","leaves_url","useLeaves","drawerWidth","LeaveTableViewStaff","classes","useStyles","fixedHeightPaper","paper","fixedHeight","leaves","filter","setFilter","setLeaveId","loginLevel","setLoginLevel","userdata","setUserdata","editEmployeeID","leaves_loading","leaves_error","loadEmpLeaves","today","Date","toLocaleString","root","i","status","from_date","to_date","map","row","name","reason","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\"; \r\nimport { Heading } from \"@chakra-ui/react\";\r\nimport { differenceInDays, differenceInMonths } from \"date-fns\";\r\nimport axios from \"axios\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Box, Grid} from \"@chakra-ui/react\"\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { selector, useRecoilState, useRecoilValueLoadable } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { leaves_url } from \"../utils/constants\";\r\nimport { useLeaves } from \"./leaves/useLeaves\";\r\n\r\nconst drawerWidth = 240;\r\n\r\n// const fetchExpensesDetails = selector({\r\n//   key: \"fetchExpensesDetailsSelector\",\r\n//   get: async ({ get }) => {\r\n//     try {\r\n//       const { data } = await axios.get(expenses_url);\r\n//       const wpexpirydata = data;\r\n\r\n//       return data;\r\n//     } catch (error) {\r\n//       throw error;\r\n//     }\r\n//   },\r\n// });\r\n\r\nconst LeaveTableViewStaff = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { leaves, filter, setFilter, setLeaveId } = useLeaves();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [userdata, setUserdata] = useState([]);\r\n  //const [userdata, setUserdata] = useRecoilState(userdatastate);\r\n  //const ExpensesDetails = useRecoilValueLoadable(fetchExpensesDetails);\r\n  //const { state, contents } = ExpensesDetails;\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const { leaves_loading, leaves_error, loadEmpLeaves } =\r\n    useLeavesContext();\r\nconst today = Date().toLocaleString();\r\n\r\n  \r\n  return (\r\n    <List className={classes.root}>\r\n      <Grid container direction=\"row\">\r\n        <Heading as=\"h4\" size=\"md\">\r\n          Leaves Schedule\r\n        </Heading>\r\n        {leaves\r\n          .filter(\r\n            (i) =>\r\n              i.status === \"Approve\" &&\r\n              differenceInDays(new Date(i.from_date), new Date(today)) < 60 &&\r\n              differenceInDays(new Date(i.to_date), new Date(today)) < 60 &&\r\n              differenceInDays(new Date(i.from_date), new Date(today)) > 0\r\n          )\r\n          .map((row) => {\r\n            return (\r\n              <Grid templateColumns=\"repeat(5, 1fr)\" gap={6}>\r\n                <Box w=\"100%\" >\r\n                  {row.name}\r\n                </Box>\r\n                <Box w=\"100%\" >\r\n                  {row.from_date}\r\n                </Box>\r\n                <Box w=\"100%\" >\r\n                  {row.to_date}\r\n                </Box>\r\n                <Box w=\"100%\" >\r\n                  {row.reason}\r\n                </Box>\r\n                \r\n              </Grid>\r\n              // <ListItem key={row.id}>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.name}</ListItemText>\r\n              //   </Grid>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.from_date}</ListItemText>\r\n              //   </Grid>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.to_date}</ListItemText>\r\n              //   </Grid>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.reason}</ListItemText>\r\n              //   </Grid>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.status}</ListItemText>\r\n              //   </Grid>\r\n              // </ListItem>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default LeaveTableViewStaff;\r\n"]},"metadata":{},"sourceType":"module"}