{"ast":null,"code":"import _classCallCheck from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Action } from \"../../internal/Action\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\n/**\n * @description Simulates the way an image would appear to someone with the specified color blind condition\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nvar SimulateColorBlindEffectAction = /*#__PURE__*/function (_Action) {\n  _inherits(SimulateColorBlindEffectAction, _Action);\n\n  var _super = _createSuper(SimulateColorBlindEffectAction);\n\n  function SimulateColorBlindEffectAction() {\n    var _this;\n\n    _classCallCheck(this, SimulateColorBlindEffectAction);\n\n    _this = _super.call(this);\n\n    _this.addQualifier(new Qualifier('e', \"simulate_colorblind\"));\n\n    return _this;\n  }\n\n  _createClass(SimulateColorBlindEffectAction, [{\n    key: \"setQualifier\",\n    value: function setQualifier(val) {\n      var strToAppend = \":\".concat(val);\n\n      if (val) {\n        this.addQualifier(new Qualifier('e', \"simulate_colorblind\".concat(strToAppend)));\n      }\n\n      return this;\n    }\n    /**\n     * @description Sets the color blind condition to simulate.\n     * @param {Qualifiers.simulateColorBlindValues | string} cond\n     * @return {this}\n     */\n\n  }, {\n    key: \"condition\",\n    value: function condition(cond) {\n      return this.setQualifier(cond);\n    }\n  }]);\n\n  return SimulateColorBlindEffectAction;\n}(Action);\n\nexport { SimulateColorBlindEffectAction };","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/actions/effect/simulateColorBlind.js"],"names":["Action","Qualifier","SimulateColorBlindEffectAction","addQualifier","val","strToAppend","cond","setQualifier"],"mappings":";;;;AAAA,SAASA,MAAT,QAAuB,uBAAvB;AACA,SAASC,SAAT,QAA0B,oCAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,8B;;;;;AACF,4CAAc;AAAA;;AAAA;;AACV;;AACA,UAAKC,YAAL,CAAkB,IAAIF,SAAJ,CAAc,GAAd,wBAAlB;;AAFU;AAGb;;;;WACD,sBAAaG,GAAb,EAAkB;AACd,UAAMC,WAAW,cAAOD,GAAP,CAAjB;;AACA,UAAIA,GAAJ,EAAS;AACL,aAAKD,YAAL,CAAkB,IAAIF,SAAJ,CAAc,GAAd,+BAAyCI,WAAzC,EAAlB;AACH;;AACD,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,mBAAUC,IAAV,EAAgB;AACZ,aAAO,KAAKC,YAAL,CAAkBD,IAAlB,CAAP;AACH;;;;EAnBwCN,M;;AAqB7C,SAASE,8BAAT","sourcesContent":["import { Action } from \"../../internal/Action\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\n/**\n * @description Simulates the way an image would appear to someone with the specified color blind condition\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass SimulateColorBlindEffectAction extends Action {\n    constructor() {\n        super();\n        this.addQualifier(new Qualifier('e', `simulate_colorblind`));\n    }\n    setQualifier(val) {\n        const strToAppend = `:${val}`;\n        if (val) {\n            this.addQualifier(new Qualifier('e', `simulate_colorblind${strToAppend}`));\n        }\n        return this;\n    }\n    /**\n     * @description Sets the color blind condition to simulate.\n     * @param {Qualifiers.simulateColorBlindValues | string} cond\n     * @return {this}\n     */\n    condition(cond) {\n        return this.setQualifier(cond);\n    }\n}\nexport { SimulateColorBlindEffectAction };\n"]},"metadata":{},"sourceType":"module"}