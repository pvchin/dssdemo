{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\Payrunbatch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { Heading, Text } from \"@chakra-ui/react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { useHistory } from \"react-router-dom\";\nimport { FiSave, FiCheckCircle, FiMail } from \"react-icons/fi\";\nimport { useCustomToast } from \"../helpers/useCustomToast\";\nimport { Box, Button, Divider, Grid, GridItem, Flex, Stack, Spacer, Tabs, TabList, TabPanels, Tab, TabPanel, Table, Thead, Tbody, Tfoot, Tr, Th, Td, TableCaption } from \"@chakra-ui/react\";\nimport PayForm from \"./PayForm\";\nimport PaySummary from \"./PaySummary\";\nimport PrintPaySummary from \"./PrintPaySummary\";\nimport { usePayrun } from \"./payrun/usePayrun\";\nimport { useUpdatePayrun } from \"./payrun/useUpdatePayrun\";\nimport { usePayslipsBatch } from \"./payslips/usePayslipsBatch\";\nimport { useUpdatePayslips } from \"./payslips/useUpdatePayslips\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { useTablesContext } from \"../context/tables_context\";\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\nimport { payrunState, paydataState, payrunIdState, payrunStatusState } from \"./data/atomdata\";\nimport { useRecoilValue } from \"recoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\n\nconst initial_formdata = () => {\n  const data = {\n    name: name,\n    period: period,\n    pay_date: input.pay_date,\n    payrun: payrun,\n    bank_name: bank_name,\n    bank_acno: bank_acno,\n    salary_currency: salary_currency ? salary_currency : \"BND\",\n    currency_rate: tmpcurrrate,\n    tap_acno: tap_acno,\n    scp_acno: scp_acno,\n    tap_checkbox: tap_checkbox,\n    empid: id,\n    status: \"Pending\",\n    allows_type1: \"Site Allowances\",\n    allows_type1amt: allows,\n    allows_type2: \"Expenses Claims\",\n    allows_type2amt: exp,\n    allows_type3: \" \",\n    allows_type3amt: 0,\n    allows_type4: \" \",\n    allows_type4amt: 0,\n    allows_type5: \" \",\n    allows_type5amt: 0,\n    allows_type6: \" \",\n    allows_type6amt: 0,\n    allows_type7: \" \",\n    allows_type7amt: 0,\n    allows_type8: \" \",\n    allows_type8amt: 0,\n    deducts_type1: \" \",\n    deducts_type1amt: 0,\n    deducts_type2: \" \",\n    deducts_type2amt: 0,\n    deducts_type3: \" \",\n    deducts_type3amt: 0,\n    deducts_type4: \" \",\n    deducts_type4amt: 0,\n    deducts_type5: \" \",\n    deducts_type5amt: 0,\n    deducts_type6: \" \",\n    deducts_type6amt: 0,\n    deducts_type7: \" \",\n    deducts_type7amt: 0,\n    deducts_type8: \" \",\n    deducts_type8amt: 0,\n    wages: tmpbasicsalary,\n    tap_amount: tmptotalTAP,\n    scp_amount: tmptotalSCP,\n    total_allowances: tmptotalallows,\n    total_deductions: 0,\n    site_allows: allows,\n    expenses_claims: exp,\n    nett_pay: tmpnettpay,\n    wages_bnd: tmpbasicsalarybnd,\n    site_allows_bnd: tmpsiteallowsbnd,\n    expenses_claims_bnd: tmpexpsclaimsbnd,\n    total_allowances_bnd: tmptotalallowsbnd,\n    total_deductions_bnd: 0,\n    tap_amount_bnd: tmptotalTAPbnd,\n    scp_amount_bnd: tmptotalSCPbnd,\n    nett_pay_bnd: tmpnettpaybnd\n  };\n};\n\nconst Payrunbatch = () => {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const toast = useCustomToast();\n  const componentRef = useRef();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight); //const { register, handleSubmit, control, setValue, reset, watch } = useForm();\n\n  const {\n    //payrun,\n    getSingleBatchPayslip,\n    //singlebatchpayslip,\n    payslip_period,\n    //updatePayslip,\n    //updatePayrun,\n    singlebatch_payslip_loading,\n    singlebatch_payslip_error\n  } = usePayslipsContext();\n  const {\n    payslipsbatch,\n    psbpayrunId,\n    setPSBPayrunId\n  } = usePayslipsBatch();\n  const {\n    payrun\n  } = usePayrun();\n  const updatePayslip = useUpdatePayslips();\n  const updatePayrun = useUpdatePayrun();\n  const {\n    loadPayitems,\n    payitems\n  } = useTablesContext();\n  const [payrundata, setPayrundata] = useRecoilState(payrunState);\n  const [payrunId, setPayrunId] = useRecoilState(payrunIdState);\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\n  const [loadFormdata, setLoadFormdata] = useState(false);\n  const [loadUpdatedata, setLoadUpdatedata] = useState(false);\n  const [formdata, setFormdata] = useState([]);\n  const [rowindex, setRowIndex] = useState(0);\n  const [emponclick, setEmponclick] = useState(false);\n  const [showSumm, setShowSumm] = useState(false);\n  const [isCalc, setIsCalc] = useState(false);\n  const [isLoad, setIsLoad] = useState(false);\n  const singlebatchpayslip = payslipsbatch;\n  useEffect(() => {\n    loadPayitems();\n    setEmponclick(true); // getSingleBatchPayslip(payslip_period);\n  }, []);\n  useEffect(() => {\n    setRowIndex(0); // handleEmpButtonClick(0);\n\n    setEmponclick(false);\n  }, [emponclick]);\n  useEffect(() => {\n    setLoadFormdata(false);\n  }, [loadUpdatedata]);\n  useEffect(() => {\n    setPSBPayrunId(payslip_period); //setIsCalc(true);\n  }, [psbpayrunId]);\n  useEffect(() => {\n    calcPayrunTotals();\n    setIsCalc(false);\n  }, [isCalc]);\n  useEffect(() => {\n    handleEmpButtonClick(0);\n    setIsLoad(false);\n  }, [isLoad]);\n\n  const handleShowSumm = e => {\n    e.preventDefault();\n    setShowSumm(!showSumm);\n  };\n\n  const handlePrintSummary = e => {\n    e.preventDefault();\n    exportPdfTable(singlebatchpayslip);\n  };\n\n  const exportPdfTable = singlebatchpayslip => {\n    PrintPaySummary(singlebatchpayslip = {\n      singlebatchpayslip\n    });\n  };\n\n  const handleSavePayslips = e => {\n    e.preventDefault();\n    calcPayrunTotals(); // eslint-disable-next-line no-lone-blocks\n\n    {\n      singlebatchpayslip.forEach(rec => {\n        const {\n          id,\n          rec_id,\n          tableData,\n          ...fields\n        } = rec;\n        updatePayslip({\n          id,\n          ...fields\n        });\n      });\n    } //update payrun\n\n    handleSavePayrun();\n    toast({\n      title: \"Changes have been saved!\",\n      status: \"success\"\n    });\n  };\n\n  const calcPayrunTotals = () => {\n    // if (!psbpayrunId) {\n    //   return null;\n    // }\n    const tmpbatch = singlebatchpayslip.filter(r => r.payrun === payslip_period).map(rec => {\n      return { ...rec\n      };\n    });\n    const totalpayroll = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.nett_pay_bnd) ? 0 : item.nett_pay_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalwages = tmpbatch.reduce((acc, item, index) => {\n      const value = isNaN(item.wages_bnd) ? 0 : item.wages_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totaltap = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.tap_amount_bnd) ? 0 : item.tap_amount_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalscp = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.scp_amount_bnd) ? 0 : item.scp_amount_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalallows = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.total_allowances_bnd) ? 0 : item.total_allowances_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totaldeducts = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.total_deductions_bnd) ? 0 : item.total_deductions_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalsiteallows = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.site_allows_bnd) ? 0 : item.site_allows_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalexpensesclaims = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.expenses_claims_bnd) ? 0 : item.expenses_claims_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0); //console.log(\"total\", totalwages);\n\n    setPayrundata({ ...payrundata,\n      totalpayroll: totalpayroll,\n      totalwages: totalwages,\n      totaltap: totaltap,\n      totalscp: totalscp,\n      totalallows: totalallows,\n      totaldeducts: totaldeducts,\n      totalsiteallows: totalsiteallows,\n      totalexpensesclaims: totalexpensesclaims\n    });\n  };\n\n  const handleSavePayrun = () => {\n    if (payrundata.status === \"Verified\" || payrundata.status === \"Approve\") {\n      toast({\n        title: `This payroll batch has been ${payrundata.status}! No changes can be made!`,\n        status: \"warning\"\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 14\n      }, this);\n    }\n\n    const tmppayrun = payrun.filter(r => r.payrun === payslip_period); //console.log(\"paysave\", tmppayrun[0].id);\n    // eslint-disable-next-line no-lone-blocks\n\n    updatePayrun({\n      id: tmppayrun[0].id,\n      totalpayroll: payrundata.totalpayroll,\n      totalwages: payrundata.totalwages,\n      totaltap: payrundata.totaltap,\n      totalscp: payrundata.totalscp,\n      totalallows: payrundata.totalallows,\n      totaldeducts: payrundata.totaldeducts,\n      totalsitesallows: payrundata.totalsitesallows,\n      totalexpensesclaims: payrundata.totalexpensesclaims\n    });\n  };\n\n  const handleVerifyPayslips = e => {\n    e.preventDefault();\n    setPayrundata({ ...payrundata,\n      status: \"Verified\"\n    });\n    setPayrunStatus(\"Verified\");\n    updatePayrun({\n      id: payrunId,\n      status: \"Verified\"\n    });\n    toast({\n      title: \"Batch has been verified!\",\n      status: \"success\"\n    });\n  };\n\n  const handleEmpButtonClick = index => {\n    const paydata = singlebatchpayslip[index];\n    setFormdata({ ...paydata\n    });\n    setFormdata({ ...paydata\n    });\n    setLoadFormdata(true);\n  };\n\n  const handleTabChange = index => {\n    if (index === 1) {\n      calcPayrunTotals();\n    }\n  };\n\n  const handleInitialSelect = () => {\n    setIsLoad(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    marginLeft: 4,\n    marginTop: 70,\n    w: \"98%\",\n    h: \"100%\",\n    style: {\n      backgroundColor: \"lightcyan\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      templateRows: \"repeat(10,1fr)\",\n      templateColumns: \"repeat(1,1fr)\",\n      children: [/*#__PURE__*/_jsxDEV(GridItem, {\n        rowSpan: 1,\n        colSpan: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          templateRows: \"repeat(1,1fr)\",\n          templateColumns: \"repeat(10,1fr)\",\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            rowSpan: 1,\n            colSpan: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            rowSpan: 1,\n            colSpan: 4,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              textAlign: \"center\",\n              alignItems: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Heading, {\n                pl: \"10\",\n                pt: \"2\",\n                children: \"Payroll\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            rowSpan: 1,\n            colSpan: 4,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              pt: \"2\",\n              pr: 5,\n              alignItems: \"right\",\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                spacing: 4,\n                direction: \"row\",\n                align: \"center\",\n                pl: 150,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  width: \"500px\",\n                  colorScheme: \"blue\",\n                  isDisabled: payrundata.status === \"Verified\" || payrundata.status === \"Approve\" ? true : false,\n                  onClick: e => handleSavePayslips(e),\n                  leftIcon: /*#__PURE__*/_jsxDEV(FiSave, {\n                    color: \"white\",\n                    fontSize: \"1.5em\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 31\n                  }, this),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  width: \"500px\",\n                  colorScheme: \"blue\",\n                  onClick: e => handlePrintSummary(e),\n                  leftIcon: /*#__PURE__*/_jsxDEV(FiSave, {\n                    color: \"white\",\n                    fontSize: \"1.5em\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 31\n                  }, this),\n                  children: \"Print\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  width: \"500px\",\n                  colorScheme: \"blue\",\n                  isDisabled: payrundata.status === \"Verified\" || payrundata.status === \"Approve\" ? true : false,\n                  onClick: e => handleVerifyPayslips(e),\n                  leftIcon: /*#__PURE__*/_jsxDEV(FiCheckCircle, {\n                    color: \"white\",\n                    fontSize: \"1.5em\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 31\n                  }, this),\n                  children: \"Verify\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  width: \"500px\",\n                  colorScheme: \"blue\",\n                  isDisabled: payrundata.status !== \"Approve\" ? true : false,\n                  onClick: e => handleVerifyPayslips(e),\n                  leftIcon: /*#__PURE__*/_jsxDEV(FiMail, {\n                    color: \"white\",\n                    fontSize: \"1.5em\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 31\n                  }, this),\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            border: \"1px solid lightgrey\"\n          },\n          orientation: \"horizontal\",\n          colorScheme: \"red\",\n          variant: \"solid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        defaultIndex: 0,\n        onChange: index => handleTabChange(index),\n        children: [/*#__PURE__*/_jsxDEV(TabList, {\n          marginLeft: 4,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(Heading, {\n                size: \"sm\",\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(Heading, {\n                size: \"sm\",\n                children: \"Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanels, {\n          children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              templateRows: \"repeat(1,1fr)\",\n              templateColumns: \"repeat(10,1fr)\",\n              children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                colSpan: 2,\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  textAlign: \"center\",\n                  p: 4,\n                  children: /*#__PURE__*/_jsxDEV(Heading, {\n                    size: \"sm\",\n                    alignItems: \"center\",\n                    children: \"Employees\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  backgroundColor: \"white\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  border: \"2px solid white\",\n                  backgroundColor: \"cyan.100\",\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    variant: \"simple\",\n                    children: /*#__PURE__*/_jsxDEV(Tbody, {\n                      children: payslipsbatch.map((item, index) => {\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(Button, {\n                            className: classes.empbtn,\n                            variant: \"outlined\" // ${index === value && \"activebtn\"}\n                            ,\n                            onClick: e => {\n                              setRowIndex(index);\n                              handleEmpButtonClick(index);\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: [\" \", item.name]\n                            }, item.id, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 491,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 482,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                            backgroundColor: \"white\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 493,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 481,\n                          columnNumber: 29\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 478,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 472,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                colSpan: 7,\n                children: /*#__PURE__*/_jsxDEV(PayForm, {\n                  formdata: formdata,\n                  setFormdata: setFormdata,\n                  loadFormdata: loadFormdata,\n                  setLoadFormdata: setLoadFormdata,\n                  payitems: payitems,\n                  setLoadUpdatedata: setLoadUpdatedata,\n                  singlebatchpayslip: singlebatchpayslip,\n                  rowindex: rowindex,\n                  isCalc: isCalc,\n                  setIsCalc: setIsCalc\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            children: /*#__PURE__*/_jsxDEV(PaySummary, {\n              payrundata: payrundata,\n              singlebatchpayslip: singlebatchpayslip\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 344,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Payrunbatch, \"VafRVxJPhC/6Fe97/eDYNfjpUkk=\", false, function () {\n  return [useHistory, useStyles, useCustomToast, usePayslipsContext, usePayslipsBatch, usePayrun, useUpdatePayslips, useUpdatePayrun, useTablesContext, useRecoilState, useRecoilState, useRecoilState];\n});\n\n_c = Payrunbatch;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  container: {\n    margin: 0,\n    padding: 0,\n    width: \"80vw\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\n    gridAutoRows: \"10px\",\n    position: \"absolute\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    justifyContent: \"center\",\n    backgroundColor: \"primary\"\n  },\n  fixedHeight: {\n    height: 800\n  },\n  paper: {\n    paddingTop: theme.spacing(10),\n    // display: \"flex\",\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    border: \"1px solid\",\n    width: \"100%\",\n    color: \"primary\",\n    bcakgroundColor: \"white\"\n  },\n  card: {\n    backgroundColor: \"white\"\n  },\n  section: {\n    width: \"80vw\",\n    margin: \"1rem auto\",\n    maxWidth: \"var(--max-width)\"\n  },\n  underline: {\n    width: \"5rem\",\n    height: \"0.25rem\",\n    marginBottom: \"1.25rem\",\n    background: \"var(--clr-primary-5)\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  title: {\n    marginbottom: \"4rem\",\n    textAlign: \"center\"\n  },\n  empscenter: {\n    width: \"80vw\",\n    margin: \"0 auto\",\n    maxWidth: \"var(--max-width)\",\n    flexDirection: \"row\"\n  },\n  empcontainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginBottom: \"4rem\",\n    flexWrap: \"wrap\"\n  },\n  empbtn: {\n    background: \"transparent\",\n    borderColor: \"transparent\",\n    textTransform: \"capitalize\",\n    fontSize: \"1rem\",\n    letterSpacing: \"var(--spacing)\",\n    margin: \"0 0.5rem\",\n    transition: \"var(--transition)\",\n    cursor: \"pointer\",\n    padding: \"0.25rem 0\",\n    lineHeight: \"1\",\n    outlineColor: \"var(--clr-primary-10)\",\n    \"&:hover\": {\n      color: \"var(--clr-primary-5)\",\n      boxShadow: \"0 2px var(--clr-primary-5)\"\n    }\n  },\n  activebtn: {\n    color: \"var(--clr-primary-5)\",\n    boxShadow: \"0 2px var(--clr-primary-5)\"\n  },\n  empinfo: {\n    fontWeight: \"400\"\n  },\n  divider: {\n    // Theme Color, or use css color in quote\n    background: \"white\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 350\n  }\n}));\nexport default Payrunbatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payrunbatch\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Payrunbatch.js"],"names":["React","useState","useEffect","useRef","useReactToPrint","Heading","Text","makeStyles","clsx","useHistory","FiSave","FiCheckCircle","FiMail","useCustomToast","Box","Button","Divider","Grid","GridItem","Flex","Stack","Spacer","Tabs","TabList","TabPanels","Tab","TabPanel","Table","Thead","Tbody","Tfoot","Tr","Th","Td","TableCaption","PayForm","PaySummary","PrintPaySummary","usePayrun","useUpdatePayrun","usePayslipsBatch","useUpdatePayslips","usePayslipsContext","useTablesContext","useSetRecoilState","useRecoilState","payrunState","paydataState","payrunIdState","payrunStatusState","useRecoilValue","drawerWidth","initial_formdata","data","name","period","pay_date","input","payrun","bank_name","bank_acno","salary_currency","currency_rate","tmpcurrrate","tap_acno","scp_acno","tap_checkbox","empid","id","status","allows_type1","allows_type1amt","allows","allows_type2","allows_type2amt","exp","allows_type3","allows_type3amt","allows_type4","allows_type4amt","allows_type5","allows_type5amt","allows_type6","allows_type6amt","allows_type7","allows_type7amt","allows_type8","allows_type8amt","deducts_type1","deducts_type1amt","deducts_type2","deducts_type2amt","deducts_type3","deducts_type3amt","deducts_type4","deducts_type4amt","deducts_type5","deducts_type5amt","deducts_type6","deducts_type6amt","deducts_type7","deducts_type7amt","deducts_type8","deducts_type8amt","wages","tmpbasicsalary","tap_amount","tmptotalTAP","scp_amount","tmptotalSCP","total_allowances","tmptotalallows","total_deductions","site_allows","expenses_claims","nett_pay","tmpnettpay","wages_bnd","tmpbasicsalarybnd","site_allows_bnd","tmpsiteallowsbnd","expenses_claims_bnd","tmpexpsclaimsbnd","total_allowances_bnd","tmptotalallowsbnd","total_deductions_bnd","tap_amount_bnd","tmptotalTAPbnd","scp_amount_bnd","tmptotalSCPbnd","nett_pay_bnd","tmpnettpaybnd","Payrunbatch","history","classes","useStyles","toast","componentRef","fixedHeightPaper","paper","fixedHeight","getSingleBatchPayslip","payslip_period","singlebatch_payslip_loading","singlebatch_payslip_error","payslipsbatch","psbpayrunId","setPSBPayrunId","updatePayslip","updatePayrun","loadPayitems","payitems","payrundata","setPayrundata","payrunId","setPayrunId","payrunstatus","setPayrunStatus","loadFormdata","setLoadFormdata","loadUpdatedata","setLoadUpdatedata","formdata","setFormdata","rowindex","setRowIndex","emponclick","setEmponclick","showSumm","setShowSumm","isCalc","setIsCalc","isLoad","setIsLoad","singlebatchpayslip","calcPayrunTotals","handleEmpButtonClick","handleShowSumm","e","preventDefault","handlePrintSummary","exportPdfTable","handleSavePayslips","forEach","rec","rec_id","tableData","fields","handleSavePayrun","title","tmpbatch","filter","r","map","totalpayroll","reduce","acc","item","value","isNaN","Math","round","Number","EPSILON","totalwages","index","totaltap","totalscp","totalallows","totaldeducts","totalsiteallows","totalexpensesclaims","tmppayrun","totalsitesallows","handleVerifyPayslips","paydata","handleTabChange","handleInitialSelect","backgroundColor","border","empbtn","theme","root","flexGrow","button","margin","spacing","container","padding","width","display","gridTemplateColumns","gridAutoRows","position","left","transform","justifyContent","height","paddingTop","overflow","flexDirection","color","bcakgroundColor","card","section","maxWidth","underline","marginBottom","background","marginLeft","marginRight","marginbottom","textAlign","empscenter","empcontainer","flexWrap","borderColor","textTransform","fontSize","letterSpacing","transition","cursor","lineHeight","outlineColor","boxShadow","activebtn","empinfo","fontWeight","divider","textField"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport { Heading, Text } from \"@chakra-ui/react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FiSave, FiCheckCircle, FiMail } from \"react-icons/fi\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  GridItem,\r\n  Flex,\r\n  Stack,\r\n  Spacer,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tfoot,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption,\r\n} from \"@chakra-ui/react\";\r\nimport PayForm from \"./PayForm\";\r\nimport PaySummary from \"./PaySummary\";\r\nimport PrintPaySummary from \"./PrintPaySummary\";\r\nimport { usePayrun } from \"./payrun/usePayrun\";\r\nimport { useUpdatePayrun } from \"./payrun/useUpdatePayrun\";\r\nimport { usePayslipsBatch } from \"./payslips/usePayslipsBatch\";\r\nimport { useUpdatePayslips } from \"./payslips/useUpdatePayslips\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\r\nimport {\r\n  payrunState,\r\n  paydataState,\r\n  payrunIdState,\r\n  payrunStatusState,\r\n} from \"./data/atomdata\";\r\nimport { useRecoilValue } from \"recoil\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst initial_formdata = () => {\r\n  const data = {\r\n    name: name,\r\n    period: period,\r\n    pay_date: input.pay_date,\r\n    payrun: payrun,\r\n    bank_name: bank_name,\r\n    bank_acno: bank_acno,\r\n    salary_currency: salary_currency ? salary_currency : \"BND\",\r\n    currency_rate: tmpcurrrate,\r\n    tap_acno: tap_acno,\r\n    scp_acno: scp_acno,\r\n    tap_checkbox: tap_checkbox,\r\n    empid: id,\r\n    status: \"Pending\",\r\n    allows_type1: \"Site Allowances\",\r\n    allows_type1amt: allows,\r\n    allows_type2: \"Expenses Claims\",\r\n    allows_type2amt: exp,\r\n    allows_type3: \" \",\r\n    allows_type3amt: 0,\r\n    allows_type4: \" \",\r\n    allows_type4amt: 0,\r\n    allows_type5: \" \",\r\n    allows_type5amt: 0,\r\n    allows_type6: \" \",\r\n    allows_type6amt: 0,\r\n    allows_type7: \" \",\r\n    allows_type7amt: 0,\r\n    allows_type8: \" \",\r\n    allows_type8amt: 0,\r\n    deducts_type1: \" \",\r\n    deducts_type1amt: 0,\r\n    deducts_type2: \" \",\r\n    deducts_type2amt: 0,\r\n    deducts_type3: \" \",\r\n    deducts_type3amt: 0,\r\n    deducts_type4: \" \",\r\n    deducts_type4amt: 0,\r\n    deducts_type5: \" \",\r\n    deducts_type5amt: 0,\r\n    deducts_type6: \" \",\r\n    deducts_type6amt: 0,\r\n    deducts_type7: \" \",\r\n    deducts_type7amt: 0,\r\n    deducts_type8: \" \",\r\n    deducts_type8amt: 0,\r\n\r\n    wages: tmpbasicsalary,\r\n    tap_amount: tmptotalTAP,\r\n    scp_amount: tmptotalSCP,\r\n    total_allowances: tmptotalallows,\r\n    total_deductions: 0,\r\n    site_allows: allows,\r\n    expenses_claims: exp,\r\n    nett_pay: tmpnettpay,\r\n\r\n    wages_bnd: tmpbasicsalarybnd,\r\n    site_allows_bnd: tmpsiteallowsbnd,\r\n    expenses_claims_bnd: tmpexpsclaimsbnd,\r\n    total_allowances_bnd: tmptotalallowsbnd,\r\n    total_deductions_bnd: 0,\r\n    tap_amount_bnd: tmptotalTAPbnd,\r\n    scp_amount_bnd: tmptotalSCPbnd,\r\n    nett_pay_bnd: tmpnettpaybnd,\r\n  };\r\n}\r\n\r\nconst Payrunbatch = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const componentRef = useRef();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  //const { register, handleSubmit, control, setValue, reset, watch } = useForm();\r\n\r\n  const {\r\n    //payrun,\r\n    getSingleBatchPayslip,\r\n    //singlebatchpayslip,\r\n    payslip_period,\r\n    //updatePayslip,\r\n    //updatePayrun,\r\n    singlebatch_payslip_loading,\r\n    singlebatch_payslip_error,\r\n  } = usePayslipsContext();\r\n  const { payslipsbatch, psbpayrunId, setPSBPayrunId } = usePayslipsBatch();\r\n  const { payrun } = usePayrun();\r\n  const updatePayslip = useUpdatePayslips();\r\n  const updatePayrun = useUpdatePayrun();\r\n  const { loadPayitems, payitems } = useTablesContext();\r\n  const [payrundata, setPayrundata] = useRecoilState(payrunState);\r\n  const [payrunId, setPayrunId] = useRecoilState(payrunIdState);\r\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\r\n  const [loadFormdata, setLoadFormdata] = useState(false);\r\n  const [loadUpdatedata, setLoadUpdatedata] = useState(false);\r\n  const [formdata, setFormdata] = useState([]);\r\n  const [rowindex, setRowIndex] = useState(0);\r\n  const [emponclick, setEmponclick] = useState(false);\r\n  const [showSumm, setShowSumm] = useState(false);\r\n  const [isCalc, setIsCalc] = useState(false);\r\n  const [isLoad, setIsLoad] = useState(false);\r\n  const singlebatchpayslip = payslipsbatch;\r\n\r\n  useEffect(() => {\r\n    loadPayitems();\r\n    setEmponclick(true);\r\n    // getSingleBatchPayslip(payslip_period);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setRowIndex(0);\r\n    // handleEmpButtonClick(0);\r\n    setEmponclick(false);\r\n  }, [emponclick]);\r\n\r\n  useEffect(() => {\r\n    setLoadFormdata(false);\r\n  }, [loadUpdatedata]);\r\n\r\n  useEffect(() => {\r\n    setPSBPayrunId(payslip_period);\r\n    //setIsCalc(true);\r\n  }, [psbpayrunId]);\r\n\r\n  useEffect(() => {\r\n    calcPayrunTotals();\r\n    setIsCalc(false);\r\n  }, [isCalc]);\r\n\r\n  useEffect(() => {\r\n    handleEmpButtonClick(0);\r\n    setIsLoad(false);\r\n  }, [isLoad]);\r\n\r\n  const handleShowSumm = (e) => {\r\n    e.preventDefault();\r\n    setShowSumm(!showSumm);\r\n  };\r\n\r\n  const handlePrintSummary = (e) => {\r\n    e.preventDefault();\r\n    exportPdfTable(singlebatchpayslip);\r\n  };\r\n\r\n  const exportPdfTable = (singlebatchpayslip) => {\r\n    PrintPaySummary((singlebatchpayslip = { singlebatchpayslip }));\r\n  };\r\n\r\n  const handleSavePayslips = (e) => {\r\n    e.preventDefault();\r\n\r\n    calcPayrunTotals();\r\n    // eslint-disable-next-line no-lone-blocks\r\n    {\r\n      singlebatchpayslip.forEach((rec) => {\r\n        const { id, rec_id, tableData, ...fields } = rec;\r\n        updatePayslip({ id, ...fields });\r\n      });\r\n    }\r\n    //update payrun\r\n    handleSavePayrun();\r\n    toast({\r\n      title: \"Changes have been saved!\",\r\n      status: \"success\",\r\n    });\r\n  };\r\n\r\n  const calcPayrunTotals = () => {\r\n    // if (!psbpayrunId) {\r\n    //   return null;\r\n    // }\r\n\r\n    const tmpbatch = singlebatchpayslip\r\n      .filter((r) => r.payrun === payslip_period)\r\n      .map((rec) => {\r\n        return { ...rec };\r\n      });\r\n\r\n    const totalpayroll = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.nett_pay_bnd) ? 0 : item.nett_pay_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n    const totalwages = tmpbatch.reduce((acc, item, index) => {\r\n      const value = isNaN(item.wages_bnd) ? 0 : item.wages_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n    const totaltap = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.tap_amount_bnd) ? 0 : item.tap_amount_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalscp = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.scp_amount_bnd) ? 0 : item.scp_amount_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalallows = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.total_allowances_bnd)\r\n        ? 0\r\n        : item.total_allowances_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totaldeducts = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.total_deductions_bnd)\r\n        ? 0\r\n        : item.total_deductions_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalsiteallows = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.site_allows_bnd) ? 0 : item.site_allows_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalexpensesclaims = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.expenses_claims_bnd)\r\n        ? 0\r\n        : item.expenses_claims_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    //console.log(\"total\", totalwages);\r\n    setPayrundata({\r\n      ...payrundata,\r\n      totalpayroll: totalpayroll,\r\n      totalwages: totalwages,\r\n      totaltap: totaltap,\r\n      totalscp: totalscp,\r\n      totalallows: totalallows,\r\n      totaldeducts: totaldeducts,\r\n      totalsiteallows: totalsiteallows,\r\n      totalexpensesclaims: totalexpensesclaims,\r\n    });\r\n  };\r\n\r\n  const handleSavePayrun = () => {\r\n    if (payrundata.status === \"Verified\" || payrundata.status === \"Approve\") {\r\n      toast({\r\n        title: `This payroll batch has been ${payrundata.status}! No changes can be made!`,\r\n        status: \"warning\",\r\n      });\r\n      return <div></div>;\r\n    }\r\n\r\n    const tmppayrun = payrun.filter((r) => r.payrun === payslip_period);\r\n    //console.log(\"paysave\", tmppayrun[0].id);\r\n    // eslint-disable-next-line no-lone-blocks\r\n    updatePayrun({\r\n      id: tmppayrun[0].id,\r\n      totalpayroll: payrundata.totalpayroll,\r\n      totalwages: payrundata.totalwages,\r\n      totaltap: payrundata.totaltap,\r\n      totalscp: payrundata.totalscp,\r\n      totalallows: payrundata.totalallows,\r\n      totaldeducts: payrundata.totaldeducts,\r\n      totalsitesallows: payrundata.totalsitesallows,\r\n      totalexpensesclaims: payrundata.totalexpensesclaims,\r\n    });\r\n  };\r\n\r\n  const handleVerifyPayslips = (e) => {\r\n    e.preventDefault();\r\n    setPayrundata({ ...payrundata, status: \"Verified\" });\r\n    setPayrunStatus(\"Verified\");\r\n    updatePayrun({ id: payrunId, status: \"Verified\" });\r\n    toast({\r\n      title: \"Batch has been verified!\",\r\n      status: \"success\",\r\n    });\r\n  };\r\n\r\n  const handleEmpButtonClick = (index) => {\r\n    const paydata = singlebatchpayslip[index];\r\n    setFormdata({ ...paydata });\r\n    setFormdata({ ...paydata });\r\n    setLoadFormdata(true);\r\n  };\r\n\r\n  const handleTabChange = (index) => {\r\n    if (index === 1) {\r\n      calcPayrunTotals();\r\n    }\r\n  };\r\n\r\n  const handleInitialSelect = () => {\r\n    setIsLoad(true);\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      marginLeft={4}\r\n      marginTop={70}\r\n      w=\"98%\"\r\n      h=\"100%\"\r\n      style={{ backgroundColor: \"lightcyan\" }}\r\n    >\r\n      <Grid templateRows=\"repeat(10,1fr)\" templateColumns=\"repeat(1,1fr)\">\r\n        <GridItem rowSpan={1} colSpan={1}>\r\n          <Grid templateRows=\"repeat(1,1fr)\" templateColumns=\"repeat(10,1fr)\">\r\n            <GridItem rowSpan={1} colSpan={2}></GridItem>\r\n            <GridItem rowSpan={1} colSpan={4}>\r\n              <Box textAlign=\"center\" alignItems=\"center\">\r\n                <Heading pl=\"10\" pt=\"2\">\r\n                  Payroll\r\n                </Heading>\r\n              </Box>\r\n            </GridItem>\r\n            <GridItem rowSpan={1} colSpan={4}>\r\n              <Box pt=\"2\" pr={5} alignItems=\"right\" align=\"right\">\r\n                <Stack spacing={4} direction=\"row\" align=\"center\" pl={150}>\r\n                  <Button\r\n                    width=\"500px\"\r\n                    colorScheme=\"blue\"\r\n                    isDisabled={\r\n                      payrundata.status === \"Verified\" ||\r\n                      payrundata.status === \"Approve\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    onClick={(e) => handleSavePayslips(e)}\r\n                    leftIcon={<FiSave color=\"white\" fontSize=\"1.5em\" />}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                  <Button\r\n                    width=\"500px\"\r\n                    colorScheme=\"blue\"\r\n                    onClick={(e) => handlePrintSummary(e)}\r\n                    leftIcon={<FiSave color=\"white\" fontSize=\"1.5em\" />}\r\n                  >\r\n                    Print\r\n                  </Button>\r\n\r\n                  <Button\r\n                    width=\"500px\"\r\n                    colorScheme=\"blue\"\r\n                    isDisabled={\r\n                      payrundata.status === \"Verified\" ||\r\n                      payrundata.status === \"Approve\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    onClick={(e) => handleVerifyPayslips(e)}\r\n                    leftIcon={<FiCheckCircle color=\"white\" fontSize=\"1.5em\" />}\r\n                  >\r\n                    Verify\r\n                  </Button>\r\n                  <Button\r\n                    width=\"500px\"\r\n                    colorScheme=\"blue\"\r\n                    isDisabled={payrundata.status !== \"Approve\" ? true : false}\r\n                    onClick={(e) => handleVerifyPayslips(e)}\r\n                    leftIcon={<FiMail color=\"white\" fontSize=\"1.5em\" />}\r\n                  >\r\n                    Email\r\n                  </Button>\r\n                </Stack>\r\n              </Box>\r\n            </GridItem>\r\n          </Grid>\r\n          <Divider\r\n            style={{ border: \"1px solid lightgrey\" }}\r\n            orientation=\"horizontal\"\r\n            colorScheme=\"red\"\r\n            variant=\"solid\"\r\n          />\r\n        </GridItem>\r\n\r\n        <Tabs defaultIndex={0} onChange={(index) => handleTabChange(index)}>\r\n          <TabList marginLeft={4}>\r\n            <Tab>\r\n              <Box>\r\n                <Heading size=\"sm\">Details</Heading>\r\n              </Box>\r\n            </Tab>\r\n            <Tab>\r\n              <Box>\r\n                <Heading size=\"sm\">Summary</Heading>\r\n              </Box>\r\n            </Tab>\r\n          </TabList>\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <Grid\r\n                templateRows=\"repeat(1,1fr)\"\r\n                templateColumns=\"repeat(10,1fr)\"\r\n              >\r\n                <GridItem colSpan={2}>\r\n                  <Box textAlign=\"center\" p={4}>\r\n                    <Heading size=\"sm\" alignItems=\"center\">\r\n                      Employees\r\n                    </Heading>\r\n                  </Box>\r\n                  <Divider backgroundColor=\"white\" />\r\n                  <Box border=\"2px solid white\" backgroundColor=\"cyan.100\">\r\n                    {/* {payslipsbatch &&\r\n                      payslipsbatch.map((item, index) => {\r\n                        return (\r\n                          <div>\r\n                            <Button\r\n                              className={classes.empbtn}\r\n                              variant=\"outlined\"\r\n                              // ${index === value && \"activebtn\"}\r\n                              onClick={(e) => {\r\n                                setRowIndex(index);\r\n                                handleEmpButtonClick(index);\r\n                              }}\r\n                            >\r\n                              <div key={item.id}> {item.name}</div>\r\n                            </Button>\r\n                            <Divider\r\n                              variant=\"fullWidth\"\r\n                              className={classes.divider}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      })} */}\r\n                    <Table variant=\"simple\">\r\n                      {/* <Thead>\r\n                        <Tr>\r\n                          <Th>Employees</Th>\r\n                        </Tr>\r\n                      </Thead> */}\r\n                      <Tbody>\r\n                        {payslipsbatch.map((item, index) => {\r\n                          return (\r\n                            <div>\r\n                              <Button\r\n                                className={classes.empbtn}\r\n                                variant=\"outlined\"\r\n                                // ${index === value && \"activebtn\"}\r\n                                onClick={(e) => {\r\n                                  setRowIndex(index);\r\n                                  handleEmpButtonClick(index);\r\n                                }}\r\n                              >\r\n                                <div key={item.id}> {item.name}</div>\r\n                              </Button>\r\n                              <Divider backgroundColor=\"white\" />\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </Tbody>\r\n                    </Table>\r\n                  </Box>\r\n                </GridItem>\r\n                <GridItem colSpan={7}>\r\n                  <PayForm\r\n                    formdata={formdata}\r\n                    setFormdata={setFormdata}\r\n                    loadFormdata={loadFormdata}\r\n                    setLoadFormdata={setLoadFormdata}\r\n                    payitems={payitems}\r\n                    setLoadUpdatedata={setLoadUpdatedata}\r\n                    singlebatchpayslip={singlebatchpayslip}\r\n                    rowindex={rowindex}\r\n                    isCalc={isCalc}\r\n                    setIsCalc={setIsCalc}\r\n                  />\r\n                </GridItem>\r\n              </Grid>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <PaySummary\r\n                payrundata={payrundata}\r\n                singlebatchpayslip={singlebatchpayslip}\r\n              />\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Grid>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    paddingTop: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"white\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"white\",\r\n  },\r\n  section: {\r\n    width: \"80vw\",\r\n    margin: \"1rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  empscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  empcontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  empbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  empinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  divider: {\r\n    // Theme Color, or use css color in quote\r\n    background: \"white\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n}));\r\n\r\nexport default Payrunbatch;\r\n"]},"metadata":{},"sourceType":"module"}