{"ast":null,"code":"import React,{useState,useRef}from\"react\";import{AlertDialog,AlertDialogBody,AlertDialogFooter,AlertDialogHeader,AlertDialogContent,AlertDialogOverlay,Button}from\"@chakra-ui/react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var AlertDialogBox=function AlertDialogBox(_ref){var isOpen=_ref.isOpen,onClose=_ref.onClose,onConfirm=_ref.onConfirm,title=_ref.title,children=_ref.children;var cancelRef=useRef(null);return/*#__PURE__*/_jsx(AlertDialog,{isOpen:isOpen,cancelRef:cancelRef,onClose:onClose,conConfirm:onConfirm,blockScrollOnMount:true,children:/*#__PURE__*/_jsx(AlertDialogOverlay,{children:/*#__PURE__*/_jsxs(AlertDialogContent,{children:[/*#__PURE__*/_jsx(AlertDialogHeader,{fontFamily:\"roboto\",fontWeight:\"bold\",fontSize:\"1.5rem\",children:title}),/*#__PURE__*/_jsx(AlertDialogBody,{fontFamily:\"roboto\",fontSize:\"1.25rem\",children:children}),/*#__PURE__*/_jsxs(AlertDialogFooter,{children:[/*#__PURE__*/_jsx(Button,{w:\"100px\",py:\"0.5rem\",fontFamily:\"cursive\",onClick:onClose,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{colorScheme:\"red\",py:\"0.5rem\",w:\"100px\",ml:3,fontFamily:\"cursive\",onClick:function onClick(){onClose();onConfirm();},children:\"Confirm\"})]})]})})});};// export const AlertDialogBox = ({\n//   isOpen,\n//   onClose,\n//   cancelRef,\n//   heading,\n//   children,\n// }) => {\n//   return (\n//     <>\n//       <AlertDialog\n//         isopen={isOpen}\n//         onClose={onClose}\n//         leastDestructiveRef={cancelRef}\n//       >\n//         <AlertDialogOverlay>\n//           <AlertDialogContent>\n//             <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n//               {heading}\n//             </AlertDialogHeader>\n//             <AlertDialogBody>{children}</AlertDialogBody>\n//             <AlertDialogFooter>\n//               <Button ref={cancelRef} onClick={onClose}>\n//                 Cancel\n//               </Button>\n//               <Button\n//                 colorScheme=\"red\"\n//                 onClick={() => {\n//                   // handleClose();\n//                   // onConfirm();\n//                   onClose();\n//                 }}\n//                 ml={3}\n//               >\n//                 Confirm\n//               </Button>\n//             </AlertDialogFooter>\n//           </AlertDialogContent>\n//         </AlertDialogOverlay>\n//       </AlertDialog>\n//     </>\n//   );\n// };\n// AlertDialogBox.propTypes = {\n//   isOpen: PropTypes.bool.isRequired,\n//   handleClose: PropTypes.func.isRequired,\n//   onConfirm: PropTypes.func.isRequired,\n//   title: PropTypes.string.isRequired,\n//   children: PropTypes.element.isRequired,\n// };","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/helpers/AlertDialogBox.js"],"names":["React","useState","useRef","AlertDialog","AlertDialogBody","AlertDialogFooter","AlertDialogHeader","AlertDialogContent","AlertDialogOverlay","Button","AlertDialogBox","isOpen","onClose","onConfirm","title","children","cancelRef"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,MAA1B,KAAwC,OAAxC,CAEA,OACEC,WADF,CAEEC,eAFF,CAGEC,iBAHF,CAIEC,iBAJF,CAKEC,kBALF,CAMEC,kBANF,CAOEC,MAPF,KAQO,kBARP,C,wFAUA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAMxB,IALJC,CAAAA,MAKI,MALJA,MAKI,CAJJC,OAII,MAJJA,OAII,CAHJC,SAGI,MAHJA,SAGI,CAFJC,KAEI,MAFJA,KAEI,CADJC,QACI,MADJA,QACI,CACJ,GAAMC,CAAAA,SAAS,CAAGd,MAAM,CAAC,IAAD,CAAxB,CAEA,mBACE,KAAC,WAAD,EACE,MAAM,CAAES,MADV,CAEE,SAAS,CAAEK,SAFb,CAGE,OAAO,CAAEJ,OAHX,CAIE,UAAU,CAAEC,SAJd,CAKE,kBAAkB,CAAE,IALtB,uBAOE,KAAC,kBAAD,wBACE,MAAC,kBAAD,yBACE,KAAC,iBAAD,EACE,UAAU,CAAC,QADb,CAEE,UAAU,CAAC,MAFb,CAGE,QAAQ,CAAC,QAHX,UAKGC,KALH,EADF,cASE,KAAC,eAAD,EAAiB,UAAU,CAAC,QAA5B,CAAqC,QAAQ,CAAC,SAA9C,UACGC,QADH,EATF,cAaE,MAAC,iBAAD,yBAEE,KAAC,MAAD,EACE,CAAC,CAAC,OADJ,CAEE,EAAE,CAAC,QAFL,CAGE,UAAU,CAAC,SAHb,CAIE,OAAO,CAAEH,OAJX,oBAFF,cAUE,KAAC,MAAD,EACE,WAAW,CAAC,KADd,CAEE,EAAE,CAAC,QAFL,CAGE,CAAC,CAAC,OAHJ,CAIE,EAAE,CAAE,CAJN,CAKE,UAAU,CAAC,SALb,CAME,OAAO,CAAE,kBAAM,CACbA,OAAO,GACPC,SAAS,GACV,CATH,qBAVF,GAbF,GADF,EAPF,EADF,CAkDD,CA3DM,CA6DP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogContent,\r\n  AlertDialogOverlay,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\n\r\nexport const AlertDialogBox = ({\r\n  isOpen,\r\n  onClose,\r\n  onConfirm,\r\n  title,\r\n  children,\r\n}) => {\r\n  const cancelRef = useRef(null);\r\n\r\n  return (\r\n    <AlertDialog\r\n      isOpen={isOpen}\r\n      cancelRef={cancelRef}\r\n      onClose={onClose}\r\n      conConfirm={onConfirm}\r\n      blockScrollOnMount={true}\r\n    >\r\n      <AlertDialogOverlay>\r\n        <AlertDialogContent>\r\n          <AlertDialogHeader\r\n            fontFamily=\"roboto\"\r\n            fontWeight=\"bold\"\r\n            fontSize=\"1.5rem\"\r\n          >\r\n            {title}\r\n          </AlertDialogHeader>\r\n\r\n          <AlertDialogBody fontFamily=\"roboto\" fontSize=\"1.25rem\">\r\n            {children}\r\n          </AlertDialogBody>\r\n\r\n          <AlertDialogFooter>\r\n            {/* <Button ref={cancelRef} onClick={onClose}> */}\r\n            <Button\r\n              w=\"100px\"\r\n              py=\"0.5rem\"\r\n              fontFamily=\"cursive\"\r\n              onClick={onClose}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              colorScheme=\"red\"\r\n              py=\"0.5rem\"\r\n              w=\"100px\"\r\n              ml={3}\r\n              fontFamily=\"cursive\"\r\n              onClick={() => {\r\n                onClose();\r\n                onConfirm();\r\n              }}\r\n            >\r\n              Confirm\r\n            </Button>\r\n          </AlertDialogFooter>\r\n        </AlertDialogContent>\r\n      </AlertDialogOverlay>\r\n    </AlertDialog>\r\n  );\r\n};\r\n\r\n// export const AlertDialogBox = ({\r\n//   isOpen,\r\n//   onClose,\r\n//   cancelRef,\r\n//   heading,\r\n//   children,\r\n\r\n// }) => {\r\n//   return (\r\n//     <>\r\n//       <AlertDialog\r\n//         isopen={isOpen}\r\n//         onClose={onClose}\r\n//         leastDestructiveRef={cancelRef}\r\n//       >\r\n//         <AlertDialogOverlay>\r\n//           <AlertDialogContent>\r\n//             <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n//               {heading}\r\n//             </AlertDialogHeader>\r\n//             <AlertDialogBody>{children}</AlertDialogBody>\r\n//             <AlertDialogFooter>\r\n//               <Button ref={cancelRef} onClick={onClose}>\r\n//                 Cancel\r\n//               </Button>\r\n//               <Button\r\n//                 colorScheme=\"red\"\r\n//                 onClick={() => {\r\n//                   // handleClose();\r\n//                   // onConfirm();\r\n//                   onClose();\r\n//                 }}\r\n//                 ml={3}\r\n//               >\r\n//                 Confirm\r\n//               </Button>\r\n//             </AlertDialogFooter>\r\n//           </AlertDialogContent>\r\n//         </AlertDialogOverlay>\r\n//       </AlertDialog>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// AlertDialogBox.propTypes = {\r\n//   isOpen: PropTypes.bool.isRequired,\r\n//   handleClose: PropTypes.func.isRequired,\r\n//   onConfirm: PropTypes.func.isRequired,\r\n//   title: PropTypes.string.isRequired,\r\n//   children: PropTypes.element.isRequired,\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}