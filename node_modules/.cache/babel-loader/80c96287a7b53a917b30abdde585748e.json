{"ast":null,"code":"import _classCallCheck from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Qualifier } from \"../../../internal/qualifier/Qualifier\";\nimport { Action } from \"../../../internal/Action\";\n/**\n * @description The Action class of the blur Builder.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nvar BlurAction = /*#__PURE__*/function (_Action) {\n  _inherits(BlurAction, _Action);\n\n  var _super = _createSuper(BlurAction);\n\n  function BlurAction(strength) {\n    var _this;\n\n    _classCallCheck(this, BlurAction);\n\n    _this = _super.call(this);\n    _this._strength = strength;\n    return _this;\n  }\n  /**\n   * @description Specifies the region to blur.\n   * @param {NamedRegion} blurRegion\n   */\n\n\n  _createClass(BlurAction, [{\n    key: \"region\",\n    value: function region(blurRegion) {\n      this._region = blurRegion;\n      return this;\n    }\n    /**\n     * @description Sets the strength of the blur effect.\n     * @param {number | string} strength\n     */\n\n  }, {\n    key: \"strength\",\n    value: function strength(_strength) {\n      this._strength = _strength;\n      return this;\n    }\n  }, {\n    key: \"prepareQualifiers\",\n    value: function prepareQualifiers() {\n      var _this2 = this;\n\n      /*\n       * Blur with region is a unique object in this codebase.\n       * On top of Blur being an Action with Qualifiers,\n       * it also accepts a Qualifier called Region.\n       *\n       * This Qualifier is in itself composite of qualifiers (such as height, or width).\n       * The existence of Region changes the output of Blur in non traditional ways\n       * which forced this relatively ad-hoc implementation.\n       *\n       * Aside from all of that, all of the Qualifiers in the component should be alphabetized\n       * This happens naturally in the Action class,\n       * however since we're dealing with two levels of qualifiers (Blur and Region),\n       * these need to be merged.\n       *\n       * This function will merge the Region qualifiers with Blur\n       * and add all needed implicit qualifiers (like g_ocr_text).\n       * We're not using the full Gravity Qualifier here to prevent the code import for such a simplistic case\n       */\n      var str = this._strength ? \":\".concat(this._strength) : '';\n\n      if ('_region' in this) {\n        var qualifiers = this._region.qualifiers; // Copy qualifiers from the region \"action\" to the blur action\n\n        qualifiers.forEach(function (q) {\n          return _this2.addQualifier(q);\n        });\n\n        if (this._region.regionType === 'named') {\n          this.addQualifier(new Qualifier('e', \"blur_region\".concat(str)));\n        }\n\n        if (this._region.regionType === 'ocr_text') {\n          this.addQualifier(new Qualifier('e', \"blur_region\".concat(str)));\n          this.addQualifier(new Qualifier('g', \"ocr_text\"));\n        }\n\n        if (this._region.regionType === 'faces') {\n          this.addQualifier(new Qualifier('e', \"blur_faces\".concat(str)));\n        }\n      } else {\n        this.addQualifier(new Qualifier('e', \"blur\".concat(str)));\n      }\n    }\n  }]);\n\n  return BlurAction;\n}(Action);\n\nexport { BlurAction };","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/actions/effect/blur/blur.js"],"names":["Qualifier","Action","BlurAction","strength","_strength","blurRegion","_region","str","qualifiers","forEach","q","addQualifier","regionType"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,uCAA1B;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,U;;;;;AACF,sBAAYC,QAAZ,EAAsB;AAAA;;AAAA;;AAClB;AACA,UAAKC,SAAL,GAAiBD,QAAjB;AAFkB;AAGrB;AACD;AACJ;AACA;AACA;;;;;WACI,gBAAOE,UAAP,EAAmB;AACf,WAAKC,OAAL,GAAeD,UAAf;AACA,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,kBAASF,SAAT,EAAmB;AACf,WAAKC,SAAL,GAAiBD,SAAjB;AACA,aAAO,IAAP;AACH;;;WACD,6BAAoB;AAAA;;AAChB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,UAAMI,GAAG,GAAG,KAAKH,SAAL,cAAqB,KAAKA,SAA1B,IAAwC,EAApD;;AACA,UAAI,aAAa,IAAjB,EAAuB;AACnB,YAAMI,UAAU,GAAG,KAAKF,OAAL,CAAaE,UAAhC,CADmB,CAEnB;;AACAA,QAAAA,UAAU,CAACC,OAAX,CAAmB,UAACC,CAAD;AAAA,iBAAO,MAAI,CAACC,YAAL,CAAkBD,CAAlB,CAAP;AAAA,SAAnB;;AACA,YAAI,KAAKJ,OAAL,CAAaM,UAAb,KAA4B,OAAhC,EAAyC;AACrC,eAAKD,YAAL,CAAkB,IAAIX,SAAJ,CAAc,GAAd,uBAAiCO,GAAjC,EAAlB;AACH;;AACD,YAAI,KAAKD,OAAL,CAAaM,UAAb,KAA4B,UAAhC,EAA4C;AACxC,eAAKD,YAAL,CAAkB,IAAIX,SAAJ,CAAc,GAAd,uBAAiCO,GAAjC,EAAlB;AACA,eAAKI,YAAL,CAAkB,IAAIX,SAAJ,CAAc,GAAd,aAAlB;AACH;;AACD,YAAI,KAAKM,OAAL,CAAaM,UAAb,KAA4B,OAAhC,EAAyC;AACrC,eAAKD,YAAL,CAAkB,IAAIX,SAAJ,CAAc,GAAd,sBAAgCO,GAAhC,EAAlB;AACH;AACJ,OAdD,MAeK;AACD,aAAKI,YAAL,CAAkB,IAAIX,SAAJ,CAAc,GAAd,gBAA0BO,GAA1B,EAAlB;AACH;AACJ;;;;EA3DoBN,M;;AA6DzB,SAASC,UAAT","sourcesContent":["import { Qualifier } from \"../../../internal/qualifier/Qualifier\";\nimport { Action } from \"../../../internal/Action\";\n/**\n * @description The Action class of the blur Builder.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass BlurAction extends Action {\n    constructor(strength) {\n        super();\n        this._strength = strength;\n    }\n    /**\n     * @description Specifies the region to blur.\n     * @param {NamedRegion} blurRegion\n     */\n    region(blurRegion) {\n        this._region = blurRegion;\n        return this;\n    }\n    /**\n     * @description Sets the strength of the blur effect.\n     * @param {number | string} strength\n     */\n    strength(strength) {\n        this._strength = strength;\n        return this;\n    }\n    prepareQualifiers() {\n        /*\n         * Blur with region is a unique object in this codebase.\n         * On top of Blur being an Action with Qualifiers,\n         * it also accepts a Qualifier called Region.\n         *\n         * This Qualifier is in itself composite of qualifiers (such as height, or width).\n         * The existence of Region changes the output of Blur in non traditional ways\n         * which forced this relatively ad-hoc implementation.\n         *\n         * Aside from all of that, all of the Qualifiers in the component should be alphabetized\n         * This happens naturally in the Action class,\n         * however since we're dealing with two levels of qualifiers (Blur and Region),\n         * these need to be merged.\n         *\n         * This function will merge the Region qualifiers with Blur\n         * and add all needed implicit qualifiers (like g_ocr_text).\n         * We're not using the full Gravity Qualifier here to prevent the code import for such a simplistic case\n         */\n        const str = this._strength ? `:${this._strength}` : '';\n        if ('_region' in this) {\n            const qualifiers = this._region.qualifiers;\n            // Copy qualifiers from the region \"action\" to the blur action\n            qualifiers.forEach((q) => this.addQualifier(q));\n            if (this._region.regionType === 'named') {\n                this.addQualifier(new Qualifier('e', `blur_region${str}`));\n            }\n            if (this._region.regionType === 'ocr_text') {\n                this.addQualifier(new Qualifier('e', `blur_region${str}`));\n                this.addQualifier(new Qualifier('g', `ocr_text`));\n            }\n            if (this._region.regionType === 'faces') {\n                this.addQualifier(new Qualifier('e', `blur_faces${str}`));\n            }\n        }\n        else {\n            this.addQualifier(new Qualifier('e', `blur${str}`));\n        }\n    }\n}\nexport { BlurAction };\n"]},"metadata":{},"sourceType":"module"}