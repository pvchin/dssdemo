{"ast":null,"code":"import { lossy, preserveTransparency, progressive } from \"../../qualifiers/flag\";\nimport { DeliveryAction } from \"./DeliveryAction\";\nimport { ProgressiveQualifier } from \"../../qualifiers/progressive\";\n/**\n * @memberOf Actions.Delivery\n * @extends {Actions.Delivery.DeliveryAction}\n * @see Visit {@link Actions.Delivery|Delivery} for an example\n */\n\nclass DeliveryFormat extends DeliveryAction {\n  /**\n   * @description Uses lossy compression when delivering animated GIF files.\n   * @return {this}\n   */\n  lossy() {\n    this.addFlag(lossy());\n    return this;\n  }\n  /**\n   * @description Uses progressive compression when delivering JPG file format.\n   * @return {this}\n   */\n\n\n  progressive(mode) {\n    if (mode instanceof ProgressiveQualifier) {\n      this.addFlag(mode);\n    } else {\n      this.addFlag(progressive(mode));\n    }\n\n    return this;\n  }\n  /**\n   * @description Ensures that images with a transparency channel are delivered in PNG format.\n   */\n\n\n  preserveTransparency() {\n    this.addFlag(preserveTransparency());\n    return this;\n  }\n\n}\n\nexport { DeliveryFormat };","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/actions/delivery/DeliveryFormat.js"],"names":["lossy","preserveTransparency","progressive","DeliveryAction","ProgressiveQualifier","DeliveryFormat","addFlag","mode"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,oBAAhB,EAAsCC,WAAtC,QAAyD,uBAAzD;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,oBAAT,QAAqC,8BAArC;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,cAAN,SAA6BF,cAA7B,CAA4C;AACxC;AACJ;AACA;AACA;AACIH,EAAAA,KAAK,GAAG;AACJ,SAAKM,OAAL,CAAaN,KAAK,EAAlB;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIE,EAAAA,WAAW,CAACK,IAAD,EAAO;AACd,QAAIA,IAAI,YAAYH,oBAApB,EAA0C;AACtC,WAAKE,OAAL,CAAaC,IAAb;AACH,KAFD,MAGK;AACD,WAAKD,OAAL,CAAaJ,WAAW,CAACK,IAAD,CAAxB;AACH;;AACD,WAAO,IAAP;AACH;AACD;AACJ;AACA;;;AACIN,EAAAA,oBAAoB,GAAG;AACnB,SAAKK,OAAL,CAAaL,oBAAoB,EAAjC;AACA,WAAO,IAAP;AACH;;AA5BuC;;AA8B5C,SAASI,cAAT","sourcesContent":["import { lossy, preserveTransparency, progressive } from \"../../qualifiers/flag\";\nimport { DeliveryAction } from \"./DeliveryAction\";\nimport { ProgressiveQualifier } from \"../../qualifiers/progressive\";\n/**\n * @memberOf Actions.Delivery\n * @extends {Actions.Delivery.DeliveryAction}\n * @see Visit {@link Actions.Delivery|Delivery} for an example\n */\nclass DeliveryFormat extends DeliveryAction {\n    /**\n     * @description Uses lossy compression when delivering animated GIF files.\n     * @return {this}\n     */\n    lossy() {\n        this.addFlag(lossy());\n        return this;\n    }\n    /**\n     * @description Uses progressive compression when delivering JPG file format.\n     * @return {this}\n     */\n    progressive(mode) {\n        if (mode instanceof ProgressiveQualifier) {\n            this.addFlag(mode);\n        }\n        else {\n            this.addFlag(progressive(mode));\n        }\n        return this;\n    }\n    /**\n     * @description Ensures that images with a transparency channel are delivered in PNG format.\n     */\n    preserveTransparency() {\n        this.addFlag(preserveTransparency());\n        return this;\n    }\n}\nexport { DeliveryFormat };\n"]},"metadata":{},"sourceType":"module"}