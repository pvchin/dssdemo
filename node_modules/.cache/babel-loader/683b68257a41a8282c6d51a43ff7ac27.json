{"ast":null,"code":"/**\n * Globalize v1.7.0\n *\n * https://github.com/globalizejs/globalize\n *\n * Copyright OpenJS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2021-08-02T11:53Z\n */\n\n/*!\n * Globalize v1.7.0 2021-08-02T11:53Z Released under the MIT license\n * http://git.io/TrdQbw\n */\n(function (root, factory) {\n  // UMD returnExports\n  if (typeof define === \"function\" && define.amd) {\n    // AMD\n    define([\"cldr\", \"cldr/event\"], factory);\n  } else if (typeof exports === \"object\") {\n    // Node, CommonJS\n    module.exports = factory(require(\"cldrjs\"));\n  } else {\n    // Global\n    root.Globalize = factory(root.Cldr);\n  }\n})(this, function (Cldr) {\n  /**\n   * A toString method that outputs meaningful values for objects or arrays and\n   * still performs as fast as a plain string in case variable is string, or as\n   * fast as `\"\" + number` in case variable is a number.\n   * Ref: http://jsperf.com/my-stringify\n   */\n  var toString = function (variable) {\n    return typeof variable === \"string\" ? variable : typeof variable === \"number\" ? \"\" + variable : JSON.stringify(variable);\n  };\n  /**\n   * formatMessage( message, data )\n   *\n   * @message [String] A message with optional {vars} to be replaced.\n   *\n   * @data [Array or JSON] Object with replacing-variables content.\n   *\n   * Return the formatted message. For example:\n   *\n   * - formatMessage( \"{0} second\", [ 1 ] ); // 1 second\n   *\n   * - formatMessage( \"{0}/{1}\", [\"m\", \"s\"] ); // m/s\n   *\n   * - formatMessage( \"{name} <{email}>\", {\n   *     name: \"Foo\",\n   *     email: \"bar@baz.qux\"\n   *   }); // Foo <bar@baz.qux>\n   */\n\n\n  var formatMessage = function (message, data) {\n    // Replace {attribute}'s\n    message = message.replace(/{[0-9a-zA-Z-_. ]+}/g, function (name) {\n      name = name.replace(/^{([^}]*)}$/, \"$1\");\n      return toString(data[name]);\n    });\n    return message;\n  };\n\n  var objectExtend = function () {\n    var destination = arguments[0],\n        sources = [].slice.call(arguments, 1);\n    sources.forEach(function (source) {\n      var prop;\n\n      for (prop in source) {\n        destination[prop] = source[prop];\n      }\n    });\n    return destination;\n  };\n\n  var createError = function (code, message, attributes) {\n    var error;\n    message = code + (message ? \": \" + formatMessage(message, attributes) : \"\");\n    error = new Error(message);\n    error.code = code;\n    objectExtend(error, attributes);\n    return error;\n  };\n  /**\n   * Pushes part to parts array, concat two consecutive parts of the same type.\n   */\n\n\n  var partsPush = function (parts, type, value) {\n    // Concat two consecutive parts of same type\n    if (parts.length && parts[parts.length - 1].type === type) {\n      parts[parts.length - 1].value += value;\n      return;\n    }\n\n    parts.push({\n      type: type,\n      value: value\n    });\n  };\n  /**\n   * formatMessage( message, data )\n   *\n   * @message [String] A message with optional {vars} to be replaced.\n   *\n   * @data [Array or JSON] Object with replacing-variables content.\n   *\n   * Return the formatted message. For example:\n   *\n   * - formatMessage( \"{0} second\", [ 1 ] );\n   * > [{type: \"variable\", value: \"1\", name: \"0\"}, {type: \"literal\", value: \" second\"}]\n   *\n   * - formatMessage( \"{0}/{1}\", [\"m\", \"s\"] );\n   * > [\n   *     { type: \"variable\", value: \"m\", name: \"0\" },\n   *     { type: \"literal\", value: \" /\" },\n   *     { type: \"variable\", value: \"s\", name: \"1\" }\n   *   ]\n   */\n\n\n  var formatMessageToParts = function (message, data) {\n    var lastOffset = 0,\n        parts = []; // Create parts.\n\n    message.replace(/{[0-9a-zA-Z-_. ]+}/g, function (nameIncludingBrackets, offset) {\n      var name = nameIncludingBrackets.slice(1, -1);\n      partsPush(parts, \"literal\", message.slice(lastOffset, offset));\n      partsPush(parts, \"variable\", data[name]);\n      parts[parts.length - 1].name = name;\n      lastOffset += offset + nameIncludingBrackets.length;\n    }); // Skip empty ones such as `{ type: 'literal', value: '' }`.\n\n    return parts.filter(function (part) {\n      return part.value !== \"\";\n    });\n  };\n  /**\n   * Returns joined parts values.\n   */\n\n\n  var partsJoin = function (parts) {\n    return parts.map(function (part) {\n      return part.value;\n    }).join(\"\");\n  };\n\n  var runtimeStringify = function (args) {\n    return JSON.stringify(args, function (_key, value) {\n      if (value && value.runtimeKey) {\n        return value.runtimeKey;\n      }\n\n      return value;\n    });\n  }; // Based on http://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript-jquery\n\n\n  var stringHash = function (str) {\n    return [].reduce.call(str, function (hash, i) {\n      var chr = i.charCodeAt(0);\n      hash = (hash << 5) - hash + chr;\n      return hash | 0;\n    }, 0);\n  };\n\n  var runtimeKey = function (fnName, locale, args, argsStr) {\n    var hash;\n    argsStr = argsStr || runtimeStringify(args);\n    hash = stringHash(fnName + locale + argsStr);\n    return hash > 0 ? \"a\" + hash : \"b\" + Math.abs(hash);\n  };\n\n  var functionName = function (fn) {\n    if (fn.name !== undefined) {\n      return fn.name;\n    } // fn.name is not supported by IE.\n\n\n    var matches = /^function\\s+([\\w\\$]+)\\s*\\(/.exec(fn.toString());\n\n    if (matches && matches.length > 0) {\n      return matches[1];\n    }\n  };\n\n  var runtimeBind = function (args, cldr, fn, runtimeArgs) {\n    var argsStr = runtimeStringify(args),\n        fnName = functionName(fn),\n        locale = cldr.locale; // If name of the function is not available, this is most likely due to uglification,\n    // which most likely means we are in production, and runtimeBind here is not necessary.\n\n    if (!fnName) {\n      return fn;\n    }\n\n    fn.runtimeKey = runtimeKey(fnName, locale, null, argsStr);\n\n    fn.generatorString = function () {\n      return \"Globalize(\\\"\" + locale + \"\\\").\" + fnName + \"(\" + argsStr.slice(1, -1) + \")\";\n    };\n\n    fn.runtimeArgs = runtimeArgs;\n    return fn;\n  };\n\n  var validate = function (code, message, check, attributes) {\n    if (!check) {\n      throw createError(code, message, attributes);\n    }\n  };\n\n  var alwaysArray = function (stringOrArray) {\n    return Array.isArray(stringOrArray) ? stringOrArray : stringOrArray ? [stringOrArray] : [];\n  };\n\n  var validateCldr = function (path, value, options) {\n    var skipBoolean;\n    options = options || {};\n    skipBoolean = alwaysArray(options.skip).some(function (pathRe) {\n      return pathRe.test(path);\n    });\n    validate(\"E_MISSING_CLDR\", \"Missing required CLDR content `{path}`.\", value || skipBoolean, {\n      path: path\n    });\n  };\n\n  var validateDefaultLocale = function (value) {\n    validate(\"E_DEFAULT_LOCALE_NOT_DEFINED\", \"Default locale has not been defined.\", value !== undefined, {});\n  };\n\n  var validateParameterPresence = function (value, name) {\n    validate(\"E_MISSING_PARAMETER\", \"Missing required parameter `{name}`.\", value !== undefined, {\n      name: name\n    });\n  };\n  /**\n   * range( value, name, minimum, maximum )\n   *\n   * @value [Number].\n   *\n   * @name [String] name of variable.\n   *\n   * @minimum [Number]. The lowest valid value, inclusive.\n   *\n   * @maximum [Number]. The greatest valid value, inclusive.\n   */\n\n\n  var validateParameterRange = function (value, name, minimum, maximum) {\n    validate(\"E_PAR_OUT_OF_RANGE\", \"Parameter `{name}` has value `{value}` out of range [{minimum}, {maximum}].\", value === undefined || value >= minimum && value <= maximum, {\n      maximum: maximum,\n      minimum: minimum,\n      name: name,\n      value: value\n    });\n  };\n\n  var validateParameterType = function (value, name, check, expected) {\n    validate(\"E_INVALID_PAR_TYPE\", \"Invalid `{name}` parameter ({value}). {expected} expected.\", check, {\n      expected: expected,\n      name: name,\n      value: value\n    });\n  };\n\n  var validateParameterTypeLocale = function (value, name) {\n    validateParameterType(value, name, value === undefined || typeof value === \"string\" || value instanceof Cldr, \"String or Cldr instance\");\n  };\n  /**\n   * Function inspired by jQuery Core, but reduced to our use case.\n   */\n\n\n  var isPlainObject = function (obj) {\n    return obj !== null && \"\" + obj === \"[object Object]\";\n  };\n\n  var validateParameterTypePlainObject = function (value, name) {\n    validateParameterType(value, name, value === undefined || isPlainObject(value), \"Plain Object\");\n  };\n\n  var alwaysCldr = function (localeOrCldr) {\n    return localeOrCldr instanceof Cldr ? localeOrCldr : new Cldr(localeOrCldr);\n  }; // ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions?redirectlocale=en-US&redirectslug=JavaScript%2FGuide%2FRegular_Expressions\n\n\n  var regexpEscape = function (string) {\n    return string.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n  };\n\n  var stringPad = function (str, count, right) {\n    var length;\n\n    if (typeof str !== \"string\") {\n      str = String(str);\n    }\n\n    for (length = str.length; length < count; length += 1) {\n      str = right ? str + \"0\" : \"0\" + str;\n    }\n\n    return str;\n  };\n\n  function validateLikelySubtags(cldr) {\n    cldr.once(\"get\", validateCldr);\n    cldr.get(\"supplemental/likelySubtags\");\n  }\n  /**\n   * [new] Globalize( locale|cldr )\n   *\n   * @locale [String]\n   *\n   * @cldr [Cldr instance]\n   *\n   * Create a Globalize instance.\n   */\n\n\n  function Globalize(locale) {\n    if (!(this instanceof Globalize)) {\n      return new Globalize(locale);\n    }\n\n    validateParameterPresence(locale, \"locale\");\n    validateParameterTypeLocale(locale, \"locale\");\n    this.cldr = alwaysCldr(locale);\n    validateLikelySubtags(this.cldr);\n  }\n  /**\n   * Globalize.load( json, ... )\n   *\n   * @json [JSON]\n   *\n   * Load resolved or unresolved cldr data.\n   * Somewhat equivalent to previous Globalize.addCultureInfo(...).\n   */\n\n\n  Globalize.load = function () {\n    // validations are delegated to Cldr.load().\n    Cldr.load.apply(Cldr, arguments);\n  };\n  /**\n   * Globalize.locale( [locale|cldr] )\n   *\n   * @locale [String]\n   *\n   * @cldr [Cldr instance]\n   *\n   * Set default Cldr instance if locale or cldr argument is passed.\n   *\n   * Return the default Cldr instance.\n   */\n\n\n  Globalize.locale = function (locale) {\n    validateParameterTypeLocale(locale, \"locale\");\n\n    if (arguments.length) {\n      this.cldr = alwaysCldr(locale);\n      validateLikelySubtags(this.cldr);\n    }\n\n    return this.cldr;\n  };\n  /**\n   * Optimization to avoid duplicating some internal functions across modules.\n   */\n\n\n  Globalize._alwaysArray = alwaysArray;\n  Globalize._createError = createError;\n  Globalize._formatMessage = formatMessage;\n  Globalize._formatMessageToParts = formatMessageToParts;\n  Globalize._isPlainObject = isPlainObject;\n  Globalize._objectExtend = objectExtend;\n  Globalize._partsJoin = partsJoin;\n  Globalize._partsPush = partsPush;\n  Globalize._regexpEscape = regexpEscape;\n  Globalize._runtimeBind = runtimeBind;\n  Globalize._stringPad = stringPad;\n  Globalize._validate = validate;\n  Globalize._validateCldr = validateCldr;\n  Globalize._validateDefaultLocale = validateDefaultLocale;\n  Globalize._validateParameterPresence = validateParameterPresence;\n  Globalize._validateParameterRange = validateParameterRange;\n  Globalize._validateParameterTypePlainObject = validateParameterTypePlainObject;\n  Globalize._validateParameterType = validateParameterType;\n  return Globalize;\n});","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/globalize/dist/globalize.js"],"names":["root","factory","define","amd","exports","module","require","Globalize","Cldr","toString","variable","JSON","stringify","formatMessage","message","data","replace","name","objectExtend","destination","arguments","sources","slice","call","forEach","source","prop","createError","code","attributes","error","Error","partsPush","parts","type","value","length","push","formatMessageToParts","lastOffset","nameIncludingBrackets","offset","filter","part","partsJoin","map","join","runtimeStringify","args","_key","runtimeKey","stringHash","str","reduce","hash","i","chr","charCodeAt","fnName","locale","argsStr","Math","abs","functionName","fn","undefined","matches","exec","runtimeBind","cldr","runtimeArgs","generatorString","validate","check","alwaysArray","stringOrArray","Array","isArray","validateCldr","path","options","skipBoolean","skip","some","pathRe","test","validateDefaultLocale","validateParameterPresence","validateParameterRange","minimum","maximum","validateParameterType","expected","validateParameterTypeLocale","isPlainObject","obj","validateParameterTypePlainObject","alwaysCldr","localeOrCldr","regexpEscape","string","stringPad","count","right","String","validateLikelySubtags","once","get","load","apply","_alwaysArray","_createError","_formatMessage","_formatMessageToParts","_isPlainObject","_objectExtend","_partsJoin","_partsPush","_regexpEscape","_runtimeBind","_stringPad","_validate","_validateCldr","_validateDefaultLocale","_validateParameterPresence","_validateParameterRange","_validateParameterTypePlainObject","_validateParameterType"],"mappings":"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","sourcesContent":["/**\n * Globalize v1.7.0\n *\n * https://github.com/globalizejs/globalize\n *\n * Copyright OpenJS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2021-08-02T11:53Z\n */\n/*!\n * Globalize v1.7.0 2021-08-02T11:53Z Released under the MIT license\n * http://git.io/TrdQbw\n */\n(function( root, factory ) {\n\n\t// UMD returnExports\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD\n\t\tdefine([\n\t\t\t\"cldr\",\n\t\t\t\"cldr/event\"\n\t\t], factory );\n\t} else if ( typeof exports === \"object\" ) {\n\n\t\t// Node, CommonJS\n\t\tmodule.exports = factory( require( \"cldrjs\" ) );\n\t} else {\n\n\t\t// Global\n\t\troot.Globalize = factory( root.Cldr );\n\t}\n}( this, function( Cldr ) {\n\n\n/**\n * A toString method that outputs meaningful values for objects or arrays and\n * still performs as fast as a plain string in case variable is string, or as\n * fast as `\"\" + number` in case variable is a number.\n * Ref: http://jsperf.com/my-stringify\n */\nvar toString = function( variable ) {\n\treturn typeof variable === \"string\" ? variable : ( typeof variable === \"number\" ? \"\" +\n\t\tvariable : JSON.stringify( variable ) );\n};\n\n\n\n\n/**\n * formatMessage( message, data )\n *\n * @message [String] A message with optional {vars} to be replaced.\n *\n * @data [Array or JSON] Object with replacing-variables content.\n *\n * Return the formatted message. For example:\n *\n * - formatMessage( \"{0} second\", [ 1 ] ); // 1 second\n *\n * - formatMessage( \"{0}/{1}\", [\"m\", \"s\"] ); // m/s\n *\n * - formatMessage( \"{name} <{email}>\", {\n *     name: \"Foo\",\n *     email: \"bar@baz.qux\"\n *   }); // Foo <bar@baz.qux>\n */\nvar formatMessage = function( message, data ) {\n\n\t// Replace {attribute}'s\n\tmessage = message.replace( /{[0-9a-zA-Z-_. ]+}/g, function( name ) {\n\t\tname = name.replace( /^{([^}]*)}$/, \"$1\" );\n\t\treturn toString( data[ name ] );\n\t});\n\n\treturn message;\n};\n\n\n\n\nvar objectExtend = function() {\n\tvar destination = arguments[ 0 ],\n\t\tsources = [].slice.call( arguments, 1 );\n\n\tsources.forEach(function( source ) {\n\t\tvar prop;\n\t\tfor ( prop in source ) {\n\t\t\tdestination[ prop ] = source[ prop ];\n\t\t}\n\t});\n\n\treturn destination;\n};\n\n\n\n\nvar createError = function( code, message, attributes ) {\n\tvar error;\n\n\tmessage = code + ( message ? \": \" + formatMessage( message, attributes ) : \"\" );\n\terror = new Error( message );\n\terror.code = code;\n\n\tobjectExtend( error, attributes );\n\n\treturn error;\n};\n\n\n\n\n/**\n * Pushes part to parts array, concat two consecutive parts of the same type.\n */\nvar partsPush = function( parts, type, value ) {\n\n\t\t// Concat two consecutive parts of same type\n\t\tif ( parts.length && parts[ parts.length - 1 ].type === type ) {\n\t\t\tparts[ parts.length - 1 ].value += value;\n\t\t\treturn;\n\t\t}\n\n\t\tparts.push( { type: type, value: value } );\n};\n\n\n\n\n/**\n * formatMessage( message, data )\n *\n * @message [String] A message with optional {vars} to be replaced.\n *\n * @data [Array or JSON] Object with replacing-variables content.\n *\n * Return the formatted message. For example:\n *\n * - formatMessage( \"{0} second\", [ 1 ] );\n * > [{type: \"variable\", value: \"1\", name: \"0\"}, {type: \"literal\", value: \" second\"}]\n *\n * - formatMessage( \"{0}/{1}\", [\"m\", \"s\"] );\n * > [\n *     { type: \"variable\", value: \"m\", name: \"0\" },\n *     { type: \"literal\", value: \" /\" },\n *     { type: \"variable\", value: \"s\", name: \"1\" }\n *   ]\n */\nvar formatMessageToParts = function( message, data ) {\n\n\tvar lastOffset = 0,\n\t\tparts = [];\n\n\t// Create parts.\n\tmessage.replace( /{[0-9a-zA-Z-_. ]+}/g, function( nameIncludingBrackets, offset ) {\n\t\tvar name = nameIncludingBrackets.slice( 1, -1 );\n\t\tpartsPush( parts, \"literal\", message.slice( lastOffset, offset ));\n\t\tpartsPush( parts, \"variable\", data[ name ] );\n\t\tparts[ parts.length - 1 ].name = name;\n\t\tlastOffset += offset + nameIncludingBrackets.length;\n\t});\n\n\t// Skip empty ones such as `{ type: 'literal', value: '' }`.\n\treturn parts.filter(function( part ) {\n\t\treturn part.value !== \"\";\n\t});\n};\n\n\n\n\n/**\n * Returns joined parts values.\n */\nvar partsJoin = function( parts ) {\n\treturn parts.map( function( part ) {\n\t\treturn part.value;\n\t}).join( \"\" );\n};\n\n\n\n\nvar runtimeStringify = function( args ) {\n\treturn JSON.stringify( args, function( _key, value ) {\n\t\tif ( value && value.runtimeKey ) {\n\t\t\treturn value.runtimeKey;\n\t\t}\n\t\treturn value;\n\t} );\n};\n\n\n\n\n// Based on http://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript-jquery\nvar stringHash = function( str ) {\n\treturn [].reduce.call( str, function( hash, i ) {\n\t\tvar chr = i.charCodeAt( 0 );\n\t\thash = ( ( hash << 5 ) - hash ) + chr;\n\t\treturn hash | 0;\n\t}, 0 );\n};\n\n\n\n\nvar runtimeKey = function( fnName, locale, args, argsStr ) {\n\tvar hash;\n\targsStr = argsStr || runtimeStringify( args );\n\thash = stringHash( fnName + locale + argsStr );\n\treturn hash > 0 ? \"a\" + hash : \"b\" + Math.abs( hash );\n};\n\n\n\n\nvar functionName = function( fn ) {\n\tif ( fn.name !== undefined ) {\n\t\treturn fn.name;\n\t}\n\n\t// fn.name is not supported by IE.\n\tvar matches = /^function\\s+([\\w\\$]+)\\s*\\(/.exec( fn.toString() );\n\n\tif ( matches && matches.length > 0 ) {\n\t\treturn matches[ 1 ];\n\t}\n};\n\n\n\n\nvar runtimeBind = function( args, cldr, fn, runtimeArgs ) {\n\n\tvar argsStr = runtimeStringify( args ),\n\t\tfnName = functionName( fn ),\n\t\tlocale = cldr.locale;\n\n\t// If name of the function is not available, this is most likely due to uglification,\n\t// which most likely means we are in production, and runtimeBind here is not necessary.\n\tif ( !fnName ) {\n\t\treturn fn;\n\t}\n\n\tfn.runtimeKey = runtimeKey( fnName, locale, null, argsStr );\n\n\tfn.generatorString = function() {\n\t\treturn \"Globalize(\\\"\" + locale + \"\\\").\" + fnName + \"(\" + argsStr.slice( 1, -1 ) + \")\";\n\t};\n\n\tfn.runtimeArgs = runtimeArgs;\n\n\treturn fn;\n};\n\n\n\n\nvar validate = function( code, message, check, attributes ) {\n\tif ( !check ) {\n\t\tthrow createError( code, message, attributes );\n\t}\n};\n\n\n\n\nvar alwaysArray = function( stringOrArray ) {\n\treturn Array.isArray( stringOrArray ) ? stringOrArray : stringOrArray ? [ stringOrArray ] : [];\n};\n\n\n\n\nvar validateCldr = function( path, value, options ) {\n\tvar skipBoolean;\n\toptions = options || {};\n\n\tskipBoolean = alwaysArray( options.skip ).some(function( pathRe ) {\n\t\treturn pathRe.test( path );\n\t});\n\n\tvalidate( \"E_MISSING_CLDR\", \"Missing required CLDR content `{path}`.\", value || skipBoolean, {\n\t\tpath: path\n\t});\n};\n\n\n\n\nvar validateDefaultLocale = function( value ) {\n\tvalidate( \"E_DEFAULT_LOCALE_NOT_DEFINED\", \"Default locale has not been defined.\",\n\t\tvalue !== undefined, {} );\n};\n\n\n\n\nvar validateParameterPresence = function( value, name ) {\n\tvalidate( \"E_MISSING_PARAMETER\", \"Missing required parameter `{name}`.\",\n\t\tvalue !== undefined, { name: name });\n};\n\n\n\n\n/**\n * range( value, name, minimum, maximum )\n *\n * @value [Number].\n *\n * @name [String] name of variable.\n *\n * @minimum [Number]. The lowest valid value, inclusive.\n *\n * @maximum [Number]. The greatest valid value, inclusive.\n */\nvar validateParameterRange = function( value, name, minimum, maximum ) {\n\tvalidate(\n\t\t\"E_PAR_OUT_OF_RANGE\",\n\t\t\"Parameter `{name}` has value `{value}` out of range [{minimum}, {maximum}].\",\n\t\tvalue === undefined || value >= minimum && value <= maximum,\n\t\t{\n\t\t\tmaximum: maximum,\n\t\t\tminimum: minimum,\n\t\t\tname: name,\n\t\t\tvalue: value\n\t\t}\n\t);\n};\n\n\n\n\nvar validateParameterType = function( value, name, check, expected ) {\n\tvalidate(\n\t\t\"E_INVALID_PAR_TYPE\",\n\t\t\"Invalid `{name}` parameter ({value}). {expected} expected.\",\n\t\tcheck,\n\t\t{\n\t\t\texpected: expected,\n\t\t\tname: name,\n\t\t\tvalue: value\n\t\t}\n\t);\n};\n\n\n\n\nvar validateParameterTypeLocale = function( value, name ) {\n\tvalidateParameterType(\n\t\tvalue,\n\t\tname,\n\t\tvalue === undefined || typeof value === \"string\" || value instanceof Cldr,\n\t\t\"String or Cldr instance\"\n\t);\n};\n\n\n\n\n/**\n * Function inspired by jQuery Core, but reduced to our use case.\n */\nvar isPlainObject = function( obj ) {\n\treturn obj !== null && \"\" + obj === \"[object Object]\";\n};\n\n\n\n\nvar validateParameterTypePlainObject = function( value, name ) {\n\tvalidateParameterType(\n\t\tvalue,\n\t\tname,\n\t\tvalue === undefined || isPlainObject( value ),\n\t\t\"Plain Object\"\n\t);\n};\n\n\n\n\nvar alwaysCldr = function( localeOrCldr ) {\n\treturn localeOrCldr instanceof Cldr ? localeOrCldr : new Cldr( localeOrCldr );\n};\n\n\n\n\n// ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions?redirectlocale=en-US&redirectslug=JavaScript%2FGuide%2FRegular_Expressions\nvar regexpEscape = function( string ) {\n\treturn string.replace( /([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\" );\n};\n\n\n\n\nvar stringPad = function( str, count, right ) {\n\tvar length;\n\tif ( typeof str !== \"string\" ) {\n\t\tstr = String( str );\n\t}\n\tfor ( length = str.length; length < count; length += 1 ) {\n\t\tstr = ( right ? ( str + \"0\" ) : ( \"0\" + str ) );\n\t}\n\treturn str;\n};\n\n\n\n\nfunction validateLikelySubtags( cldr ) {\n\tcldr.once( \"get\", validateCldr );\n\tcldr.get( \"supplemental/likelySubtags\" );\n}\n\n/**\n * [new] Globalize( locale|cldr )\n *\n * @locale [String]\n *\n * @cldr [Cldr instance]\n *\n * Create a Globalize instance.\n */\nfunction Globalize( locale ) {\n\tif ( !( this instanceof Globalize ) ) {\n\t\treturn new Globalize( locale );\n\t}\n\n\tvalidateParameterPresence( locale, \"locale\" );\n\tvalidateParameterTypeLocale( locale, \"locale\" );\n\n\tthis.cldr = alwaysCldr( locale );\n\n\tvalidateLikelySubtags( this.cldr );\n}\n\n/**\n * Globalize.load( json, ... )\n *\n * @json [JSON]\n *\n * Load resolved or unresolved cldr data.\n * Somewhat equivalent to previous Globalize.addCultureInfo(...).\n */\nGlobalize.load = function() {\n\n\t// validations are delegated to Cldr.load().\n\tCldr.load.apply( Cldr, arguments );\n};\n\n/**\n * Globalize.locale( [locale|cldr] )\n *\n * @locale [String]\n *\n * @cldr [Cldr instance]\n *\n * Set default Cldr instance if locale or cldr argument is passed.\n *\n * Return the default Cldr instance.\n */\nGlobalize.locale = function( locale ) {\n\tvalidateParameterTypeLocale( locale, \"locale\" );\n\n\tif ( arguments.length ) {\n\t\tthis.cldr = alwaysCldr( locale );\n\t\tvalidateLikelySubtags( this.cldr );\n\t}\n\treturn this.cldr;\n};\n\n/**\n * Optimization to avoid duplicating some internal functions across modules.\n */\nGlobalize._alwaysArray = alwaysArray;\nGlobalize._createError = createError;\nGlobalize._formatMessage = formatMessage;\nGlobalize._formatMessageToParts = formatMessageToParts;\nGlobalize._isPlainObject = isPlainObject;\nGlobalize._objectExtend = objectExtend;\nGlobalize._partsJoin = partsJoin;\nGlobalize._partsPush = partsPush;\nGlobalize._regexpEscape = regexpEscape;\nGlobalize._runtimeBind = runtimeBind;\nGlobalize._stringPad = stringPad;\nGlobalize._validate = validate;\nGlobalize._validateCldr = validateCldr;\nGlobalize._validateDefaultLocale = validateDefaultLocale;\nGlobalize._validateParameterPresence = validateParameterPresence;\nGlobalize._validateParameterRange = validateParameterRange;\nGlobalize._validateParameterTypePlainObject = validateParameterTypePlainObject;\nGlobalize._validateParameterType = validateParameterType;\n\nreturn Globalize;\n\n\n\n\n}));\n"]},"metadata":{},"sourceType":"script"}