{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\PaySummaryTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from \"react\";\nimport { Box, Divider, Table, Thead, Tbody, Tr, Th, Td, chakra } from \"@chakra-ui/react\";\nimport { TriangleDownIcon, TriangleUpIcon } from \"@chakra-ui/icons\";\nimport { useTable, useSortBy } from \"react-table\";\nimport { formatPrice } from \"../helpers/Utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PaySummaryTable({\n  columns,\n  data\n}) {\n  _s();\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useSortBy);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    colorScheme: \"whiteAlpha\",\n    variant: \"simple\",\n    ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(Thead, {\n      bgColor: \"blue.200\",\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(Tr, { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(Th, { ...column.getHeaderProps(column.getSortByToggleProps()),\n          isNumeric: column.isNumeric,\n          children: [column.render(\"Header\"), /*#__PURE__*/_jsxDEV(chakra.span, {\n            pl: \"4\",\n            children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(TriangleDownIcon, {\n              \"aria-label\": \"sorted descending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(TriangleUpIcon, {\n              \"aria-label\": \"sorted ascending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 23\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tbody, { ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(Tr, {\n          bgColor: \"gray.50\",\n          ...row.getRowProps(),\n          children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(Td, {\n            bgColor: \"whiteAlpha.400\",\n            ...cell.getCellProps(),\n            isNumeric: cell.column.isNumeric,\n            children: cell.render(\"Cell\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n}\n\n_s(PaySummaryTable, \"T5U6FpG7qNL2+V8iGF3ne+5qi0g=\", false, function () {\n  return [useTable];\n});\n\n_c = PaySummaryTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaySummaryTable\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/PaySummaryTable.js"],"names":["React","useMemo","Box","Divider","Table","Thead","Tbody","Tr","Th","Td","chakra","TriangleDownIcon","TriangleUpIcon","useTable","useSortBy","formatPrice","PaySummaryTable","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isNumeric","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SACEC,GADF,EAEEC,OAFF,EAGEC,KAHF,EAIEC,KAJF,EAKEC,KALF,EAMEC,EANF,EAOEC,EAPF,EAQEC,EARF,EASEC,MATF,QAUO,kBAVP;AAWA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,kBAAjD;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,aAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAzB,EAA4C;AAAA;;AACzD,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,iBAAjB;AAAoCC,IAAAA,YAApC;AAAkDC,IAAAA,IAAlD;AAAwDC,IAAAA;AAAxD,MACJV,QAAQ,CAAC;AAAEI,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,EAAoBJ,SAApB,CADV;AAGA,sBACI,QAAC,KAAD;AAAQ,IAAA,WAAW,EAAC,YAApB;AAAiC,IAAA,OAAO,EAAC,QAAzC;AAAA,OAAsDK,aAAa,EAAnE;AAAA,4BACA,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA,gBACGE,YAAY,CAACG,GAAb,CAAkBC,WAAD,iBAChB,QAAC,EAAD,OAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,kBACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,iBACvB,QAAC,EAAD,OACMA,MAAM,CAACC,cAAP,CAAsBD,MAAM,CAACE,oBAAP,EAAtB,CADN;AAEE,UAAA,SAAS,EAAEF,MAAM,CAACG,SAFpB;AAAA,qBAIGH,MAAM,CAACI,MAAP,CAAc,QAAd,CAJH,eAKE,QAAC,MAAD,CAAQ,IAAR;AAAa,YAAA,EAAE,EAAC,GAAhB;AAAA,sBACGJ,MAAM,CAACK,QAAP,GACCL,MAAM,CAACM,YAAP,gBACE,QAAC,gBAAD;AAAkB,4BAAW;AAA7B;AAAA;AAAA;AAAA;AAAA,oBADF,gBAGE,QAAC,cAAD;AAAgB,4BAAW;AAA3B;AAAA;AAAA;AAAA;AAAA,oBAJH,GAMG;AAPN;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADA,eAyBA,QAAC,KAAD,OAAWd,iBAAiB,EAA5B;AAAA,gBACGE,IAAI,CAACE,GAAL,CAAUW,GAAD,IAAS;AACjBZ,QAAAA,UAAU,CAACY,GAAD,CAAV;AACA,4BACE,QAAC,EAAD;AAAK,UAAA,OAAO,EAAC,SAAb;AAAA,aAA2BA,GAAG,CAACC,WAAJ,EAA3B;AAAA,oBACGD,GAAG,CAACE,KAAJ,CAAUb,GAAV,CAAec,IAAD,iBACb,QAAC,EAAD;AACE,YAAA,OAAO,EAAC,gBADV;AAAA,eAEMA,IAAI,CAACC,YAAL,EAFN;AAGE,YAAA,SAAS,EAAED,IAAI,CAACV,MAAL,CAAYG,SAHzB;AAAA,sBAKGO,IAAI,CAACN,MAAL,CAAY,MAAZ;AALH;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADF;AAaD,OAfA;AADH;AAAA;AAAA;AAAA;AAAA,YAzBA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8CD;;GAlDuBhB,e;UAEpBH,Q;;;KAFoBG,e","sourcesContent":["import React, { useMemo } from \"react\";\r\nimport {\r\n  Box,\r\n  Divider,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  chakra,\r\n} from \"@chakra-ui/react\";\r\nimport { TriangleDownIcon, TriangleUpIcon } from \"@chakra-ui/icons\";\r\nimport { useTable, useSortBy } from \"react-table\";\r\nimport { formatPrice } from \"../helpers/Utils\";\r\n\r\nexport default function PaySummaryTable({ columns, data }) {\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable({ columns, data }, useSortBy);\r\n\r\n  return (\r\n      <Table  colorScheme=\"whiteAlpha\" variant=\"simple\" {...getTableProps()}>\r\n      <Thead bgColor=\"blue.200\">\r\n        {headerGroups.map((headerGroup) => (\r\n          <Tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map((column) => (\r\n              <Th\r\n                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                isNumeric={column.isNumeric}\r\n              >\r\n                {column.render(\"Header\")}\r\n                <chakra.span pl=\"4\">\r\n                  {column.isSorted ? (\r\n                    column.isSortedDesc ? (\r\n                      <TriangleDownIcon aria-label=\"sorted descending\" />\r\n                    ) : (\r\n                      <TriangleUpIcon aria-label=\"sorted ascending\" />\r\n                    )\r\n                  ) : null}\r\n                </chakra.span>\r\n              </Th>\r\n            ))}\r\n          </Tr>\r\n        ))}\r\n      </Thead>\r\n\r\n      <Tbody {...getTableBodyProps()}>\r\n        {rows.map((row) => {\r\n          prepareRow(row);\r\n          return (\r\n            <Tr  bgColor=\"gray.50\" {...row.getRowProps()}>\r\n              {row.cells.map((cell) => (\r\n                <Td\r\n                  bgColor=\"whiteAlpha.400\"\r\n                  {...cell.getCellProps()}\r\n                  isNumeric={cell.column.isNumeric}\r\n                >\r\n                  {cell.render(\"Cell\")}\r\n                </Td>\r\n              ))}\r\n            </Tr>\r\n          );\r\n        })}\r\n      </Tbody>\r\n    </Table>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}