{"ast":null,"code":"import _classCallCheck from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\n/**\n * @memberOf Qualifiers.Flag\n * @extends {SDK.Qualifier}\n * @description the FlagQualifier class\n */\n\nvar FlagQualifier = /*#__PURE__*/function (_Qualifier) {\n  _inherits(FlagQualifier, _Qualifier);\n\n  var _super = _createSuper(FlagQualifier);\n\n  function FlagQualifier(flagType, flagValue) {\n    _classCallCheck(this, FlagQualifier);\n\n    var qualifierValue;\n\n    if (flagValue) {\n      qualifierValue = new QualifierValue([flagType, \"\".concat(flagValue)]).setDelimiter(':');\n    } else {\n      qualifierValue = flagType;\n    }\n\n    return _super.call(this, 'fl', qualifierValue);\n  }\n\n  _createClass(FlagQualifier, [{\n    key: \"toString\",\n    value: function toString() {\n      return _get(_getPrototypeOf(FlagQualifier.prototype), \"toString\", this).call(this).replace(/\\./, '%2E');\n    }\n  }]);\n\n  return FlagQualifier;\n}(Qualifier);\n\nexport { FlagQualifier };","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/qualifiers/flag/FlagQualifier.js"],"names":["QualifierValue","Qualifier","FlagQualifier","flagType","flagValue","qualifierValue","setDelimiter","replace"],"mappings":";;;;;;AAAA,SAASA,cAAT,QAA+B,yCAA/B;AACA,SAASC,SAAT,QAA0B,oCAA1B;AACA;AACA;AACA;AACA;AACA;;IACMC,a;;;;;AACF,yBAAYC,QAAZ,EAAsBC,SAAtB,EAAiC;AAAA;;AAC7B,QAAIC,cAAJ;;AACA,QAAID,SAAJ,EAAe;AACXC,MAAAA,cAAc,GAAG,IAAIL,cAAJ,CAAmB,CAACG,QAAD,YAAcC,SAAd,EAAnB,EAA+CE,YAA/C,CAA4D,GAA5D,CAAjB;AACH,KAFD,MAGK;AACDD,MAAAA,cAAc,GAAGF,QAAjB;AACH;;AAP4B,6BAQvB,IARuB,EAQjBE,cARiB;AAShC;;;;WACD,oBAAW;AACP,aAAO,4EAAiBE,OAAjB,CAAyB,IAAzB,EAA+B,KAA/B,CAAP;AACH;;;;EAbuBN,S;;AAe5B,SAASC,aAAT","sourcesContent":["import { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\n/**\n * @memberOf Qualifiers.Flag\n * @extends {SDK.Qualifier}\n * @description the FlagQualifier class\n */\nclass FlagQualifier extends Qualifier {\n    constructor(flagType, flagValue) {\n        let qualifierValue;\n        if (flagValue) {\n            qualifierValue = new QualifierValue([flagType, `${flagValue}`]).setDelimiter(':');\n        }\n        else {\n            qualifierValue = flagType;\n        }\n        super('fl', qualifierValue);\n    }\n    toString() {\n        return super.toString().replace(/\\./, '%2E');\n    }\n}\nexport { FlagQualifier };\n"]},"metadata":{},"sourceType":"module"}