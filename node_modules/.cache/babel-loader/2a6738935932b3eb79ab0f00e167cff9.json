{"ast":null,"code":"import _slicedToArray from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useState,useEffect}from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import{List,ListItem,ListItemText,Grid}from\"@material-ui/core\";import clsx from\"clsx\";import axios from\"axios\";import{useRecoilState}from\"recoil\";import{loginLevelState}from\"./data/atomdata\";import{onleaves_url}from\"../utils/constants\";//\nimport{jsx as _jsx}from\"react/jsx-runtime\";var drawerWidth=240;var columns=[{title:\"Name\",field:\"name\",editable:\"never\"},{title:\"From Data\",field:\"from_date\",type:\"date\",dateSetting:{locale:\"en-GB\"},editable:\"never\"},{title:\"To Data\",field:\"to_date\",type:\"date\",dateSetting:{locale:\"en-GB\"},editable:\"never\"}];// export const onleavesdatastate = atom({\n//   key: \"onleavesdatastate\",\n//   default: [],\n// });\n// const fetchOnLeavesDetails = selector({\n//   key: \"onLeaveDetailsSelector\",\n//   get: async ({ get }) => {\n//     try {\n//       const { data } = await axios.get(onleaves_url);\n//       const onleavesdata = data;\n//       return data;\n//     } catch (error) {\n//       throw error;\n//     }\n//   },\n// });\nvar loadUsers=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(onleaves_url);case 2:_yield$axios$get=_context.sent;data=_yield$axios$get.data;return _context.abrupt(\"return\",data);case 5:case\"end\":return _context.stop();}}},_callee);}));return function loadUsers(){return _ref.apply(this,arguments);};}();//   await fetch(\"https://jsonplaceholder.typicode.com/users\")\n//     .then((res) => (res.ok ? res : Promise.reject(res)))\n//     .then((res) => res.json());\nvar OnLeavesView=function OnLeavesView(){var classes=useStyles();//const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,1),setUserdata=_useState2[0];//const [userdata, setUserdata] = useRecoilState(userdatastate);\n//const onLeavesDetails = useRecoilValueLoadable(fetchOnLeavesDetails);\nreturn/*#__PURE__*/_jsx(List,{className:classes.roow,children:/*#__PURE__*/_jsx(Grid,{container:true,direction:\"row\"})});};var useStyles=makeStyles(function(theme){return{root:{padding:\"2\"},paper:{padding:theme.spacing(1),//grid padding\ntextAlign:\"center\",color:theme.palette.text.secondary}};});export default OnLeavesView;","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/OnLeavesView.js"],"names":["React","useState","useEffect","makeStyles","List","ListItem","ListItemText","Grid","clsx","axios","useRecoilState","loginLevelState","onleaves_url","drawerWidth","columns","title","field","editable","type","dateSetting","locale","loadUsers","get","data","OnLeavesView","classes","useStyles","setUserdata","roow","theme","root","padding","paper","spacing","textAlign","color","palette","text","secondary"],"mappings":"qcAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,OAASC,IAAT,CAAeC,QAAf,CAAyBC,YAAzB,CAAuCC,IAAvC,KAAmD,mBAAnD,CACA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,cAAT,KAA+B,QAA/B,CACA,OAASC,eAAT,KAAgC,iBAAhC,CACA,OAASC,YAAT,KAA6B,oBAA7B,CACA;2CAEA,GAAMC,CAAAA,WAAW,CAAG,GAApB,CAEA,GAAMC,CAAAA,OAAO,CAAG,CACd,CACEC,KAAK,CAAE,MADT,CAEEC,KAAK,CAAE,MAFT,CAGEC,QAAQ,CAAE,OAHZ,CADc,CAMd,CACEF,KAAK,CAAE,WADT,CAEEC,KAAK,CAAE,WAFT,CAGEE,IAAI,CAAE,MAHR,CAIEC,WAAW,CAAE,CAAEC,MAAM,CAAE,OAAV,CAJf,CAKEH,QAAQ,CAAE,OALZ,CANc,CAad,CACEF,KAAK,CAAE,SADT,CAEEC,KAAK,CAAE,SAFT,CAGEE,IAAI,CAAE,MAHR,CAIEC,WAAW,CAAE,CAAEC,MAAM,CAAE,OAAV,CAJf,CAKEH,QAAQ,CAAE,OALZ,CAbc,CAAhB,CAsBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMI,CAAAA,SAAS,0FAAG,mLACOZ,CAAAA,KAAK,CAACa,GAAN,CAAUV,YAAV,CADP,uCACRW,IADQ,kBACRA,IADQ,iCAETA,IAFS,wDAAH,kBAATF,CAAAA,SAAS,0CAAf,CAIA;AACA;AACA;AAEA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAMC,CAAAA,OAAO,CAAGC,SAAS,EAAzB,CACA;AAFyB,cAGHzB,QAAQ,CAAC,EAAD,CAHL,wCAGlB0B,WAHkB,eAKzB;AACA;AAGA,mBACE,KAAC,IAAD,EAAM,SAAS,CAAEF,OAAO,CAACG,IAAzB,uBACE,KAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,SAAS,CAAC,KAA1B,EADF,EADF,CAqBD,CA9BD,CAgCA,GAAMF,CAAAA,SAAS,CAAGvB,UAAU,CAAC,SAAC0B,KAAD,QAAY,CACvCC,IAAI,CAAE,CACJC,OAAO,CAAE,GADL,CADiC,CAKvCC,KAAK,CAAE,CACLD,OAAO,CAAEF,KAAK,CAACI,OAAN,CAAc,CAAd,CADJ,CACsB;AAC3BC,SAAS,CAAE,QAFN,CAGLC,KAAK,CAAEN,KAAK,CAACO,OAAN,CAAcC,IAAd,CAAmBC,SAHrB,CALgC,CAAZ,EAAD,CAA5B,CAYA,cAAed,CAAAA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { List, ListItem, ListItemText, Grid } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\n\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { onleaves_url } from \"../utils/constants\";\r\n//\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From Data\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Data\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n];\r\n\r\n// export const onleavesdatastate = atom({\r\n//   key: \"onleavesdatastate\",\r\n//   default: [],\r\n// });\r\n\r\n// const fetchOnLeavesDetails = selector({\r\n//   key: \"onLeaveDetailsSelector\",\r\n//   get: async ({ get }) => {\r\n//     try {\r\n//       const { data } = await axios.get(onleaves_url);\r\n//       const onleavesdata = data;\r\n\r\n//       return data;\r\n//     } catch (error) {\r\n//       throw error;\r\n//     }\r\n//   },\r\n// });\r\n\r\nconst loadUsers = async () => {\r\n  const { data } = await axios.get(onleaves_url);\r\n  return data;\r\n};\r\n//   await fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n//     .then((res) => (res.ok ? res : Promise.reject(res)))\r\n//     .then((res) => res.json());\r\n\r\nconst OnLeavesView = () => {\r\n  const classes = useStyles();\r\n  //const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [setUserdata] = useState([]);\r\n\r\n  //const [userdata, setUserdata] = useRecoilState(userdatastate);\r\n  //const onLeavesDetails = useRecoilValueLoadable(fetchOnLeavesDetails);\r\n  \r\n  \r\n  return (\r\n    <List className={classes.roow}>\r\n      <Grid container direction=\"row\">\r\n        {/* {data.map((row) => {\r\n          return (\r\n            <ListItem key={row.id}>\r\n              <Grid item sm={4} align=\"center\">\r\n                <ListItemText>{row.name}</ListItemText>\r\n              </Grid>\r\n              <Grid item sm={4} align=\"center\">\r\n                <ListItemText>{row.from_date}</ListItemText>\r\n              </Grid>\r\n              <Grid item sm={4} align=\"center\">\r\n                <ListItemText>{row.to_date}</ListItemText>\r\n              </Grid>\r\n            </ListItem>\r\n          );\r\n        })} */}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"2\",\r\n  },\r\n\r\n  paper: {\r\n    padding: theme.spacing(1), //grid padding\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default OnLeavesView;\r\n"]},"metadata":{},"sourceType":"module"}