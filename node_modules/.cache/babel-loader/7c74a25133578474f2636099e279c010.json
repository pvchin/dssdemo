{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\LeaveTableStaff.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\nimport { Box, Heading, Grid, GridItem, HStack, SimpleGrid } from \"@chakra-ui/react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useRecoilState } from \"recoil\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport LeaveForm from \"./LeaveForm\";\nimport { CustomDialog } from \"../helpers/CustomDialog\";\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\nimport CustomAlertDialog from \"../helpers/CustomAlertDialog\";\nimport { useLeavesContext } from \"../context/leaves_context\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useLeaves } from \"./leaves/useLeaves\";\nimport { useAddLeaves } from \"./leaves/useAddLeaves\";\nimport { useDeleteLeaves } from \"./leaves/useDeleteLeaves\";\nimport { useUpdateLeaves } from \"./leaves/useUpdateLeaves\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initial_form = {\n  name: \"\",\n  to_date: \"\",\n  from_date: \"\",\n  reason: \"\",\n  status: \"Pending\",\n  no_of_days: 0,\n  leave_bal: 0\n};\nconst columns = [{\n  title: \"Name\",\n  field: \"name\",\n  editable: \"never\"\n}, {\n  title: \"From Date\",\n  field: \"from_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editable: \"never\"\n}, {\n  title: \"To Date\",\n  field: \"to_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editable: \"never\"\n}, {\n  title: \"Leave Balance\",\n  field: \"leave_bal\",\n  type: \"numeric\",\n  editable: \"never\"\n}, {\n  title: \"No of Days\",\n  field: \"no_of_days\",\n  type: \"numeric\",\n  editable: \"never\"\n}, {\n  title: \"Reason\",\n  field: \"reason\",\n  editable: \"never\"\n}, {\n  title: \"Status\",\n  field: \"status\",\n  editComponent: props => /*#__PURE__*/_jsxDEV(TextField //defaultValue={props.value || null}\n  , {\n    onChange: e => props.onChange(e.target.value),\n    style: {\n      width: 100\n    },\n    value: props.value,\n    select: true,\n    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Pending\",\n      children: \"Pending\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Approved\",\n      children: \"Approved\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Rejected\",\n      children: \"Rejected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Cancel\",\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 7\n  }, this)\n}]; // const AlertBox = ({ isOpen, onClose, cancelRef, heading, children }) => {\n//   return (\n//     <AlertDialog\n//       isOpen={isOpen}\n//       leastDestructiveRef={cancelRef}\n//       onClose={onClose}\n//     >\n//       <AlertDialogOverlay>\n//         <AlertDialogContent>\n//           <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n//             {heading}\n//           </AlertDialogHeader>\n//           <AlertDialogBody>{children}</AlertDialogBody>\n//           <AlertDialogFooter>\n//             <Button ref={cancelRef} onClick={onClose}>\n//               Cancel\n//             </Button>\n//             <Button colorScheme=\"red\" onClick={onClose} ml={3}>\n//               Delete\n//             </Button>\n//           </AlertDialogFooter>\n//         </AlertDialogContent>\n//       </AlertDialogOverlay>\n//     </AlertDialog>\n//   );\n// };\n\nexport default function LeaveTableStaff() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    leaves,\n    filter,\n    setFilter,\n    setLeaveId\n  } = useLeaves();\n  const updateLeaves = useUpdateLeaves();\n  const addLeaves = useAddLeaves();\n  const deleteLeaves = useDeleteLeaves();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const [alertSuccess, setAlertSuccess] = useState(false);\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const [formdata, setFormdata] = useState(initial_form);\n  const {\n    editEmployeeID\n  } = useEmployeesContext();\n  const {\n    editLeaveID,\n    setEditLeaveID,\n    setIsLeaveEditingOn,\n    setIsLeaveEditingOff\n  } = useLeavesContext();\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const onClose = () => setIsOpen(false);\n\n  const cancelRef = React.useRef();\n  useEffect(() => {\n    setFilter(loginLevel.loginUserId);\n  }, []);\n\n  const update_Leave = async data => {\n    const {\n      id\n    } = data;\n    setFormdata({ ...data\n    });\n    setFormdata({ ...data\n    });\n    setEditLeaveID(id);\n    setIsLeaveEditingOn();\n    handleDialogOpen(); //history.push(\"/singleleave\");\n  };\n\n  const add_Leave = async data => {\n    // const { id } = data;\n    setEditLeaveID(\"\");\n    setFormdata(initial_form);\n    setIsLeaveEditingOff();\n    handleDialogOpen(); //history.push(\"/singleleave\");\n  };\n\n  const delete_Leave = data => {\n    const {\n      id\n    } = data;\n    setEditLeaveID(id);\n    setIsAlertOpen(true); //handleAlertOpen();\n    //deleteLeave(id);\n    //loadLeaves();\n  };\n\n  const handleDialogOpen = () => {\n    setIsDialogOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setIsDialogOpen(false); // if (isLeaveEditing) {\n    //   loadEmpLeaves(editEmployeeID);\n    // }\n  };\n\n  const handleAlertOpen = () => {\n    setIsAlertOpen(true);\n  };\n\n  const handleAlertClose = () => {\n    setIsAlertOpen(false);\n  };\n\n  const handleOnDeleteConfirm = () => {\n    const id = editLeaveID;\n    deleteLeaves(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        p: 2,\n        h: \"100px\",\n        templateRows: \"repeat(2, 1fr)\",\n        templateColumns: \"repeat(10, 1fr)\",\n        gap: 6,\n        border: \"1px solid blue\",\n        bg: \"gray.200\",\n        children: [/*#__PURE__*/_jsxDEV(GridItem, {\n          colSpan: 2,\n          bg: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          colSpan: 2,\n          bg: \"papayawhip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          colSpan: 2,\n          bg: \"papayawhip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          colSpan: 2,\n          bg: \"papayawhip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          colSpan: 2,\n          bg: \"papayawhip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          colSpan: 2,\n          bg: \"white\",\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          colSpan: 2,\n          bg: \"white\",\n          children: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          colSpan: 2,\n          bg: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          colSpan: 2,\n          bg: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          colSpan: 2,\n          bg: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      maxW: \"100%\",\n      pt: 5,\n      h: 600,\n      overflow: \"scroll\",\n      children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: leaves,\n        title: \"Leave Application\",\n        icons: {\n          Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this),\n          Edit: props => /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 30\n          }, this),\n          Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 32\n          }, this),\n          Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 31\n          }, this),\n          Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 31\n          }, this),\n          Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 32\n          }, this),\n          ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 37\n          }, this)\n        } // editable={{\n        //   isEditable: (rowData) => rowData.status === \"Pending\",\n        //   isDeletable: (rowData) => rowData.status === \"Pending\",\n        //   onRowAdd: (newData) =>\n        //     new Promise((resolve, reject) => {\n        //       setTimeout(() => {\n        //         add_Leave(newData);\n        //         resolve();\n        //       }, 1000);\n        //     }),\n        //   onRowUpdate: (newData, oldData) =>\n        //     new Promise((resolve, reject) => {\n        //       setTimeout(() => {\n        //         update_Leave(newData);\n        //         resolve();\n        //       }, 1000);\n        //     }),\n        //   onRowDelete: (oldData) =>\n        //     new Promise((resolve, reject) => {\n        //       setTimeout(() => {\n        //         delete_Leave(oldData);\n        //         resolve();\n        //       }, 1000);\n        //     }),\n        // }}\n        ,\n        actions: [rowData => ({\n          disabled: rowData.status !== \"Pending\",\n          icon: \"edit\",\n          tooltip: \"Edit Record\",\n          onClick: (event, rowData) => {\n            update_Leave(rowData);\n          }\n        }), rowData => ({\n          disabled: rowData.status !== \"Pending\",\n          icon: \"delete\",\n          tooltip: \"Delete Record\",\n          onClick: (event, rowData) => {\n            delete_Leave(rowData);\n          }\n        }), {\n          icon: \"add\",\n          tooltip: \"Add Record\",\n          isFreeAction: true,\n          onClick: (event, rowData) => {\n            add_Leave(rowData);\n          }\n        }],\n        options: {\n          filtering: true,\n          paging: false,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"primary\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n        isOpen: isDialogOpen,\n        handleClose: handleDialogClose,\n        title: \"\",\n        showButton: true,\n        isFullscree: false,\n        children: /*#__PURE__*/_jsxDEV(LeaveForm, {\n          formdata: formdata,\n          setFormdata: setFormdata,\n          handleDialogClose: handleDialogClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomAlertDialog, {\n        isOpen: isAlertOpen,\n        cancelRef: cancelRef,\n        onClose: handleAlertClose,\n        onConfirm: handleOnDeleteConfirm,\n        title: \"DELETE\",\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          size: \"sm\",\n          children: \"Are you sure you want to delete ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LeaveTableStaff, \"zcDhKSwd986KRvNVz8RlU9AbwOk=\", false, function () {\n  return [useStyles, useLeaves, useUpdateLeaves, useAddLeaves, useDeleteLeaves, useRecoilState, useEmployeesContext, useLeavesContext];\n});\n\n_c = LeaveTableStaff;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"LeaveTableStaff\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/LeaveTableStaff.js"],"names":["React","useState","useEffect","MaterialTable","MTableToolbar","TextField","MenuItem","Button","Icon","Box","Heading","Grid","GridItem","HStack","SimpleGrid","makeStyles","useRecoilState","loginLevelState","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","LeaveForm","CustomDialog","AlertDialogBox","CustomAlertDialog","useLeavesContext","useEmployeesContext","useLeaves","useAddLeaves","useDeleteLeaves","useUpdateLeaves","initial_form","name","to_date","from_date","reason","status","no_of_days","leave_bal","columns","title","field","editable","type","dateSetting","locale","editComponent","props","e","onChange","target","value","width","LeaveTableStaff","classes","useStyles","leaves","filter","setFilter","setLeaveId","updateLeaves","addLeaves","deleteLeaves","isDialogOpen","setIsDialogOpen","isAlertOpen","setIsAlertOpen","alertSuccess","setAlertSuccess","loginLevel","setLoginLevel","formdata","setFormdata","editEmployeeID","editLeaveID","setEditLeaveID","setIsLeaveEditingOn","setIsLeaveEditingOff","isOpen","setIsOpen","onClose","cancelRef","useRef","loginUserId","update_Leave","data","id","handleDialogOpen","add_Leave","delete_Leave","handleDialogClose","handleAlertOpen","handleAlertClose","handleOnDeleteConfirm","root","Add","Edit","Delete","Clear","Check","Search","ResetSearch","rowData","disabled","icon","tooltip","onClick","event","isFreeAction","filtering","paging","headerStyle","backgroundColor","color","showTitle","Toolbar","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Grid,\r\n  GridItem,\r\n  HStack,\r\n  SimpleGrid,\r\n} from \"@chakra-ui/react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport CustomAlertDialog from \"../helpers/CustomAlertDialog\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeaves } from \"./leaves/useLeaves\";\r\nimport { useAddLeaves } from \"./leaves/useAddLeaves\";\r\nimport { useDeleteLeaves } from \"./leaves/useDeleteLeaves\";\r\nimport { useUpdateLeaves } from \"./leaves/useUpdateLeaves\";\r\n\r\nconst initial_form = {\r\n  name: \"\",\r\n  to_date: \"\",\r\n  from_date: \"\",\r\n  reason: \"\",\r\n  status: \"Pending\",\r\n  no_of_days: 0,\r\n  leave_bal: 0,\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Leave Balance\",\r\n    field: \"leave_bal\",\r\n    type: \"numeric\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"No of Days\",\r\n    field: \"no_of_days\",\r\n    type: \"numeric\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Reason\",\r\n    field: \"reason\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approved\">Approved</MenuItem>\r\n        <MenuItem value=\"Rejected\">Rejected</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\n// const AlertBox = ({ isOpen, onClose, cancelRef, heading, children }) => {\r\n//   return (\r\n//     <AlertDialog\r\n//       isOpen={isOpen}\r\n//       leastDestructiveRef={cancelRef}\r\n//       onClose={onClose}\r\n//     >\r\n//       <AlertDialogOverlay>\r\n//         <AlertDialogContent>\r\n//           <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n//             {heading}\r\n//           </AlertDialogHeader>\r\n\r\n//           <AlertDialogBody>{children}</AlertDialogBody>\r\n\r\n//           <AlertDialogFooter>\r\n//             <Button ref={cancelRef} onClick={onClose}>\r\n//               Cancel\r\n//             </Button>\r\n//             <Button colorScheme=\"red\" onClick={onClose} ml={3}>\r\n//               Delete\r\n//             </Button>\r\n//           </AlertDialogFooter>\r\n//         </AlertDialogContent>\r\n//       </AlertDialogOverlay>\r\n//     </AlertDialog>\r\n//   );\r\n// };\r\n\r\nexport default function LeaveTableStaff() {\r\n  const classes = useStyles();\r\n  const { leaves, filter, setFilter, setLeaveId } = useLeaves();\r\n  const updateLeaves = useUpdateLeaves();\r\n  const addLeaves = useAddLeaves();\r\n  const deleteLeaves = useDeleteLeaves();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [alertSuccess, setAlertSuccess] = useState(false);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [formdata, setFormdata] = useState(initial_form);\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    editLeaveID,\r\n    setEditLeaveID,\r\n    setIsLeaveEditingOn,\r\n    setIsLeaveEditingOff,\r\n  } = useLeavesContext();\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const onClose = () => setIsOpen(false);\r\n  const cancelRef = React.useRef();\r\n\r\n  useEffect(() => {\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  const update_Leave = async (data) => {\r\n    const { id } = data;\r\n    setFormdata({ ...data });\r\n    setFormdata({ ...data });\r\n    setEditLeaveID(id);\r\n    setIsLeaveEditingOn();\r\n    handleDialogOpen();\r\n    //history.push(\"/singleleave\");\r\n  };\r\n\r\n  const add_Leave = async (data) => {\r\n    // const { id } = data;\r\n    setEditLeaveID(\"\");\r\n    setFormdata(initial_form);\r\n    setIsLeaveEditingOff();\r\n    handleDialogOpen();\r\n    //history.push(\"/singleleave\");\r\n  };\r\n\r\n  const delete_Leave = (data) => {\r\n    const { id } = data;\r\n    setEditLeaveID(id);\r\n    setIsAlertOpen(true);\r\n    //handleAlertOpen();\r\n    //deleteLeave(id);\r\n    //loadLeaves();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    // if (isLeaveEditing) {\r\n    //   loadEmpLeaves(editEmployeeID);\r\n    // }\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editLeaveID;\r\n    deleteLeaves(id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n      <Box>\r\n        <Grid\r\n          p={2}\r\n          h=\"100px\"\r\n          templateRows=\"repeat(2, 1fr)\"\r\n          templateColumns=\"repeat(10, 1fr)\"\r\n          gap={6}\r\n          border=\"1px solid blue\"\r\n          bg=\"gray.200\"\r\n        >\r\n          <GridItem colSpan={2} bg=\"white\" />\r\n          <GridItem colSpan={2} bg=\"papayawhip\" />\r\n          <GridItem colSpan={2} bg=\"papayawhip\" />\r\n          <GridItem colSpan={2} bg=\"papayawhip\" />\r\n          <GridItem colSpan={2} bg=\"papayawhip\" />\r\n          <GridItem colSpan={2} bg=\"white\">5</GridItem>\r\n          <GridItem colSpan={2} bg=\"white\">6</GridItem>\r\n          <GridItem colSpan={2} bg=\"white\"></GridItem> \r\n          <GridItem colSpan={2} bg=\"white\" />\r\n          <GridItem colSpan={2} bg=\"white\" />\r\n        </Grid>\r\n      </Box>\r\n      <Box maxW=\"100%\" pt={5} h={600} overflow=\"scroll\">\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={leaves}\r\n          title=\"Leave Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   isEditable: (rowData) => rowData.status === \"Pending\",\r\n          //   isDeletable: (rowData) => rowData.status === \"Pending\",\r\n          //   onRowAdd: (newData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         add_Leave(newData);\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         update_Leave(newData);\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          //   onRowDelete: (oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         delete_Leave(oldData);\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          actions={[\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Leave(rowData);\r\n              },\r\n            }),\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Leave(rowData);\r\n              },\r\n            }),\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Leave(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            paging: false,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n        >\r\n          <LeaveForm\r\n            formdata={formdata}\r\n            setFormdata={setFormdata}\r\n            handleDialogClose={handleDialogClose}\r\n          />\r\n        </CustomDialog>\r\n\r\n        <CustomAlertDialog\r\n          isOpen={isAlertOpen}\r\n          cancelRef={cancelRef}\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          title=\"DELETE\"\r\n        >\r\n          <Heading size=\"sm\">Are you sure you want to delete ?</Heading>\r\n        </CustomAlertDialog>\r\n        {/* <AlertBox\r\n          isOpen={isOpen}\r\n          leastDestructiveRef={cancelRef}\r\n          onClose={() => onClose()}\r\n          heading=\"DELETE\"\r\n        >\r\n          <h2>Are you sure you want to delete?</h2>\r\n        </AlertBox> */}\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}