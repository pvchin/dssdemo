{"ast":null,"code":"import _slicedToArray from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import clsx from\"clsx\";import axios from\"axios\";import{useHistory}from\"react-router-dom\";import MaterialTable from\"material-table\";import{Box,Grid,Heading,GridItem,Icon,IconButton,Stack,Spacer}from\"@chakra-ui/react\";import{EditIcon,ViewIcon}from\"@chakra-ui/icons\";import{List,ListItem,ListItemText}from\"@material-ui/core\";import{selector,useRecoilState,useRecoilValueLoadable}from\"recoil\";import{loginLevelState}from\"./data/atomdata\";import{useEmployeesContext}from\"../context/employees_context\";import{useLeavesContext}from\"../context/leaves_context\";import{leaves_url}from\"../utils/constants\";import{useLeaves}from\"./leaves/useLeaves\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var drawerWidth=240;// const fetchExpensesDetails = selector({\n//   key: \"fetchExpensesDetailsSelector\",\n//   get: async ({ get }) => {\n//     try {\n//       const { data } = await axios.get(expenses_url);\n//       const wpexpirydata = data;\n//       return data;\n//     } catch (error) {\n//       throw error;\n//     }\n//   },\n// });\nvar LeaveTableViewStaff=function LeaveTableViewStaff(){var classes=useStyles();var history=useHistory();var fixedHeightPaper=clsx(classes.paper,classes.fixedHeight);var _useLeaves=useLeaves(),leaves=_useLeaves.leaves,filter=_useLeaves.filter,setFilter=_useLeaves.setFilter,setLeaveId=_useLeaves.setLeaveId;var _useRecoilState=useRecoilState(loginLevelState),_useRecoilState2=_slicedToArray(_useRecoilState,2),loginLevel=_useRecoilState2[0],setLoginLevel=_useRecoilState2[1];var _useState=useState([]),_useState2=_slicedToArray(_useState,2),userdata=_useState2[0],setUserdata=_useState2[1];//const [userdata, setUserdata] = useRecoilState(userdatastate);\n//const ExpensesDetails = useRecoilValueLoadable(fetchExpensesDetails);\n//const { state, contents } = ExpensesDetails;\nvar _useEmployeesContext=useEmployeesContext(),editEmployeeID=_useEmployeesContext.editEmployeeID;var _useLeavesContext=useLeavesContext(),leaves_loading=_useLeavesContext.leaves_loading,leaves_error=_useLeavesContext.leaves_error,loadEmpLeaves=_useLeavesContext.loadEmpLeaves;useEffect(function(){setFilter(loginLevel.loginUserId);},[]);return/*#__PURE__*/_jsx(List,{className:classes.root,children:/*#__PURE__*/_jsxs(Grid,{direction:\"row\",children:[/*#__PURE__*/_jsxs(Stack,{direction:\"row\",children:[/*#__PURE__*/_jsx(Heading,{as:\"h4\",size:\"md\",children:\"Leaves Schedule\"}),/*#__PURE__*/_jsx(Spacer,{}),/*#__PURE__*/_jsx(IconButton// variant=\"outline\"\n,{size:\"md\",\"aria-label\":\"Edit\",icon:/*#__PURE__*/_jsx(EditIcon,{}),onClick:function onClick(){return history.push(\"/leave\");}})]}),leaves.filter(function(i){return i.status===\"Pending\";}).map(function(row){return/*#__PURE__*/_jsxs(Grid,{templateColumns:\"repeat(12, 1fr)\",gap:3,p:1,children:[/*#__PURE__*/_jsx(GridItem,{colSpan:3,children:/*#__PURE__*/_jsx(Box,{w:\"100%\",children:row.from_date})}),/*#__PURE__*/_jsx(GridItem,{colSpan:3,children:/*#__PURE__*/_jsx(Box,{w:\"100%\",children:row.to_date})}),/*#__PURE__*/_jsx(GridItem,{colSpan:3,children:/*#__PURE__*/_jsx(Box,{w:\"100%\",children:row.reason})}),/*#__PURE__*/_jsx(GridItem,{colSpan:3,children:/*#__PURE__*/_jsx(Box,{w:\"100%\",children:row.status})})]},row.id);})]})});};var useStyles=makeStyles(function(theme){return{root:{padding:0}};});export default LeaveTableViewStaff;","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/LeaveTableViewStaff.js"],"names":["React","useState","useEffect","makeStyles","clsx","axios","useHistory","MaterialTable","Box","Grid","Heading","GridItem","Icon","IconButton","Stack","Spacer","EditIcon","ViewIcon","List","ListItem","ListItemText","selector","useRecoilState","useRecoilValueLoadable","loginLevelState","useEmployeesContext","useLeavesContext","leaves_url","useLeaves","drawerWidth","LeaveTableViewStaff","classes","useStyles","history","fixedHeightPaper","paper","fixedHeight","leaves","filter","setFilter","setLeaveId","loginLevel","setLoginLevel","userdata","setUserdata","editEmployeeID","leaves_loading","leaves_error","loadEmpLeaves","loginUserId","root","push","i","status","map","row","from_date","to_date","reason","id","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MaterialTable from \"material-table\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Heading,\r\n  GridItem,\r\n  Icon,\r\n  IconButton,\r\n  Stack,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\nimport { EditIcon, ViewIcon } from \"@chakra-ui/icons\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { selector, useRecoilState, useRecoilValueLoadable } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { leaves_url } from \"../utils/constants\";\r\nimport { useLeaves } from \"./leaves/useLeaves\";\r\n\r\nconst drawerWidth = 240;\r\n\r\n// const fetchExpensesDetails = selector({\r\n//   key: \"fetchExpensesDetailsSelector\",\r\n//   get: async ({ get }) => {\r\n//     try {\r\n//       const { data } = await axios.get(expenses_url);\r\n//       const wpexpirydata = data;\r\n\r\n//       return data;\r\n//     } catch (error) {\r\n//       throw error;\r\n//     }\r\n//   },\r\n// });\r\n\r\nconst LeaveTableViewStaff = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { leaves, filter, setFilter, setLeaveId } = useLeaves();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [userdata, setUserdata] = useState([]);\r\n  //const [userdata, setUserdata] = useRecoilState(userdatastate);\r\n  //const ExpensesDetails = useRecoilValueLoadable(fetchExpensesDetails);\r\n  //const { state, contents } = ExpensesDetails;\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const { leaves_loading, leaves_error, loadEmpLeaves } = useLeavesContext();\r\n\r\n  useEffect(() => {\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <Grid direction=\"row\">\r\n        <Stack direction=\"row\">\r\n          <Heading as=\"h4\" size=\"md\">\r\n            Leaves Schedule\r\n          </Heading>\r\n          <Spacer />\r\n          <IconButton\r\n            // variant=\"outline\"\r\n            size=\"md\"\r\n            aria-label=\"Edit\"\r\n            icon={<EditIcon />}\r\n            onClick={() => history.push(\"/leave\")}\r\n          />\r\n        </Stack>\r\n\r\n        {leaves\r\n          .filter((i) => i.status === \"Pending\")\r\n          .map((row) => {\r\n            return (\r\n              <Grid\r\n                key={row.id}\r\n                templateColumns=\"repeat(12, 1fr)\"\r\n                gap={3}\r\n                p={1}\r\n              >\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.from_date}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.to_date}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.reason}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.status}</Box>\r\n                </GridItem>\r\n              </Grid>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default LeaveTableViewStaff;\r\n"]},"metadata":{},"sourceType":"module"}