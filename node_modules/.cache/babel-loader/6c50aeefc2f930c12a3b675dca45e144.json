{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\ExpenseTableViewSummary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box } from \"@chakra-ui/react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport LeaveForm from \"./LeaveForm\";\nimport { CustomDialog } from \"../helpers/CustomDialog\";\nimport { AlertDialog } from \"../helpers/AlertDialogBox\";\nimport { useExpensesStatus } from \"./expenses/useExpensesStatus\";\nimport { useExpensesPeriod } from \"./expenses/useExpensesPeriod\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FILTERSTRING = \"Pending\";\nconst columns = [{\n  title: \"Name\",\n  field: \"name\"\n}, {\n  title: \"Date\",\n  field: \"date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  }\n}, {\n  title: \"Description\",\n  field: \"description\"\n}, {\n  title: \"Amount\",\n  field: \"amount\",\n  type: \"currency\"\n}, {\n  title: \"Status\",\n  field: \"status\"\n}];\nexport default function ExpenseTableView({\n  year,\n  month\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const [totals, setTotals] = useState(0);\n  const [isCalc, setIsCalc] = useState(false);\n  const {\n    loadEmployees\n  } = useEmployeesContext();\n  const {\n    expensesstatus,\n    setExpStatusId\n  } = useExpensesStatus();\n  const {\n    expensesperiod,\n    setExpPeriodYrId,\n    setExpPeriodMthId\n  } = useExpensesPeriod();\n  useEffect(() => {\n    setExpPeriodYrId(year);\n    setExpPeriodMthId(month);\n    setIsCalc(true);\n  }, []);\n  useEffect(() => {\n    if (expensesperiod) {\n      Calc_Totals();\n      setIsCalc(false);\n    }\n  }, [isCalc]);\n\n  const Calc_Totals = () => {\n    const amount = expensesperiod.reduce((acc, r) => {\n      if (r.status === \"Approved\" || r.status === \"Approve\") {\n        return acc + r.amount;\n      } else {\n        return acc;\n      }\n    }, 0);\n    setTotals(amount);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        maxW: \"100%\",\n        pt: \"\",\n        children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n          columns: columns,\n          data: expensesperiod,\n          title: \"Leave Application\",\n          options: {\n            filtering: false,\n            search: false,\n            toolbar: false,\n            paging: false,\n            headerStyle: {\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\n              color: \"white\"\n            },\n            showTitle: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseTableView, \"LBW6YH4bZJOSnFMJZfogdKQS1zc=\", false, function () {\n  return [useStyles, useEmployeesContext, useExpensesStatus, useExpensesPeriod];\n});\n\n_c = ExpenseTableView;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseTableView\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/ExpenseTableViewSummary.js"],"names":["React","useState","useEffect","MaterialTable","TextField","MenuItem","makeStyles","Box","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","LeaveForm","CustomDialog","AlertDialog","useExpensesStatus","useExpensesPeriod","useEmployeesContext","FILTERSTRING","columns","title","field","type","dateSetting","locale","ExpenseTableView","year","month","classes","useStyles","isDialogOpen","setIsDialogOpen","isAlertOpen","setIsAlertOpen","totals","setTotals","isCalc","setIsCalc","loadEmployees","expensesstatus","setExpStatusId","expensesperiod","setExpPeriodYrId","setExpPeriodMthId","Calc_Totals","amount","reduce","acc","r","status","root","maxWidth","paddingTop","filtering","search","toolbar","paging","headerStyle","backgroundColor","color","showTitle","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box} from \"@chakra-ui/react\"\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialogBox\";\r\nimport { useExpensesStatus } from \"./expenses/useExpensesStatus\";\r\nimport { useExpensesPeriod } from \"./expenses/useExpensesPeriod\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n\r\n  { title: \"Description\", field: \"description\" },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function ExpenseTableView({ year, month }) {\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [totals, setTotals] = useState(0);\r\n  const [isCalc, setIsCalc] = useState(false);\r\n  const { loadEmployees } = useEmployeesContext();\r\n  const { expensesstatus, setExpStatusId } = useExpensesStatus();\r\n  const { expensesperiod, setExpPeriodYrId, setExpPeriodMthId } =\r\n    useExpensesPeriod();\r\n\r\n  useEffect(() => {\r\n    setExpPeriodYrId(year);\r\n    setExpPeriodMthId(month);\r\n    setIsCalc(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (expensesperiod) {\r\n      Calc_Totals();\r\n      setIsCalc(false);\r\n    }\r\n  }, [isCalc]);\r\n\r\n  const Calc_Totals = () => {\r\n    const amount = expensesperiod.reduce((acc, r) => {\r\n      if (r.status === \"Approved\" || r.status === \"Approve\") {\r\n        return acc + r.amount;\r\n      } else {\r\n        return acc;\r\n      }\r\n    }, 0);\r\n    setTotals(amount);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <Box maxW=\"100%\" pt=\"\">\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={expensesperiod}\r\n          title=\"Leave Application\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            paging: false,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"white\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n        </Box>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}