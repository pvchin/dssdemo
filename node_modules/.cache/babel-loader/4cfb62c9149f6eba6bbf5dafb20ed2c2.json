{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\AllEmployeesTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Icon } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useCustomToast } from \"../helpers/useCustomToast\";\nimport { useRecoilState } from \"recoil\";\nimport { editEmployeeIdState } from \"./data/atomdata\";\nimport { CustomDialog } from \"../helpers/CustomDialog\";\nimport { AlertDialog } from \"../helpers/AlertDialog\";\nimport EmployeeView from \"./EmployeeView\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useTablesContext } from \"../context/tables_context\";\nimport { useDepartments } from \"./departments/useDepartments\";\nimport { useDesignations } from \"./designations/useDesignations\";\nimport { useEmployees } from \"./employees/useEmployees\";\nimport { useDeleteEmployees } from \"./employees/useDeleteEmployees\";\nimport App from \"../utils/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AllEmployeesTable() {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const toast = useCustomToast();\n  const {\n    designations\n  } = useDesignations();\n  const {\n    departments\n  } = useDepartments();\n  const {\n    employees,\n    setEmployeeId\n  } = useEmployees();\n  const [empId, setEmpId] = useRecoilState(editEmployeeIdState);\n  const deleteEmployees = useDeleteEmployees();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const columns = useMemo(() => [{\n    title: \"Name\",\n    field: \"name\"\n  }, {\n    title: \"IC No\",\n    field: \"ic_no\"\n  }, {\n    title: \"Gender\",\n    field: \"gender\"\n  }, {\n    title: \"Age\",\n    field: \"age\",\n    type: \"numeric\"\n  }, {\n    title: \"Email\",\n    field: \"email\"\n  }]);\n  const {\n    editEmployeeID,\n    employees_loading,\n    deleteEmployee,\n    //loadEmployees,\n    setEditEmployeeID,\n    setIsEditingOn,\n    setIsEditingOff,\n    resetSingleEmployee,\n    resetEmployees,\n    getSingleEmployee\n  } = useEmployeesContext();\n  const {\n    loadDepartments,\n    loadDesignations,\n    resetTables\n  } = useTablesContext(); // useEffect(() => {\n  //   resetEmployees();\n  //   loadEmployees();\n  // }, []);\n\n  const update_Employee = async data => {\n    const {\n      id\n    } = data;\n    resetSingleEmployee();\n    resetEmployees();\n    setEditEmployeeID(id);\n    setIsEditingOn();\n    setEmployeeId(id);\n    history.push(\"/singleemployee\");\n  };\n\n  const add_Employee = async data => {\n    resetSingleEmployee();\n    setEditEmployeeID(\"\");\n    setIsEditingOff(); //handleDialogOpen();\n\n    history.push(\"/singleemployee\");\n  };\n\n  const delete_Employee = data => {\n    const {\n      id\n    } = data;\n    setEditEmployeeID(id);\n    handleAlertOpen(); //deleteEmployee(id);\n    //loadEmployees();\n  };\n\n  const handleDialogOpen = () => {\n    setIsDialogOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setIsDialogOpen(false); //loadEmployees();\n  };\n\n  const handleAlertOpen = () => {\n    setIsAlertOpen(true);\n  };\n\n  const handleAlertClose = () => {\n    setIsAlertOpen(false);\n  };\n\n  const handleOnDeleteConfirm = () => {\n    const id = editEmployeeID;\n    deleteEmployees(id); //loadEmployees();\n  };\n\n  const Reset_PW = () => {\n    employees.forEach(rec => {\n      if (rec.tableData.checked) {\n        try {\n          App.auth().createUserWithEmailAndPassword(rec.email, rec.password);\n        } catch (error) {\n          console.log(error);\n        }\n\n        try {\n          App.auth().sendPasswordResetEmail(rec.email);\n          toast({\n            title: `Reset Password sent to ${rec.email}!`,\n            status: \"success\"\n          });\n        } catch (error) {\n          toast({\n            title: `Error send to  ${rec.email}!`,\n            status: \"warning\"\n          });\n        }\n      }\n    });\n    employees.forEach(d => {\n      if (d.tableData) d.tableData.checked = false;\n    });\n  };\n\n  if (employees_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 12\n    }, this);\n  } else {//console.log(employees);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: employees,\n        title: \"Employees Listing\",\n        icons: {\n          Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this),\n          Edit: props => /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 30\n          }, this),\n          Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 32\n          }, this),\n          Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 31\n          }, this),\n          Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 31\n          }, this),\n          Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 32\n          }, this),\n          ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 37\n          }, this)\n        },\n        actions: [{\n          icon: \"edit\",\n          tooltip: \"Edit Record\",\n          position: \"row\",\n          onClick: (event, rowData) => {\n            update_Employee(rowData);\n          }\n        }, {\n          icon: \"delete\",\n          tooltip: \"Delete Record\",\n          position: \"row\",\n          onClick: (event, rowData) => {\n            delete_Employee(rowData);\n          }\n        }, {\n          icon: \"add\",\n          tooltip: \"Add Record\",\n          isFreeAction: true,\n          onClick: (event, rowData) => {\n            add_Employee(rowData);\n          }\n        }],\n        options: {\n          filtering: true,\n          selection: true,\n          headerStyle: {\n            backgroundColor: \"#DAAD86\",\n            color: \"secondary\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"5px 10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"secondary\",\n                className: classes.button,\n                onClick: Reset_PW,\n                children: [\"Reset PW \", /*#__PURE__*/_jsxDEV(Icon, {\n                  className: classes.rightIcon,\n                  children: \"send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 30\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n        isOpen: isDialogOpen,\n        handleClose: handleDialogClose,\n        title: \"\",\n        showButton: true,\n        isFullscreen: true,\n        isFullwidth: true,\n        children: /*#__PURE__*/_jsxDEV(EmployeeView, {\n          handleDialogClose: handleDialogClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AlertDialog, {\n        handleClose: handleAlertClose,\n        onConfirm: handleOnDeleteConfirm,\n        isOpen: isAlertOpen,\n        title: \"Delete Employee\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Are you sure you want to delete ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AllEmployeesTable, \"u4uXQmh3hENOmz3CuoBCyxDqE4g=\", false, function () {\n  return [useHistory, useStyles, useCustomToast, useDesignations, useDepartments, useEmployees, useRecoilState, useDeleteEmployees, useEmployeesContext, useTablesContext];\n});\n\n_c = AllEmployeesTable;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2)\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"AllEmployeesTable\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/AllEmployeesTable.js"],"names":["React","useState","useEffect","useMemo","MaterialTable","MTableToolbar","useHistory","makeStyles","Button","Icon","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","useCustomToast","useRecoilState","editEmployeeIdState","CustomDialog","AlertDialog","EmployeeView","useEmployeesContext","useTablesContext","useDepartments","useDesignations","useEmployees","useDeleteEmployees","App","AllEmployeesTable","history","classes","useStyles","toast","designations","departments","employees","setEmployeeId","empId","setEmpId","deleteEmployees","isDialogOpen","setIsDialogOpen","isAlertOpen","setIsAlertOpen","columns","title","field","type","editEmployeeID","employees_loading","deleteEmployee","setEditEmployeeID","setIsEditingOn","setIsEditingOff","resetSingleEmployee","resetEmployees","getSingleEmployee","loadDepartments","loadDesignations","resetTables","update_Employee","data","id","push","add_Employee","delete_Employee","handleAlertOpen","handleDialogOpen","handleDialogClose","handleAlertClose","handleOnDeleteConfirm","Reset_PW","forEach","rec","tableData","checked","auth","createUserWithEmailAndPassword","email","password","error","console","log","sendPasswordResetEmail","status","d","root","maxWidth","paddingTop","Add","props","Edit","Delete","Clear","Check","Search","ResetSearch","icon","tooltip","position","onClick","event","rowData","isFreeAction","filtering","selection","headerStyle","backgroundColor","color","showTitle","Toolbar","padding","button","rightIcon","theme","spacing"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Icon } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { editEmployeeIdState } from \"./data/atomdata\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialog\";\r\nimport EmployeeView from \"./EmployeeView\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useDepartments } from \"./departments/useDepartments\";\r\nimport { useDesignations } from \"./designations/useDesignations\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useDeleteEmployees } from \"./employees/useDeleteEmployees\";\r\nimport App from \"../utils/firebase\";\r\n\r\nexport default function AllEmployeesTable() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const { designations } = useDesignations();\r\n  const { departments } = useDepartments();\r\n  const { employees, setEmployeeId } = useEmployees();\r\n  const [empId, setEmpId] = useRecoilState(editEmployeeIdState);\r\n  const deleteEmployees = useDeleteEmployees();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n\r\n  const columns = useMemo(() => [\r\n    {\r\n      title: \"Name\",\r\n      field: \"name\",\r\n    },\r\n    { title: \"IC No\", field: \"ic_no\" },\r\n    { title: \"Gender\", field: \"gender\" },\r\n    { title: \"Age\", field: \"age\", type: \"numeric\" },\r\n    { title: \"Email\", field: \"email\" },\r\n  ]);\r\n\r\n  const {\r\n    editEmployeeID,\r\n    employees_loading,\r\n    deleteEmployee,\r\n    //loadEmployees,\r\n    setEditEmployeeID,\r\n    setIsEditingOn,\r\n    setIsEditingOff,\r\n    resetSingleEmployee,\r\n    resetEmployees,\r\n    getSingleEmployee,\r\n  } = useEmployeesContext();\r\n\r\n  const { loadDepartments, loadDesignations, resetTables } = useTablesContext();\r\n\r\n  // useEffect(() => {\r\n  //   resetEmployees();\r\n  //   loadEmployees();\r\n  // }, []);\r\n\r\n  const update_Employee = async (data) => {\r\n    const { id } = data;\r\n    resetSingleEmployee();\r\n    resetEmployees();\r\n    setEditEmployeeID(id);\r\n    setIsEditingOn();\r\n    setEmployeeId(id);\r\n\r\n    history.push(\"/singleemployee\");\r\n  };\r\n\r\n  const add_Employee = async (data) => {\r\n    resetSingleEmployee();\r\n    setEditEmployeeID(\"\");\r\n    setIsEditingOff();\r\n    //handleDialogOpen();\r\n    history.push(\"/singleemployee\");\r\n  };\r\n\r\n  const delete_Employee = (data) => {\r\n    const { id } = data;\r\n    setEditEmployeeID(id);\r\n    handleAlertOpen();\r\n    //deleteEmployee(id);\r\n    //loadEmployees();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    //loadEmployees();\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editEmployeeID;\r\n    deleteEmployees(id);\r\n    //loadEmployees();\r\n  };\r\n\r\n  const Reset_PW = () => {\r\n    employees.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        try {\r\n\r\n          App.auth().createUserWithEmailAndPassword(rec.email, rec.password);\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n        try {\r\n          App.auth().sendPasswordResetEmail(rec.email);\r\n          toast({\r\n            title: `Reset Password sent to ${rec.email}!`,\r\n            status: \"success\",\r\n          });\r\n        } catch (error) {\r\n          toast({\r\n            title: `Error send to  ${rec.email}!`,\r\n            status: \"warning\",\r\n          });\r\n        }\r\n      }\r\n    });\r\n    employees.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  if (employees_loading) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    //console.log(employees);\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={employees}\r\n          title=\"Employees Listing\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              position: \"row\",\r\n              onClick: (event, rowData) => {\r\n                update_Employee(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              position: \"row\",\r\n              onClick: (event, rowData) => {\r\n                delete_Employee(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Employee(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            selection: true,\r\n            headerStyle: {\r\n              backgroundColor: \"#DAAD86\",\r\n              color: \"secondary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Reset_PW}\r\n                  >\r\n                    Reset PW <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={true}\r\n        >\r\n          <EmployeeView handleDialogClose={handleDialogClose} />\r\n        </CustomDialog>\r\n\r\n        <AlertDialog\r\n          handleClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Employee\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}