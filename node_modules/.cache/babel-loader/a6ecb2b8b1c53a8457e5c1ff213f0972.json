{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { dailyallowsdetls_url } from \"../../utils/constants\";\nimport { filterByEmpId } from \"./utils\";\nimport axios from \"axios\";\nimport { queryKeys } from \"../react-query/constants\";\n\nasync function getDailyAllowsDetls(dailyAllowsDetlsId, dailyAllowsDetlsPeriod) {\n  const {\n    data\n  } = await axios.get(`${dailyallowsdetls_url}?em=${dailyAllowsDetlsId}&fv=`); //const { data } = await axios.get(`${dailyallowsdetls_url}`);\n\n  return data;\n}\n\nexport function useDailyAllowsDetls(empid) {\n  _s();\n\n  const [dailyAllowsDetlsfilter, setDailyAllowsDetlsFilter] = useState(\"all\");\n  const [dailyAllowsDetlsId, setDailyAllowsDetlsId] = useState(\"\");\n  const [dailyAllowsDetlsPeriod, setDailyAllowsDetlsPeriod] = useState(\"\");\n  const selectFn = useCallback(unfiltered => filterByEmpId(unfiltered, dailyAllowsDetlsfilter), [dailyAllowsDetlsfilter]);\n  const fallback = [];\n  const {\n    data: dailyallowsdetls = fallback\n  } = useQuery([queryKeys.leaves, dailyAllowsDetlsId, dailyAllowsDetlsPeriod], //queryKeys.dailyallowsdetls,\n  () => getDailyAllowsDetls(dailyAllowsDetlsId, dailyAllowsDetlsPeriod), {\n    select: dailyAllowsDetlsfilter !== \"all\" ? selectFn : undefined\n  });\n  return {\n    dailyallowsdetls,\n    dailyAllowsDetlsfilter,\n    setDailyAllowsDetlsFilter,\n    setDailyAllowsDetlsId,\n    setDailyAllowsDetlsPeriod\n  };\n}\n\n_s(useDailyAllowsDetls, \"HTuzbc3UfuaFlVUHxnM95sIEh+k=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/dailyallowsdetls/useDailyAllowsDetls.js"],"names":["useState","useCallback","useQuery","dailyallowsdetls_url","filterByEmpId","axios","queryKeys","getDailyAllowsDetls","dailyAllowsDetlsId","dailyAllowsDetlsPeriod","data","get","useDailyAllowsDetls","empid","dailyAllowsDetlsfilter","setDailyAllowsDetlsFilter","setDailyAllowsDetlsId","setDailyAllowsDetlsPeriod","selectFn","unfiltered","fallback","dailyallowsdetls","leaves","select","undefined"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,oBAAT,QAAqC,uBAArC;AACA,SAASC,aAAT,QAA8B,SAA9B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,0BAA1B;;AAEA,eAAeC,mBAAf,CAAmCC,kBAAnC,EAAuDC,sBAAvD,EAA+E;AAC7E,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAML,KAAK,CAACM,GAAN,CAAW,GAAER,oBAAqB,OAAMK,kBAAmB,MAA3D,CAAvB,CAD6E,CAE7E;;AACA,SAAOE,IAAP;AACD;;AAED,OAAO,SAASE,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AACzC,QAAM,CAACC,sBAAD,EAAyBC,yBAAzB,IAAsDf,QAAQ,CAAC,KAAD,CAApE;AACA,QAAM,CAACQ,kBAAD,EAAqBQ,qBAArB,IAA8ChB,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACS,sBAAD,EAAyBQ,yBAAzB,IAAsDjB,QAAQ,CAAC,EAAD,CAApE;AAEA,QAAMkB,QAAQ,GAAGjB,WAAW,CACzBkB,UAAD,IAAgBf,aAAa,CAACe,UAAD,EAAaL,sBAAb,CADH,EAE1B,CAACA,sBAAD,CAF0B,CAA5B;AAKA,QAAMM,QAAQ,GAAG,EAAjB;AACA,QAAM;AAAEV,IAAAA,IAAI,EAAEW,gBAAgB,GAAGD;AAA3B,MAAwClB,QAAQ,CACpD,CAACI,SAAS,CAACgB,MAAX,EAAmBd,kBAAnB,EAAuCC,sBAAvC,CADoD,EAEpD;AACA,QAAMF,mBAAmB,CAACC,kBAAD,EAAqBC,sBAArB,CAH2B,EAIpD;AACEc,IAAAA,MAAM,EAAET,sBAAsB,KAAK,KAA3B,GAAmCI,QAAnC,GAA8CM;AADxD,GAJoD,CAAtD;AASA,SAAO;AACLH,IAAAA,gBADK;AAELP,IAAAA,sBAFK;AAGLC,IAAAA,yBAHK;AAILC,IAAAA,qBAJK;AAKLC,IAAAA;AALK,GAAP;AAOD;;GA3BeL,mB;UAWgCV,Q","sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { dailyallowsdetls_url } from \"../../utils/constants\";\r\nimport { filterByEmpId } from \"./utils\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getDailyAllowsDetls(dailyAllowsDetlsId, dailyAllowsDetlsPeriod) {\r\n  const { data } = await axios.get(`${dailyallowsdetls_url}?em=${dailyAllowsDetlsId}&fv=`);\r\n  //const { data } = await axios.get(`${dailyallowsdetls_url}`);\r\n  return data;\r\n}\r\n\r\nexport function useDailyAllowsDetls(empid) {\r\n  const [dailyAllowsDetlsfilter, setDailyAllowsDetlsFilter] = useState(\"all\");\r\n  const [dailyAllowsDetlsId, setDailyAllowsDetlsId] = useState(\"\");\r\n  const [dailyAllowsDetlsPeriod, setDailyAllowsDetlsPeriod] = useState(\"\");\r\n\r\n  const selectFn = useCallback(\r\n    (unfiltered) => filterByEmpId(unfiltered, dailyAllowsDetlsfilter),\r\n    [dailyAllowsDetlsfilter]\r\n  );\r\n\r\n  const fallback = [];\r\n  const { data: dailyallowsdetls = fallback } = useQuery(\r\n    [queryKeys.leaves, dailyAllowsDetlsId, dailyAllowsDetlsPeriod ],\r\n    //queryKeys.dailyallowsdetls,\r\n    () => getDailyAllowsDetls(dailyAllowsDetlsId, dailyAllowsDetlsPeriod),\r\n    {\r\n      select: dailyAllowsDetlsfilter !== \"all\" ? selectFn : undefined,\r\n    }\r\n  );\r\n\r\n  return {\r\n    dailyallowsdetls,\r\n    dailyAllowsDetlsfilter,\r\n    setDailyAllowsDetlsFilter,\r\n    setDailyAllowsDetlsId,\r\n    setDailyAllowsDetlsPeriod,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}