{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect, useReducer } from \"react\";\nimport getFirebase from \"../utils/firebase\";\nimport axios from \"axios\";\nimport reducer from \"../reducers/expenses_reducer\";\nimport { expenses_url } from \"../utils/constants\";\nimport \"../actions\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport const AuthProvider = ({\n  children\n}) => {// const firebaseInstance = getFirebase();\n  // const [user, setUser] = useState(firebase.User || null);\n  // const [loadingAuthState, setLoadingAuthState] = useState(true);\n  // useEffect(() => {\n  //   const user = firebaseInstance\n  //     .auth()\n  //     .signInWithEmailAndPassword(email, password);\n  //   setUser(user);\n  //   setLoadingAuthState(false);\n  // }, []);\n  // return (\n  //   <AuthContext.Provider value={(user, setUser, loadingAuthState)}>\n  //     {children}\n  //   </AuthContext.Provider>\n  // );\n};\n_c = AuthProvider;\nexport const useAuthContext = () => {\n  _s();\n\n  return useContext(AuthContext);\n};\n\n_s(useAuthContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/context/auth_context.js"],"names":["React","useContext","useState","useEffect","useReducer","getFirebase","axios","reducer","expenses_url","AuthContext","createContext","AuthProvider","children","useAuthContext"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,EAAiDC,UAAjD,QAAmE,OAAnE;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AAEA,OAAe,YAAf;AAEA,MAAMC,WAAW,gBAAGT,KAAK,CAACU,aAAN,EAApB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB,CAC5C;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACD,CAnBM;KAAMD,Y;AAqBb,OAAO,MAAME,cAAc,GAAG,MAAM;AAAA;;AAClC,SAAOZ,UAAU,CAACQ,WAAD,CAAjB;AACD,CAFM;;GAAMI,c","sourcesContent":["import React, { useContext, useState, useEffect, useReducer } from \"react\";\r\nimport getFirebase from \"../utils/firebase\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/expenses_reducer\";\r\nimport { expenses_url } from \"../utils/constants\";\r\n\r\nimport {} from \"../actions\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  // const firebaseInstance = getFirebase();\r\n  // const [user, setUser] = useState(firebase.User || null);\r\n  // const [loadingAuthState, setLoadingAuthState] = useState(true);\r\n\r\n  // useEffect(() => {\r\n  //   const user = firebaseInstance\r\n  //     .auth()\r\n  //     .signInWithEmailAndPassword(email, password);\r\n\r\n  //   setUser(user);\r\n  //   setLoadingAuthState(false);\r\n  // }, []);\r\n\r\n  // return (\r\n  //   <AuthContext.Provider value={(user, setUser, loadingAuthState)}>\r\n  //     {children}\r\n  //   </AuthContext.Provider>\r\n  // );\r\n};\r\n\r\nexport const useAuthContext = () => {\r\n  return useContext(AuthContext);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}