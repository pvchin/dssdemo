{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\dss\\\\src\\\\components\\\\AssetForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Heading, Divider, Grid, GridItem, HStack, Select, SimpleGrid, Text, Modal, ModalOverlay, ModalContent //ModalHeader,\n//ModalFooter,\n, ModalBody, ModalCloseButton, Tabs, TabList, TabPanels, Tab, TabPanel, useDisclosure } from \"@chakra-ui/react\";\nimport { useRecoilState } from \"recoil\";\nimport * as emailjs from \"emailjs-com\";\nimport QRCode from \"react-qr-code\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useExpensesContext } from \"../context/expenses_context\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useCustomToast } from \"../helpers/useCustomToast\";\nimport { useAssets } from \"./assets/useAssets\";\nimport { useAddAsset } from \"./assets/useAddAsset\";\nimport { useDeleteAsset } from \"./assets/useDeleteAsset\";\nimport { useUpdateAsset } from \"./assets/useUpdateAsset\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\nconst TEMPLATE_ID = \"template_1y8odlq\";\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\nconst initial_values = {\n  name: \"\",\n  date: \"\",\n  purchased_date: \"\",\n  purchased_from: \"\",\n  description: \"\",\n  remark: \"\",\n  status: \"Pending\",\n  amount: 0\n};\n\nconst ExpenseForm = ({\n  formdata,\n  setFormdata,\n  handleDialogClose\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const toast = useCustomToast();\n  const {\n    assets\n  } = useAssets();\n  const updateAssets = useUpdateAsset();\n  const addAssets = useAddAsset();\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const {\n    isExpenseEditing,\n    editExpenseID\n  } = useExpensesContext();\n  const {\n    handleSubmit,\n    control\n  } = useForm();\n\n  const handleSentEmail = data => {\n    const {\n      date\n    } = data; //console.log(\"expense form\", loginLevel);\n\n    var emaildata = {\n      to_name: loginLevel.loginUser,\n      to_email: loginLevel.loginEmail,\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\n      cc_to: loginLevel.reporting_email\n    };\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(function (response) {\n      console.log(response.status, response.text);\n      toast({\n        title: `Email has sent successfully to ${emaildata.to_email}!`,\n        status: \"success\"\n      });\n    }, function (err) {\n      console.log(err);\n      toast({\n        title: `Email has fail to send to ${emaildata.to_email}!`,\n        status: \"warning\"\n      });\n    });\n  };\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n\n    if (isExpenseEditing) {\n      updateAssets({\n        id: editExpenseID,\n        ...data\n      });\n    } else {\n      addAssets({\n        empid: loginLevel.loginUserId,\n        ...data\n      });\n      handleSentEmail(data);\n    }\n\n    handleDialogClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h3\",\n        children: \"ASSET ITEM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(SimpleGrid, {\n          children: /*#__PURE__*/_jsxDEV(Tabs, {\n            children: [/*#__PURE__*/_jsxDEV(TabList, {\n              children: [/*#__PURE__*/_jsxDEV(Tab, {\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                children: \"History\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TabPanels, {\n              children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: handleSubmit(onSubmit),\n                  children: [/*#__PURE__*/_jsxDEV(HStack, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(Controller, {\n                        name: \"itemno\",\n                        control: control,\n                        defaultValue: formdata.itemno,\n                        render: ({\n                          field: {\n                            onChange,\n                            value\n                          },\n                          fieldState: {\n                            error\n                          }\n                        }) => {\n                          return /*#__PURE__*/_jsxDEV(TextField, {\n                            label: \"Asset No\",\n                            id: \"margin-normal3\",\n                            name: \"assetno\",\n                            defaultValue: formdata.assetno,\n                            className: classes.textField,\n                            onChange: onChange,\n                            error: !!error,\n                            helperText: error ? error.message : null\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 136,\n                            columnNumber: 31\n                          }, this);\n                        } // rules={{ required: \"Reason is required\" }}\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 127,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(QRCode, {\n                        value: formdata.assetno,\n                        size: \"50\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 152,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Controller, {\n                      name: \"desp\",\n                      control: control,\n                      defaultValue: formdata.itemno,\n                      render: ({\n                        field: {\n                          onChange,\n                          value\n                        },\n                        fieldState: {\n                          error\n                        }\n                      }) => {\n                        return /*#__PURE__*/_jsxDEV(TextField, {\n                          label: \"Description\",\n                          id: \"margin-normal3\",\n                          name: \"desp\",\n                          defaultValue: formdata.itemno,\n                          className: classes.textField,\n                          onChange: onChange,\n                          error: !!error,\n                          helperText: error ? error.message : null\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 165,\n                          columnNumber: 29\n                        }, this);\n                      } // rules={{ required: \"Reason is required\" }}\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Controller, {\n                      name: \"expiry\",\n                      control: control,\n                      defaultValue: formdata.expiry,\n                      render: ({\n                        field: {\n                          onChange,\n                          value\n                        },\n                        fieldState: {\n                          error\n                        }\n                      }) => {\n                        return /*#__PURE__*/_jsxDEV(TextField, {\n                          label: \"Expiry Date\" //type=\"date\"\n                          ,\n                          id: \"margin-normal2\",\n                          name: \"expiry\",\n                          value: value,\n                          className: classes.textField,\n                          onChange: onChange,\n                          error: !!error,\n                          helperText: error ? error.message : null,\n                          InputLabelProps: {\n                            shrink: true\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 191,\n                          columnNumber: 29\n                        }, this);\n                      } //rules={{ required: \"From Date is required\" }}\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Controller, {\n                      name: \"remark\",\n                      control: control,\n                      defaultValue: formdata.remark,\n                      render: ({\n                        field: {\n                          onChange,\n                          value\n                        },\n                        fieldState: {\n                          error\n                        }\n                      }) => {\n                        return /*#__PURE__*/_jsxDEV(TextField, {\n                          label: \"Remark\",\n                          id: \"margin-normal5\",\n                          name: \"remark\",\n                          defaultValue: formdata.remark,\n                          className: classes.textField,\n                          onChange: onChange,\n                          error: !!error,\n                          helperText: error ? error.message : null\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 221,\n                          columnNumber: 29\n                        }, this);\n                      } // rules={{ required: \"Reason is required\" }}\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Controller, {\n                      name: \"status\",\n                      control: control,\n                      defaultValue: formdata.status,\n                      render: ({\n                        field: {\n                          onChange,\n                          value\n                        },\n                        fieldState: {\n                          error\n                        }\n                      }) => {\n                        return /*#__PURE__*/_jsxDEV(TextField, {\n                          label: \"Status\",\n                          id: \"margin-normal5\",\n                          name: \"status\",\n                          defaultValue: formdata.status,\n                          className: classes.textField,\n                          onChange: onChange,\n                          error: !!error,\n                          helperText: error ? error.message : null\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 246,\n                          columnNumber: 29\n                        }, this);\n                      } // rules={{ required: \"Reason is required\" }}\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      variant: \"contained\",\n                      color: \"primary\",\n                      className: classes.button //onClick={() => handleSubmit(onSubmit)()}\n                      ,\n                      children: [\"Save \", /*#__PURE__*/_jsxDEV(Icon, {\n                        className: classes.rightIcon,\n                        children: \"send\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 270,\n                        columnNumber: 30\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TabPanel, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpenseForm, \"gTD41F4lQfGmJuwva1xkAORA5AU=\", false, function () {\n  return [useStyles, useCustomToast, useAssets, useUpdateAsset, useAddAsset, useRecoilState, useExpensesContext, useForm];\n});\n\n_c = ExpenseForm;\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  }\n}));\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["D:/react-myprojects/dss/src/components/AssetForm.js"],"names":["React","Button","Icon","TextField","Paper","Typography","makeStyles","Box","Heading","Divider","Grid","GridItem","HStack","Select","SimpleGrid","Text","Modal","ModalOverlay","ModalContent","ModalBody","ModalCloseButton","Tabs","TabList","TabPanels","Tab","TabPanel","useDisclosure","useRecoilState","emailjs","QRCode","loginLevelState","MenuItem","useEmployeesContext","useExpensesContext","Controller","useForm","useCustomToast","useAssets","useAddAsset","useDeleteAsset","useUpdateAsset","SERVICE_ID","process","env","REACT_APP_EMAILJS_SERVICEID","TEMPLATE_ID","USER_ID","REACT_APP_EMAILJS_USERID","initial_values","name","date","purchased_date","purchased_from","description","remark","status","amount","ExpenseForm","formdata","setFormdata","handleDialogClose","classes","useStyles","toast","assets","updateAssets","addAssets","loginLevel","setLoginLevel","isExpenseEditing","editExpenseID","handleSubmit","control","handleSentEmail","data","emaildata","to_name","loginUser","to_email","loginEmail","message","cc_to","reporting_email","send","then","response","console","log","text","title","err","onSubmit","e","preventDefault","id","empid","loginUserId","root","itemno","field","onChange","value","fieldState","error","assetno","textField","expiry","shrink","button","rightIcon","theme","margin","spacing","leftIcon","marginRight","marginLeft","iconSmall","fontSize","padding","container","display","flexWrap","width"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Divider,\r\n  Grid,\r\n  GridItem,\r\n  HStack,\r\n  Select,\r\n  SimpleGrid,\r\n  Text,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  //ModalHeader,\r\n  //ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport QRCode from \"react-qr-code\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useAssets } from \"./assets/useAssets\";\r\nimport { useAddAsset } from \"./assets/useAddAsset\"\r\nimport { useDeleteAsset } from \"./assets/useDeleteAsset\";\r\nimport { useUpdateAsset } from \"./assets/useUpdateAsset\"\r\n\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  date: \"\",\r\n  purchased_date: \"\",\r\n  purchased_from: \"\",\r\n  description: \"\",\r\n  remark: \"\",\r\n  status: \"Pending\",\r\n  amount: 0,\r\n};\r\n\r\nconst ExpenseForm = ({ formdata, setFormdata, handleDialogClose }) => {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const { assets } = useAssets();\r\n  const updateAssets = useUpdateAsset();\r\n  const addAssets = useAddAsset();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { isExpenseEditing, editExpenseID } = useExpensesContext();\r\n\r\n  const { handleSubmit, control } = useForm();\r\n\r\n  const handleSentEmail = (data) => {\r\n    const { date } = data;\r\n    //console.log(\"expense form\", loginLevel);\r\n    var emaildata = {\r\n      to_name: loginLevel.loginUser,\r\n      to_email: loginLevel.loginEmail,\r\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\r\n      cc_to: loginLevel.reporting_email,\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const onSubmit = (data, e) => {\r\n    e.preventDefault();\r\n    if (isExpenseEditing) {\r\n      updateAssets({ id: editExpenseID, ...data });\r\n    } else {\r\n      addAssets({ empid: loginLevel.loginUserId, ...data });\r\n      handleSentEmail(data);\r\n    }\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          ASSET ITEM\r\n        </Typography>\r\n        {/* <Typography component=\"p\">Expense Claim Application</Typography> */}\r\n        <Box>\r\n          <SimpleGrid>\r\n            <Tabs>\r\n              <TabList>\r\n                <Tab>Details</Tab>\r\n                <Tab>History</Tab>\r\n              </TabList>\r\n              <TabPanels>\r\n                <TabPanel>\r\n                  <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <HStack>\r\n                      <div>\r\n                        <Controller\r\n                          name=\"itemno\"\r\n                          control={control}\r\n                          defaultValue={formdata.itemno}\r\n                          render={({\r\n                            field: { onChange, value },\r\n                            fieldState: { error },\r\n                          }) => {\r\n                            return (\r\n                              <TextField\r\n                                label=\"Asset No\"\r\n                                id=\"margin-normal3\"\r\n                                name=\"assetno\"\r\n                                defaultValue={formdata.assetno}\r\n                                className={classes.textField}\r\n                                onChange={onChange}\r\n                                error={!!error}\r\n                                helperText={error ? error.message : null}\r\n                              />\r\n                            );\r\n                          }}\r\n                          // rules={{ required: \"Reason is required\" }}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <QRCode value={formdata.assetno} size=\"50\" />\r\n                      </div>\r\n                    </HStack>\r\n                    <div>\r\n                      <Controller\r\n                        name=\"desp\"\r\n                        control={control}\r\n                        defaultValue={formdata.itemno}\r\n                        render={({\r\n                          field: { onChange, value },\r\n                          fieldState: { error },\r\n                        }) => {\r\n                          return (\r\n                            <TextField\r\n                              label=\"Description\"\r\n                              id=\"margin-normal3\"\r\n                              name=\"desp\"\r\n                              defaultValue={formdata.itemno}\r\n                              className={classes.textField}\r\n                              onChange={onChange}\r\n                              error={!!error}\r\n                              helperText={error ? error.message : null}\r\n                            />\r\n                          );\r\n                        }}\r\n                        // rules={{ required: \"Reason is required\" }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div>\r\n                      <Controller\r\n                        name=\"expiry\"\r\n                        control={control}\r\n                        defaultValue={formdata.expiry}\r\n                        render={({\r\n                          field: { onChange, value },\r\n                          fieldState: { error },\r\n                        }) => {\r\n                          return (\r\n                            <TextField\r\n                              label=\"Expiry Date\"\r\n                              //type=\"date\"\r\n                              id=\"margin-normal2\"\r\n                              name=\"expiry\"\r\n                              value={value}\r\n                              className={classes.textField}\r\n                              onChange={onChange}\r\n                              error={!!error}\r\n                              helperText={error ? error.message : null}\r\n                              InputLabelProps={{\r\n                                shrink: true,\r\n                              }}\r\n                            />\r\n                          );\r\n                        }}\r\n                        //rules={{ required: \"From Date is required\" }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div>\r\n                      <Controller\r\n                        name=\"remark\"\r\n                        control={control}\r\n                        defaultValue={formdata.remark}\r\n                        render={({\r\n                          field: { onChange, value },\r\n                          fieldState: { error },\r\n                        }) => {\r\n                          return (\r\n                            <TextField\r\n                              label=\"Remark\"\r\n                              id=\"margin-normal5\"\r\n                              name=\"remark\"\r\n                              defaultValue={formdata.remark}\r\n                              className={classes.textField}\r\n                              onChange={onChange}\r\n                              error={!!error}\r\n                              helperText={error ? error.message : null}\r\n                            />\r\n                          );\r\n                        }}\r\n                        // rules={{ required: \"Reason is required\" }}\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <Controller\r\n                        name=\"status\"\r\n                        control={control}\r\n                        defaultValue={formdata.status}\r\n                        render={({\r\n                          field: { onChange, value },\r\n                          fieldState: { error },\r\n                        }) => {\r\n                          return (\r\n                            <TextField\r\n                              label=\"Status\"\r\n                              id=\"margin-normal5\"\r\n                              name=\"status\"\r\n                              defaultValue={formdata.status}\r\n                              className={classes.textField}\r\n                              onChange={onChange}\r\n                              error={!!error}\r\n                              helperText={error ? error.message : null}\r\n                            />\r\n                          );\r\n                        }}\r\n                        // rules={{ required: \"Reason is required\" }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        //onClick={() => handleSubmit(onSubmit)()}\r\n                      >\r\n                        Save <Icon className={classes.rightIcon}>send</Icon>\r\n                      </Button>\r\n                    </div>\r\n                  </form>\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  \r\n                </TabPanel>\r\n              </TabPanels>\r\n            </Tabs>\r\n          </SimpleGrid>\r\n        </Box>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default ExpenseForm;\r\n"]},"metadata":{},"sourceType":"module"}