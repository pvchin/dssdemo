{"ast":null,"code":"import { Action } from \"../../internal/Action\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { prepareColor } from \"../../internal/utils/prepareColor\";\n/**\n * @description Adds an outline to a transparent image. For examples, see the Image Transformations guide.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nclass EffectOutline extends Action {\n  constructor() {\n    super();\n  }\n  /**\n   * @description\n   * How to apply the outline effect which can be one of the following values:\n   * inner, inner_fill, outer, fill.\n   * @param {string} mode  The type of outline effect. Use the constants defined in Outline.\n   * @return {this}\n   */\n\n\n  mode(mode) {\n    this._mode = mode;\n    return this;\n  }\n  /**\n   * The thickness of the outline in pixels. (Range: 1 to 100, Server default: 5)\n   * @param {number} width\n   * @return {this}\n   */\n\n\n  width(width) {\n    this._width = width;\n    return this;\n  }\n  /**\n   * @description\n   * The level of blur of the outline.\n   * Range: 0 to 2000, Server default: 0\n   * @param {number | string} lvl\n   * @return {this}\n   */\n\n\n  blurLevel(lvl) {\n    this._blurLevel = lvl;\n    return this;\n  }\n  /**\n   * @param {string | Qualifiers.Color} color One of the SDK Color values, string, or rgba: '#fff'\n   * @return {this}\n   */\n\n\n  color(color) {\n    return this.addQualifier(new Qualifier('co', prepareColor(color)));\n  }\n\n  prepareQualifiers() {\n    this.addQualifier(new Qualifier('e', new QualifierValue(['outline', this._mode, this._width, this._blurLevel]).setDelimiter(':')));\n  }\n\n}\n\nexport { EffectOutline };","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/actions/effect/outline.js"],"names":["Action","QualifierValue","Qualifier","prepareColor","EffectOutline","constructor","mode","_mode","width","_width","blurLevel","lvl","_blurLevel","color","addQualifier","prepareQualifiers","setDelimiter"],"mappings":"AAAA,SAASA,MAAT,QAAuB,uBAAvB;AACA,SAASC,cAAT,QAA+B,yCAA/B;AACA,SAASC,SAAT,QAA0B,oCAA1B;AACA,SAASC,YAAT,QAA6B,mCAA7B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,aAAN,SAA4BJ,MAA5B,CAAmC;AAC/BK,EAAAA,WAAW,GAAG;AACV;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIC,EAAAA,IAAI,CAACA,IAAD,EAAO;AACP,SAAKC,KAAL,GAAaD,IAAb;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIE,EAAAA,KAAK,CAACA,KAAD,EAAQ;AACT,SAAKC,MAAL,GAAcD,KAAd;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIE,EAAAA,SAAS,CAACC,GAAD,EAAM;AACX,SAAKC,UAAL,GAAkBD,GAAlB;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIE,EAAAA,KAAK,CAACA,KAAD,EAAQ;AACT,WAAO,KAAKC,YAAL,CAAkB,IAAIZ,SAAJ,CAAc,IAAd,EAAoBC,YAAY,CAACU,KAAD,CAAhC,CAAlB,CAAP;AACH;;AACDE,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,YAAL,CAAkB,IAAIZ,SAAJ,CAAc,GAAd,EAAmB,IAAID,cAAJ,CAAmB,CAAC,SAAD,EAAY,KAAKM,KAAjB,EAAwB,KAAKE,MAA7B,EAAqC,KAAKG,UAA1C,CAAnB,EAA0EI,YAA1E,CAAuF,GAAvF,CAAnB,CAAlB;AACH;;AA5C8B;;AA8CnC,SAASZ,aAAT","sourcesContent":["import { Action } from \"../../internal/Action\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { prepareColor } from \"../../internal/utils/prepareColor\";\n/**\n * @description Adds an outline to a transparent image. For examples, see the Image Transformations guide.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass EffectOutline extends Action {\n    constructor() {\n        super();\n    }\n    /**\n     * @description\n     * How to apply the outline effect which can be one of the following values:\n     * inner, inner_fill, outer, fill.\n     * @param {string} mode  The type of outline effect. Use the constants defined in Outline.\n     * @return {this}\n     */\n    mode(mode) {\n        this._mode = mode;\n        return this;\n    }\n    /**\n     * The thickness of the outline in pixels. (Range: 1 to 100, Server default: 5)\n     * @param {number} width\n     * @return {this}\n     */\n    width(width) {\n        this._width = width;\n        return this;\n    }\n    /**\n     * @description\n     * The level of blur of the outline.\n     * Range: 0 to 2000, Server default: 0\n     * @param {number | string} lvl\n     * @return {this}\n     */\n    blurLevel(lvl) {\n        this._blurLevel = lvl;\n        return this;\n    }\n    /**\n     * @param {string | Qualifiers.Color} color One of the SDK Color values, string, or rgba: '#fff'\n     * @return {this}\n     */\n    color(color) {\n        return this.addQualifier(new Qualifier('co', prepareColor(color)));\n    }\n    prepareQualifiers() {\n        this.addQualifier(new Qualifier('e', new QualifierValue(['outline', this._mode, this._width, this._blurLevel]).setDelimiter(':')));\n    }\n}\nexport { EffectOutline };\n"]},"metadata":{},"sourceType":"module"}