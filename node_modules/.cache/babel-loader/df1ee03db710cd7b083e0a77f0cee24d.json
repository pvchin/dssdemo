{"ast":null,"code":"import _regeneratorRuntime from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import MaterialTable,{MTableToolbar}from\"material-table\";import{makeStyles}from\"@material-ui/core/styles\";import AddIcon from\"@material-ui/icons/Add\";import EditIcon from\"@material-ui/icons/Edit\";import DeleteIcon from\"@material-ui/icons/Delete\";import CheckIcon from\"@material-ui/icons/Check\";import SearchIcon from\"@material-ui/icons/Search\";import BuildOutlinedIcon from\"@material-ui/icons/BuildOutlined\";import{useCustomToast}from\"../helpers/useCustomToast\";import{useHistory,Link}from\"react-router-dom\";import{useRecoilState}from\"recoil\";import{payrunState,payrunIdState,payrunStatusState}from\"./data/atomdata\";import{usePayslipsContext}from\"../context/payslips_context\";import{useExpensesContext}from\"../context/expenses_context\";import{useDailyAllowancesContext}from\"../context/dailyallowances_context\";import{AlertDialogBox}from\"../helpers/AlertDialogBox\";import{usePayrun}from\"./payrun/usePayrun\";import{usePayslipsBatch}from\"./payslips/usePayslipsBatch\";import{useDeletePayrun}from\"./payrun/useDeletePayrun\";import{useExpensesPayrun}from\"./expenses/useExpensesPayrun\";import{useUpdateExpenses}from\"./expenses/useUpdateExpenses\";import{useDailyAllowsPayrun}from\"./dailyallows/useDailyAllowsPayrun\";import{useUpdateDailyAllows}from\"./dailyallows/useUpdateDailyAllows\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FILTERSTRING=\"Pending\";var columns=[// { title: \"Period\", field: \"period\" },\n{title:\"Payrun Batch\",field:\"payrun\",type:\"date\",dateSetting:{locale:\"en-GB\"}},// {\n//   title: \"Pay Date\",\n//   field: \"pay_date\",\n//   type: \"date\",\n//   dateSetting: { locale: \"en-GB\" },\n// },\n{title:\"Total Wages\",field:\"totalwages\",type:\"currency\"},{title:\"TAP Amount\",field:\"totaltap\",type:\"currency\"},{title:\"SCP Amount\",field:\"totalscp\",type:\"currency\"},{title:\"Site Allowances\",field:\"totalsitesallows\",type:\"currency\"},{title:\"Expenses Claims\",field:\"totalexpensesclaims\",type:\"currency\"},{title:\"Total Allowances\",field:\"totalallows\",type:\"currency\"},{title:\"Total Deductions\",field:\"totaldeducts\",type:\"currency\"},{title:\"Total Payroll\",field:\"totalpayroll\",type:\"currency\"},{title:\"Status\",field:\"status\"}];export default function PayslipTable(){var history=useHistory();var toast=useCustomToast();var classes=useStyles();var _usePayrun=usePayrun(),payrun=_usePayrun.payrun;var _usePayslipsBatch=usePayslipsBatch(),payslipsbatch=_usePayslipsBatch.payslipsbatch,psbpayrunId=_usePayslipsBatch.psbpayrunId,setPSBPayrunId=_usePayslipsBatch.setPSBPayrunId;var _useExpensesPayrun=useExpensesPayrun(),expensespayrun=_useExpensesPayrun.expensespayrun,setExpPayrunId=_useExpensesPayrun.setExpPayrunId;var _useDailyAllowsPayrun=useDailyAllowsPayrun(),dailyallowspayrun=_useDailyAllowsPayrun.dailyallowspayrun,setDailyAllowsPayrunId=_useDailyAllowsPayrun.setDailyAllowsPayrunId;var updateExpenses=useUpdateExpenses();var deletePayrun=useDeletePayrun();var updateDailyAllows=useUpdateDailyAllows();var _useRecoilState=useRecoilState(payrunState),_useRecoilState2=_slicedToArray(_useRecoilState,2),input=_useRecoilState2[0],setInput=_useRecoilState2[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoadInput=_useState2[0],setIsLoadInput=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isAlertOpen=_useState4[0],setIsAlertOpen=_useState4[1];var _useState5=useState({id:\"\",payrun:\"\"}),_useState6=_slicedToArray(_useState5,2),deletestate=_useState6[0],setDeletestate=_useState6[1];var _useRecoilState3=useRecoilState(payrunIdState),_useRecoilState4=_slicedToArray(_useRecoilState3,2),payrunId=_useRecoilState4[0],setPayrunId=_useRecoilState4[1];var _useRecoilState5=useRecoilState(payrunStatusState),_useRecoilState6=_slicedToArray(_useRecoilState5,2),payrunstatus=_useRecoilState6[0],setPayrunStatus=_useRecoilState6[1];var _useExpensesContext=useExpensesContext(),loadPeriodExpenses=_useExpensesContext.loadPeriodExpenses,periodexpenses=_useExpensesContext.periodexpenses,updateExpense=_useExpensesContext.updateExpense;var _useDailyAllowancesCo=useDailyAllowancesContext(),getSingleBatchDailyAllowance=_useDailyAllowancesCo.getSingleBatchDailyAllowance,singlebatchdailyallowance=_useDailyAllowancesCo.singlebatchdailyallowance,updateDailyAllowance=_useDailyAllowancesCo.updateDailyAllowance,deleteDailyAllowance=_useDailyAllowancesCo.deleteDailyAllowance;var _usePayslipsContext=usePayslipsContext(),getPayrun=_usePayslipsContext.getPayrun,payrun_loading=_usePayslipsContext.payrun_loading,payrun_error=_usePayslipsContext.payrun_error,getSinglePayslip=_usePayslipsContext.getSinglePayslip,setEditPayslipID=_usePayslipsContext.setEditPayslipID,setIsPayslipEditingOn=_usePayslipsContext.setIsPayslipEditingOn,single_payslip=_usePayslipsContext.single_payslip,setPayslipPeriod=_usePayslipsContext.setPayslipPeriod,deletePayslip=_usePayslipsContext.deletePayslip,pending_payslips=_usePayslipsContext.pending_payslips,loadPendingPayslips=_usePayslipsContext.loadPendingPayslips;// useEffect(() => {\n//   if (single_payslip.payrun) {\n//     console.log(\"single_payslip\", single_payslip);\n//   }\n// }, [single_payslip]);\nvar handleAlertOpen=function handleAlertOpen(){setIsAlertOpen(true);};var handleAlertClose=function handleAlertClose(){setIsAlertOpen(false);};var update_Input=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(\"input\",data);setInput(_objectSpread(_objectSpread({},input),{},{id:data.id,payfreq:data.payfreq,fromdate:data.fromdate,todate:data.todate,paydate:data.paydate,period:data.period,payrun:data.payrun,totalwages:data.totalwages,totaltap:data.totaltap,totalscp:data.totalscp,totalallows:data.totalallows,totaldeducts:data.totaldeducts,totalpayroll:data.totalpayroll,status:data.status}));setInput(_objectSpread(_objectSpread({},input),{},{id:data.id,payfreq:data.payfreq,fromdate:data.fromdate,todate:data.todate,paydate:data.paydate,period:data.period,payrun:data.payrun,totalwages:data.totalwages,totaltap:data.totaltap,totalscp:data.totalscp,totalallows:data.totalallows,totaldeducts:data.totaldeducts,totalpayroll:data.totalpayroll,status:data.status}));console.log(\"payrun\",input);case 4:case\"end\":return _context.stop();}}},_callee);}));return function update_Input(_x){return _ref.apply(this,arguments);};}();var update_Payslip=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data){var id,payrun;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:id=data.id,payrun=data.payrun;setPayrunId(id);setPayrunStatus(data.status);setPayslipPeriod(payrun);//save to recoil\nsetEditPayslipID(id);setIsPayslipEditingOn();getSinglePayslip(id);history.push(\"/payrunbatch\");case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function update_Payslip(_x2){return _ref2.apply(this,arguments);};}();var delete_Payslip=function delete_Payslip(data){var id=data.id,payrun=data.payrun;setDeletestate({id:id,payrun:payrun});setPSBPayrunId(payrun);setExpPayrunId(payrun);setDailyAllowsPayrunId(payrun);//loadPeriodExpenses(payrun);\n//getSingleBatchDailyAllowance(payrun);\nhandleAlertOpen();};var handleOnDeleteConfirm=function handleOnDeleteConfirm(data){console.log(\"payslip delete\",deletestate);var id=deletestate.id,payrun=deletestate.payrun;//load period expenses\n//loadPeriodExpenses(payrun);\n//delete allows detls\npayslipsbatch&&payslipsbatch.forEach(function(rec){if(rec.payrun===payrun){deletePayslip(rec.id);}});//unpaid expenses\nexpensespayrun&&expensespayrun.forEach(function(rec){if(rec.payrun===payrun){updateExpenses({id:rec.id,payrun:\"\"});}});//delete dailyallows\ndailyallowspayrun&&dailyallowspayrun.forEach(function(rec){if(rec.payrun===payrun){updateDailyAllows({id:rec.id,payrun:\"\"});}});//delete payrun\ndeletePayrun(id);toast({title:\"Payroll Batch being deleted!\",status:\"warning\"});//getPayrun();\n};if(payrun_loading){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h2\",{children:\"Loading.....Payslips\"})});}if(payrun_error){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h2\",{children:\"Internet connection problem!\"})});}return/*#__PURE__*/_jsx(\"div\",{className:classes.root,children:/*#__PURE__*/_jsxs(\"div\",{style:{maxWidth:\"100%\",paddingTop:\"5px\"},children:[/*#__PURE__*/_jsx(MaterialTable,{columns:columns,data:payrun,title:\"Payroll\",icons:{Add:function Add(props){return/*#__PURE__*/_jsx(AddIcon,{});},Edit:function Edit(props){return/*#__PURE__*/_jsx(EditIcon,{});},Delete:function Delete(props){return/*#__PURE__*/_jsx(DeleteIcon,{});},Clear:function Clear(props){return/*#__PURE__*/_jsx(DeleteIcon,{});},Check:function Check(props){return/*#__PURE__*/_jsx(CheckIcon,{});},Search:function Search(props){return/*#__PURE__*/_jsx(SearchIcon,{});},ResetSearch:function ResetSearch(props){return/*#__PURE__*/_jsx(DeleteIcon,{});},Build:function Build(props){return/*#__PURE__*/_jsx(BuildOutlinedIcon,{});}},actions:[function(rowData){return{//disabled: rowData.status !== \"Pending\",\nicon:\"edit\",position:\"row\",tooltip:\"Edit Record\",onClick:function onClick(event,rowData){update_Input(rowData);update_Payslip(rowData);}};},function(rowData){return{disabled:rowData.status!==\"Pending\",icon:\"delete\",tooltip:\"Delete Record\",position:\"row\",onClick:function onClick(event,rowData){//delete_Payslip(rowData);\ndelete_Payslip(rowData);}};}// {\n//   icon: \"add\",\n//   tooltip: \"Add Record\",\n//   isFreeAction: true,\n//   onClick: (event, rowData) => {\n//     add_Payslip(rowData);\n//   },\n// },\n],options:{filtering:true,headerStyle:{backgroundColor:\"#90CDF4\",color:\"black\"},showTitle:true},components:{Toolbar:function Toolbar(props){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(MTableToolbar,_objectSpread({},props))});}}}),/*#__PURE__*/_jsx(AlertDialogBox,{onClose:handleAlertClose,onConfirm:handleOnDeleteConfirm,isOpen:isAlertOpen,title:\"Delete Payslip Batch\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Are you sure you want to delete ?\"})})]})});}var useStyles=makeStyles(function(theme){return{root:{padding:0}};});","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/PayslipTable.js"],"names":["React","useState","useEffect","MaterialTable","MTableToolbar","makeStyles","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","BuildOutlinedIcon","useCustomToast","useHistory","Link","useRecoilState","payrunState","payrunIdState","payrunStatusState","usePayslipsContext","useExpensesContext","useDailyAllowancesContext","AlertDialogBox","usePayrun","usePayslipsBatch","useDeletePayrun","useExpensesPayrun","useUpdateExpenses","useDailyAllowsPayrun","useUpdateDailyAllows","FILTERSTRING","columns","title","field","type","dateSetting","locale","PayslipTable","history","toast","classes","useStyles","payrun","payslipsbatch","psbpayrunId","setPSBPayrunId","expensespayrun","setExpPayrunId","dailyallowspayrun","setDailyAllowsPayrunId","updateExpenses","deletePayrun","updateDailyAllows","input","setInput","isLoadInput","setIsLoadInput","isAlertOpen","setIsAlertOpen","id","deletestate","setDeletestate","payrunId","setPayrunId","payrunstatus","setPayrunStatus","loadPeriodExpenses","periodexpenses","updateExpense","getSingleBatchDailyAllowance","singlebatchdailyallowance","updateDailyAllowance","deleteDailyAllowance","getPayrun","payrun_loading","payrun_error","getSinglePayslip","setEditPayslipID","setIsPayslipEditingOn","single_payslip","setPayslipPeriod","deletePayslip","pending_payslips","loadPendingPayslips","handleAlertOpen","handleAlertClose","update_Input","data","console","log","payfreq","fromdate","todate","paydate","period","totalwages","totaltap","totalscp","totalallows","totaldeducts","totalpayroll","status","update_Payslip","push","delete_Payslip","handleOnDeleteConfirm","forEach","rec","root","maxWidth","paddingTop","Add","props","Edit","Delete","Clear","Check","Search","ResetSearch","Build","rowData","icon","position","tooltip","onClick","event","disabled","filtering","headerStyle","backgroundColor","color","showTitle","Toolbar","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { payrunState, payrunIdState, payrunStatusState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { usePayrun } from \"./payrun/usePayrun\";\r\nimport { usePayslipsBatch } from \"./payslips/usePayslipsBatch\";\r\nimport { useDeletePayrun } from \"./payrun/useDeletePayrun\";\r\nimport { useExpensesPayrun } from \"./expenses/useExpensesPayrun\";\r\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\r\nimport { useDailyAllowsPayrun } from \"./dailyallows/useDailyAllowsPayrun\";\r\nimport { useUpdateDailyAllows } from \"./dailyallows/useUpdateDailyAllows\";\r\n\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  // { title: \"Period\", field: \"period\" },\r\n  {\r\n    title: \"Payrun Batch\",\r\n    field: \"payrun\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  // {\r\n  //   title: \"Pay Date\",\r\n  //   field: \"pay_date\",\r\n  //   type: \"date\",\r\n  //   dateSetting: { locale: \"en-GB\" },\r\n  // },\r\n  { title: \"Total Wages\", field: \"totalwages\", type: \"currency\" },\r\n  { title: \"TAP Amount\", field: \"totaltap\", type: \"currency\" },\r\n  { title: \"SCP Amount\", field: \"totalscp\", type: \"currency\" },\r\n  { title: \"Site Allowances\", field: \"totalsitesallows\", type: \"currency\" },\r\n  { title: \"Expenses Claims\", field: \"totalexpensesclaims\", type: \"currency\" },\r\n  { title: \"Total Allowances\", field: \"totalallows\", type: \"currency\" },\r\n  { title: \"Total Deductions\", field: \"totaldeducts\", type: \"currency\" },\r\n  { title: \"Total Payroll\", field: \"totalpayroll\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function PayslipTable() {\r\n  let history = useHistory();\r\n  const toast = useCustomToast();\r\n  const classes = useStyles();\r\n  const { payrun } = usePayrun();\r\n  const { payslipsbatch, psbpayrunId, setPSBPayrunId } = usePayslipsBatch();\r\n  const { expensespayrun, setExpPayrunId } = useExpensesPayrun();\r\n  const { dailyallowspayrun, setDailyAllowsPayrunId } = useDailyAllowsPayrun();\r\n  const updateExpenses = useUpdateExpenses();\r\n  const deletePayrun = useDeletePayrun();\r\n  const updateDailyAllows = useUpdateDailyAllows();\r\n  const [input, setInput] = useRecoilState(payrunState);\r\n  const [isLoadInput, setIsLoadInput] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [deletestate, setDeletestate] = useState({ id: \"\", payrun: \"\" });\r\n  const [payrunId, setPayrunId] = useRecoilState(payrunIdState);\r\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\r\n  const { loadPeriodExpenses, periodexpenses, updateExpense } =\r\n    useExpensesContext();\r\n  const {\r\n    getSingleBatchDailyAllowance,\r\n    singlebatchdailyallowance,\r\n    updateDailyAllowance,\r\n    deleteDailyAllowance,\r\n  } = useDailyAllowancesContext();\r\n  const {\r\n    //payrun,\r\n    getPayrun,\r\n    payrun_loading,\r\n    payrun_error,\r\n    getSinglePayslip,\r\n    setEditPayslipID,\r\n    setIsPayslipEditingOn,\r\n    single_payslip,\r\n    setPayslipPeriod,\r\n    //deletePayrun,\r\n    deletePayslip,\r\n    pending_payslips,\r\n    loadPendingPayslips,\r\n  } = usePayslipsContext();\r\n\r\n  // useEffect(() => {\r\n  //   if (single_payslip.payrun) {\r\n  //     console.log(\"single_payslip\", single_payslip);\r\n  //   }\r\n  // }, [single_payslip]);\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const update_Input = async (data) => {\r\n    console.log(\"input\", data);\r\n\r\n    setInput({\r\n      ...input,\r\n      id: data.id,\r\n      payfreq: data.payfreq,\r\n      fromdate: data.fromdate,\r\n      todate: data.todate,\r\n      paydate: data.paydate,\r\n      period: data.period,\r\n      payrun: data.payrun,\r\n      totalwages: data.totalwages,\r\n      totaltap: data.totaltap,\r\n      totalscp: data.totalscp,\r\n      totalallows: data.totalallows,\r\n      totaldeducts: data.totaldeducts,\r\n      totalpayroll: data.totalpayroll,\r\n      status: data.status,\r\n    });\r\n\r\n    setInput({\r\n      ...input,\r\n      id: data.id,\r\n      payfreq: data.payfreq,\r\n      fromdate: data.fromdate,\r\n      todate: data.todate,\r\n      paydate: data.paydate,\r\n      period: data.period,\r\n      payrun: data.payrun,\r\n      totalwages: data.totalwages,\r\n      totaltap: data.totaltap,\r\n      totalscp: data.totalscp,\r\n      totalallows: data.totalallows,\r\n      totaldeducts: data.totaldeducts,\r\n      totalpayroll: data.totalpayroll,\r\n      status: data.status,\r\n    });\r\n    console.log(\"payrun\", input);\r\n  };\r\n\r\n  const update_Payslip = async (data) => {\r\n    const { id, payrun } = data;\r\n    setPayrunId(id);\r\n    setPayrunStatus(data.status);\r\n    setPayslipPeriod(payrun); //save to recoil\r\n    setEditPayslipID(id);\r\n    setIsPayslipEditingOn();\r\n    getSinglePayslip(id);\r\n    history.push(\"/payrunbatch\");\r\n  };\r\n\r\n  const delete_Payslip = (data) => {\r\n    const { id, payrun } = data;\r\n    setDeletestate({ id: id, payrun: payrun });\r\n    setPSBPayrunId(payrun);\r\n    setExpPayrunId(payrun);\r\n    setDailyAllowsPayrunId(payrun);\r\n    //loadPeriodExpenses(payrun);\r\n    //getSingleBatchDailyAllowance(payrun);\r\n    handleAlertOpen();\r\n  };\r\n\r\n  const handleOnDeleteConfirm = (data) => {\r\n    console.log(\"payslip delete\", deletestate);\r\n    const { id, payrun } = deletestate;\r\n\r\n    //load period expenses\r\n    //loadPeriodExpenses(payrun);\r\n\r\n    //delete allows detls\r\n    payslipsbatch &&\r\n      payslipsbatch.forEach((rec) => {\r\n        if (rec.payrun === payrun) {\r\n          deletePayslip(rec.id);\r\n        }\r\n      });\r\n\r\n    //unpaid expenses\r\n    expensespayrun &&\r\n      expensespayrun.forEach((rec) => {\r\n        if (rec.payrun === payrun) {\r\n          updateExpenses({ id: rec.id, payrun: \"\" });\r\n        }\r\n      });\r\n\r\n    //delete dailyallows\r\n    dailyallowspayrun &&\r\n      dailyallowspayrun.forEach((rec) => {\r\n        if (rec.payrun === payrun) {\r\n          updateDailyAllows({ id: rec.id, payrun: \"\" });\r\n        }\r\n      });\r\n\r\n    //delete payrun\r\n    deletePayrun(id);\r\n    toast({\r\n      title: `Payroll Batch being deleted!`,\r\n      status: \"warning\",\r\n    });\r\n    //getPayrun();\r\n  };\r\n\r\n  if (payrun_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading.....Payslips</h2>\r\n      </div>\r\n    );\r\n  }\r\n  if (payrun_error) {\r\n    return (\r\n      <div>\r\n        <h2>Internet connection problem!</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payrun}\r\n          title=\"Payroll\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n            Build: (props) => <BuildOutlinedIcon />,\r\n          }}\r\n          actions={[\r\n            (rowData) => ({\r\n              //disabled: rowData.status !== \"Pending\",\r\n              icon: \"edit\",\r\n              position: \"row\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Input(rowData);\r\n                update_Payslip(rowData);\r\n              },\r\n            }),\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              position: \"row\",\r\n              onClick: (event, rowData) => {\r\n                //delete_Payslip(rowData);\r\n                delete_Payslip(rowData);\r\n              },\r\n            }),\r\n\r\n            // {\r\n            //   icon: \"add\",\r\n            //   tooltip: \"Add Record\",\r\n            //   isFreeAction: true,\r\n            //   onClick: (event, rowData) => {\r\n            //     add_Payslip(rowData);\r\n            //   },\r\n            // },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"black\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                {/* <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={(e) => handleVerifyPayslipData(e)}\r\n                  >\r\n                    Verify <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div> */}\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <AlertDialogBox\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Payslip Batch\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}