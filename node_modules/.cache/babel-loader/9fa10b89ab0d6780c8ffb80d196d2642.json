{"ast":null,"code":"import { v1NormalizeExpression } from \"../utils/v1NormalizeExpression\";\n/**\n * Parse radius options\n * @private\n * @param {Array<string|number>|string|number} radius The radius to parse\n * @return {string} radius transformation string\n */\n\nexport function processRadius(_radius) {\n  if (!_radius) {\n    return _radius;\n  }\n\n  var radius;\n\n  if (!Array.isArray(_radius)) {\n    radius = [radius];\n  }\n\n  if (radius.length === 0 || radius.length > 4) {\n    throw new Error(\"Radius array should contain between 1 and 4 values\");\n  }\n\n  if (radius.findIndex(function (x) {\n    return x === null;\n  }) >= 0) {\n    throw new Error(\"Corner: Cannot be null\");\n  }\n\n  return radius.map(v1NormalizeExpression).join(':');\n}","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/backwards/transformationProcessing/processRadius.js"],"names":["v1NormalizeExpression","processRadius","_radius","radius","Array","isArray","length","Error","findIndex","x","map","join"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,gCAAtC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;AACnC,MAAI,CAACA,OAAL,EAAc;AACV,WAAOA,OAAP;AACH;;AACD,MAAIC,MAAJ;;AACA,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,OAAd,CAAL,EAA6B;AACzBC,IAAAA,MAAM,GAAG,CAACA,MAAD,CAAT;AACH;;AACD,MAAIA,MAAM,CAACG,MAAP,KAAkB,CAAlB,IAAuBH,MAAM,CAACG,MAAP,GAAgB,CAA3C,EAA8C;AAC1C,UAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;AACH;;AACD,MAAIJ,MAAM,CAACK,SAAP,CAAiB,UAACC,CAAD;AAAA,WAAOA,CAAC,KAAK,IAAb;AAAA,GAAjB,KAAuC,CAA3C,EAA8C;AAC1C,UAAM,IAAIF,KAAJ,CAAU,wBAAV,CAAN;AACH;;AACD,SAAOJ,MAAM,CAACO,GAAP,CAAWV,qBAAX,EAAkCW,IAAlC,CAAuC,GAAvC,CAAP;AACH","sourcesContent":["import { v1NormalizeExpression } from \"../utils/v1NormalizeExpression\";\n/**\n * Parse radius options\n * @private\n * @param {Array<string|number>|string|number} radius The radius to parse\n * @return {string} radius transformation string\n */\nexport function processRadius(_radius) {\n    if (!_radius) {\n        return _radius;\n    }\n    let radius;\n    if (!Array.isArray(_radius)) {\n        radius = [radius];\n    }\n    if (radius.length === 0 || radius.length > 4) {\n        throw new Error(\"Radius array should contain between 1 and 4 values\");\n    }\n    if (radius.findIndex((x) => x === null) >= 0) {\n        throw new Error(\"Corner: Cannot be null\");\n    }\n    return radius.map(v1NormalizeExpression).join(':');\n}\n"]},"metadata":{},"sourceType":"module"}