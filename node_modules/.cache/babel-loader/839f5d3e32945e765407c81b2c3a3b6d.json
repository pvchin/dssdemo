{"ast":null,"code":"import _slicedToArray from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { processLayer } from \"./transformationProcessing/processLayer\";\nimport { process_if } from \"./transformationProcessing/processIf\";\nimport { toArray } from \"./utils/toArray\";\nimport { processRadius } from \"./transformationProcessing/processRadius\";\nimport { isObject } from \"./utils/isObject\";\nimport { processCustomFunction } from \"./transformationProcessing/processCustomFunction\";\nimport { processCustomPreFunction } from \"./transformationProcessing/processCustomPreFunction\";\nimport { splitRange } from \"./utils/splitRange\";\nimport { v1NormalizeExpression } from \"./utils/v1NormalizeExpression\";\nimport { normRangeValues } from \"./utils/norm_range_values\";\nimport { processVideoParams } from \"./transformationProcessing/processVideoParams\";\n/**\n * Things dropped\n * - responsive_width\n * - config().dpr\n * - SSL Detected\n * - Provisioning API\n * - Magical configuration auto-mapping (everything has to be explicit)\n * - Signatures\n * - Secure is default true\n * @param transformationOptions\n */\n\nexport function generateTransformationString(transformationOptions) {\n  if (typeof transformationOptions === 'string') {\n    return transformationOptions;\n  }\n\n  if (Array.isArray(transformationOptions)) {\n    return transformationOptions // TODO we might need to clone the childTransformation\n    .map(function (singleTransformation) {\n      return generateTransformationString(singleTransformation);\n    }).filter(function (a) {\n      return a;\n    }).join('/');\n  } // let responsive_width = consumeOption(transformationOptions, \"responsive_width\", config().responsive_width);\n\n\n  var width;\n  var height;\n  var size = transformationOptions.size;\n  var hasLayer = transformationOptions.overlay || transformationOptions.underlay;\n  var crop = transformationOptions.crop;\n  var angle = toArray(transformationOptions.angle).join(\".\");\n  var background = (transformationOptions.background || '').replace(/^#/, \"rgb:\");\n  var color = (transformationOptions.color || '').replace(/^#/, \"rgb:\");\n  var flags = toArray(transformationOptions.flags || []).join('.');\n  var dpr = transformationOptions.dpr;\n  var overlay = processLayer(transformationOptions.overlay);\n  var radius = processRadius(transformationOptions.radius);\n  var underlay = processLayer(transformationOptions.underlay);\n  var ifValue = process_if(transformationOptions.if);\n  var custom_function = processCustomFunction(transformationOptions.custom_function);\n  var custom_pre_function = processCustomPreFunction(transformationOptions.custom_pre_function); // These will change down the line, heads up!\n\n  var fps = transformationOptions.fps;\n  var namedTransformations = [];\n  var childTransformations = toArray(transformationOptions.transformation || []);\n  var effect = transformationOptions.effect; // TODO, Do we need this?\n\n  var no_html_sizes = hasLayer || angle || crop === \"fit\" || crop === \"limit\";\n\n  if (size) {\n    var _size$split = size.split(\"x\"),\n        _size$split2 = _slicedToArray(_size$split, 2),\n        sizeWidth = _size$split2[0],\n        sizeHeight = _size$split2[1];\n\n    width = sizeWidth;\n    height = sizeHeight;\n  } else {\n    width = transformationOptions.width;\n    height = transformationOptions.height;\n  }\n\n  if (width && (width.toString().indexOf(\"auto\") === 0 || no_html_sizes || parseFloat(width.toString()) < 1)) {\n    delete transformationOptions.width;\n  }\n\n  if (height && (no_html_sizes || parseFloat(height.toString()) < 1)) {\n    delete transformationOptions.height;\n  } // Is any child transformation an object?\n\n\n  var isAnyChildAnObject = childTransformations.some(function (transformation) {\n    return typeof transformation === 'object';\n  }); // If array of objects, or array of strings?\n\n  if (isAnyChildAnObject) {\n    childTransformations = childTransformations.map(function (transformation) {\n      if (isObject(transformation)) {\n        // TODO We might need to clone here\n        return generateTransformationString(transformation);\n      } else {\n        return generateTransformationString({\n          transformation: transformation\n        });\n      }\n    });\n  } else {\n    namedTransformations = childTransformations.join(\".\");\n    childTransformations = []; // Reset child transfomrations\n  }\n\n  if (Array.isArray(effect)) {\n    effect = effect.join(\":\");\n  } else if (isObject(effect)) {\n    effect = Object.entries(effect).map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n\n      return \"\".concat(key, \":\").concat(value);\n    });\n  }\n\n  var border = transformationOptions.border;\n\n  if (isObject(border)) {\n    border = \"\".concat(border.width != null ? border.width : 2, \"px_solid_\").concat((border.color != null ? border.color : \"black\").replace(/^#/, 'rgb:'));\n  } else {\n    // @ts-ignore\n    if (/^\\d+$/.exec(border)) {\n      // fallback to html border attributes\n      transformationOptions.border = border;\n      border = void 0;\n    }\n  }\n\n  if (Array.isArray(fps)) {\n    fps = fps.join('-');\n  }\n\n  var urlParams = {\n    a: v1NormalizeExpression(angle),\n    ar: v1NormalizeExpression(transformationOptions.aspect_ratio),\n    b: background,\n    bo: border,\n    c: crop,\n    co: color,\n    dpr: v1NormalizeExpression(dpr),\n    e: v1NormalizeExpression(effect),\n    fl: flags,\n    fn: custom_function || custom_pre_function,\n    fps: fps,\n    h: v1NormalizeExpression(height),\n    ki: v1NormalizeExpression(transformationOptions.keyframe_interval),\n    l: overlay,\n    o: v1NormalizeExpression(transformationOptions.opacity),\n    q: v1NormalizeExpression(transformationOptions.quality),\n    r: radius,\n    t: namedTransformations,\n    u: underlay,\n    w: v1NormalizeExpression(width),\n    x: v1NormalizeExpression(transformationOptions.x),\n    y: v1NormalizeExpression(transformationOptions.y),\n    z: v1NormalizeExpression(transformationOptions.zoom),\n    ac: transformationOptions.audio_codec,\n    af: transformationOptions.audio_frequency,\n    br: transformationOptions.bit_rate,\n    cs: transformationOptions.color_space,\n    d: transformationOptions.default_image,\n    dl: transformationOptions.delay,\n    dn: transformationOptions.density,\n    du: normRangeValues(transformationOptions.duration),\n    eo: normRangeValues(splitRange(transformationOptions.offset)[1]),\n    f: transformationOptions.fetch_format,\n    g: transformationOptions.gravity,\n    pg: transformationOptions.page,\n    p: transformationOptions.prefix,\n    so: normRangeValues(splitRange(transformationOptions.offset)[0]),\n    sp: transformationOptions.streaming_profile,\n    vc: processVideoParams(transformationOptions.video_codec),\n    vs: transformationOptions.video_sampling\n  }; // We can accept variables in here transformationOptions, or in here transformationOptions.variables\n\n  var variables = Object.entries(transformationOptions).filter(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        key = _ref4[0],\n        value = _ref4[1];\n\n    return key.startsWith('$');\n  }).map(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n        key = _ref6[0],\n        value = _ref6[1];\n\n    // delete transformationOptions[key]; // Delete the variables, so we don't add them twice\n    return \"\".concat(key, \"_\").concat(v1NormalizeExpression(value));\n  }).sort().concat( // @ts-ignore\n  (transformationOptions.variables || []).map(function (_ref7) {\n    var _ref8 = _slicedToArray(_ref7, 2),\n        name = _ref8[0],\n        value = _ref8[1];\n\n    return \"\".concat(name, \"_\").concat(v1NormalizeExpression(value));\n  })).join(','); // Clean up!\n\n  var urlImageTransfomrations = Object.entries(urlParams).filter(function (_ref9) {\n    var _ref10 = _slicedToArray(_ref9, 2),\n        key = _ref10[0],\n        value = _ref10[1];\n\n    if (typeof value === 'undefined' || value === null) {\n      return false;\n    }\n\n    if (typeof value === 'string' && value.length === 0) {\n      return false;\n    }\n\n    if (Array.isArray(value) && value.length === 0) {\n      return false;\n    }\n\n    return true;\n  }).map(function (_ref11) {\n    var _ref12 = _slicedToArray(_ref11, 2),\n        key = _ref12[0],\n        value = _ref12[1];\n\n    return \"\".concat(key, \"_\").concat(value);\n  }).sort().join(',');\n  var finalTransformationString = [ifValue, variables, urlImageTransfomrations, transformationOptions.raw_transformation].filter(function (a) {\n    return a;\n  }).join(\",\"); // TODO why can this be empty?\n\n  if (finalTransformationString) {\n    childTransformations.push(finalTransformationString);\n  } // console.log(childTransformations);\n\n\n  return childTransformations.join(\"/\");\n}","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/backwards/generateTransformationString.js"],"names":["processLayer","process_if","toArray","processRadius","isObject","processCustomFunction","processCustomPreFunction","splitRange","v1NormalizeExpression","normRangeValues","processVideoParams","generateTransformationString","transformationOptions","Array","isArray","map","singleTransformation","filter","a","join","width","height","size","hasLayer","overlay","underlay","crop","angle","background","replace","color","flags","dpr","radius","ifValue","if","custom_function","custom_pre_function","fps","namedTransformations","childTransformations","transformation","effect","no_html_sizes","split","sizeWidth","sizeHeight","toString","indexOf","parseFloat","isAnyChildAnObject","some","Object","entries","key","value","border","exec","urlParams","ar","aspect_ratio","b","bo","c","co","e","fl","fn","h","ki","keyframe_interval","l","o","opacity","q","quality","r","t","u","w","x","y","z","zoom","ac","audio_codec","af","audio_frequency","br","bit_rate","cs","color_space","d","default_image","dl","delay","dn","density","du","duration","eo","offset","f","fetch_format","g","gravity","pg","page","p","prefix","so","sp","streaming_profile","vc","video_codec","vs","video_sampling","variables","startsWith","sort","concat","name","urlImageTransfomrations","length","finalTransformationString","raw_transformation","push"],"mappings":"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","sourcesContent":["import { processLayer } from \"./transformationProcessing/processLayer\";\nimport { process_if } from \"./transformationProcessing/processIf\";\nimport { toArray } from \"./utils/toArray\";\nimport { processRadius } from \"./transformationProcessing/processRadius\";\nimport { isObject } from \"./utils/isObject\";\nimport { processCustomFunction } from \"./transformationProcessing/processCustomFunction\";\nimport { processCustomPreFunction } from \"./transformationProcessing/processCustomPreFunction\";\nimport { splitRange } from \"./utils/splitRange\";\nimport { v1NormalizeExpression } from \"./utils/v1NormalizeExpression\";\nimport { normRangeValues } from \"./utils/norm_range_values\";\nimport { processVideoParams } from \"./transformationProcessing/processVideoParams\";\n/**\n * Things dropped\n * - responsive_width\n * - config().dpr\n * - SSL Detected\n * - Provisioning API\n * - Magical configuration auto-mapping (everything has to be explicit)\n * - Signatures\n * - Secure is default true\n * @param transformationOptions\n */\nexport function generateTransformationString(transformationOptions) {\n    if (typeof transformationOptions === 'string') {\n        return transformationOptions;\n    }\n    if (Array.isArray(transformationOptions)) {\n        return transformationOptions\n            // TODO we might need to clone the childTransformation\n            .map((singleTransformation) => {\n            return generateTransformationString(singleTransformation);\n        }).filter((a) => a).join('/');\n    }\n    // let responsive_width = consumeOption(transformationOptions, \"responsive_width\", config().responsive_width);\n    let width;\n    let height;\n    const size = transformationOptions.size;\n    const hasLayer = transformationOptions.overlay || transformationOptions.underlay;\n    const crop = transformationOptions.crop;\n    const angle = toArray(transformationOptions.angle).join(\".\");\n    const background = (transformationOptions.background || '').replace(/^#/, \"rgb:\");\n    const color = (transformationOptions.color || '').replace(/^#/, \"rgb:\");\n    const flags = (toArray(transformationOptions.flags || [])).join('.');\n    const dpr = transformationOptions.dpr;\n    const overlay = processLayer(transformationOptions.overlay);\n    const radius = processRadius(transformationOptions.radius);\n    const underlay = processLayer(transformationOptions.underlay);\n    const ifValue = process_if(transformationOptions.if);\n    const custom_function = processCustomFunction(transformationOptions.custom_function);\n    const custom_pre_function = processCustomPreFunction(transformationOptions.custom_pre_function);\n    // These will change down the line, heads up!\n    let fps = transformationOptions.fps;\n    let namedTransformations = [];\n    let childTransformations = toArray(transformationOptions.transformation || []);\n    let effect = transformationOptions.effect;\n    // TODO, Do we need this?\n    const no_html_sizes = hasLayer || angle || crop === \"fit\" || crop === \"limit\";\n    if (size) {\n        const [sizeWidth, sizeHeight] = size.split(\"x\");\n        width = sizeWidth;\n        height = sizeHeight;\n    }\n    else {\n        width = transformationOptions.width;\n        height = transformationOptions.height;\n    }\n    if (width && (width.toString().indexOf(\"auto\") === 0 || no_html_sizes || parseFloat(width.toString()) < 1)) {\n        delete transformationOptions.width;\n    }\n    if (height && (no_html_sizes || parseFloat(height.toString()) < 1)) {\n        delete transformationOptions.height;\n    }\n    // Is any child transformation an object?\n    const isAnyChildAnObject = childTransformations.some((transformation) => typeof transformation === 'object');\n    // If array of objects, or array of strings?\n    if (isAnyChildAnObject) {\n        childTransformations = childTransformations.map((transformation) => {\n            if (isObject(transformation)) {\n                // TODO We might need to clone here\n                return generateTransformationString(transformation);\n            }\n            else {\n                return generateTransformationString({ transformation });\n            }\n        });\n    }\n    else {\n        namedTransformations = childTransformations.join(\".\");\n        childTransformations = []; // Reset child transfomrations\n    }\n    if (Array.isArray(effect)) {\n        effect = effect.join(\":\");\n    }\n    else if (isObject(effect)) {\n        effect = Object.entries(effect).map(([key, value]) => `${key}:${value}`);\n    }\n    let border = transformationOptions.border;\n    if (isObject(border)) {\n        border = `${border.width != null ? border.width : 2}px_solid_${(border.color != null ? border.color : \"black\").replace(/^#/, 'rgb:')}`;\n    }\n    else {\n        // @ts-ignore\n        if (/^\\d+$/.exec(border)) { // fallback to html border attributes\n            transformationOptions.border = border;\n            border = void 0;\n        }\n    }\n    if (Array.isArray(fps)) {\n        fps = fps.join('-');\n    }\n    const urlParams = {\n        a: v1NormalizeExpression(angle),\n        ar: v1NormalizeExpression(transformationOptions.aspect_ratio),\n        b: background,\n        bo: border,\n        c: crop,\n        co: color,\n        dpr: v1NormalizeExpression(dpr),\n        e: v1NormalizeExpression(effect),\n        fl: flags,\n        fn: custom_function || custom_pre_function,\n        fps: fps,\n        h: v1NormalizeExpression(height),\n        ki: v1NormalizeExpression(transformationOptions.keyframe_interval),\n        l: overlay,\n        o: v1NormalizeExpression(transformationOptions.opacity),\n        q: v1NormalizeExpression(transformationOptions.quality),\n        r: radius,\n        t: namedTransformations,\n        u: underlay,\n        w: v1NormalizeExpression(width),\n        x: v1NormalizeExpression(transformationOptions.x),\n        y: v1NormalizeExpression(transformationOptions.y),\n        z: v1NormalizeExpression(transformationOptions.zoom),\n        ac: transformationOptions.audio_codec,\n        af: transformationOptions.audio_frequency,\n        br: transformationOptions.bit_rate,\n        cs: transformationOptions.color_space,\n        d: transformationOptions.default_image,\n        dl: transformationOptions.delay,\n        dn: transformationOptions.density,\n        du: normRangeValues(transformationOptions.duration),\n        eo: normRangeValues(splitRange(transformationOptions.offset)[1]),\n        f: transformationOptions.fetch_format,\n        g: transformationOptions.gravity,\n        pg: transformationOptions.page,\n        p: transformationOptions.prefix,\n        so: normRangeValues(splitRange(transformationOptions.offset)[0]),\n        sp: transformationOptions.streaming_profile,\n        vc: processVideoParams(transformationOptions.video_codec),\n        vs: transformationOptions.video_sampling\n    };\n    // We can accept variables in here transformationOptions, or in here transformationOptions.variables\n    const variables = Object.entries(transformationOptions)\n        .filter(([key, value]) => key.startsWith('$'))\n        .map(([key, value]) => {\n        // delete transformationOptions[key]; // Delete the variables, so we don't add them twice\n        return `${key}_${v1NormalizeExpression(value)}`;\n    }).sort().concat(\n    // @ts-ignore\n    (transformationOptions.variables || []).map(([name, value]) => `${name}_${v1NormalizeExpression(value)}`)).join(',');\n    // Clean up!\n    const urlImageTransfomrations = Object.entries(urlParams)\n        .filter(([key, value]) => {\n        if (typeof value === 'undefined' || value === null) {\n            return false;\n        }\n        if (typeof value === 'string' && value.length === 0) {\n            return false;\n        }\n        if (Array.isArray(value) && value.length === 0) {\n            return false;\n        }\n        return true;\n    })\n        .map(([key, value]) => `${key}_${value}`)\n        .sort()\n        .join(',');\n    const finalTransformationString = [\n        ifValue,\n        variables,\n        urlImageTransfomrations,\n        transformationOptions.raw_transformation\n    ].filter((a) => a).join(\",\");\n    // TODO why can this be empty?\n    if (finalTransformationString) {\n        childTransformations.push(finalTransformationString);\n    }\n    // console.log(childTransformations);\n    return childTransformations.join(\"/\");\n}\n"]},"metadata":{},"sourceType":"module"}