{"ast":null,"code":"import { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { prepareColor } from \"../../internal/utils/prepareColor\";\nimport { EffectActionWithLevel } from \"./EffectActions/EffectActionWithLevel\";\n/**\n * @description Applies a colorizing filter to the asset, use the methods in the class to adjust the filter\n * @extends EffectActionWithLevel\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nclass ColorizeEffectAction extends EffectActionWithLevel {\n  /**\n   * @description The color to use for colorization. Specify HTML name or RGB hex code. (Server default: gray)\n   * @param {string} color HTML name(red, green, etc.) or RGB hex code. (Server default: gray)\n   * @return {this}\n   */\n  color(color) {\n    return this.addQualifier(new Qualifier('co', new QualifierValue(prepareColor(color))));\n  }\n\n}\n\nexport { ColorizeEffectAction };","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/actions/effect/colorize.js"],"names":["QualifierValue","Qualifier","prepareColor","EffectActionWithLevel","ColorizeEffectAction","color","addQualifier"],"mappings":"AAAA,SAASA,cAAT,QAA+B,yCAA/B;AACA,SAASC,SAAT,QAA0B,oCAA1B;AACA,SAASC,YAAT,QAA6B,mCAA7B;AACA,SAASC,qBAAT,QAAsC,uCAAtC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,oBAAN,SAAmCD,qBAAnC,CAAyD;AACrD;AACJ;AACA;AACA;AACA;AACIE,EAAAA,KAAK,CAACA,KAAD,EAAQ;AACT,WAAO,KAAKC,YAAL,CAAkB,IAAIL,SAAJ,CAAc,IAAd,EAAoB,IAAID,cAAJ,CAAmBE,YAAY,CAACG,KAAD,CAA/B,CAApB,CAAlB,CAAP;AACH;;AARoD;;AAUzD,SAASD,oBAAT","sourcesContent":["import { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { prepareColor } from \"../../internal/utils/prepareColor\";\nimport { EffectActionWithLevel } from \"./EffectActions/EffectActionWithLevel\";\n/**\n * @description Applies a colorizing filter to the asset, use the methods in the class to adjust the filter\n * @extends EffectActionWithLevel\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass ColorizeEffectAction extends EffectActionWithLevel {\n    /**\n     * @description The color to use for colorization. Specify HTML name or RGB hex code. (Server default: gray)\n     * @param {string} color HTML name(red, green, etc.) or RGB hex code. (Server default: gray)\n     * @return {this}\n     */\n    color(color) {\n        return this.addQualifier(new Qualifier('co', new QualifierValue(prepareColor(color))));\n    }\n}\nexport { ColorizeEffectAction };\n"]},"metadata":{},"sourceType":"module"}