{"ast":null,"code":"import { SimpleEffectAction } from \"./SimpleEffectAction\";\n/**\n * @description A base class for effects with a level, the extending class needs to implement a method that calls setLevel()\n * @extends {Actions.Effect.SimpleEffectAction}\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nclass LeveledEffectAction extends SimpleEffectAction {\n  constructor(effectType, level) {\n    super(effectType, level);\n    this.effectType = effectType;\n  }\n  /**\n   *\n   * @description Sets the effect level for the action\n   * @param {string | number} level - The strength of the effect\n   * @protected\n   */\n\n\n  setLevel(level) {\n    const qualifierEffect = this.createEffectQualifier(this.effectType, level);\n    this.addQualifier(qualifierEffect);\n    return this;\n  }\n\n}\n\nexport { LeveledEffectAction };","map":{"version":3,"sources":["D:/react-myprojects/dss/node_modules/@cloudinary/base/actions/effect/EffectActions/LeveledEffectAction.js"],"names":["SimpleEffectAction","LeveledEffectAction","constructor","effectType","level","setLevel","qualifierEffect","createEffectQualifier","addQualifier"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,sBAAnC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,mBAAN,SAAkCD,kBAAlC,CAAqD;AACjDE,EAAAA,WAAW,CAACC,UAAD,EAAaC,KAAb,EAAoB;AAC3B,UAAMD,UAAN,EAAkBC,KAAlB;AACA,SAAKD,UAAL,GAAkBA,UAAlB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIE,EAAAA,QAAQ,CAACD,KAAD,EAAQ;AACZ,UAAME,eAAe,GAAG,KAAKC,qBAAL,CAA2B,KAAKJ,UAAhC,EAA4CC,KAA5C,CAAxB;AACA,SAAKI,YAAL,CAAkBF,eAAlB;AACA,WAAO,IAAP;AACH;;AAfgD;;AAiBrD,SAASL,mBAAT","sourcesContent":["import { SimpleEffectAction } from \"./SimpleEffectAction\";\n/**\n * @description A base class for effects with a level, the extending class needs to implement a method that calls setLevel()\n * @extends {Actions.Effect.SimpleEffectAction}\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass LeveledEffectAction extends SimpleEffectAction {\n    constructor(effectType, level) {\n        super(effectType, level);\n        this.effectType = effectType;\n    }\n    /**\n     *\n     * @description Sets the effect level for the action\n     * @param {string | number} level - The strength of the effect\n     * @protected\n     */\n    setLevel(level) {\n        const qualifierEffect = this.createEffectQualifier(this.effectType, level);\n        this.addQualifier(qualifierEffect);\n        return this;\n    }\n}\nexport { LeveledEffectAction };\n"]},"metadata":{},"sourceType":"module"}