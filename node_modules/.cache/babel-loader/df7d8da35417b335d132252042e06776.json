{"ast":null,"code":"import _classCallCheck from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { SimpleEffectAction } from \"./SimpleEffectAction\";\n/**\n * @description A base class for effects with a level, the extending class needs to implement a method that calls setLevel()\n * @extends {Actions.Effect.SimpleEffectAction}\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nvar LeveledEffectAction = /*#__PURE__*/function (_SimpleEffectAction) {\n  _inherits(LeveledEffectAction, _SimpleEffectAction);\n\n  var _super = _createSuper(LeveledEffectAction);\n\n  function LeveledEffectAction(effectType, level) {\n    var _this;\n\n    _classCallCheck(this, LeveledEffectAction);\n\n    _this = _super.call(this, effectType, level);\n    _this.effectType = effectType;\n    return _this;\n  }\n  /**\n   *\n   * @description Sets the effect level for the action\n   * @param {string | number} level - The strength of the effect\n   * @protected\n   */\n\n\n  _createClass(LeveledEffectAction, [{\n    key: \"setLevel\",\n    value: function setLevel(level) {\n      var qualifierEffect = this.createEffectQualifier(this.effectType, level);\n      this.addQualifier(qualifierEffect);\n      return this;\n    }\n  }]);\n\n  return LeveledEffectAction;\n}(SimpleEffectAction);\n\nexport { LeveledEffectAction };","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/actions/effect/EffectActions/LeveledEffectAction.js"],"names":["SimpleEffectAction","LeveledEffectAction","effectType","level","qualifierEffect","createEffectQualifier","addQualifier"],"mappings":";;;;AAAA,SAASA,kBAAT,QAAmC,sBAAnC;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,mB;;;;;AACF,+BAAYC,UAAZ,EAAwBC,KAAxB,EAA+B;AAAA;;AAAA;;AAC3B,8BAAMD,UAAN,EAAkBC,KAAlB;AACA,UAAKD,UAAL,GAAkBA,UAAlB;AAF2B;AAG9B;AACD;AACJ;AACA;AACA;AACA;AACA;;;;;WACI,kBAASC,KAAT,EAAgB;AACZ,UAAMC,eAAe,GAAG,KAAKC,qBAAL,CAA2B,KAAKH,UAAhC,EAA4CC,KAA5C,CAAxB;AACA,WAAKG,YAAL,CAAkBF,eAAlB;AACA,aAAO,IAAP;AACH;;;;EAf6BJ,kB;;AAiBlC,SAASC,mBAAT","sourcesContent":["import { SimpleEffectAction } from \"./SimpleEffectAction\";\n/**\n * @description A base class for effects with a level, the extending class needs to implement a method that calls setLevel()\n * @extends {Actions.Effect.SimpleEffectAction}\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass LeveledEffectAction extends SimpleEffectAction {\n    constructor(effectType, level) {\n        super(effectType, level);\n        this.effectType = effectType;\n    }\n    /**\n     *\n     * @description Sets the effect level for the action\n     * @param {string | number} level - The strength of the effect\n     * @protected\n     */\n    setLevel(level) {\n        const qualifierEffect = this.createEffectQualifier(this.effectType, level);\n        this.addQualifier(qualifierEffect);\n        return this;\n    }\n}\nexport { LeveledEffectAction };\n"]},"metadata":{},"sourceType":"module"}