{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\Payrunbatch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport dayjs from \"dayjs\";\nimport { useHistory } from \"react-router-dom\";\nimport * as emailjs from \"emailjs-com\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { FiSave, FiCheckCircle, FiMail } from \"react-icons/fi\";\nimport { useCustomToast } from \"../helpers/useCustomToast\"; //import { Button} from \"@material-ui/core\"\n\nimport { Box, Button, Divider, Grid, GridItem, Flex, Heading, Stack, Spacer, Tabs, TabList, TabPanels, Tab, TabPanel, Table, Thead, Tbody, Tfoot, Tr, Th, Td, TableCaption, Text, Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, Wrap, WrapItem, useDisclosure } from \"@chakra-ui/react\";\nimport PayForm from \"./PayForm\";\nimport PaySummary from \"./PaySummary\";\nimport PrintPaySummary from \"./PrintPaySummary\";\nimport { useEmployees } from \"./employees/useEmployees\";\nimport { usePayrun } from \"./payrun/usePayrun\";\nimport { useUpdatePayrun } from \"./payrun/useUpdatePayrun\";\nimport { usePayslipsBatch } from \"./payslips/usePayslipsBatch\";\nimport { useUpdatePayslips } from \"./payslips/useUpdatePayslips\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { useTablesContext } from \"../context/tables_context\";\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\nimport { payrunState, paydataState, payrunIdState, payrunStatusState } from \"./data/atomdata\";\nimport { useRecoilValue } from \"recoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\nconst TEMPLATE_ID = \"template_1y8odlq\";\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\nconst initial_formdata = {\n  name: \"\",\n  period: \"\",\n  pay_date: null,\n  payrun: \"\",\n  bank_name: \"\",\n  bank_acno: \"\",\n  salary_currency: \"BND\",\n  currency_rate: 1,\n  tap_acno: \"\",\n  scp_acno: \"\",\n  tap_checkbox: false,\n  empid: \"\",\n  status: \"\",\n  allows_type1: \"\",\n  allows_type1amt: \"\",\n  allows_type2: \"\",\n  allows_type2amt: \"\",\n  allows_type3: \" \",\n  allows_type3amt: 0,\n  allows_type4: \"\",\n  allows_type4amt: 0,\n  allows_type5: \" \",\n  allows_type5amt: 0,\n  allows_type6: \" \",\n  allows_type6amt: 0,\n  allows_type7: \" \",\n  allows_type7amt: 0,\n  allows_type8: \" \",\n  allows_type8amt: 0,\n  deducts_type1: \" \",\n  deducts_type1amt: 0,\n  deducts_type2: \" \",\n  deducts_type2amt: 0,\n  deducts_type3: \" \",\n  deducts_type3amt: 0,\n  deducts_type4: \" \",\n  deducts_type4amt: 0,\n  deducts_type5: \" \",\n  deducts_type5amt: 0,\n  deducts_type6: \" \",\n  deducts_type6amt: 0,\n  deducts_type7: \" \",\n  deducts_type7amt: 0,\n  deducts_type8: \" \",\n  deducts_type8amt: 0,\n  wages: 0,\n  tap_amount: 0,\n  scp_amount: 0,\n  total_allowances: 0,\n  total_deductions: 0,\n  site_allows: 0,\n  expenses_claims: 0,\n  nett_pay: 0,\n  wages_bnd: 0,\n  site_allows_bnd: 0,\n  expenses_claims_bnd: 0,\n  total_allowances_bnd: 0,\n  total_deductions_bnd: 0,\n  tap_amount_bnd: 0,\n  scp_amount_bnd: 0,\n  nett_pay_bnd: 0\n};\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst columns = [{\n  title: \"Name\",\n  field: \"name\",\n  editable: \"never\",\n  cellStyle: {\n    width: 280,\n    maxWidth: 280\n  }\n}];\n\nconst Payrunbatch = () => {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const toast = useCustomToast();\n  const componentRef = useRef();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight); //const { register, handleSubmit, control, setValue, reset, watch } = useForm();\n\n  const {\n    //payrun,\n    getSingleBatchPayslip,\n    //singlebatchpayslip,\n    payslip_period,\n    //updatePayslip,\n    //updatePayrun,\n    singlebatch_payslip_loading,\n    singlebatch_payslip_error\n  } = usePayslipsContext();\n  const {\n    payslipsbatch,\n    psbpayrunId,\n    setPSBPayrunId\n  } = usePayslipsBatch();\n  const {\n    employees\n  } = useEmployees();\n  const {\n    payrun\n  } = usePayrun();\n  const updatePayslip = useUpdatePayslips();\n  const updatePayrun = useUpdatePayrun();\n  const {\n    loadPayitems,\n    payitems\n  } = useTablesContext();\n  const [payrundata, setPayrundata] = useRecoilState(payrunState);\n  const [payrunId, setPayrunId] = useRecoilState(payrunIdState);\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\n  const [loadFormdata, setLoadFormdata] = useState(false);\n  const [loadUpdatedata, setLoadUpdatedata] = useState(false);\n  const [formdata, setFormdata] = useState(initial_formdata);\n  const [rowindex, setRowIndex] = useState(0);\n  const [emponclick, setEmponclick] = useState(false);\n  const [showSumm, setShowSumm] = useState(false);\n  const [isCalc, setIsCalc] = useState(false);\n  const [isStart, setIsStart] = useState(true);\n  const [isShow, setIsShow] = useState(false);\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const singlebatchpayslip = payslipsbatch;\n  useEffect(() => {\n    loadPayitems();\n    setEmponclick(true); // getSingleBatchPayslip(payslip_period);\n  }, []);\n  useEffect(() => {\n    setRowIndex(0); // handleEmpButtonClick(0);\n\n    setEmponclick(false);\n  }, [emponclick]);\n  useEffect(() => {\n    setLoadFormdata(false);\n  }, [loadUpdatedata]);\n  useEffect(() => {\n    setPSBPayrunId(payslip_period); //setIsCalc(true);\n  }, [psbpayrunId]);\n  useEffect(() => {\n    calcPayrunTotals();\n    setIsCalc(false);\n  }, [isCalc]); // useEffect(() => {\n  //   handleEmpButtonClick(0);\n  //   setIsLoad(false);\n  // }, [isLoad]);\n\n  const handleShowSumm = e => {\n    e.preventDefault();\n    setShowSumm(!showSumm);\n  };\n\n  const handlePrintSummary = e => {\n    e.preventDefault();\n    exportPdfTable(singlebatchpayslip);\n  };\n\n  const exportPdfTable = singlebatchpayslip => {\n    PrintPaySummary(singlebatchpayslip = {\n      singlebatchpayslip\n    });\n  };\n\n  const handleSavePayslips = e => {\n    e.preventDefault(); //calcPayrunTotals();\n    // eslint-disable-next-line no-lone-blocks\n\n    {\n      singlebatchpayslip.forEach(rec => {\n        const {\n          id,\n          rec_id,\n          tableData,\n          ...fields\n        } = rec;\n        updatePayslip({\n          id,\n          ...fields\n        });\n      });\n    } //update payrun\n\n    handleSavePayrun();\n    toast({\n      title: \"Changes have been saved!\",\n      status: \"success\"\n    });\n    history.push(\"/payslip\");\n  };\n\n  const calcPayrunTotals = () => {\n    // if (!psbpayrunId) {\n    //   return null;\n    // }\n    const tmpbatch = singlebatchpayslip.filter(r => r.payrun === payslip_period).map(rec => {\n      return { ...rec\n      };\n    }); //console.log(\"recalc\", tmpbatch);\n\n    const totalpayroll = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.nett_pay_bnd) ? 0 : item.nett_pay_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalwages = tmpbatch.reduce((acc, item, index) => {\n      const value = isNaN(item.wages_bnd) ? 0 : item.wages_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totaltap = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.tap_amount_bnd) ? 0 : item.tap_amount_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalscp = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.scp_amount_bnd) ? 0 : item.scp_amount_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalallows = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.total_allowances_bnd) ? 0 : item.total_allowances_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totaldeducts = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.total_deductions_bnd) ? 0 : item.total_deductions_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalsiteallows = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.site_allows_bnd) ? 0 : item.site_allows_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalexpensesclaims = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.expenses_claims_bnd) ? 0 : item.expenses_claims_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    setPayrundata({ ...payrundata,\n      totalpayroll: totalpayroll,\n      totalwages: totalwages,\n      totaltap: totaltap,\n      totalscp: totalscp,\n      totalallows: totalallows,\n      totaldeducts: totaldeducts,\n      totalsiteallows: totalsiteallows,\n      totalexpensesclaims: totalexpensesclaims\n    });\n  };\n\n  const handleSavePayrun = () => {\n    if (payrundata.status === \"Verified\" || payrundata.status === \"Approved\") {\n      toast({\n        title: `This payroll batch has been ${payrundata.status}! No changes can be made!`,\n        status: \"warning\"\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 14\n      }, this);\n    }\n\n    const tmppayrun = payrun.filter(r => r.payrun === payslip_period); //console.log(\"paysave\", tmppayrun[0].id);\n    // eslint-disable-next-line no-lone-blocks\n\n    console.log(\"paybatch\", payslip_period, payrundata);\n    updatePayrun({\n      id: tmppayrun[0].id,\n      totalpayroll: payrundata.totalpayroll,\n      totalwages: payrundata.totalwages,\n      totaltap: payrundata.totaltap,\n      totalscp: payrundata.totalscp,\n      totalallows: payrundata.totalallows,\n      totaldeducts: payrundata.totaldeducts,\n      totalsitesallows: payrundata.totalsiteallows,\n      totalexpensesclaims: payrundata.totalexpensesclaims\n    });\n    history.push(\"/payslip\");\n  };\n\n  const handleVerifyPayslips = e => {\n    e.preventDefault();\n    setPayrundata({ ...payrundata,\n      status: \"Verified\"\n    });\n    setPayrunStatus(\"Verified\");\n    updatePayrun({\n      id: payrunId,\n      status: \"Verified\"\n    });\n    toast({\n      title: \"Batch has been verified!\",\n      status: \"success\"\n    });\n  };\n\n  const handleEmpButtonClick = index => {\n    const paydata = singlebatchpayslip[index];\n    setFormdata(initial_formdata);\n    setFormdata({ ...initial_formdata,\n      ...paydata\n    });\n    setFormdata({ ...initial_formdata,\n      ...paydata\n    });\n    setLoadFormdata(true);\n  };\n\n  const handleTabChange = index => {\n    if (index === 1) {\n      setIsShow(true);\n      calcPayrunTotals();\n    }\n  };\n\n  const SentEmailModal = () => {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: payslipsbatch,\n        title: \"Employees\",\n        options: {\n          filtering: false,\n          search: false,\n          toolbar: true,\n          selection: true,\n          pageSize: 10,\n          headerStyle: {\n            backgroundColor: \"#daad86\",\n            color: \"primary\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"5px 10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                colorScheme: \"blue\",\n                isDisabled: payrundata.status !== \"Approve\" ? true : false,\n                onClick: () => handleSentEmail(),\n                leftIcon: /*#__PURE__*/_jsxDEV(FiMail, {\n                  color: \"white\",\n                  fontSize: \"1.5em\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 31\n                }, this),\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this);\n  };\n\n  const handleSentEmail = data => {\n    const mth = months[payslip_period.substring(6, 7)];\n    const yr = payslip_period.substring(0, 4);\n    payslipsbatch.forEach(pay => {\n      if (pay.tableData.checked) {\n        const {\n          name,\n          empid\n        } = pay;\n        const emp = employees.filter(r => r.id === empid).map(rec => {\n          return { ...rec\n          };\n        });\n        var emaildata = {\n          to_name: name,\n          to_email: emp[0].email,\n          message: `Your payroll for the month of ${mth} ${yr} has been transfered. Please login in to view your payslip!`\n        };\n        emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(function (response) {\n          console.log(response.status, response.text);\n          toast({\n            title: `Email has sent successfully to ${emaildata.to_email}!`,\n            status: \"success\"\n          });\n        }, function (err) {\n          console.log(err);\n          toast({\n            title: `Email has fail to send to ${emaildata.to_email}!`,\n            status: \"warning\"\n          });\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    marginLeft: 4,\n    marginTop: 70,\n    w: \"98%\",\n    h: \"100%\",\n    style: {\n      backgroundColor: \"lightcyan\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      templateRows: \"repeat(10,1fr)\",\n      templateColumns: \"repeat(1,1fr)\",\n      children: [/*#__PURE__*/_jsxDEV(GridItem, {\n        rowSpan: 1,\n        colSpan: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          templateRows: \"repeat(1,1fr)\",\n          templateColumns: \"repeat(10,1fr)\",\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            rowSpan: 1,\n            colSpan: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            rowSpan: 1,\n            colSpan: 4,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              textAlign: \"center\",\n              alignItems: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Heading, {\n                pl: \"10\",\n                pt: \"2\",\n                children: \"Payroll\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            rowSpan: 1,\n            colSpan: 4,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              pt: \"2\",\n              pr: 5,\n              alignItems: \"right\",\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                spacing: 4,\n                direction: \"row\",\n                align: \"center\",\n                pl: 150,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  width: \"800px\",\n                  colorScheme: \"blue\",\n                  isDisabled: !isShow // isDisabled={\n                  //   payrundata.status === \"Verified\" ||\n                  //   payrundata.status === \"Approved\"\n                  //     ? true\n                  //     : false\n                  // }\n                  ,\n                  onClick: e => handleSavePayslips(e),\n                  leftIcon: /*#__PURE__*/_jsxDEV(FiSave, {\n                    color: \"white\",\n                    fontSize: \"1.5em\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 507,\n                    columnNumber: 31\n                  }, this),\n                  children: \"Save/Exit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  width: \"500px\",\n                  colorScheme: \"blue\",\n                  onClick: e => handlePrintSummary(e),\n                  leftIcon: /*#__PURE__*/_jsxDEV(FiSave, {\n                    color: \"white\",\n                    fontSize: \"1.5em\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 515,\n                    columnNumber: 31\n                  }, this),\n                  children: \"Print\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  width: \"500px\",\n                  colorScheme: \"blue\",\n                  isDisabled: payrundata.status === \"Verified\" || payrundata.status === \"Approved\" || payrundata.status === \"New\" ? true : false,\n                  onClick: e => handleVerifyPayslips(e),\n                  leftIcon: /*#__PURE__*/_jsxDEV(FiCheckCircle, {\n                    color: \"white\",\n                    fontSize: \"1.5em\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 531,\n                    columnNumber: 31\n                  }, this),\n                  children: \"Verify\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  width: \"500px\",\n                  colorScheme: \"blue\",\n                  isDisabled: payrundata.status !== \"Approved\" ? true : false,\n                  onClick: onOpen,\n                  leftIcon: /*#__PURE__*/_jsxDEV(FiMail, {\n                    color: \"white\",\n                    fontSize: \"1.5em\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 31\n                  }, this),\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            border: \"1px solid lightgrey\"\n          },\n          orientation: \"horizontal\",\n          colorScheme: \"red\",\n          variant: \"solid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        defaultIndex: 0,\n        onChange: index => handleTabChange(index),\n        children: [/*#__PURE__*/_jsxDEV(TabList, {\n          marginLeft: 4,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(Heading, {\n                size: \"sm\",\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(Heading, {\n                size: \"sm\",\n                children: \"Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanels, {\n          children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              templateRows: \"repeat(1,1fr)\",\n              templateColumns: \"repeat(10,1fr)\",\n              children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                colSpan: 2,\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  textAlign: \"center\",\n                  p: 4,\n                  children: /*#__PURE__*/_jsxDEV(Heading, {\n                    size: \"sm\",\n                    alignItems: \"center\",\n                    children: \"Employees\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 577,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 576,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  backgroundColor: \"white\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 581,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  border: \"2px solid white\",\n                  backgroundColor: \"cyan.100\",\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    variant: \"simple\",\n                    children: /*#__PURE__*/_jsxDEV(Tbody, {\n                      children: payslipsbatch.map((item, index) => {\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(Button, {\n                            className: classes.empbtn,\n                            variant: \"outlined\" // ${index === value && \"activebtn\"}\n                            ,\n                            onClick: e => {\n                              setRowIndex(index);\n                              setIsStart(false);\n                              handleEmpButtonClick(index);\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Text, {\n                              isTruncated: true,\n                              maxWidth: 240,\n                              children: item.name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 625,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 615,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                            backgroundColor: \"white\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 629,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 614,\n                          columnNumber: 29\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 611,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 605,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                colSpan: 8,\n                children: /*#__PURE__*/_jsxDEV(PayForm, {\n                  formdata: formdata,\n                  setFormdata: setFormdata,\n                  loadFormdata: loadFormdata,\n                  setLoadFormdata: setLoadFormdata,\n                  payitems: payitems,\n                  setLoadUpdatedata: setLoadUpdatedata,\n                  singlebatchpayslip: singlebatchpayslip,\n                  rowindex: rowindex,\n                  isCalc: isCalc,\n                  isStart: isStart,\n                  setIsStart: setIsStart,\n                  setIsCalc: setIsCalc\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 638,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            children: /*#__PURE__*/_jsxDEV(PaySummary, {\n              payrundata: payrundata,\n              singlebatchpayslip: singlebatchpayslip\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(SentEmailModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"blue\",\n            mr: 3,\n            onClick: onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 474,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Payrunbatch, \"acX6rzidUPVYyjavtxyzzuxBhJ4=\", false, function () {\n  return [useHistory, useStyles, useCustomToast, usePayslipsContext, usePayslipsBatch, useEmployees, usePayrun, useUpdatePayslips, useUpdatePayrun, useTablesContext, useRecoilState, useRecoilState, useRecoilState, useDisclosure];\n});\n\n_c = Payrunbatch;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  container: {\n    margin: 0,\n    padding: 0,\n    width: \"80vw\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\n    gridAutoRows: \"10px\",\n    position: \"absolute\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    justifyContent: \"center\",\n    backgroundColor: \"primary\"\n  },\n  fixedHeight: {\n    height: 800\n  },\n  paper: {\n    paddingTop: theme.spacing(10),\n    // display: \"flex\",\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    border: \"1px solid\",\n    width: \"100%\",\n    color: \"primary\",\n    bcakgroundColor: \"white\"\n  },\n  card: {\n    backgroundColor: \"white\"\n  },\n  section: {\n    width: \"80vw\",\n    margin: \"1rem auto\",\n    maxWidth: \"var(--max-width)\"\n  },\n  underline: {\n    width: \"5rem\",\n    height: \"0.25rem\",\n    marginBottom: \"1.25rem\",\n    background: \"var(--clr-primary-5)\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  title: {\n    marginbottom: \"4rem\",\n    textAlign: \"center\"\n  },\n  empscenter: {\n    width: \"80vw\",\n    margin: \"0 auto\",\n    maxWidth: \"var(--max-width)\",\n    flexDirection: \"row\"\n  },\n  empcontainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginBottom: \"4rem\",\n    flexWrap: \"wrap\"\n  },\n  empbtn: {\n    background: \"transparent\",\n    borderColor: \"transparent\",\n    textTransform: \"capitalize\",\n    fontSize: \"1rem\",\n    letterSpacing: \"var(--spacing)\",\n    margin: \"0 0.5rem\",\n    transition: \"var(--transition)\",\n    cursor: \"pointer\",\n    padding: \"0.25rem 0\",\n    lineHeight: \"1\",\n    outlineColor: \"var(--clr-primary-10)\",\n    \"&:hover\": {\n      color: \"var(--clr-primary-5)\",\n      boxShadow: \"0 2px var(--clr-primary-5)\"\n    }\n  },\n  activebtn: {\n    color: \"var(--clr-primary-5)\",\n    boxShadow: \"0 2px var(--clr-primary-5)\"\n  },\n  empinfo: {\n    fontWeight: \"400\"\n  },\n  divider: {\n    // Theme Color, or use css color in quote\n    background: \"white\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 350\n  }\n}));\nexport default Payrunbatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payrunbatch\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Payrunbatch.js"],"names":["React","useState","useEffect","useRef","useReactToPrint","makeStyles","clsx","dayjs","useHistory","emailjs","MaterialTable","MTableToolbar","FiSave","FiCheckCircle","FiMail","useCustomToast","Box","Button","Divider","Grid","GridItem","Flex","Heading","Stack","Spacer","Tabs","TabList","TabPanels","Tab","TabPanel","Table","Thead","Tbody","Tfoot","Tr","Th","Td","TableCaption","Text","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","Wrap","WrapItem","useDisclosure","PayForm","PaySummary","PrintPaySummary","useEmployees","usePayrun","useUpdatePayrun","usePayslipsBatch","useUpdatePayslips","usePayslipsContext","useTablesContext","useSetRecoilState","useRecoilState","payrunState","paydataState","payrunIdState","payrunStatusState","useRecoilValue","drawerWidth","SERVICE_ID","process","env","REACT_APP_EMAILJS_SERVICEID","TEMPLATE_ID","USER_ID","REACT_APP_EMAILJS_USERID","initial_formdata","name","period","pay_date","payrun","bank_name","bank_acno","salary_currency","currency_rate","tap_acno","scp_acno","tap_checkbox","empid","status","allows_type1","allows_type1amt","allows_type2","allows_type2amt","allows_type3","allows_type3amt","allows_type4","allows_type4amt","allows_type5","allows_type5amt","allows_type6","allows_type6amt","allows_type7","allows_type7amt","allows_type8","allows_type8amt","deducts_type1","deducts_type1amt","deducts_type2","deducts_type2amt","deducts_type3","deducts_type3amt","deducts_type4","deducts_type4amt","deducts_type5","deducts_type5amt","deducts_type6","deducts_type6amt","deducts_type7","deducts_type7amt","deducts_type8","deducts_type8amt","wages","tap_amount","scp_amount","total_allowances","total_deductions","site_allows","expenses_claims","nett_pay","wages_bnd","site_allows_bnd","expenses_claims_bnd","total_allowances_bnd","total_deductions_bnd","tap_amount_bnd","scp_amount_bnd","nett_pay_bnd","months","columns","title","field","editable","cellStyle","width","maxWidth","Payrunbatch","history","classes","useStyles","toast","componentRef","fixedHeightPaper","paper","fixedHeight","getSingleBatchPayslip","payslip_period","singlebatch_payslip_loading","singlebatch_payslip_error","payslipsbatch","psbpayrunId","setPSBPayrunId","employees","updatePayslip","updatePayrun","loadPayitems","payitems","payrundata","setPayrundata","payrunId","setPayrunId","payrunstatus","setPayrunStatus","loadFormdata","setLoadFormdata","loadUpdatedata","setLoadUpdatedata","formdata","setFormdata","rowindex","setRowIndex","emponclick","setEmponclick","showSumm","setShowSumm","isCalc","setIsCalc","isStart","setIsStart","isShow","setIsShow","isOpen","onOpen","onClose","singlebatchpayslip","calcPayrunTotals","handleShowSumm","e","preventDefault","handlePrintSummary","exportPdfTable","handleSavePayslips","forEach","rec","id","rec_id","tableData","fields","handleSavePayrun","push","tmpbatch","filter","r","map","totalpayroll","reduce","acc","item","value","isNaN","Math","round","Number","EPSILON","totalwages","index","totaltap","totalscp","totalallows","totaldeducts","totalsiteallows","totalexpensesclaims","tmppayrun","console","log","totalsitesallows","handleVerifyPayslips","handleEmpButtonClick","paydata","handleTabChange","SentEmailModal","filtering","search","toolbar","selection","pageSize","headerStyle","backgroundColor","color","showTitle","Toolbar","props","padding","handleSentEmail","data","mth","substring","yr","pay","checked","emp","emaildata","to_name","to_email","email","message","send","then","response","text","err","border","empbtn","theme","root","flexGrow","button","margin","spacing","container","display","gridTemplateColumns","gridAutoRows","position","left","transform","justifyContent","height","paddingTop","overflow","flexDirection","bcakgroundColor","card","section","underline","marginBottom","background","marginLeft","marginRight","marginbottom","textAlign","empscenter","empcontainer","flexWrap","borderColor","textTransform","fontSize","letterSpacing","transition","cursor","lineHeight","outlineColor","boxShadow","activebtn","empinfo","fontWeight","divider","textField"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport dayjs from \"dayjs\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { FiSave, FiCheckCircle, FiMail } from \"react-icons/fi\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\n//import { Button} from \"@material-ui/core\"\r\nimport {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  GridItem,\r\n  Flex,\r\n  Heading,\r\n  Stack,\r\n  Spacer,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tfoot,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption,\r\n  Text,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Wrap,\r\n  WrapItem,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport PayForm from \"./PayForm\";\r\nimport PaySummary from \"./PaySummary\";\r\nimport PrintPaySummary from \"./PrintPaySummary\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { usePayrun } from \"./payrun/usePayrun\";\r\nimport { useUpdatePayrun } from \"./payrun/useUpdatePayrun\";\r\nimport { usePayslipsBatch } from \"./payslips/usePayslipsBatch\";\r\nimport { useUpdatePayslips } from \"./payslips/useUpdatePayslips\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\r\nimport {\r\n  payrunState,\r\n  paydataState,\r\n  payrunIdState,\r\n  payrunStatusState,\r\n} from \"./data/atomdata\";\r\nimport { useRecoilValue } from \"recoil\";\r\n\r\nconst drawerWidth = 240;\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\nconst initial_formdata = {\r\n  name: \"\",\r\n  period: \"\",\r\n  pay_date: null,\r\n  payrun: \"\",\r\n  bank_name: \"\",\r\n  bank_acno: \"\",\r\n  salary_currency: \"BND\",\r\n  currency_rate: 1,\r\n  tap_acno: \"\",\r\n  scp_acno: \"\",\r\n  tap_checkbox: false,\r\n  empid: \"\",\r\n  status: \"\",\r\n  allows_type1: \"\",\r\n  allows_type1amt: \"\",\r\n  allows_type2: \"\",\r\n  allows_type2amt: \"\",\r\n  allows_type3: \" \",\r\n  allows_type3amt: 0,\r\n  allows_type4: \"\",\r\n  allows_type4amt: 0,\r\n  allows_type5: \" \",\r\n  allows_type5amt: 0,\r\n  allows_type6: \" \",\r\n  allows_type6amt: 0,\r\n  allows_type7: \" \",\r\n  allows_type7amt: 0,\r\n  allows_type8: \" \",\r\n  allows_type8amt: 0,\r\n  deducts_type1: \" \",\r\n  deducts_type1amt: 0,\r\n  deducts_type2: \" \",\r\n  deducts_type2amt: 0,\r\n  deducts_type3: \" \",\r\n  deducts_type3amt: 0,\r\n  deducts_type4: \" \",\r\n  deducts_type4amt: 0,\r\n  deducts_type5: \" \",\r\n  deducts_type5amt: 0,\r\n  deducts_type6: \" \",\r\n  deducts_type6amt: 0,\r\n  deducts_type7: \" \",\r\n  deducts_type7amt: 0,\r\n  deducts_type8: \" \",\r\n  deducts_type8amt: 0,\r\n\r\n  wages: 0,\r\n  tap_amount: 0,\r\n  scp_amount: 0,\r\n  total_allowances: 0,\r\n  total_deductions: 0,\r\n  site_allows: 0,\r\n  expenses_claims: 0,\r\n  nett_pay: 0,\r\n\r\n  wages_bnd: 0,\r\n  site_allows_bnd: 0,\r\n  expenses_claims_bnd: 0,\r\n  total_allowances_bnd: 0,\r\n  total_deductions_bnd: 0,\r\n  tap_amount_bnd: 0,\r\n  scp_amount_bnd: 0,\r\n  nett_pay_bnd: 0,\r\n};\r\n\r\nconst months = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      width: 280,\r\n      maxWidth: 280,\r\n    },\r\n  },\r\n];\r\n\r\nconst Payrunbatch = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const componentRef = useRef();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  //const { register, handleSubmit, control, setValue, reset, watch } = useForm();\r\n\r\n  const {\r\n    //payrun,\r\n    getSingleBatchPayslip,\r\n    //singlebatchpayslip,\r\n    payslip_period,\r\n    //updatePayslip,\r\n    //updatePayrun,\r\n    singlebatch_payslip_loading,\r\n    singlebatch_payslip_error,\r\n  } = usePayslipsContext();\r\n  const { payslipsbatch, psbpayrunId, setPSBPayrunId } = usePayslipsBatch();\r\n  const { employees } = useEmployees();\r\n  const { payrun } = usePayrun();\r\n  const updatePayslip = useUpdatePayslips();\r\n  const updatePayrun = useUpdatePayrun();\r\n  const { loadPayitems, payitems } = useTablesContext();\r\n  const [payrundata, setPayrundata] = useRecoilState(payrunState);\r\n  const [payrunId, setPayrunId] = useRecoilState(payrunIdState);\r\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\r\n  const [loadFormdata, setLoadFormdata] = useState(false);\r\n  const [loadUpdatedata, setLoadUpdatedata] = useState(false);\r\n  const [formdata, setFormdata] = useState(initial_formdata);\r\n  const [rowindex, setRowIndex] = useState(0);\r\n  const [emponclick, setEmponclick] = useState(false);\r\n  const [showSumm, setShowSumm] = useState(false);\r\n  const [isCalc, setIsCalc] = useState(false);\r\n  const [isStart, setIsStart] = useState(true);\r\n  const [isShow, setIsShow] = useState(false);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const singlebatchpayslip = payslipsbatch;\r\n\r\n\r\n  useEffect(() => {\r\n    loadPayitems();\r\n    setEmponclick(true);\r\n    // getSingleBatchPayslip(payslip_period);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setRowIndex(0);\r\n    // handleEmpButtonClick(0);\r\n    setEmponclick(false);\r\n  }, [emponclick]);\r\n\r\n  useEffect(() => {\r\n    setLoadFormdata(false);\r\n  }, [loadUpdatedata]);\r\n\r\n  useEffect(() => {\r\n    setPSBPayrunId(payslip_period);\r\n    //setIsCalc(true);\r\n  }, [psbpayrunId]);\r\n\r\n  useEffect(() => {\r\n    calcPayrunTotals();\r\n    setIsCalc(false);\r\n  }, [isCalc]);\r\n\r\n  // useEffect(() => {\r\n  //   handleEmpButtonClick(0);\r\n  //   setIsLoad(false);\r\n  // }, [isLoad]);\r\n\r\n  const handleShowSumm = (e) => {\r\n    e.preventDefault();\r\n    setShowSumm(!showSumm);\r\n  };\r\n\r\n  const handlePrintSummary = (e) => {\r\n    e.preventDefault();\r\n    exportPdfTable(singlebatchpayslip);\r\n  };\r\n\r\n  const exportPdfTable = (singlebatchpayslip) => {\r\n    PrintPaySummary((singlebatchpayslip = { singlebatchpayslip }));\r\n  };\r\n\r\n  const handleSavePayslips = (e) => {\r\n    e.preventDefault();\r\n\r\n    //calcPayrunTotals();\r\n    // eslint-disable-next-line no-lone-blocks\r\n    {\r\n      singlebatchpayslip.forEach((rec) => {\r\n        const { id, rec_id, tableData, ...fields } = rec;\r\n        updatePayslip({ id, ...fields });\r\n      });\r\n    }\r\n    //update payrun\r\n    handleSavePayrun();\r\n    toast({\r\n      title: \"Changes have been saved!\",\r\n      status: \"success\",\r\n    });\r\n    history.push(\"/payslip\")\r\n  };\r\n\r\n  const calcPayrunTotals = () => {\r\n    // if (!psbpayrunId) {\r\n    //   return null;\r\n    // }\r\n    const tmpbatch = singlebatchpayslip\r\n      .filter((r) => r.payrun === payslip_period)\r\n      .map((rec) => {\r\n        return { ...rec };\r\n      });\r\n    //console.log(\"recalc\", tmpbatch);\r\n\r\n    const totalpayroll = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.nett_pay_bnd) ? 0 : item.nett_pay_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n    const totalwages = tmpbatch.reduce((acc, item, index) => {\r\n      const value = isNaN(item.wages_bnd) ? 0 : item.wages_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n    const totaltap = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.tap_amount_bnd) ? 0 : item.tap_amount_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalscp = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.scp_amount_bnd) ? 0 : item.scp_amount_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalallows = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.total_allowances_bnd)\r\n        ? 0\r\n        : item.total_allowances_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totaldeducts = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.total_deductions_bnd)\r\n        ? 0\r\n        : item.total_deductions_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalsiteallows = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.site_allows_bnd) ? 0 : item.site_allows_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalexpensesclaims = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.expenses_claims_bnd)\r\n        ? 0\r\n        : item.expenses_claims_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    setPayrundata({\r\n      ...payrundata,\r\n      totalpayroll: totalpayroll,\r\n      totalwages: totalwages,\r\n      totaltap: totaltap,\r\n      totalscp: totalscp,\r\n      totalallows: totalallows,\r\n      totaldeducts: totaldeducts,\r\n      totalsiteallows: totalsiteallows,\r\n      totalexpensesclaims: totalexpensesclaims,\r\n    });\r\n  };\r\n\r\n  const handleSavePayrun = () => {\r\n    if (payrundata.status === \"Verified\" || payrundata.status === \"Approved\") {\r\n      toast({\r\n        title: `This payroll batch has been ${payrundata.status}! No changes can be made!`,\r\n        status: \"warning\",\r\n      });\r\n      return <div></div>;\r\n    }\r\n\r\n    const tmppayrun = payrun.filter((r) => r.payrun === payslip_period);\r\n    //console.log(\"paysave\", tmppayrun[0].id);\r\n    // eslint-disable-next-line no-lone-blocks\r\n    console.log(\"paybatch\", payslip_period, payrundata);\r\n    updatePayrun({\r\n      id: tmppayrun[0].id,\r\n      totalpayroll: payrundata.totalpayroll,\r\n      totalwages: payrundata.totalwages,\r\n      totaltap: payrundata.totaltap,\r\n      totalscp: payrundata.totalscp,\r\n      totalallows: payrundata.totalallows,\r\n      totaldeducts: payrundata.totaldeducts,\r\n      totalsitesallows: payrundata.totalsiteallows,\r\n      totalexpensesclaims: payrundata.totalexpensesclaims,\r\n    });\r\n    history.push(\"/payslip\");\r\n  };\r\n\r\n  const handleVerifyPayslips = (e) => {\r\n    e.preventDefault();\r\n    setPayrundata({ ...payrundata, status: \"Verified\" });\r\n    setPayrunStatus(\"Verified\");\r\n    updatePayrun({ id: payrunId, status: \"Verified\" });\r\n    toast({\r\n      title: \"Batch has been verified!\",\r\n      status: \"success\",\r\n    });\r\n  };\r\n\r\n  const handleEmpButtonClick = (index) => {\r\n    const paydata = singlebatchpayslip[index];\r\n    setFormdata(initial_formdata);\r\n    setFormdata({ ...initial_formdata, ...paydata });\r\n    setFormdata({ ...initial_formdata, ...paydata });\r\n    setLoadFormdata(true);\r\n  };\r\n\r\n  const handleTabChange = (index) => {\r\n  \r\n    if (index === 1) {\r\n      setIsShow(true)\r\n      calcPayrunTotals();\r\n    } \r\n   \r\n  };\r\n\r\n  const SentEmailModal = () => {\r\n    return (\r\n      <Box>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payslipsbatch}\r\n          title=\"Employees\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: true,\r\n            selection: true,\r\n            pageSize: 10,\r\n            headerStyle: {\r\n              backgroundColor: \"#daad86\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    colorScheme=\"blue\"\r\n                    isDisabled={payrundata.status !== \"Approve\" ? true : false}\r\n                    onClick={() => handleSentEmail()}\r\n                    leftIcon={<FiMail color=\"white\" fontSize=\"1.5em\" />}\r\n                  >\r\n                    Email\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const handleSentEmail = (data) => {\r\n    const mth = months[payslip_period.substring(6, 7)];\r\n    const yr = payslip_period.substring(0, 4);\r\n\r\n    payslipsbatch.forEach((pay) => {\r\n      if (pay.tableData.checked) {\r\n        const { name, empid } = pay;\r\n        const emp = employees\r\n          .filter((r) => r.id === empid)\r\n          .map((rec) => {\r\n            return { ...rec };\r\n          });\r\n\r\n        var emaildata = {\r\n          to_name: name,\r\n          to_email: emp[0].email,\r\n          message: `Your payroll for the month of ${mth} ${yr} has been transfered. Please login in to view your payslip!`,\r\n        };\r\n\r\n        emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n          function (response) {\r\n            console.log(response.status, response.text);\r\n            toast({\r\n              title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n              status: \"success\",\r\n            });\r\n          },\r\n          function (err) {\r\n            console.log(err);\r\n            toast({\r\n              title: `Email has fail to send to ${emaildata.to_email}!`,\r\n              status: \"warning\",\r\n            });\r\n          }\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      marginLeft={4}\r\n      marginTop={70}\r\n      w=\"98%\"\r\n      h=\"100%\"\r\n      style={{ backgroundColor: \"lightcyan\" }}\r\n    >\r\n      <Grid templateRows=\"repeat(10,1fr)\" templateColumns=\"repeat(1,1fr)\">\r\n        <GridItem rowSpan={1} colSpan={1}>\r\n          <Grid templateRows=\"repeat(1,1fr)\" templateColumns=\"repeat(10,1fr)\">\r\n            <GridItem rowSpan={1} colSpan={2}></GridItem>\r\n            <GridItem rowSpan={1} colSpan={4}>\r\n              <Box textAlign=\"center\" alignItems=\"center\">\r\n                <Heading pl=\"10\" pt=\"2\">\r\n                  Payroll\r\n                </Heading>\r\n              </Box>\r\n            </GridItem>\r\n            <GridItem rowSpan={1} colSpan={4}>\r\n              <Box pt=\"2\" pr={5} alignItems=\"right\" align=\"right\">\r\n                <Stack spacing={4} direction=\"row\" align=\"center\" pl={150}>\r\n                  <Button\r\n                    \r\n                    width=\"800px\"\r\n                    colorScheme=\"blue\"\r\n                    isDisabled={!isShow}\r\n                    // isDisabled={\r\n                    //   payrundata.status === \"Verified\" ||\r\n                    //   payrundata.status === \"Approved\"\r\n                    //     ? true\r\n                    //     : false\r\n                    // }\r\n                    onClick={(e) => handleSavePayslips(e)}\r\n                    leftIcon={<FiSave color=\"white\" fontSize=\"1.5em\" />}\r\n                  >\r\n                    Save/Exit\r\n                  </Button>\r\n                  <Button\r\n                    width=\"500px\"\r\n                    colorScheme=\"blue\"\r\n                    onClick={(e) => handlePrintSummary(e)}\r\n                    leftIcon={<FiSave color=\"white\" fontSize=\"1.5em\" />}\r\n                  >\r\n                    Print\r\n                  </Button>\r\n\r\n                  <Button\r\n                    width=\"500px\"\r\n                    colorScheme=\"blue\"\r\n                    isDisabled={\r\n                      payrundata.status === \"Verified\" ||\r\n                      payrundata.status === \"Approved\" ||\r\n                      payrundata.status === \"New\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    onClick={(e) => handleVerifyPayslips(e)}\r\n                    leftIcon={<FiCheckCircle color=\"white\" fontSize=\"1.5em\" />}\r\n                  >\r\n                    Verify\r\n                  </Button>\r\n                  <Button\r\n                    width=\"500px\"\r\n                    colorScheme=\"blue\"\r\n                    isDisabled={payrundata.status !== \"Approved\" ? true : false}\r\n                    onClick={onOpen}\r\n                    leftIcon={<FiMail color=\"white\" fontSize=\"1.5em\" />}\r\n                  >\r\n                    Email\r\n                  </Button>\r\n                </Stack>\r\n              </Box>\r\n            </GridItem>\r\n          </Grid>\r\n          <Divider\r\n            style={{ border: \"1px solid lightgrey\" }}\r\n            orientation=\"horizontal\"\r\n            colorScheme=\"red\"\r\n            variant=\"solid\"\r\n          />\r\n        </GridItem>\r\n\r\n        <Tabs defaultIndex={0} onChange={(index) => handleTabChange(index)}>\r\n          <TabList marginLeft={4}>\r\n            <Tab>\r\n              <Box>\r\n                <Heading size=\"sm\">Details</Heading>\r\n              </Box>\r\n            </Tab>\r\n            <Tab>\r\n              <Box>\r\n                <Heading size=\"sm\">Summary</Heading>\r\n              </Box>\r\n            </Tab>\r\n          </TabList>\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <Grid\r\n                templateRows=\"repeat(1,1fr)\"\r\n                templateColumns=\"repeat(10,1fr)\"\r\n              >\r\n                <GridItem colSpan={2}>\r\n                  <Box textAlign=\"center\" p={4}>\r\n                    <Heading size=\"sm\" alignItems=\"center\">\r\n                      Employees\r\n                    </Heading>\r\n                  </Box>\r\n                  <Divider backgroundColor=\"white\" />\r\n                  <Box border=\"2px solid white\" backgroundColor=\"cyan.100\">\r\n                    {/* {payslipsbatch &&\r\n                      payslipsbatch.map((item, index) => {\r\n                        return (\r\n                          <div>\r\n                            <Button\r\n                              className={classes.empbtn}\r\n                              variant=\"outlined\"\r\n                              // ${index === value && \"activebtn\"}\r\n                              onClick={(e) => {\r\n                                setRowIndex(index);\r\n                                handleEmpButtonClick(index);\r\n                              }}\r\n                            >\r\n                              <div key={item.id}> {item.name}</div>\r\n                            </Button>\r\n                            <Divider\r\n                              variant=\"fullWidth\"\r\n                              className={classes.divider}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      })} */}\r\n                    <Table variant=\"simple\">\r\n                      {/* <Thead>\r\n                        <Tr>\r\n                          <Th>Employees</Th>\r\n                        </Tr>\r\n                      </Thead> */}\r\n                      <Tbody>\r\n                        {payslipsbatch.map((item, index) => {\r\n                          return (\r\n                            <div>\r\n                              <Button\r\n                                className={classes.empbtn}\r\n                                variant=\"outlined\"\r\n                                // ${index === value && \"activebtn\"}\r\n                                onClick={(e) => {\r\n                                  setRowIndex(index);\r\n                                  setIsStart(false);\r\n                                  handleEmpButtonClick(index);\r\n                                }}\r\n                              >\r\n                                <Text isTruncated maxWidth={240}>\r\n                                  {item.name}\r\n                                </Text>\r\n                              </Button>\r\n                              <Divider backgroundColor=\"white\" />\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </Tbody>\r\n                    </Table>\r\n                  </Box>\r\n                </GridItem>\r\n                <GridItem colSpan={8}>\r\n                  <PayForm\r\n                    formdata={formdata}\r\n                    setFormdata={setFormdata}\r\n                    loadFormdata={loadFormdata}\r\n                    setLoadFormdata={setLoadFormdata}\r\n                    payitems={payitems}\r\n                    setLoadUpdatedata={setLoadUpdatedata}\r\n                    singlebatchpayslip={singlebatchpayslip}\r\n                    rowindex={rowindex}\r\n                    isCalc={isCalc}\r\n                    isStart={isStart}\r\n                    setIsStart={setIsStart}\r\n                    setIsCalc={setIsCalc}\r\n                  />\r\n                </GridItem>\r\n              </Grid>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <PaySummary\r\n                payrundata={payrundata}\r\n                singlebatchpayslip={singlebatchpayslip}\r\n              />\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Grid>\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          {/* <ModalHeader>Sending EMail Notifications</ModalHeader> */}\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <SentEmailModal />\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    paddingTop: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"white\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"white\",\r\n  },\r\n  section: {\r\n    width: \"80vw\",\r\n    margin: \"1rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  empscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  empcontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  empbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  empinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  divider: {\r\n    // Theme Color, or use css color in quote\r\n    background: \"white\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n}));\r\n\r\nexport default Payrunbatch;\r\n"]},"metadata":{},"sourceType":"module"}