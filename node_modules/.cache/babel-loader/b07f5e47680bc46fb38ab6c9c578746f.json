{"ast":null,"code":"import _classCallCheck from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { LeveledEffectAction } from \"../EffectActions/LeveledEffectAction\";\n/**\n * @description Converts the image to black and white.\n * @extends LeveledEffectAction\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nvar BlackwhiteEffectAction = /*#__PURE__*/function (_LeveledEffectAction) {\n  _inherits(BlackwhiteEffectAction, _LeveledEffectAction);\n\n  var _super = _createSuper(BlackwhiteEffectAction);\n\n  function BlackwhiteEffectAction() {\n    _classCallCheck(this, BlackwhiteEffectAction);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BlackwhiteEffectAction, [{\n    key: \"threshold\",\n    value: function threshold(value) {\n      return this.setLevel(value);\n    }\n  }]);\n\n  return BlackwhiteEffectAction;\n}(LeveledEffectAction);\n\nexport { BlackwhiteEffectAction };","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/actions/effect/leveled/blackwhite.js"],"names":["LeveledEffectAction","BlackwhiteEffectAction","value","setLevel"],"mappings":";;;;AAAA,SAASA,mBAAT,QAAoC,sCAApC;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,sB;;;;;;;;;;;;;WACF,mBAAUC,KAAV,EAAiB;AACb,aAAO,KAAKC,QAAL,CAAcD,KAAd,CAAP;AACH;;;;EAHgCF,mB;;AAKrC,SAASC,sBAAT","sourcesContent":["import { LeveledEffectAction } from \"../EffectActions/LeveledEffectAction\";\n/**\n * @description Converts the image to black and white.\n * @extends LeveledEffectAction\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass BlackwhiteEffectAction extends LeveledEffectAction {\n    threshold(value) {\n        return this.setLevel(value);\n    }\n}\nexport { BlackwhiteEffectAction };\n"]},"metadata":{},"sourceType":"module"}