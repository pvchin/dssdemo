{"ast":null,"code":"import _classCallCheck from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Action } from \"../internal/Action\";\nimport { QualifierValue } from \"../internal/qualifier/QualifierValue\";\nimport { Qualifier } from \"../internal/qualifier/Qualifier\";\nimport { prepareColor } from \"../internal/utils/prepareColor\";\n/**\n * @description Adds a solid border around an image or video.\n *\n *  <b>Learn more:</b>\n * {@link https://cloudinary.com/documentation/image_transformations#adding_image_borders | Adding image borders}\n * @memberOf Actions\n * @namespace Border\n * @example\n * import {Cloudinary} from \"@cloudinary/base\";\n * import {solid} from \"@cloudinary/base/actions/border\";\n *\n * const yourCldInstance = new Cloudinary({cloud:{cloudName:'demo'}});\n * const image = yourCldInstance.image('woman');\n * image.border(\n *  solid(15, 'green'),\n *  // Or alternatively\n *  solid().width(15).color('green')\n * );\n *\n */\n\n/**\n * @memberOf Actions.Border\n * @see Actions.Border\n * @example\n * // Used through a builder function Border.solid(), and not by creating a new instance\n * import {Cloudinary} from \"@cloudinary/base\";\n *\n * const yourCldInstance = new Cloudinary({cloud:{cloudName:'demo'}});\n * const image = yourCldInstance.image('woman');\n * image.border(\n *  Border.solid(15, 'green'),\n *  // Or alternatively\n *  Border.solid().width(15).color('green')\n * );\n */\n\nvar BorderAction = /*#__PURE__*/function (_Action) {\n  _inherits(BorderAction, _Action);\n\n  var _super = _createSuper(BorderAction);\n\n  /**\n   * @description Adds a border of the specified type around an image or video.\n   * @param {'solid'} borderType The type of border (currently only 'solid' is supported). Use values in {@link Qualifiers.Border|Border Values}.\n   * @param {string} color The color of the border.\n   * @param {number} borderWidth The width in pixels.\n   */\n  function BorderAction(borderType, color, borderWidth) {\n    var _this;\n\n    _classCallCheck(this, BorderAction);\n\n    _this = _super.call(this);\n    _this.borderType = borderType;\n    _this.borderColor = prepareColor(color);\n    _this.borderWidth = borderWidth;\n    return _this;\n  }\n  /**\n   * @description Sets the width of the border\n   * @param {number | string} borderWidth The width in pixels.\n   */\n\n\n  _createClass(BorderAction, [{\n    key: \"width\",\n    value: function width(borderWidth) {\n      this.borderWidth = borderWidth;\n      return this;\n    }\n    /**\n     * @description Sets the color of the border.\n     * @param {string} borderColor The color of the border.\n     */\n\n  }, {\n    key: \"color\",\n    value: function color(borderColor) {\n      this.borderColor = prepareColor(borderColor);\n      return this;\n    }\n    /**\n     * @description Rounds the specified corners of an image.\n     * @param {RoundCornersAction} roundCorners\n     * @return {this}\n     */\n\n  }, {\n    key: \"roundCorners\",\n    value: function roundCorners(_roundCorners) {\n      this._roundCorners = _roundCorners;\n      return this;\n    }\n  }, {\n    key: \"prepareQualifiers\",\n    value: function prepareQualifiers() {\n      var qualifierValue = new QualifierValue([\"\".concat(this.borderWidth, \"px\"), this.borderType, \"\".concat(this.borderColor)]).setDelimiter('_');\n      this.addQualifier(new Qualifier('bo', qualifierValue));\n\n      if (this._roundCorners) {\n        this.addQualifier(this._roundCorners.qualifiers.get('r'));\n      }\n    }\n  }]);\n\n  return BorderAction;\n}(Action);\n/**\n * @summary action\n * @memberOf Actions.Border\n * @description Sets the style of the border.\n * @param {number | string} width The width in pixels.\n * @param {string} color The color of the border, e.g 'green', 'yellow'.\n * @return {Actions.Border.BorderAction}\n */\n\n\nfunction solid(width, color) {\n  return new BorderAction('solid', color, width);\n}\n\nvar Border = {\n  solid: solid\n};\nexport { BorderAction, Border, solid };","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/actions/border.js"],"names":["Action","QualifierValue","Qualifier","prepareColor","BorderAction","borderType","color","borderWidth","borderColor","roundCorners","_roundCorners","qualifierValue","setDelimiter","addQualifier","qualifiers","get","solid","width","Border"],"mappings":";;;;AAAA,SAASA,MAAT,QAAuB,oBAAvB;AACA,SAASC,cAAT,QAA+B,sCAA/B;AACA,SAASC,SAAT,QAA0B,iCAA1B;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,Y;;;;;AACF;AACJ;AACA;AACA;AACA;AACA;AACI,wBAAYC,UAAZ,EAAwBC,KAAxB,EAA+BC,WAA/B,EAA4C;AAAA;;AAAA;;AACxC;AACA,UAAKF,UAAL,GAAkBA,UAAlB;AACA,UAAKG,WAAL,GAAmBL,YAAY,CAACG,KAAD,CAA/B;AACA,UAAKC,WAAL,GAAmBA,WAAnB;AAJwC;AAK3C;AACD;AACJ;AACA;AACA;;;;;WACI,eAAMA,WAAN,EAAmB;AACf,WAAKA,WAAL,GAAmBA,WAAnB;AACA,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,eAAMC,WAAN,EAAmB;AACf,WAAKA,WAAL,GAAmBL,YAAY,CAACK,WAAD,CAA/B;AACA,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,sBAAaC,aAAb,EAA2B;AACvB,WAAKC,aAAL,GAAqBD,aAArB;AACA,aAAO,IAAP;AACH;;;WACD,6BAAoB;AAChB,UAAME,cAAc,GAAG,IAAIV,cAAJ,CAAmB,WAAI,KAAKM,WAAT,SAA0B,KAAKF,UAA/B,YAA8C,KAAKG,WAAnD,EAAnB,EAAsFI,YAAtF,CAAmG,GAAnG,CAAvB;AACA,WAAKC,YAAL,CAAkB,IAAIX,SAAJ,CAAc,IAAd,EAAoBS,cAApB,CAAlB;;AACA,UAAI,KAAKD,aAAT,EAAwB;AACpB,aAAKG,YAAL,CAAkB,KAAKH,aAAL,CAAmBI,UAAnB,CAA8BC,GAA9B,CAAkC,GAAlC,CAAlB;AACH;AACJ;;;;EA5CsBf,M;AA8C3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASgB,KAAT,CAAeC,KAAf,EAAsBX,KAAtB,EAA6B;AACzB,SAAO,IAAIF,YAAJ,CAAiB,OAAjB,EAA0BE,KAA1B,EAAiCW,KAAjC,CAAP;AACH;;AACD,IAAMC,MAAM,GAAG;AACXF,EAAAA,KAAK,EAALA;AADW,CAAf;AAGA,SAASZ,YAAT,EAAuBc,MAAvB,EAA+BF,KAA/B","sourcesContent":["import { Action } from \"../internal/Action\";\nimport { QualifierValue } from \"../internal/qualifier/QualifierValue\";\nimport { Qualifier } from \"../internal/qualifier/Qualifier\";\nimport { prepareColor } from \"../internal/utils/prepareColor\";\n/**\n * @description Adds a solid border around an image or video.\n *\n *  <b>Learn more:</b>\n * {@link https://cloudinary.com/documentation/image_transformations#adding_image_borders | Adding image borders}\n * @memberOf Actions\n * @namespace Border\n * @example\n * import {Cloudinary} from \"@cloudinary/base\";\n * import {solid} from \"@cloudinary/base/actions/border\";\n *\n * const yourCldInstance = new Cloudinary({cloud:{cloudName:'demo'}});\n * const image = yourCldInstance.image('woman');\n * image.border(\n *  solid(15, 'green'),\n *  // Or alternatively\n *  solid().width(15).color('green')\n * );\n *\n */\n/**\n * @memberOf Actions.Border\n * @see Actions.Border\n * @example\n * // Used through a builder function Border.solid(), and not by creating a new instance\n * import {Cloudinary} from \"@cloudinary/base\";\n *\n * const yourCldInstance = new Cloudinary({cloud:{cloudName:'demo'}});\n * const image = yourCldInstance.image('woman');\n * image.border(\n *  Border.solid(15, 'green'),\n *  // Or alternatively\n *  Border.solid().width(15).color('green')\n * );\n */\nclass BorderAction extends Action {\n    /**\n     * @description Adds a border of the specified type around an image or video.\n     * @param {'solid'} borderType The type of border (currently only 'solid' is supported). Use values in {@link Qualifiers.Border|Border Values}.\n     * @param {string} color The color of the border.\n     * @param {number} borderWidth The width in pixels.\n     */\n    constructor(borderType, color, borderWidth) {\n        super();\n        this.borderType = borderType;\n        this.borderColor = prepareColor(color);\n        this.borderWidth = borderWidth;\n    }\n    /**\n     * @description Sets the width of the border\n     * @param {number | string} borderWidth The width in pixels.\n     */\n    width(borderWidth) {\n        this.borderWidth = borderWidth;\n        return this;\n    }\n    /**\n     * @description Sets the color of the border.\n     * @param {string} borderColor The color of the border.\n     */\n    color(borderColor) {\n        this.borderColor = prepareColor(borderColor);\n        return this;\n    }\n    /**\n     * @description Rounds the specified corners of an image.\n     * @param {RoundCornersAction} roundCorners\n     * @return {this}\n     */\n    roundCorners(roundCorners) {\n        this._roundCorners = roundCorners;\n        return this;\n    }\n    prepareQualifiers() {\n        const qualifierValue = new QualifierValue([`${this.borderWidth}px`, this.borderType, `${this.borderColor}`]).setDelimiter('_');\n        this.addQualifier(new Qualifier('bo', qualifierValue));\n        if (this._roundCorners) {\n            this.addQualifier(this._roundCorners.qualifiers.get('r'));\n        }\n    }\n}\n/**\n * @summary action\n * @memberOf Actions.Border\n * @description Sets the style of the border.\n * @param {number | string} width The width in pixels.\n * @param {string} color The color of the border, e.g 'green', 'yellow'.\n * @return {Actions.Border.BorderAction}\n */\nfunction solid(width, color) {\n    return new BorderAction('solid', color, width);\n}\nconst Border = {\n    solid\n};\nexport { BorderAction, Border, solid };\n"]},"metadata":{},"sourceType":"module"}