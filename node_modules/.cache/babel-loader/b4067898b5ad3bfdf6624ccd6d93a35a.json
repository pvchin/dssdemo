{"ast":null,"code":"import _regeneratorRuntime from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useState,useCallback}from\"react\";import{useQuery}from\"react-query\";import{expenses_url}from\"../../utils/constants\";import{filterByPayrun}from\"./utils\";import axios from\"axios\";import{queryKeys}from\"../react-query/constants\";function getExpensesPayrun(_x){return _getExpensesPayrun.apply(this,arguments);}function _getExpensesPayrun(){_getExpensesPayrun=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(payrun){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"\".concat(expenses_url,\"?pr=\").concat(payrun));case 2:_yield$axios$get=_context.sent;data=_yield$axios$get.data;return _context.abrupt(\"return\",data);case 5:case\"end\":return _context.stop();}}},_callee);}));return _getExpensesPayrun.apply(this,arguments);}export function useExpensesPayrun(payrun){var _useState=useState(\"all\"),_useState2=_slicedToArray(_useState,2),expfilter=_useState2[0],setExpFilter=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),exppayrunId=_useState4[0],setExpPayrunId=_useState4[1];var selectFn=useCallback(function(unfiltered){return filterByPayrun(unfiltered,expfilter);},[expfilter]);var fallback=[];var _useQuery=useQuery([queryKeys.expensespayrun,exppayrunId],//queryKeys.expenses_payrun,\nfunction(){return getExpensesPayrun(exppayrunId);},{select:expfilter!==\"all\"?selectFn:undefined}),_useQuery$data=_useQuery.data,expensespayrun=_useQuery$data===void 0?fallback:_useQuery$data;return{expensespayrun:expensespayrun,expfilter:expfilter,setExpFilter:setExpFilter,setExpPayrunId:setExpPayrunId};}","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/expenses/useExpensesPayrun.js"],"names":["useState","useCallback","useQuery","expenses_url","filterByPayrun","axios","queryKeys","getExpensesPayrun","payrun","get","data","useExpensesPayrun","expfilter","setExpFilter","exppayrunId","setExpPayrunId","selectFn","unfiltered","fallback","expensespayrun","select","undefined"],"mappings":"qcAAA,OAASA,QAAT,CAAmBC,WAAnB,KAAsC,OAAtC,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,YAAT,KAA6B,uBAA7B,CACA,OAASC,cAAT,KAA+B,SAA/B,CAEA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,0BAA1B,C,QAEeC,CAAAA,iB,+JAAf,iBAAiCC,MAAjC,kKACyBH,CAAAA,KAAK,CAACI,GAAN,WAAaN,YAAb,gBAAgCK,MAAhC,EADzB,uCACUE,IADV,kBACUA,IADV,iCAGSA,IAHT,wD,oDAMA,MAAO,SAASC,CAAAA,iBAAT,CAA2BH,MAA3B,CAAmC,eACNR,QAAQ,CAAC,KAAD,CADF,wCACjCY,SADiC,eACtBC,YADsB,8BAEFb,QAAQ,CAAC,EAAD,CAFN,yCAEjCc,WAFiC,eAEpBC,cAFoB,eAIxC,GAAMC,CAAAA,QAAQ,CAAGf,WAAW,CAC1B,SAACgB,UAAD,QAAgBb,CAAAA,cAAc,CAACa,UAAD,CAAaL,SAAb,CAA9B,EAD0B,CAE1B,CAACA,SAAD,CAF0B,CAA5B,CAKA,GAAMM,CAAAA,QAAQ,CAAG,EAAjB,CATwC,cAUIhB,QAAQ,CAClD,CAACI,SAAS,CAACa,cAAX,CAA2BL,WAA3B,CADkD,CAElD;AACA,iBAAMP,CAAAA,iBAAiB,CAACO,WAAD,CAAvB,EAHkD,CAIlD,CACEM,MAAM,CAAER,SAAS,GAAK,KAAd,CAAsBI,QAAtB,CAAiCK,SAD3C,CAJkD,CAVZ,0BAUhCX,IAVgC,CAU1BS,cAV0B,yBAUTD,QAVS,gBAmBxC,MAAO,CAAEC,cAAc,CAAdA,cAAF,CAAkBP,SAAS,CAATA,SAAlB,CAA6BC,YAAY,CAAZA,YAA7B,CAA2CE,cAAc,CAAdA,cAA3C,CAAP,CACD","sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { expenses_url } from \"../../utils/constants\";\r\nimport { filterByPayrun } from \"./utils\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getExpensesPayrun(payrun) {\r\n  const { data } = await axios.get(`${expenses_url}?pr=${payrun}`);\r\n  //const { data } = await axios.get(`${expenses_url}`);\r\n  return data;\r\n}\r\n\r\nexport function useExpensesPayrun(payrun) {\r\n  const [expfilter, setExpFilter] = useState(\"all\");\r\n  const [exppayrunId, setExpPayrunId] = useState(\"\");\r\n\r\n  const selectFn = useCallback(\r\n    (unfiltered) => filterByPayrun(unfiltered, expfilter),\r\n    [expfilter]\r\n  );\r\n\r\n  const fallback = [];\r\n  const { data: expensespayrun = fallback } = useQuery(\r\n    [queryKeys.expensespayrun, exppayrunId],\r\n    //queryKeys.expenses_payrun,\r\n    () => getExpensesPayrun(exppayrunId),\r\n    {\r\n      select: expfilter !== \"all\" ? selectFn : undefined,\r\n    }\r\n  );\r\n\r\n  return { expensespayrun, expfilter, setExpFilter, setExpPayrunId };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}