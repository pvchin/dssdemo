{"ast":null,"code":"import { Action } from \"../../internal/Action\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\n/**\n * @description Defines how to improve an image by automatically adjusting image colors, contrast and brightness.</br>\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/image_transformations#image_improvement_effects | Image improvement effects}\n * @memberOf Actions.Adjust\n */\n\nclass ImproveAction extends Action {\n  constructor() {\n    super();\n  }\n  /**\n   *\n   * @description The improve mode.\n   * @param {Qualifiers.ImproveMode | string} value\n   */\n\n\n  mode(value) {\n    this.modeValue = value;\n    return this;\n  }\n  /**\n   * @description How much to blend the improved result with the original image, where 0 means only use the original and 100 means only use the improved result. (Range: 0 to 100, Server default: 100)\n   * @param {number} value\n   */\n\n\n  blend(value) {\n    this.blendValue = value;\n    return this;\n  }\n\n  prepareQualifiers() {\n    const qualifierValue = new QualifierValue(['improve', this.modeValue, this.blendValue]).setDelimiter(':');\n    this.addQualifier(new Qualifier('e', qualifierValue));\n    return this;\n  }\n\n}\n\nexport { ImproveAction };","map":{"version":3,"sources":["D:/react-myprojects/dss/node_modules/@cloudinary/base/actions/adjust/ImproveAction.js"],"names":["Action","QualifierValue","Qualifier","ImproveAction","constructor","mode","value","modeValue","blend","blendValue","prepareQualifiers","qualifierValue","setDelimiter","addQualifier"],"mappings":"AAAA,SAASA,MAAT,QAAuB,uBAAvB;AACA,SAASC,cAAT,QAA+B,yCAA/B;AACA,SAASC,SAAT,QAA0B,oCAA1B;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,aAAN,SAA4BH,MAA5B,CAAmC;AAC/BI,EAAAA,WAAW,GAAG;AACV;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIC,EAAAA,IAAI,CAACC,KAAD,EAAQ;AACR,SAAKC,SAAL,GAAiBD,KAAjB;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIE,EAAAA,KAAK,CAACF,KAAD,EAAQ;AACT,SAAKG,UAAL,GAAkBH,KAAlB;AACA,WAAO,IAAP;AACH;;AACDI,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,cAAc,GAAG,IAAIV,cAAJ,CAAmB,CAAC,SAAD,EAAY,KAAKM,SAAjB,EAA4B,KAAKE,UAAjC,CAAnB,EAAiEG,YAAjE,CAA8E,GAA9E,CAAvB;AACA,SAAKC,YAAL,CAAkB,IAAIX,SAAJ,CAAc,GAAd,EAAmBS,cAAnB,CAAlB;AACA,WAAO,IAAP;AACH;;AAzB8B;;AA2BnC,SAASR,aAAT","sourcesContent":["import { Action } from \"../../internal/Action\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\n/**\n * @description Defines how to improve an image by automatically adjusting image colors, contrast and brightness.</br>\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/image_transformations#image_improvement_effects | Image improvement effects}\n * @memberOf Actions.Adjust\n */\nclass ImproveAction extends Action {\n    constructor() {\n        super();\n    }\n    /**\n     *\n     * @description The improve mode.\n     * @param {Qualifiers.ImproveMode | string} value\n     */\n    mode(value) {\n        this.modeValue = value;\n        return this;\n    }\n    /**\n     * @description How much to blend the improved result with the original image, where 0 means only use the original and 100 means only use the improved result. (Range: 0 to 100, Server default: 100)\n     * @param {number} value\n     */\n    blend(value) {\n        this.blendValue = value;\n        return this;\n    }\n    prepareQualifiers() {\n        const qualifierValue = new QualifierValue(['improve', this.modeValue, this.blendValue]).setDelimiter(':');\n        this.addQualifier(new Qualifier('e', qualifierValue));\n        return this;\n    }\n}\nexport { ImproveAction };\n"]},"metadata":{},"sourceType":"module"}