{"ast":null,"code":"import _classCallCheck from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Action } from \"../../internal/Action\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { animatedWebP } from \"../../qualifiers/flag\";\nimport { animated } from \"../../qualifiers/flag\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description Converts a video to an animated webp or gif.\n * The resulting transformation includes format (f_format) and the animated flag (fl_animated).\n * The flag fl_awebp is added only when an animated webp is requested.\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\n\nvar ToAnimatedAction = /*#__PURE__*/function (_Action) {\n  _inherits(ToAnimatedAction, _Action);\n\n  var _super = _createSuper(ToAnimatedAction);\n\n  function ToAnimatedAction(animatedFormat) {\n    var _this;\n\n    _classCallCheck(this, ToAnimatedAction);\n\n    _this = _super.call(this);\n\n    if (animatedFormat.toString() === 'webp') {\n      _this.addFlag(animatedWebP());\n    }\n\n    _this.addFlag(animated());\n\n    _this.addQualifier(new Qualifier('f', animatedFormat));\n\n    return _this;\n  }\n  /**\n   * @description Sets the time between frames.\n   * @param delayValue The time in milliseconds.\n   */\n\n\n  _createClass(ToAnimatedAction, [{\n    key: \"delay\",\n    value: function delay(delayValue) {\n      this.addQualifier(new Qualifier('dl', delayValue));\n      return this;\n    }\n    /**\n     * @description Sets the frequency at which the video is sampled.\n     * @param sampling As a string (e.g. '2.3s'), samples one frame every 2.3 seconds.<br>As a number (e.g. 20),\n     * samples that many equally spaced frames over the duration of the video.\n     */\n\n  }, {\n    key: \"sampling\",\n    value: function sampling(_sampling) {\n      this.addQualifier(new Qualifier('vs', _sampling));\n      return this;\n    }\n  }]);\n\n  return ToAnimatedAction;\n}(Action);\n\nexport default ToAnimatedAction;","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/node_modules/@cloudinary/base/actions/transcode/ToAnimatedAction.js"],"names":["Action","Qualifier","animatedWebP","animated","ToAnimatedAction","animatedFormat","toString","addFlag","addQualifier","delayValue","sampling"],"mappings":";;;;AAAA,SAASA,MAAT,QAAuB,uBAAvB;AACA,SAASC,SAAT,QAA0B,oCAA1B;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,gB;;;;;AACF,4BAAYC,cAAZ,EAA4B;AAAA;;AAAA;;AACxB;;AACA,QAAIA,cAAc,CAACC,QAAf,OAA8B,MAAlC,EAA0C;AACtC,YAAKC,OAAL,CAAaL,YAAY,EAAzB;AACH;;AACD,UAAKK,OAAL,CAAaJ,QAAQ,EAArB;;AACA,UAAKK,YAAL,CAAkB,IAAIP,SAAJ,CAAc,GAAd,EAAmBI,cAAnB,CAAlB;;AANwB;AAO3B;AACD;AACJ;AACA;AACA;;;;;WACI,eAAMI,UAAN,EAAkB;AACd,WAAKD,YAAL,CAAkB,IAAIP,SAAJ,CAAc,IAAd,EAAoBQ,UAApB,CAAlB;AACA,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,kBAASC,SAAT,EAAmB;AACf,WAAKF,YAAL,CAAkB,IAAIP,SAAJ,CAAc,IAAd,EAAoBS,SAApB,CAAlB;AACA,aAAO,IAAP;AACH;;;;EAzB0BV,M;;AA2B/B,eAAeI,gBAAf","sourcesContent":["import { Action } from \"../../internal/Action\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier\";\nimport { animatedWebP } from \"../../qualifiers/flag\";\nimport { animated } from \"../../qualifiers/flag\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description Converts a video to an animated webp or gif.\n * The resulting transformation includes format (f_format) and the animated flag (fl_animated).\n * The flag fl_awebp is added only when an animated webp is requested.\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\nclass ToAnimatedAction extends Action {\n    constructor(animatedFormat) {\n        super();\n        if (animatedFormat.toString() === 'webp') {\n            this.addFlag(animatedWebP());\n        }\n        this.addFlag(animated());\n        this.addQualifier(new Qualifier('f', animatedFormat));\n    }\n    /**\n     * @description Sets the time between frames.\n     * @param delayValue The time in milliseconds.\n     */\n    delay(delayValue) {\n        this.addQualifier(new Qualifier('dl', delayValue));\n        return this;\n    }\n    /**\n     * @description Sets the frequency at which the video is sampled.\n     * @param sampling As a string (e.g. '2.3s'), samples one frame every 2.3 seconds.<br>As a number (e.g. 20),\n     * samples that many equally spaced frames over the duration of the video.\n     */\n    sampling(sampling) {\n        this.addQualifier(new Qualifier('vs', sampling));\n        return this;\n    }\n}\nexport default ToAnimatedAction;\n"]},"metadata":{},"sourceType":"module"}