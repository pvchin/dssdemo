[{"D:\\react-myprojects\\hrms-airtable\\src\\index.js":"1","D:\\react-myprojects\\hrms-airtable\\src\\App.js":"2","D:\\react-myprojects\\hrms-airtable\\src\\reportWebVitals.js":"3","D:\\react-myprojects\\hrms-airtable\\src\\components\\Appbanner.js":"4","D:\\react-myprojects\\hrms-airtable\\src\\components\\SideDrawer.js":"5","D:\\react-myprojects\\hrms-airtable\\src\\components\\SingleEmployee.js":"6","D:\\react-myprojects\\hrms-airtable\\src\\pages\\index.js":"7","D:\\react-myprojects\\hrms-airtable\\src\\components\\MenuListItems.js":"8","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmployeeForm.js":"9","D:\\react-myprojects\\hrms-airtable\\src\\pages\\AllEmployeesPage.js":"10","D:\\react-myprojects\\hrms-airtable\\src\\pages\\DashboardPage.js":"11","D:\\react-myprojects\\hrms-airtable\\src\\pages\\ExpensesPage.js":"12","D:\\react-myprojects\\hrms-airtable\\src\\pages\\PayrollPage.js":"13","D:\\react-myprojects\\hrms-airtable\\src\\pages\\LeavePage.js":"14","D:\\react-myprojects\\hrms-airtable\\src\\pages\\PayslipPage.js":"15","D:\\react-myprojects\\hrms-airtable\\src\\pages\\DepartmentsPage.js":"16","D:\\react-myprojects\\hrms-airtable\\src\\pages\\PrivateRoute.js":"17","D:\\react-myprojects\\hrms-airtable\\src\\pages\\AllowancesPage.js":"18","D:\\react-myprojects\\hrms-airtable\\src\\pages\\DesignationPage.js":"19","D:\\react-myprojects\\hrms-airtable\\src\\pages\\DailyAllowancesPage.js":"20","D:\\react-myprojects\\hrms-airtable\\src\\pages\\ClientsPage.js":"21","D:\\react-myprojects\\hrms-airtable\\src\\pages\\ErrorPage.js":"22","D:\\react-myprojects\\hrms-airtable\\src\\components\\Copyright.js":"23","D:\\react-myprojects\\hrms-airtable\\src\\components\\AllEmployeesTable.js":"24","D:\\react-myprojects\\hrms-airtable\\src\\utils\\constants.js":"25","D:\\react-myprojects\\hrms-airtable\\src\\context\\employees_context.js":"26","D:\\react-myprojects\\hrms-airtable\\src\\actions.js":"27","D:\\react-myprojects\\hrms-airtable\\src\\reducers\\employees_reducer.js":"28","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmployeeForm2.js":"29","D:\\react-myprojects\\hrms-airtable\\src\\components\\TableForm.js":"30","D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveTable.js":"31","D:\\react-myprojects\\hrms-airtable\\src\\context\\leaves_context.js":"32","D:\\react-myprojects\\hrms-airtable\\src\\components\\SingleLeave.js":"33","D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveForm.js":"34","D:\\react-myprojects\\hrms-airtable\\src\\reducers\\leaves_reducer.js":"35","D:\\react-myprojects\\hrms-airtable\\src\\context\\expenses_context.js":"36","D:\\react-myprojects\\hrms-airtable\\src\\components\\SingleExpense.js":"37","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseTable.js":"38","D:\\react-myprojects\\hrms-airtable\\src\\reducers\\expenses_reducer.js":"39","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseForm.js":"40","D:\\react-myprojects\\hrms-airtable\\src\\components\\SingleDailyAllowance.js":"41","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesTable.js":"42","D:\\react-myprojects\\hrms-airtable\\src\\context\\dailyallowances_context.js":"43","D:\\react-myprojects\\hrms-airtable\\src\\reducers\\dailyallowances_reducer.js":"44","D:\\react-myprojects\\hrms-airtable\\src\\components\\DaiylAllowanceForm.js":"45","D:\\react-myprojects\\hrms-airtable\\src\\components\\BatchDailyAllowances.js":"46","D:\\react-myprojects\\hrms-airtable\\src\\components\\SinglePayslip.js":"47","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipTable.js":"48","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesPeriods.js":"49","D:\\react-myprojects\\hrms-airtable\\src\\components\\BatchPayslips.js":"50","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipsPeriods.js":"51","D:\\react-myprojects\\hrms-airtable\\src\\context\\payslips_context.js":"52","D:\\react-myprojects\\hrms-airtable\\src\\reducers\\payslips_reducer.js":"53","D:\\react-myprojects\\hrms-airtable\\src\\components\\Example.js":"54","D:\\react-myprojects\\hrms-airtable\\src\\components\\Payslip_Earnings.js":"55","D:\\react-myprojects\\hrms-airtable\\src\\components\\Payslip_Deductions.js":"56","D:\\react-myprojects\\hrms-airtable\\src\\pages\\TablesPage.js":"57","D:\\react-myprojects\\hrms-airtable\\src\\components\\TablesUpdate.js":"58","D:\\react-myprojects\\hrms-airtable\\src\\context\\tables_context.js":"59","D:\\react-myprojects\\hrms-airtable\\src\\reducers\\tables_reducer.js":"60","D:\\react-myprojects\\hrms-airtable\\src\\pages\\BatchPayslipsPage.js":"61","D:\\react-myprojects\\hrms-airtable\\src\\components\\Preferences.js":"62","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipForm.js":"63","D:\\react-myprojects\\hrms-airtable\\src\\components\\ModalDialog.js":"64","D:\\react-myprojects\\hrms-airtable\\src\\components\\DashboardMain.js":"65","D:\\react-myprojects\\hrms-airtable\\src\\components\\SingleDailyAllowsDetls.js":"66","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowsDetlsTable.js":"67","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\CustomDialog.js":"68","D:\\react-myprojects\\hrms-airtable\\src\\components\\AllowancesTable.js":"69","D:\\react-myprojects\\hrms-airtable\\src\\components\\DeductionsTable.js":"70","D:\\react-myprojects\\hrms-airtable\\src\\components\\DepartmentsTable.js":"71","D:\\react-myprojects\\hrms-airtable\\src\\components\\DesignationsTable.js":"72","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\CardLayout.js":"73","D:\\react-myprojects\\hrms-airtable\\src\\components\\Example2.js":"74","D:\\react-myprojects\\hrms-airtable\\src\\components\\Example3.js":"75","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmployeeView.js":"76","D:\\react-myprojects\\hrms-airtable\\src\\context\\trainings_context.js":"77","D:\\react-myprojects\\hrms-airtable\\src\\reducers\\trainings_reducer.js":"78","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\CardLayout2.js":"79","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpEducations.js":"80","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpExperiences.js":"81","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpFamily.js":"82","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpPersonal.js":"83","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpTrainings.js":"84","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpViewTrainings.js":"85","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpViewLeaves.js":"86","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpViewFamily.js":"87","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpViewExperiences.js":"88","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpViewEducations.js":"89","D:\\react-myprojects\\hrms-airtable\\src\\components\\Example4.js":"90","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\Recoilhelpers.js":"91","D:\\react-myprojects\\hrms-airtable\\src\\components\\data\\selectordata.js":"92","D:\\react-myprojects\\hrms-airtable\\src\\components\\data\\atomdata.js":"93","D:\\react-myprojects\\hrms-airtable\\src\\components\\Payslip_ViewDeductions.js":"94","D:\\react-myprojects\\hrms-airtable\\src\\components\\Payslip_ViewEarnings.js":"95","D:\\react-myprojects\\hrms-airtable\\src\\components\\Example5.js":"96","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\CardLayout3.js":"97","D:\\react-myprojects\\hrms-airtable\\src\\pages\\HomePage2.js":"98","D:\\react-myprojects\\hrms-airtable\\src\\pages\\HomePage.js":"99","D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveTableView.js":"100","D:\\react-myprojects\\hrms-airtable\\src\\components\\HomeAdmin.js":"101","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseTableAdmin.js":"102","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseTableView.js":"103","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipTableView.js":"104","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipTableAdmin.js":"105","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesTableAdmin.js":"106","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesTableView.js":"107","D:\\react-myprojects\\hrms-airtable\\src\\components\\OnLeavesView.js":"108","D:\\react-myprojects\\hrms-airtable\\src\\components\\WPExpiryView.js":"109","D:\\react-myprojects\\hrms-airtable\\src\\components\\Example6.js":"110","D:\\react-myprojects\\hrms-airtable\\src\\components\\Payrun.js":"111","D:\\react-myprojects\\hrms-airtable\\src\\components\\Payrunbatch.js":"112","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayForm.js":"113","D:\\react-myprojects\\hrms-airtable\\src\\components\\PaySummary.js":"114","D:\\react-myprojects\\hrms-airtable\\src\\components\\Main.js":"115","D:\\react-myprojects\\hrms-airtable\\src\\components\\LoginForm.js":"116","D:\\react-myprojects\\hrms-airtable\\src\\components\\MenuListItemsStaff.js":"117","D:\\react-myprojects\\hrms-airtable\\src\\components\\HomeStaff.js":"118","D:\\react-myprojects\\hrms-airtable\\src\\components\\OnLeavesViewStaff.js":"119","D:\\react-myprojects\\hrms-airtable\\src\\components\\WPExpiryViewStaff.js":"120","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseTableViewStaff.js":"121","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipTableViewStaff.js":"122","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesTableViewStaff.js":"123","D:\\react-myprojects\\hrms-airtable\\src\\components\\SingleEmployeeStaff.js":"124","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmployeeFormStaff.js":"125","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpFamilyStaff.js":"126","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpEducationsStaff.js":"127","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpExperiencesStaff.js":"128","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmployeeViewStaff.js":"129","D:\\react-myprojects\\hrms-airtable\\src\\pages\\ExpensesStaffPage.js":"130","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseTableStaff.js":"131","D:\\react-myprojects\\hrms-airtable\\src\\pages\\LeaveStaffPage.js":"132","D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveTableStaff.js":"133","D:\\react-myprojects\\hrms-airtable\\src\\components\\MenuListItemsAdmin.js":"134","D:\\react-myprojects\\hrms-airtable\\src\\components\\HomeAdminManager.js":"135","D:\\react-myprojects\\hrms-airtable\\src\\components\\HomeManager.js":"136","D:\\react-myprojects\\hrms-airtable\\src\\components\\MenuListItemsAdminManager.js":"137","D:\\react-myprojects\\hrms-airtable\\src\\components\\MenuListItemsManager.js":"138","D:\\react-myprojects\\hrms-airtable\\src\\pages\\DailyAllowancesStaffPage.js":"139","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesTableStaff.js":"140","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesAddPeriod.js":"141","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowsDetlsTableStaff.js":"142","D:\\react-myprojects\\hrms-airtable\\src\\components\\SingleDailyAllowsDetlsStaff.js":"143","D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveTableViewStaff.js":"144","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipTableViewAdmin.js":"145","D:\\react-myprojects\\hrms-airtable\\src\\components\\PrintPDFTest.js":"146","D:\\react-myprojects\\hrms-airtable\\src\\utils\\firebase.js":"147","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\storageHelper.js":"148","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\AlertShutDownDialog.js":"149","D:\\react-myprojects\\hrms-airtable\\src\\context\\auth_context.js":"150","D:\\react-myprojects\\hrms-airtable\\src\\components\\SigninForm.js":"151","D:\\react-myprojects\\hrms-airtable\\src\\components\\app\\Loading.tsx":"152","D:\\react-myprojects\\hrms-airtable\\src\\components\\user\\useUser.js":"153","D:\\react-myprojects\\hrms-airtable\\src\\components\\theme\\index.js":"154","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmployeeFormNew.js":"155","D:\\react-myprojects\\hrms-airtable\\src\\components\\react-query\\constants.js":"156","D:\\react-myprojects\\hrms-airtable\\src\\components\\leaves\\useUpdateLeaves.js":"157","D:\\react-myprojects\\hrms-airtable\\src\\components\\expenses\\useUpdateExpenses.js":"158","D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallows\\useDeleteDailyAllows.js":"159","D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallows\\useUpdateDailyAllows.js":"160","D:\\react-myprojects\\hrms-airtable\\src\\components\\ComponentToPrint.js":"161","D:\\react-myprojects\\hrms-airtable\\src\\components\\designations\\useDesignations.js":"162","D:\\react-myprojects\\hrms-airtable\\src\\components\\user-storage\\index.js":"163","D:\\react-myprojects\\hrms-airtable\\src\\components\\trainings\\useDeleteTrainings.js":"164","D:\\react-myprojects\\hrms-airtable\\src\\components\\trainings\\useAddTrainings.js":"165","D:\\react-myprojects\\hrms-airtable\\src\\components\\trainings\\useUpdateTrainings.js":"166","D:\\react-myprojects\\hrms-airtable\\src\\components\\employees\\useEmployees.js":"167","D:\\react-myprojects\\hrms-airtable\\src\\components\\employees\\useUpdateEmployees.js":"168","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\useCustomToast.ts":"169","D:\\react-myprojects\\hrms-airtable\\src\\components\\experiences\\useDeleteExperiences.js":"170","D:\\react-myprojects\\hrms-airtable\\src\\components\\experiences\\useAddExperiences.js":"171","D:\\react-myprojects\\hrms-airtable\\src\\components\\experiences\\useExperiences.js":"172","D:\\react-myprojects\\hrms-airtable\\src\\components\\experiences\\useUpdateExperiences.js":"173","D:\\react-myprojects\\hrms-airtable\\src\\components\\educations\\useDeleteEducations.js":"174","D:\\react-myprojects\\hrms-airtable\\src\\components\\educations\\useAddEducations.js":"175","D:\\react-myprojects\\hrms-airtable\\src\\components\\educations\\useUpdateEducations.js":"176","D:\\react-myprojects\\hrms-airtable\\src\\components\\educations\\useEducations.js":"177","D:\\react-myprojects\\hrms-airtable\\src\\components\\family\\useAddFamily.js":"178","D:\\react-myprojects\\hrms-airtable\\src\\components\\family\\useDeleteFamily.js":"179","D:\\react-myprojects\\hrms-airtable\\src\\components\\family\\useUpdateFamily.js":"180","D:\\react-myprojects\\hrms-airtable\\src\\components\\family\\useFamily.js":"181","D:\\react-myprojects\\hrms-airtable\\src\\components\\experiences\\utils.js":"182","D:\\react-myprojects\\hrms-airtable\\src\\components\\employees\\utils.js":"183","D:\\react-myprojects\\hrms-airtable\\src\\components\\educations\\utils.js":"184","D:\\react-myprojects\\hrms-airtable\\src\\components\\family\\utils.js":"185","D:\\react-myprojects\\hrms-airtable\\src\\components\\trainings\\useTrainings.js":"186","D:\\react-myprojects\\hrms-airtable\\src\\components\\trainings\\utils.js":"187","D:\\react-myprojects\\hrms-airtable\\src\\pages\\PayslipStaffPage.js":"188","D:\\react-myprojects\\hrms-airtable\\src\\pages\\TrainingsStaffPage.js":"189","D:\\react-myprojects\\hrms-airtable\\src\\pages\\UserAccessPage.js":"190","D:\\react-myprojects\\hrms-airtable\\src\\components\\employees\\useAddEmployees.js":"191","D:\\react-myprojects\\hrms-airtable\\src\\components\\PrintPaySummary.js":"192","D:\\react-myprojects\\hrms-airtable\\src\\components\\departments\\useDepartments.js":"193","D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallows\\useAddDailyAllows.js":"194","D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallows\\useDailyAllows.js":"195","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipTableStaff.js":"196","D:\\react-myprojects\\hrms-airtable\\src\\components\\UserAccessTable.js":"197","D:\\react-myprojects\\hrms-airtable\\src\\components\\expenses\\useDeleteExpenses.js":"198","D:\\react-myprojects\\hrms-airtable\\src\\components\\expenses\\useExpenses.js":"199","D:\\react-myprojects\\hrms-airtable\\src\\components\\expenses\\useAddExpenses.js":"200","D:\\react-myprojects\\hrms-airtable\\src\\components\\leaves\\useDeleteLeaves.js":"201","D:\\react-myprojects\\hrms-airtable\\src\\components\\leaves\\useAddLeaves.js":"202","D:\\react-myprojects\\hrms-airtable\\src\\components\\leaves\\useLeaves.js":"203","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\Utils.js":"204","D:\\react-myprojects\\hrms-airtable\\src\\components\\payrun\\usePayrun.js":"205","D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallows\\utils.js":"206","D:\\react-myprojects\\hrms-airtable\\src\\components\\PrintPayslip.js":"207","D:\\react-myprojects\\hrms-airtable\\src\\components\\employees\\useDeleteEmployees.js":"208","D:\\react-myprojects\\hrms-airtable\\src\\components\\deductions\\useDeductions.js":"209","D:\\react-myprojects\\hrms-airtable\\src\\components\\allowances\\useAllowances.js":"210","D:\\react-myprojects\\hrms-airtable\\src\\components\\employees\\useSingleEmployee.js":"211","D:\\react-myprojects\\hrms-airtable\\src\\components\\WPExpiryViewAdmin.js":"212","D:\\react-myprojects\\hrms-airtable\\src\\components\\TrainingsTableViewAdmin.js":"213","D:\\react-myprojects\\hrms-airtable\\src\\components\\payslips\\usePayslips.js":"214","D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallowsdetls\\useAddDailyAllowsDetls.js":"215","D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallowsdetls\\useDeleteDailyAllowsDetls.js":"216","D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallowsdetls\\useUpdateDailyAllowsDetls.js":"217","D:\\react-myprojects\\hrms-airtable\\src\\components\\expenses\\utils.js":"218","D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveTableViewAdmin.js":"219","D:\\react-myprojects\\hrms-airtable\\src\\components\\leaves\\utils.js":"220","D:\\react-myprojects\\hrms-airtable\\src\\components\\TrainingsTableViewStaff.js":"221","D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallowsdetls\\useDailyAllowsDetls.js":"222","D:\\react-myprojects\\hrms-airtable\\src\\components\\designations\\useAddDesignations.js":"223","D:\\react-myprojects\\hrms-airtable\\src\\components\\designations\\useDeleteDesignations.js":"224","D:\\react-myprojects\\hrms-airtable\\src\\components\\designations\\useUpdateDesignations.js":"225","D:\\react-myprojects\\hrms-airtable\\src\\components\\departments\\useUpdateDepartments.js":"226","D:\\react-myprojects\\hrms-airtable\\src\\components\\departments\\useDeleteDepartments.js":"227","D:\\react-myprojects\\hrms-airtable\\src\\components\\departments\\useAddDepartments.js":"228","D:\\react-myprojects\\hrms-airtable\\src\\components\\deductions\\useAddDeductions.js":"229","D:\\react-myprojects\\hrms-airtable\\src\\components\\allowances\\useAddAllowances.js":"230","D:\\react-myprojects\\hrms-airtable\\src\\components\\allowances\\useDeleteAllowances.js":"231","D:\\react-myprojects\\hrms-airtable\\src\\components\\allowances\\useUpdateAllowances.js":"232","D:\\react-myprojects\\hrms-airtable\\src\\components\\payrun\\utils.js":"233","D:\\react-myprojects\\hrms-airtable\\src\\components\\deductions\\useDeleteDeductions.js":"234","D:\\react-myprojects\\hrms-airtable\\src\\components\\deductions\\useUpdateDeductions.js":"235","D:\\react-myprojects\\hrms-airtable\\src\\components\\payslips\\utils.js":"236","D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallowsdetls\\utils.js":"237","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\TableContainer.js":"238","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\Sort.js":"239","D:\\react-myprojects\\hrms-airtable\\src\\components\\InstitutesTable.js":"240","D:\\react-myprojects\\hrms-airtable\\src\\components\\institutes\\useAddInstitutes.js":"241","D:\\react-myprojects\\hrms-airtable\\src\\components\\institutes\\useUpdateInstitutes.js":"242","D:\\react-myprojects\\hrms-airtable\\src\\components\\institutes\\useInstitutes.js":"243","D:\\react-myprojects\\hrms-airtable\\src\\components\\institutes\\useDeleteInstitutes.js":"244","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\EmailSent.js":"245","D:\\react-myprojects\\hrms-airtable\\src\\components\\payrun\\useDeletePayrun.js":"246","D:\\react-myprojects\\hrms-airtable\\src\\components\\payslips\\usePayslipsBatch.js":"247","D:\\react-myprojects\\hrms-airtable\\src\\components\\currency\\useCurrency.js":"248","D:\\react-myprojects\\hrms-airtable\\src\\components\\CurrencyTable.js":"249","D:\\react-myprojects\\hrms-airtable\\src\\components\\currency\\useUpdateCurrency.js":"250","D:\\react-myprojects\\hrms-airtable\\src\\components\\currency\\useDeleteCurrency.js":"251","D:\\react-myprojects\\hrms-airtable\\src\\components\\currency\\useAddCurrency.js":"252","D:\\react-myprojects\\hrms-airtable\\src\\components\\expenses\\useExpensesPayrun.js":"253","D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveFormAdmin.js":"254","D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveTableAdmin.js":"255","D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveTableManager.js":"256","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseTableManager.js":"257","D:\\react-myprojects\\hrms-airtable\\src\\components\\payslips\\useUpdatePayslips.js":"258","D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallows\\useDailyAllowsBatch.js":"259","D:\\react-myprojects\\hrms-airtable\\src\\components\\payrun\\useUpdatePayrun.js":"260","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipTableViewManager.js":"261","D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallowsdetls\\useDailyAllowsDetlsBatch.js":"262","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\AlertDialogBox.js":"263","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\CustomAlertDialog.js":"264","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\CardLayout4.js":"265","D:\\react-myprojects\\hrms-airtable\\src\\components\\expenses\\useExpensesStatus.js":"266","D:\\react-myprojects\\hrms-airtable\\src\\components\\payrun\\usePayrunStatus.js":"267","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipTableViewSummary.js":"268","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesTableViewSummary.js":"269","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseTableViewSummary.js":"270","D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallows\\useDailyAllowsStatus.js":"271","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\BarChartStack.js":"272","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\SummaryTableView.js":"273","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\BarChart.js":"274","D:\\react-myprojects\\hrms-airtable\\src\\components\\expenses\\useExpensesPeriod.js":"275","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseTableHistoryView.js":"276","D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallows\\useDailyAllowsPeriod.js":"277","D:\\react-myprojects\\hrms-airtable\\src\\components\\LeavesTableViewSummary.js":"278","D:\\react-myprojects\\hrms-airtable\\src\\components\\leaves\\useLeavesPeriod.js":"279","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpensesSummaryTableView.js":"280","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipSummaryTableView.js":"281","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmployeeTableLeaveView.js":"282","D:\\react-myprojects\\hrms-airtable\\src\\components\\ApprovalManager.js":"283","D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallows\\useDailyAllowsPayrun.js":"284","D:\\react-myprojects\\hrms-airtable\\src\\components\\payitems\\usePayItems.js":"285","D:\\react-myprojects\\hrms-airtable\\src\\components\\payitems\\utils.js":"286","D:\\react-myprojects\\hrms-airtable\\src\\components\\payitems\\useUpdatePayItems.js":"287","D:\\react-myprojects\\hrms-airtable\\src\\components\\payitems\\useDeletePayItems.js":"288","D:\\react-myprojects\\hrms-airtable\\src\\components\\payitems\\useAddPayItems.js":"289","D:\\react-myprojects\\hrms-airtable\\src\\components\\MainMenu.js":"290","D:\\react-myprojects\\hrms-airtable\\src\\components\\PaySummaryTable.js":"291","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayRunTable.js":"292","D:\\react-myprojects\\hrms-airtable\\src\\utils\\dates.js":"293","D:\\react-myprojects\\hrms-airtable\\src\\components\\employees\\useAllEmployees.js":"294","D:\\react-myprojects\\hrms-airtable\\src\\components\\MenuListItemsOpsSpvr.js":"295","D:\\react-myprojects\\hrms-airtable\\src\\components\\HomeOpsSpvr.js":"296","D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveTableApproval.js":"297","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowsDetlsTable copy.js":"298","D:\\react-myprojects\\hrms-airtable\\src\\components\\leaves\\useLeavesStatus.js":"299","D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveTableViewManager.js":"300","D:\\react-myprojects\\hrms-airtable\\src\\pages\\HocPage.js":"301","D:\\react-myprojects\\hrms-airtable\\src\\components\\HocTable.js":"302","D:\\react-myprojects\\hrms-airtable\\src\\components\\HocForm.js":"303","D:\\react-myprojects\\hrms-airtable\\src\\components\\hoc\\useHoc.js":"304","D:\\react-myprojects\\hrms-airtable\\src\\components\\hoc\\useAddHoc.js":"305","D:\\react-myprojects\\hrms-airtable\\src\\components\\hoc\\useDeleteHoc.js":"306","D:\\react-myprojects\\hrms-airtable\\src\\components\\hoc\\useUpdateHoc.js":"307","D:\\react-myprojects\\hrms-airtable\\src\\components\\hoc\\utils.js":"308","D:\\react-myprojects\\hrms-airtable\\src\\components\\hoclookup\\useAddHoclookup.js":"309","D:\\react-myprojects\\hrms-airtable\\src\\components\\hoclookup\\useHoclookup.js":"310","D:\\react-myprojects\\hrms-airtable\\src\\components\\hoclookup\\utils.js":"311","D:\\react-myprojects\\hrms-airtable\\src\\components\\hoclocation\\useHoclocation.js":"312","D:\\react-myprojects\\hrms-airtable\\src\\components\\hoclocation\\utils.js":"313","D:\\react-myprojects\\hrms-airtable\\src\\components\\HocTableViewSummary.js":"314","D:\\react-myprojects\\hrms-airtable\\src\\components\\hoc\\useHocPeriod.js":"315","D:\\react-myprojects\\hrms-airtable\\src\\components\\hoccategory\\useHoccategory.js":"316","D:\\react-myprojects\\hrms-airtable\\src\\components\\hoccategory\\utils.js":"317","D:\\react-myprojects\\hrms-airtable\\src\\components\\hocwhat\\useHocwhat.js":"318","D:\\react-myprojects\\hrms-airtable\\src\\components\\hocwhat\\utils.js":"319","D:\\react-myprojects\\hrms-airtable\\src\\components\\hocwhatdetails\\useHocwhatdetails.js":"320","D:\\react-myprojects\\hrms-airtable\\src\\components\\hocwhatdetails\\utils.js":"321","D:\\react-myprojects\\hrms-airtable\\src\\components\\hocwhy\\useHocwhy.js":"322","D:\\react-myprojects\\hrms-airtable\\src\\components\\hocwhy\\utils.js":"323","D:\\react-myprojects\\hrms-airtable\\src\\components\\hocwhydetails\\useHocwhydetails.js":"324","D:\\react-myprojects\\hrms-airtable\\src\\components\\hocwhydetails\\utils.js":"325","D:\\react-myprojects\\hrms-airtable\\src\\components\\MenuListItemsDirector.js":"326","D:\\react-myprojects\\hrms-airtable\\src\\components\\HomeDirector.js":"327","D:\\react-myprojects\\dss\\src\\index.js":"328","D:\\react-myprojects\\dss\\src\\reportWebVitals.js":"329","D:\\react-myprojects\\dss\\src\\App.js":"330","D:\\react-myprojects\\dss\\src\\context\\expenses_context.js":"331","D:\\react-myprojects\\dss\\src\\context\\employees_context.js":"332","D:\\react-myprojects\\dss\\src\\context\\dailyallowances_context.js":"333","D:\\react-myprojects\\dss\\src\\context\\tables_context.js":"334","D:\\react-myprojects\\dss\\src\\context\\leaves_context.js":"335","D:\\react-myprojects\\dss\\src\\context\\trainings_context.js":"336","D:\\react-myprojects\\dss\\src\\context\\payslips_context.js":"337","D:\\react-myprojects\\dss\\src\\context\\auth_context.js":"338","D:\\react-myprojects\\dss\\src\\components\\app\\Loading.tsx":"339","D:\\react-myprojects\\dss\\src\\components\\Main.js":"340","D:\\react-myprojects\\dss\\src\\components\\MainMenu.js":"341","D:\\react-myprojects\\dss\\src\\actions.js":"342","D:\\react-myprojects\\dss\\src\\reducers\\expenses_reducer.js":"343","D:\\react-myprojects\\dss\\src\\reducers\\dailyallowances_reducer.js":"344","D:\\react-myprojects\\dss\\src\\reducers\\leaves_reducer.js":"345","D:\\react-myprojects\\dss\\src\\reducers\\employees_reducer.js":"346","D:\\react-myprojects\\dss\\src\\reducers\\trainings_reducer.js":"347","D:\\react-myprojects\\dss\\src\\reducers\\tables_reducer.js":"348","D:\\react-myprojects\\dss\\src\\reducers\\payslips_reducer.js":"349","D:\\react-myprojects\\dss\\src\\utils\\firebase.js":"350","D:\\react-myprojects\\dss\\src\\utils\\constants.js":"351","D:\\react-myprojects\\dss\\src\\components\\LoginForm.js":"352","D:\\react-myprojects\\dss\\src\\components\\DashboardAdmin.js":"353","D:\\react-myprojects\\dss\\src\\components\\DashboardMain.js":"354","D:\\react-myprojects\\dss\\src\\components\\DashboardManager.js":"355","D:\\react-myprojects\\dss\\src\\components\\DashboardStaff.js":"356","D:\\react-myprojects\\dss\\src\\components\\DashboardAdminManager.js":"357","D:\\react-myprojects\\dss\\src\\components\\DashboardOpsSpvr.js":"358","D:\\react-myprojects\\dss\\src\\components\\DashboardDirector.js":"359","D:\\react-myprojects\\dss\\src\\components\\data\\atomdata.js":"360","D:\\react-myprojects\\dss\\src\\components\\employees\\useEmployees.js":"361","D:\\react-myprojects\\dss\\src\\components\\theme\\index.js":"362","D:\\react-myprojects\\dss\\src\\components\\Appbanner.js":"363","D:\\react-myprojects\\dss\\src\\components\\SigninForm.js":"364","D:\\react-myprojects\\dss\\src\\components\\Example6.js":"365","D:\\react-myprojects\\dss\\src\\components\\SideDrawer.js":"366","D:\\react-myprojects\\dss\\src\\components\\SingleEmployee.js":"367","D:\\react-myprojects\\dss\\src\\components\\SingleEmployeeStaff old.js":"368","D:\\react-myprojects\\dss\\src\\components\\SingleLeave.js":"369","D:\\react-myprojects\\dss\\src\\components\\SingleExpense.js":"370","D:\\react-myprojects\\dss\\src\\components\\SingleDailyAllowance.js":"371","D:\\react-myprojects\\dss\\src\\components\\BatchDailyAllowances.js":"372","D:\\react-myprojects\\dss\\src\\components\\SingleDailyAllowsDetls.js":"373","D:\\react-myprojects\\dss\\src\\components\\SinglePayslip.js":"374","D:\\react-myprojects\\dss\\src\\components\\Payrun.js":"375","D:\\react-myprojects\\dss\\src\\components\\Payrunbatch.js":"376","D:\\react-myprojects\\dss\\src\\components\\Example8.js":"377","D:\\react-myprojects\\dss\\src\\components\\UserAccessTable.js":"378","D:\\react-myprojects\\dss\\src\\components\\ApprovalManager.js":"379","D:\\react-myprojects\\dss\\src\\components\\employees\\utils.js":"380","D:\\react-myprojects\\dss\\src\\components\\react-query\\constants.js":"381","D:\\react-myprojects\\dss\\src\\components\\EmployeeViewStaff.js":"382","D:\\react-myprojects\\dss\\src\\components\\EmployeeFormNew.js":"383","D:\\react-myprojects\\dss\\src\\components\\LeaveForm.js":"384","D:\\react-myprojects\\dss\\src\\components\\ExpenseForm.js":"385","D:\\react-myprojects\\dss\\src\\components\\DaiylAllowanceForm.js":"386","D:\\react-myprojects\\dss\\src\\components\\DailyAllowancesTableStaff.js":"387","D:\\react-myprojects\\dss\\src\\components\\DailyAllowsDetlsTable.js":"388","D:\\react-myprojects\\dss\\src\\components\\PayslipForm.js":"389","D:\\react-myprojects\\dss\\src\\components\\employees\\useUpdateEmployees.js":"390","D:\\react-myprojects\\dss\\src\\components\\user\\useUser.js":"391","D:\\react-myprojects\\dss\\src\\components\\payslips\\useUpdatePayslips.js":"392","D:\\react-myprojects\\dss\\src\\components\\payslips\\usePayslipsBatch.js":"393","D:\\react-myprojects\\dss\\src\\components\\dailyallows\\useDailyAllowsStatus.js":"394","D:\\react-myprojects\\dss\\src\\components\\WPExpiryView.js":"395","D:\\react-myprojects\\dss\\src\\components\\OnLeavesView.js":"396","D:\\react-myprojects\\dss\\src\\pages\\index.js":"397","D:\\react-myprojects\\dss\\src\\components\\DailyAllowancesTableAdmin.js":"398","D:\\react-myprojects\\dss\\src\\components\\DailyAllowancesTableView.js":"399","D:\\react-myprojects\\dss\\src\\helpers\\useCustomToast.ts":"400","D:\\react-myprojects\\dss\\src\\components\\EmpTrainings.js":"401","D:\\react-myprojects\\dss\\src\\components\\dailyallows\\useDailyAllows.js":"402","D:\\react-myprojects\\dss\\src\\components\\Payslip_Deductions.js":"403","D:\\react-myprojects\\dss\\src\\components\\Payslip_Earnings.js":"404","D:\\react-myprojects\\dss\\src\\components\\leaves\\useUpdateLeaves.js":"405","D:\\react-myprojects\\dss\\src\\components\\designations\\useDesignations.js":"406","D:\\react-myprojects\\dss\\src\\components\\expenses\\useUpdateExpenses.js":"407","D:\\react-myprojects\\dss\\src\\components\\dailyallowsdetls\\useDailyAllowsDetlsBatch.js":"408","D:\\react-myprojects\\dss\\src\\components\\dailyallows\\utils.js":"409","D:\\react-myprojects\\dss\\src\\components\\data\\selectordata.js":"410","D:\\react-myprojects\\dss\\src\\pages\\ErrorPage.js":"411","D:\\react-myprojects\\dss\\src\\helpers\\CustomDialog.js":"412","D:\\react-myprojects\\dss\\src\\components\\trainings\\useAddTrainings.js":"413","D:\\react-myprojects\\dss\\src\\components\\trainings\\useDeleteTrainings.js":"414","D:\\react-myprojects\\dss\\src\\components\\dailyallowsdetls\\utils.js":"415","D:\\react-myprojects\\dss\\src\\components\\user-storage\\index.js":"416","D:\\react-myprojects\\dss\\src\\components\\trainings\\useUpdateTrainings.js":"417","D:\\react-myprojects\\dss\\src\\components\\trainings\\useTrainings.js":"418","D:\\react-myprojects\\dss\\src\\components\\institutes\\useInstitutes.js":"419","D:\\react-myprojects\\dss\\src\\components\\trainings\\utils.js":"420","D:\\react-myprojects\\dss\\src\\pages\\ClientsPage.js":"421","D:\\react-myprojects\\dss\\src\\pages\\PrivateRoute.js":"422","D:\\react-myprojects\\dss\\src\\pages\\DailyAllowancesStaffPage.js":"423","D:\\react-myprojects\\dss\\src\\pages\\DailyAllowancesPage.js":"424","D:\\react-myprojects\\dss\\src\\pages\\TablesPage.js":"425","D:\\react-myprojects\\dss\\src\\pages\\DesignationPage.js":"426","D:\\react-myprojects\\dss\\src\\pages\\AllowancesPage.js":"427","D:\\react-myprojects\\dss\\src\\pages\\DepartmentsPage.js":"428","D:\\react-myprojects\\dss\\src\\pages\\BatchPayslipsPage.js":"429","D:\\react-myprojects\\dss\\src\\pages\\PayslipStaffPage.js":"430","D:\\react-myprojects\\dss\\src\\pages\\PayslipPage.js":"431","D:\\react-myprojects\\dss\\src\\pages\\PayrollPage.js":"432","D:\\react-myprojects\\dss\\src\\pages\\TrainingsStaffPage.js":"433","D:\\react-myprojects\\dss\\src\\pages\\UserAccessPage.js":"434","D:\\react-myprojects\\dss\\src\\pages\\ExpensesStaffPage.js":"435","D:\\react-myprojects\\dss\\src\\pages\\HocPage.js":"436","D:\\react-myprojects\\dss\\src\\pages\\ExpensesPage.js":"437","D:\\react-myprojects\\dss\\src\\pages\\LeaveStaffPage.js":"438","D:\\react-myprojects\\dss\\src\\pages\\LeavePage.js":"439","D:\\react-myprojects\\dss\\src\\pages\\AllEmployeesPage.js":"440","D:\\react-myprojects\\dss\\src\\pages\\DashboardPage.js":"441","D:\\react-myprojects\\dss\\src\\pages\\HomePage.js":"442","D:\\react-myprojects\\dss\\src\\components\\payslips\\utils.js":"443","D:\\react-myprojects\\dss\\src\\components\\Payslip_ViewDeductions.js":"444","D:\\react-myprojects\\dss\\src\\helpers\\CardLayout2.js":"445","D:\\react-myprojects\\dss\\src\\helpers\\CardLayout.js":"446","D:\\react-myprojects\\dss\\src\\components\\Payslip_ViewEarnings.js":"447","D:\\react-myprojects\\dss\\src\\components\\dailyallows\\useDeleteDailyAllows.js":"448","D:\\react-myprojects\\dss\\src\\components\\dailyallowsdetls\\useDeleteDailyAllowsDetls.js":"449","D:\\react-myprojects\\dss\\src\\components\\dailyallows\\useAddDailyAllows.js":"450","D:\\react-myprojects\\dss\\src\\components\\dailyallows\\useUpdateDailyAllows.js":"451","D:\\react-myprojects\\dss\\src\\components\\DailyAllowancesAddPeriod.js":"452","D:\\react-myprojects\\dss\\src\\helpers\\AlertDialogBox.js":"453","D:\\react-myprojects\\dss\\src\\components\\DailyAllowsDetlsTableStaff.js":"454","D:\\react-myprojects\\dss\\src\\components\\DailyAllowancesPeriods.js":"455","D:\\react-myprojects\\dss\\src\\components\\TablesUpdate.js":"456","D:\\react-myprojects\\dss\\src\\components\\TableForm.js":"457","D:\\react-myprojects\\dss\\src\\components\\Example.js":"458","D:\\react-myprojects\\dss\\src\\components\\PayslipTableStaff.js":"459","D:\\react-myprojects\\dss\\src\\components\\PayslipTable.js":"460","D:\\react-myprojects\\dss\\src\\components\\LeaveTableStaff.js":"461","D:\\react-myprojects\\dss\\src\\components\\PayslipsPeriods.js":"462","D:\\react-myprojects\\dss\\src\\components\\ExpenseTableStaff.js":"463","D:\\react-myprojects\\dss\\src\\components\\HocTable.js":"464","D:\\react-myprojects\\dss\\src\\components\\ExpenseTable.js":"465","D:\\react-myprojects\\dss\\src\\components\\LeaveTableAdmin.js":"466","D:\\react-myprojects\\dss\\src\\components\\AllEmployeesTable.js":"467","D:\\react-myprojects\\dss\\src\\components\\HomeDirector.js":"468","D:\\react-myprojects\\dss\\src\\components\\HomeManager.js":"469","D:\\react-myprojects\\dss\\src\\components\\HomeAdminManager.js":"470","D:\\react-myprojects\\dss\\src\\components\\HomeStaff.js":"471","D:\\react-myprojects\\dss\\src\\components\\HomeOpsSpvr.js":"472","D:\\react-myprojects\\dss\\src\\components\\Copyright.js":"473","D:\\react-myprojects\\dss\\src\\components\\HomeAdmin.js":"474","D:\\react-myprojects\\dss\\src\\helpers\\CardLayout3.js":"475","D:\\react-myprojects\\dss\\src\\components\\dailyallowsdetls\\useAddDailyAllowsDetls.js":"476","D:\\react-myprojects\\dss\\src\\components\\dailyallowsdetls\\useDailyAllowsDetls.js":"477","D:\\react-myprojects\\dss\\src\\components\\dailyallowsdetls\\useUpdateDailyAllowsDetls.js":"478","D:\\react-myprojects\\dss\\src\\components\\expenses\\useAddExpenses.js":"479","D:\\react-myprojects\\dss\\src\\components\\expenses\\useDeleteExpenses.js":"480","D:\\react-myprojects\\dss\\src\\components\\expenses\\useExpenses.js":"481","D:\\react-myprojects\\dss\\src\\components\\leaves\\useDeleteLeaves.js":"482","D:\\react-myprojects\\dss\\src\\components\\leaves\\useAddLeaves.js":"483","D:\\react-myprojects\\dss\\src\\components\\employees\\useAddEmployees.js":"484","D:\\react-myprojects\\dss\\src\\components\\leaves\\useLeaves.js":"485","D:\\react-myprojects\\dss\\src\\components\\EmpExperiences.js":"486","D:\\react-myprojects\\dss\\src\\components\\EmpFamily.js":"487","D:\\react-myprojects\\dss\\src\\components\\EmpEducations.js":"488","D:\\react-myprojects\\dss\\src\\components\\EmpPersonal.js":"489","D:\\react-myprojects\\dss\\src\\components\\CurrencyTable.js":"490","D:\\react-myprojects\\dss\\src\\components\\InstitutesTable.js":"491","D:\\react-myprojects\\dss\\src\\components\\DesignationsTable.js":"492","D:\\react-myprojects\\dss\\src\\components\\DepartmentsTable.js":"493","D:\\react-myprojects\\dss\\src\\components\\DeductionsTable.js":"494","D:\\react-myprojects\\dss\\src\\components\\departments\\useDepartments.js":"495","D:\\react-myprojects\\dss\\src\\components\\dailyallows\\useDailyAllowsPayrun.js":"496","D:\\react-myprojects\\dss\\src\\components\\employees\\useSingleEmployee.js":"497","D:\\react-myprojects\\dss\\src\\components\\BatchPayslips.js":"498","D:\\react-myprojects\\dss\\src\\components\\employees\\useDeleteEmployees.js":"499","D:\\react-myprojects\\dss\\src\\components\\hoc\\useUpdateHoc.js":"500","D:\\react-myprojects\\dss\\src\\components\\hoc\\useDeleteHoc.js":"501","D:\\react-myprojects\\dss\\src\\components\\expenses\\useExpensesPeriod.js":"502","D:\\react-myprojects\\dss\\src\\components\\ExportLeave2Excel.js":"503","D:\\react-myprojects\\dss\\src\\components\\DailyAllowancesTableVeryfy.js":"504","D:\\react-myprojects\\dss\\src\\components\\LeaveTableApproval.js":"505","D:\\react-myprojects\\dss\\src\\components\\LeavesTableViewSummary.js":"506","D:\\react-myprojects\\dss\\src\\components\\EmployeeTableLeaveView.js":"507","D:\\react-myprojects\\dss\\src\\components\\WPExpiryViewAdmin.js":"508","D:\\react-myprojects\\dss\\src\\components\\TrainingsTableViewAdmin.js":"509","D:\\react-myprojects\\dss\\src\\components\\HocTableViewSummary.js":"510","D:\\react-myprojects\\dss\\src\\components\\ExpenseTableAdmin.js":"511","D:\\react-myprojects\\dss\\src\\components\\PayslipTableAdmin.js":"512","D:\\react-myprojects\\dss\\src\\components\\LeaveTableManager.js":"513","D:\\react-myprojects\\dss\\src\\components\\LeaveTableViewAdmin.js":"514","D:\\react-myprojects\\dss\\src\\components\\DailyAllowancesTableViewSummary.js":"515","D:\\react-myprojects\\dss\\src\\components\\WPExpiryViewStaff.js":"516","D:\\react-myprojects\\dss\\src\\components\\OnLeavesViewStaff.js":"517","D:\\react-myprojects\\dss\\src\\components\\DailyAllowancesTableViewStaff.js":"518","D:\\react-myprojects\\dss\\src\\components\\PayslipTableViewStaff.js":"519","D:\\react-myprojects\\dss\\src\\components\\ExpenseTableViewStaff.js":"520","D:\\react-myprojects\\dss\\src\\components\\TrainingsTableViewStaff.js":"521","D:\\react-myprojects\\dss\\src\\components\\LeaveTableViewStaff.js":"522","D:\\react-myprojects\\dss\\src\\components\\PayslipSummaryTableView.js":"523","D:\\react-myprojects\\dss\\src\\components\\PayslipTableViewSummary.js":"524","D:\\react-myprojects\\dss\\src\\components\\expenses\\utils.js":"525","D:\\react-myprojects\\dss\\src\\helpers\\SummaryTableView.js":"526","D:\\react-myprojects\\dss\\src\\components\\leaves\\utils.js":"527","D:\\react-myprojects\\dss\\src\\components\\ExpensesSummaryTableView.js":"528","D:\\react-myprojects\\dss\\src\\components\\institutes\\useAddInstitutes.js":"529","D:\\react-myprojects\\dss\\src\\components\\designations\\useAddDesignations.js":"530","D:\\react-myprojects\\dss\\src\\components\\departments\\useAddDepartments.js":"531","D:\\react-myprojects\\dss\\src\\components\\experiences\\useDeleteExperiences.js":"532","D:\\react-myprojects\\dss\\src\\components\\family\\useDeleteFamily.js":"533","D:\\react-myprojects\\dss\\src\\components\\educations\\useAddEducations.js":"534","D:\\react-myprojects\\dss\\src\\components\\educations\\useDeleteEducations.js":"535","D:\\react-myprojects\\dss\\src\\helpers\\Utils.js":"536","D:\\react-myprojects\\dss\\src\\components\\currency\\useAddCurrency.js":"537","D:\\react-myprojects\\dss\\src\\components\\departments\\useDeleteDepartments.js":"538","D:\\react-myprojects\\dss\\src\\components\\departments\\useUpdateDepartments.js":"539","D:\\react-myprojects\\dss\\src\\components\\designations\\useDeleteDesignations.js":"540","D:\\react-myprojects\\dss\\src\\components\\payitems\\useDeletePayItems.js":"541","D:\\react-myprojects\\dss\\src\\components\\payitems\\useAddPayItems.js":"542","D:\\react-myprojects\\dss\\src\\components\\payitems\\usePayItems.js":"543","D:\\react-myprojects\\dss\\src\\components\\payitems\\useUpdatePayItems.js":"544","D:\\react-myprojects\\dss\\src\\components\\designations\\useUpdateDesignations.js":"545","D:\\react-myprojects\\dss\\src\\components\\institutes\\useDeleteInstitutes.js":"546","D:\\react-myprojects\\dss\\src\\components\\institutes\\useUpdateInstitutes.js":"547","D:\\react-myprojects\\dss\\src\\components\\currency\\useDeleteCurrency.js":"548","D:\\react-myprojects\\dss\\src\\components\\currency\\useUpdateCurrency.js":"549","D:\\react-myprojects\\dss\\src\\components\\currency\\useCurrency.js":"550","D:\\react-myprojects\\dss\\src\\components\\educations\\useUpdateEducations.js":"551","D:\\react-myprojects\\dss\\src\\components\\educations\\useEducations.js":"552","D:\\react-myprojects\\dss\\src\\components\\family\\useAddFamily.js":"553","D:\\react-myprojects\\dss\\src\\components\\leaves\\useLeavesStatus.js":"554","D:\\react-myprojects\\dss\\src\\components\\leaves\\useLeavesPeriod.js":"555","D:\\react-myprojects\\dss\\src\\components\\LeaveFormAdmin.js":"556","D:\\react-myprojects\\dss\\src\\components\\family\\useUpdateFamily.js":"557","D:\\react-myprojects\\dss\\src\\components\\family\\useFamily.js":"558","D:\\react-myprojects\\dss\\src\\components\\experiences\\useAddExperiences.js":"559","D:\\react-myprojects\\dss\\src\\components\\hoc\\useHocPeriod.js":"560","D:\\react-myprojects\\dss\\src\\components\\dailyallows\\useDailyAllowsPeriod.js":"561","D:\\react-myprojects\\dss\\src\\components\\payrun\\usePayrunStatus.js":"562","D:\\react-myprojects\\dss\\src\\components\\hoc\\utils.js":"563","D:\\react-myprojects\\dss\\src\\components\\family\\utils.js":"564","D:\\react-myprojects\\dss\\src\\components\\educations\\utils.js":"565","D:\\react-myprojects\\dss\\src\\components\\payrun\\utils.js":"566","D:\\react-myprojects\\dss\\src\\components\\payitems\\utils.js":"567","D:\\react-myprojects\\dss\\src\\components\\experiences\\useUpdateExperiences.js":"568","D:\\react-myprojects\\dss\\src\\components\\experiences\\useExperiences.js":"569","D:\\react-myprojects\\dss\\src\\components\\ExpenseTableViewSummary.js":"570","D:\\react-myprojects\\dss\\src\\helpers\\BarChart.js":"571","D:\\react-myprojects\\dss\\src\\helpers\\BarChartStack.js":"572","D:\\react-myprojects\\dss\\src\\helpers\\CardLayout4.js":"573","D:\\react-myprojects\\dss\\src\\components\\EmployeeView.js":"574","D:\\react-myprojects\\dss\\src\\components\\hoc\\useAddHoc.js":"575","D:\\react-myprojects\\dss\\src\\components\\hoc\\useHoc.js":"576","D:\\react-myprojects\\dss\\src\\components\\HocForm.js":"577","D:\\react-myprojects\\dss\\src\\components\\employees\\useAllEmployees.js":"578","D:\\react-myprojects\\dss\\src\\helpers\\CustomAlertDialog.js":"579","D:\\react-myprojects\\dss\\src\\components\\expenses\\useExpensesPayrun.js":"580","D:\\react-myprojects\\dss\\src\\components\\payrun\\useDeletePayrun.js":"581","D:\\react-myprojects\\dss\\src\\components\\payrun\\usePayrun.js":"582","D:\\react-myprojects\\dss\\src\\components\\AllowancesTable.js":"583","D:\\react-myprojects\\dss\\src\\components\\EmpViewTrainings.js":"584","D:\\react-myprojects\\dss\\src\\components\\EmpViewLeaves.js":"585","D:\\react-myprojects\\dss\\src\\components\\EmpViewEducations.js":"586","D:\\react-myprojects\\dss\\src\\components\\EmpViewExperiences.js":"587","D:\\react-myprojects\\dss\\src\\components\\payslips\\usePayslips.js":"588","D:\\react-myprojects\\dss\\src\\components\\EmpViewFamily.js":"589","D:\\react-myprojects\\dss\\src\\components\\deductions\\useDeductions.js":"590","D:\\react-myprojects\\dss\\src\\components\\allowances\\useAllowances.js":"591","D:\\react-myprojects\\dss\\src\\components\\experiences\\utils.js":"592","D:\\react-myprojects\\dss\\src\\components\\expenses\\useExpensesStatus.js":"593","D:\\react-myprojects\\dss\\src\\components\\hoclocation\\useHoclocation.js":"594","D:\\react-myprojects\\dss\\src\\components\\hocwhydetails\\useHocwhydetails.js":"595","D:\\react-myprojects\\dss\\src\\components\\hocwhy\\useHocwhy.js":"596","D:\\react-myprojects\\dss\\src\\components\\hocwhatdetails\\useHocwhatdetails.js":"597","D:\\react-myprojects\\dss\\src\\components\\hocwhat\\useHocwhat.js":"598","D:\\react-myprojects\\dss\\src\\components\\hoccategory\\useHoccategory.js":"599","D:\\react-myprojects\\dss\\src\\components\\hoclocation\\utils.js":"600","D:\\react-myprojects\\dss\\src\\components\\hoccategory\\utils.js":"601","D:\\react-myprojects\\dss\\src\\components\\hocwhatdetails\\utils.js":"602","D:\\react-myprojects\\dss\\src\\components\\hocwhat\\utils.js":"603","D:\\react-myprojects\\dss\\src\\components\\hocwhy\\utils.js":"604","D:\\react-myprojects\\dss\\src\\components\\hocwhydetails\\utils.js":"605","D:\\react-myprojects\\dss\\src\\components\\ExpenseTableManager.js":"606","D:\\react-myprojects\\dss\\src\\components\\PayslipTableViewManager.js":"607","D:\\react-myprojects\\dss\\src\\components\\ExpenseTableView.js":"608","D:\\react-myprojects\\dss\\src\\components\\LeaveTableViewManager.js":"609","D:\\react-myprojects\\dss\\src\\components\\PaySummary.js":"610","D:\\react-myprojects\\dss\\src\\components\\payrun\\useUpdatePayrun.js":"611","D:\\react-myprojects\\dss\\src\\components\\PayForm.js":"612","D:\\react-myprojects\\dss\\src\\components\\ComponentToPrint.js":"613","D:\\react-myprojects\\dss\\src\\components\\PaySummaryTable.js":"614","D:\\react-myprojects\\dss\\src\\components\\EmployeeFormStaff.js":"615","D:\\react-myprojects\\dss\\src\\components\\EmployeeForm.js":"616","D:\\react-myprojects\\dss\\src\\components\\MenuListItemsDirector.js":"617","D:\\react-myprojects\\dss\\src\\components\\MenuListItemsManager.js":"618","D:\\react-myprojects\\dss\\src\\components\\MenuListItemsAdminManager.js":"619","D:\\react-myprojects\\dss\\src\\components\\MenuListItemsOpsSpvr.js":"620","D:\\react-myprojects\\dss\\src\\components\\MenuListItems.js":"621","D:\\react-myprojects\\dss\\src\\components\\MenuListItemsAdmin.js":"622","D:\\react-myprojects\\dss\\src\\components\\MenuListItemsStaff.js":"623","D:\\react-myprojects\\dss\\src\\helpers\\TableContainer.js":"624","D:\\react-myprojects\\dss\\src\\components\\SingleDailyAllowsDetlsStaff.js":"625","D:\\react-myprojects\\dss\\src\\components\\SingleEmployeeStaff.js":"626","D:\\react-myprojects\\dss\\src\\pages\\AssetsPage.js":"627","D:\\react-myprojects\\dss\\src\\components\\AssetsTable.js":"628","D:\\react-myprojects\\dss\\src\\pages\\ItemsPage.js":"629","D:\\react-myprojects\\dss\\src\\components\\ItemsTable.js":"630","D:\\react-myprojects\\dss\\src\\components\\ItemForm.js":"631","D:\\react-myprojects\\dss\\src\\components\\AssetForm.js":"632","D:\\react-myprojects\\dss\\src\\pages\\DespatchPage.js":"633","D:\\react-myprojects\\dss\\src\\components\\DespatchForm.js":"634","D:\\react-myprojects\\dss\\src\\components\\DespatchTable.js":"635","D:\\react-myprojects\\dss\\src\\pages\\ReceivedPage.js":"636","D:\\react-myprojects\\dss\\src\\components\\ReceivedTable.js":"637","D:\\react-myprojects\\dss\\src\\components\\ReceivedForm.js":"638"},{"size":2573,"mtime":1635132644076,"results":"639","hashOfConfig":"640"},{"size":1797,"mtime":1634484908980,"results":"641","hashOfConfig":"640"},{"size":362,"mtime":1612573013334,"results":"642","hashOfConfig":"640"},{"size":7021,"mtime":1641138393443,"results":"643","hashOfConfig":"640"},{"size":4599,"mtime":1641139133504,"results":"644","hashOfConfig":"640"},{"size":5507,"mtime":1625586024782,"results":"645","hashOfConfig":"640"},{"size":1351,"mtime":1638065354430,"results":"646","hashOfConfig":"640"},{"size":7628,"mtime":1623592662975,"results":"647","hashOfConfig":"640"},{"size":40682,"mtime":1639105671812,"results":"648","hashOfConfig":"640"},{"size":3219,"mtime":1621342487299,"results":"649","hashOfConfig":"640"},{"size":225,"mtime":1621779292940,"results":"650","hashOfConfig":"640"},{"size":3683,"mtime":1623172638593,"results":"651","hashOfConfig":"640"},{"size":3181,"mtime":1621167963865,"results":"652","hashOfConfig":"640"},{"size":3366,"mtime":1629622148918,"results":"653","hashOfConfig":"640"},{"size":3269,"mtime":1630335029071,"results":"654","hashOfConfig":"640"},{"size":3214,"mtime":1621176394282,"results":"655","hashOfConfig":"640"},{"size":588,"mtime":1626320911504,"results":"656","hashOfConfig":"640"},{"size":3189,"mtime":1621005948632,"results":"657","hashOfConfig":"640"},{"size":3129,"mtime":1620537502474,"results":"658","hashOfConfig":"640"},{"size":3421,"mtime":1621866966445,"results":"659","hashOfConfig":"640"},{"size":3116,"mtime":1620536608782,"results":"660","hashOfConfig":"640"},{"size":1061,"mtime":1634881131142,"results":"661","hashOfConfig":"640"},{"size":468,"mtime":1634881547580,"results":"662","hashOfConfig":"640"},{"size":8392,"mtime":1637030502847,"results":"663","hashOfConfig":"640"},{"size":9868,"mtime":1641255379116,"results":"664","hashOfConfig":"640"},{"size":5109,"mtime":1622455758272,"results":"665","hashOfConfig":"640"},{"size":24202,"mtime":1624975052616,"results":"666","hashOfConfig":"640"},{"size":3564,"mtime":1623643063828,"results":"667","hashOfConfig":"640"},{"size":4085,"mtime":1621007307321,"results":"668","hashOfConfig":"669"},{"size":2343,"mtime":1622902246334,"results":"670","hashOfConfig":"640"},{"size":6538,"mtime":1629621864138,"results":"671","hashOfConfig":"640"},{"size":6104,"mtime":1624718011778,"results":"672","hashOfConfig":"640"},{"size":4588,"mtime":1621068413791,"results":"673","hashOfConfig":"640"},{"size":12373,"mtime":1637687305167,"results":"674","hashOfConfig":"640"},{"size":3955,"mtime":1622472085041,"results":"675","hashOfConfig":"640"},{"size":6806,"mtime":1624942731129,"results":"676","hashOfConfig":"640"},{"size":4601,"mtime":1621181277849,"results":"677","hashOfConfig":"640"},{"size":7240,"mtime":1631027234349,"results":"678","hashOfConfig":"640"},{"size":4603,"mtime":1624942857309,"results":"679","hashOfConfig":"640"},{"size":10534,"mtime":1629638230140,"results":"680","hashOfConfig":"640"},{"size":4648,"mtime":1621145879842,"results":"681","hashOfConfig":"640"},{"size":6361,"mtime":1624344505222,"results":"682","hashOfConfig":"669"},{"size":14576,"mtime":1631500334893,"results":"683","hashOfConfig":"640"},{"size":10813,"mtime":1624893831506,"results":"684","hashOfConfig":"640"},{"size":10013,"mtime":1622815489342,"results":"685","hashOfConfig":"640"},{"size":3276,"mtime":1624400993741,"results":"686","hashOfConfig":"640"},{"size":4606,"mtime":1623134606132,"results":"687","hashOfConfig":"640"},{"size":10108,"mtime":1634559262117,"results":"688","hashOfConfig":"640"},{"size":2024,"mtime":1623052037787,"results":"689","hashOfConfig":"640"},{"size":3198,"mtime":1621867179865,"results":"690","hashOfConfig":"640"},{"size":2844,"mtime":1624970722378,"results":"691","hashOfConfig":"640"},{"size":21503,"mtime":1624982037307,"results":"692","hashOfConfig":"640"},{"size":17438,"mtime":1624975146229,"results":"693","hashOfConfig":"640"},{"size":4085,"mtime":1622901629555,"results":"694","hashOfConfig":"640"},{"size":6877,"mtime":1623164315199,"results":"695","hashOfConfig":"640"},{"size":6774,"mtime":1623164342378,"results":"696","hashOfConfig":"640"},{"size":3192,"mtime":1621251598936,"results":"697","hashOfConfig":"640"},{"size":2604,"mtime":1628653532909,"results":"698","hashOfConfig":"640"},{"size":20820,"mtime":1623596141428,"results":"699","hashOfConfig":"640"},{"size":20287,"mtime":1623596884027,"results":"700","hashOfConfig":"640"},{"size":3206,"mtime":1621344267720,"results":"701","hashOfConfig":"640"},{"size":177,"mtime":1621590392825,"results":"702","hashOfConfig":"669"},{"size":22575,"mtime":1627999314264,"results":"703","hashOfConfig":"640"},{"size":368,"mtime":1621777960434,"results":"704","hashOfConfig":"669"},{"size":6306,"mtime":1641138984847,"results":"705","hashOfConfig":"640"},{"size":4573,"mtime":1623249268883,"results":"706","hashOfConfig":"640"},{"size":6602,"mtime":1631155967994,"results":"707","hashOfConfig":"640"},{"size":1497,"mtime":1624329676645,"results":"708","hashOfConfig":"640"},{"size":2522,"mtime":1634559062497,"results":"709","hashOfConfig":"640"},{"size":2519,"mtime":1634559087977,"results":"710","hashOfConfig":"640"},{"size":2441,"mtime":1634559105876,"results":"711","hashOfConfig":"640"},{"size":2475,"mtime":1634559121280,"results":"712","hashOfConfig":"640"},{"size":1573,"mtime":1623196100107,"results":"713","hashOfConfig":"640"},{"size":3788,"mtime":1622167319377,"results":"714","hashOfConfig":"669"},{"size":2016,"mtime":1622169452739,"results":"715","hashOfConfig":"669"},{"size":14524,"mtime":1624364976073,"results":"716","hashOfConfig":"640"},{"size":5426,"mtime":1622470700044,"results":"717","hashOfConfig":"640"},{"size":4243,"mtime":1622467767067,"results":"718","hashOfConfig":"640"},{"size":1355,"mtime":1627302664346,"results":"719","hashOfConfig":"640"},{"size":4012,"mtime":1634915187548,"results":"720","hashOfConfig":"640"},{"size":3797,"mtime":1626278320869,"results":"721","hashOfConfig":"640"},{"size":4101,"mtime":1627307324405,"results":"722","hashOfConfig":"640"},{"size":28732,"mtime":1624808084032,"results":"723","hashOfConfig":"640"},{"size":5098,"mtime":1627307574977,"results":"724","hashOfConfig":"640"},{"size":1771,"mtime":1622901266272,"results":"725","hashOfConfig":"640"},{"size":1683,"mtime":1622901272783,"results":"726","hashOfConfig":"640"},{"size":1553,"mtime":1622901780920,"results":"727","hashOfConfig":"640"},{"size":1748,"mtime":1622901284562,"results":"728","hashOfConfig":"640"},{"size":1553,"mtime":1622901288533,"results":"729","hashOfConfig":"640"},{"size":4233,"mtime":1623151726449,"results":"730","hashOfConfig":"669"},{"size":406,"mtime":1622961844382,"results":"731","hashOfConfig":"669"},{"size":1764,"mtime":1625668077798,"results":"732","hashOfConfig":"640"},{"size":3123,"mtime":1634570733091,"results":"733","hashOfConfig":"640"},{"size":3277,"mtime":1623164294695,"results":"734","hashOfConfig":"640"},{"size":2609,"mtime":1623164278370,"results":"735","hashOfConfig":"640"},{"size":3303,"mtime":1623239830588,"results":"736","hashOfConfig":"669"},{"size":1866,"mtime":1623210071067,"results":"737","hashOfConfig":"640"},{"size":4428,"mtime":1623198043181,"results":"738","hashOfConfig":"669"},{"size":3587,"mtime":1641139281701,"results":"739","hashOfConfig":"640"},{"size":3737,"mtime":1634559595228,"results":"740","hashOfConfig":"640"},{"size":27117,"mtime":1641054345306,"results":"741","hashOfConfig":"640"},{"size":8420,"mtime":1631793255860,"results":"742","hashOfConfig":"640"},{"size":2967,"mtime":1635092470309,"results":"743","hashOfConfig":"640"},{"size":2690,"mtime":1631806271421,"results":"744","hashOfConfig":"640"},{"size":7371,"mtime":1632069433022,"results":"745","hashOfConfig":"640"},{"size":8161,"mtime":1631759753657,"results":"746","hashOfConfig":"640"},{"size":3817,"mtime":1637684606889,"results":"747","hashOfConfig":"640"},{"size":2747,"mtime":1626248406133,"results":"748","hashOfConfig":"640"},{"size":3018,"mtime":1623915372850,"results":"749","hashOfConfig":"640"},{"size":7887,"mtime":1627913909199,"results":"750","hashOfConfig":"640"},{"size":23761,"mtime":1634652731486,"results":"751","hashOfConfig":"640"},{"size":25772,"mtime":1635341066484,"results":"752","hashOfConfig":"640"},{"size":50668,"mtime":1640959888119,"results":"753","hashOfConfig":"640"},{"size":18799,"mtime":1634620453072,"results":"754","hashOfConfig":"640"},{"size":1649,"mtime":1641138050048,"results":"755","hashOfConfig":"640"},{"size":4557,"mtime":1635094437615,"results":"756","hashOfConfig":"640"},{"size":5734,"mtime":1638065419744,"results":"757","hashOfConfig":"640"},{"size":9226,"mtime":1635129717529,"results":"758","hashOfConfig":"640"},{"size":3172,"mtime":1626248281244,"results":"759","hashOfConfig":"640"},{"size":3316,"mtime":1631156734641,"results":"760","hashOfConfig":"640"},{"size":4686,"mtime":1631156653187,"results":"761","hashOfConfig":"640"},{"size":3060,"mtime":1624986119782,"results":"762","hashOfConfig":"640"},{"size":4162,"mtime":1624344761683,"results":"763","hashOfConfig":"640"},{"size":5649,"mtime":1638110644307,"results":"764","hashOfConfig":"640"},{"size":37956,"mtime":1639758161585,"results":"765","hashOfConfig":"640"},{"size":5867,"mtime":1623937238693,"results":"766","hashOfConfig":"669"},{"size":5448,"mtime":1623936032775,"results":"767","hashOfConfig":"669"},{"size":5537,"mtime":1623936228615,"results":"768","hashOfConfig":"669"},{"size":15277,"mtime":1627310902031,"results":"769","hashOfConfig":"640"},{"size":3394,"mtime":1624718959496,"results":"770","hashOfConfig":"640"},{"size":7783,"mtime":1631026911147,"results":"771","hashOfConfig":"640"},{"size":3315,"mtime":1623942108178,"results":"772","hashOfConfig":"640"},{"size":14452,"mtime":1641231532228,"results":"773","hashOfConfig":"640"},{"size":6129,"mtime":1634563990849,"results":"774","hashOfConfig":"640"},{"size":43510,"mtime":1641223718170,"results":"775","hashOfConfig":"640"},{"size":43041,"mtime":1641054843472,"results":"776","hashOfConfig":"640"},{"size":7363,"mtime":1634871706848,"results":"777","hashOfConfig":"640"},{"size":8086,"mtime":1635084330043,"results":"778","hashOfConfig":"640"},{"size":3432,"mtime":1624282741154,"results":"779","hashOfConfig":"640"},{"size":12225,"mtime":1636384160006,"results":"780","hashOfConfig":"640"},{"size":16793,"mtime":1631073947286,"results":"781","hashOfConfig":"640"},{"size":24514,"mtime":1636385388042,"results":"782","hashOfConfig":"640"},{"size":4605,"mtime":1631451877442,"results":"783","hashOfConfig":"640"},{"size":3426,"mtime":1631156530288,"results":"784","hashOfConfig":"640"},{"size":3054,"mtime":1630421566897,"results":"785","hashOfConfig":"640"},{"size":3941,"mtime":1625155269751,"results":"786","hashOfConfig":"669"},{"size":783,"mtime":1626360373349,"results":"787","hashOfConfig":"640"},{"size":714,"mtime":1625524622674,"results":"788","hashOfConfig":"669"},{"size":1513,"mtime":1625547107105,"results":"789","hashOfConfig":"669"},{"size":632,"mtime":1626319057021,"results":"790","hashOfConfig":"640"},{"size":10223,"mtime":1637676250240,"results":"791","hashOfConfig":"640"},{"size":646,"mtime":1626924860523,"results":"792","hashOfConfig":"640"},{"size":1524,"mtime":1631151422337,"results":"793","hashOfConfig":"640"},{"size":880,"mtime":1626096922916,"results":"794","hashOfConfig":"640"},{"size":37895,"mtime":1635302540329,"results":"795","hashOfConfig":"640"},{"size":1252,"mtime":1641255342472,"results":"796","hashOfConfig":"640"},{"size":768,"mtime":1637682593331,"results":"797","hashOfConfig":"640"},{"size":770,"mtime":1630322149187,"results":"798","hashOfConfig":"640"},{"size":760,"mtime":1626012143637,"results":"799","hashOfConfig":"640"},{"size":803,"mtime":1630322171248,"results":"800","hashOfConfig":"640"},{"size":443,"mtime":1626102558368,"results":"801","hashOfConfig":"640"},{"size":547,"mtime":1625758222838,"results":"802","hashOfConfig":"640"},{"size":453,"mtime":1625889377868,"results":"803","hashOfConfig":"640"},{"size":734,"mtime":1625837998174,"results":"804","hashOfConfig":"640"},{"size":724,"mtime":1625838060126,"results":"805","hashOfConfig":"640"},{"size":777,"mtime":1625837935113,"results":"806","hashOfConfig":"640"},{"size":995,"mtime":1639703740352,"results":"807","hashOfConfig":"640"},{"size":785,"mtime":1625802942098,"results":"808","hashOfConfig":"640"},{"size":646,"mtime":1625798737997,"results":"809","hashOfConfig":"640"},{"size":748,"mtime":1625833836425,"results":"810","hashOfConfig":"640"},{"size":738,"mtime":1625833769320,"results":"811","hashOfConfig":"640"},{"size":978,"mtime":1625833701287,"results":"812","hashOfConfig":"640"},{"size":789,"mtime":1626011673317,"results":"813","hashOfConfig":"640"},{"size":741,"mtime":1625832767335,"results":"814","hashOfConfig":"640"},{"size":731,"mtime":1625832717517,"results":"815","hashOfConfig":"640"},{"size":784,"mtime":1625832816616,"results":"816","hashOfConfig":"640"},{"size":965,"mtime":1625833417248,"results":"817","hashOfConfig":"640"},{"size":704,"mtime":1625831924179,"results":"818","hashOfConfig":"640"},{"size":714,"mtime":1625831978364,"results":"819","hashOfConfig":"640"},{"size":757,"mtime":1625831672038,"results":"820","hashOfConfig":"640"},{"size":916,"mtime":1625832650282,"results":"821","hashOfConfig":"640"},{"size":180,"mtime":1638188926234,"results":"822","hashOfConfig":"640"},{"size":224,"mtime":1626004799326,"results":"823","hashOfConfig":"640"},{"size":173,"mtime":1638188950802,"results":"824","hashOfConfig":"640"},{"size":165,"mtime":1638188907547,"results":"825","hashOfConfig":"640"},{"size":952,"mtime":1625837870028,"results":"826","hashOfConfig":"640"},{"size":224,"mtime":1626059101507,"results":"827","hashOfConfig":"640"},{"size":3203,"mtime":1626019204916,"results":"828","hashOfConfig":"640"},{"size":3382,"mtime":1626073403818,"results":"829","hashOfConfig":"640"},{"size":3259,"mtime":1626091164763,"results":"830","hashOfConfig":"640"},{"size":724,"mtime":1625802698233,"results":"831","hashOfConfig":"640"},{"size":8628,"mtime":1630469029499,"results":"832","hashOfConfig":"640"},{"size":501,"mtime":1625800533121,"results":"833","hashOfConfig":"640"},{"size":750,"mtime":1626012044446,"results":"834","hashOfConfig":"640"},{"size":1133,"mtime":1631197215977,"results":"835","hashOfConfig":"640"},{"size":5859,"mtime":1640959553577,"results":"836","hashOfConfig":"640"},{"size":4791,"mtime":1641138790070,"results":"837","hashOfConfig":"640"},{"size":727,"mtime":1626000997584,"results":"838","hashOfConfig":"640"},{"size":1018,"mtime":1626000648360,"results":"839","hashOfConfig":"640"},{"size":717,"mtime":1626000835564,"results":"840","hashOfConfig":"640"},{"size":713,"mtime":1625839833770,"results":"841","hashOfConfig":"640"},{"size":703,"mtime":1625839094668,"results":"842","hashOfConfig":"640"},{"size":1093,"mtime":1635268047989,"results":"843","hashOfConfig":"640"},{"size":342,"mtime":1630468829740,"results":"844","hashOfConfig":"640"},{"size":998,"mtime":1626013831261,"results":"845","hashOfConfig":"640"},{"size":228,"mtime":1626012237438,"results":"846","hashOfConfig":"640"},{"size":13068,"mtime":1640958462728,"results":"847","hashOfConfig":"640"},{"size":734,"mtime":1625802828834,"results":"848","hashOfConfig":"640"},{"size":527,"mtime":1625758258329,"results":"849","hashOfConfig":"640"},{"size":476,"mtime":1625801885836,"results":"850","hashOfConfig":"640"},{"size":724,"mtime":1639756462279,"results":"851","hashOfConfig":"640"},{"size":5856,"mtime":1629609486675,"results":"852","hashOfConfig":"640"},{"size":4527,"mtime":1629609173318,"results":"853","hashOfConfig":"640"},{"size":1024,"mtime":1629990451713,"results":"854","hashOfConfig":"640"},{"size":798,"mtime":1629647228296,"results":"855","hashOfConfig":"640"},{"size":808,"mtime":1629685308895,"results":"856","hashOfConfig":"640"},{"size":839,"mtime":1629643605781,"results":"857","hashOfConfig":"640"},{"size":678,"mtime":1631761584227,"results":"858","hashOfConfig":"640"},{"size":5627,"mtime":1629620972884,"results":"859","hashOfConfig":"640"},{"size":218,"mtime":1632042511765,"results":"860","hashOfConfig":"640"},{"size":3400,"mtime":1631156699697,"results":"861","hashOfConfig":"640"},{"size":1366,"mtime":1636382785490,"results":"862","hashOfConfig":"640"},{"size":743,"mtime":1625801372351,"results":"863","hashOfConfig":"640"},{"size":753,"mtime":1625801448372,"results":"864","hashOfConfig":"640"},{"size":796,"mtime":1625802990123,"results":"865","hashOfConfig":"640"},{"size":789,"mtime":1625802984510,"results":"866","hashOfConfig":"640"},{"size":746,"mtime":1625800910412,"results":"867","hashOfConfig":"640"},{"size":742,"mtime":1625800887575,"results":"868","hashOfConfig":"640"},{"size":759,"mtime":1625800821242,"results":"869","hashOfConfig":"640"},{"size":729,"mtime":1625801941854,"results":"870","hashOfConfig":"640"},{"size":739,"mtime":1625801996227,"results":"871","hashOfConfig":"640"},{"size":782,"mtime":1625802056055,"results":"872","hashOfConfig":"640"},{"size":218,"mtime":1626014179037,"results":"873","hashOfConfig":"640"},{"size":739,"mtime":1625800774674,"results":"874","hashOfConfig":"640"},{"size":782,"mtime":1625800831757,"results":"875","hashOfConfig":"640"},{"size":450,"mtime":1628647536437,"results":"876","hashOfConfig":"640"},{"size":238,"mtime":1626013581220,"results":"877","hashOfConfig":"640"},{"size":1004,"mtime":1626268997688,"results":"878","hashOfConfig":"640"},{"size":1049,"mtime":1626923106183,"results":"879","hashOfConfig":"640"},{"size":2409,"mtime":1634559139097,"results":"880","hashOfConfig":"640"},{"size":729,"mtime":1627307060429,"results":"881","hashOfConfig":"640"},{"size":782,"mtime":1627306338795,"results":"882","hashOfConfig":"640"},{"size":493,"mtime":1627306271324,"results":"883","hashOfConfig":"640"},{"size":739,"mtime":1627306207024,"results":"884","hashOfConfig":"640"},{"size":805,"mtime":1627912813565,"results":"885","hashOfConfig":"640"},{"size":713,"mtime":1626014110639,"results":"886","hashOfConfig":"640"},{"size":1055,"mtime":1630040562812,"results":"887","hashOfConfig":"640"},{"size":477,"mtime":1632542575544,"results":"888","hashOfConfig":"640"},{"size":2587,"mtime":1634559156672,"results":"889","hashOfConfig":"640"},{"size":769,"mtime":1628652247996,"results":"890","hashOfConfig":"640"},{"size":726,"mtime":1628652185180,"results":"891","hashOfConfig":"640"},{"size":716,"mtime":1628652117726,"results":"892","hashOfConfig":"640"},{"size":1099,"mtime":1630230678288,"results":"893","hashOfConfig":"640"},{"size":11692,"mtime":1637686197465,"results":"894","hashOfConfig":"640"},{"size":6672,"mtime":1634559013641,"results":"895","hashOfConfig":"640"},{"size":10316,"mtime":1637716742367,"results":"896","hashOfConfig":"640"},{"size":10095,"mtime":1637692814429,"results":"897","hashOfConfig":"640"},{"size":782,"mtime":1632381220962,"results":"898","hashOfConfig":"640"},{"size":1312,"mtime":1631189713260,"results":"899","hashOfConfig":"640"},{"size":756,"mtime":1626014159472,"results":"900","hashOfConfig":"640"},{"size":3293,"mtime":1634559702235,"results":"901","hashOfConfig":"640"},{"size":1511,"mtime":1631234568295,"results":"902","hashOfConfig":"640"},{"size":3175,"mtime":1631062866392,"results":"903","hashOfConfig":"640"},{"size":1393,"mtime":1635270477858,"results":"904","hashOfConfig":"640"},{"size":1493,"mtime":1631788310025,"results":"905","hashOfConfig":"640"},{"size":1165,"mtime":1631761610044,"results":"906","hashOfConfig":"640"},{"size":1067,"mtime":1631801114382,"results":"907","hashOfConfig":"640"},{"size":2756,"mtime":1635340787289,"results":"908","hashOfConfig":"640"},{"size":3732,"mtime":1635340659798,"results":"909","hashOfConfig":"640"},{"size":2989,"mtime":1635340446909,"results":"910","hashOfConfig":"640"},{"size":1145,"mtime":1631841429724,"results":"911","hashOfConfig":"640"},{"size":2867,"mtime":1631850526504,"results":"912","hashOfConfig":"640"},{"size":1017,"mtime":1631851197671,"results":"913","hashOfConfig":"640"},{"size":945,"mtime":1631850525624,"results":"914","hashOfConfig":"640"},{"size":1347,"mtime":1632038635671,"results":"915","hashOfConfig":"640"},{"size":2297,"mtime":1632030954021,"results":"916","hashOfConfig":"640"},{"size":1104,"mtime":1632040092091,"results":"917","hashOfConfig":"640"},{"size":2548,"mtime":1640447189471,"results":"918","hashOfConfig":"640"},{"size":1375,"mtime":1632042598961,"results":"919","hashOfConfig":"640"},{"size":3110,"mtime":1634569366384,"results":"920","hashOfConfig":"640"},{"size":3632,"mtime":1632060061809,"results":"921","hashOfConfig":"640"},{"size":6242,"mtime":1641260718158,"results":"922","hashOfConfig":"640"},{"size":9330,"mtime":1637691578788,"results":"923","hashOfConfig":"640"},{"size":1104,"mtime":1632152172173,"results":"924","hashOfConfig":"640"},{"size":1072,"mtime":1632306858886,"results":"925","hashOfConfig":"640"},{"size":222,"mtime":1632278524654,"results":"926","hashOfConfig":"640"},{"size":770,"mtime":1626014520002,"results":"927","hashOfConfig":"640"},{"size":727,"mtime":1626014379405,"results":"928","hashOfConfig":"640"},{"size":717,"mtime":1626014330237,"results":"929","hashOfConfig":"640"},{"size":1695,"mtime":1641138187450,"results":"930","hashOfConfig":"640"},{"size":2158,"mtime":1635341171129,"results":"931","hashOfConfig":"640"},{"size":4950,"mtime":1634651867954,"results":"932","hashOfConfig":"640"},{"size":4050,"mtime":1634996915573,"results":"933","hashOfConfig":"640"},{"size":1002,"mtime":1636388943169,"results":"934","hashOfConfig":"640"},{"size":6507,"mtime":1637685063413,"results":"935","hashOfConfig":"640"},{"size":29314,"mtime":1641054008835,"results":"936","hashOfConfig":"640"},{"size":10932,"mtime":1637692699211,"results":"937","hashOfConfig":"640"},{"size":7343,"mtime":1623249330390,"results":"938","hashOfConfig":"640"},{"size":1187,"mtime":1637680924176,"results":"939","hashOfConfig":"640"},{"size":3996,"mtime":1637716655551,"results":"940","hashOfConfig":"640"},{"size":3438,"mtime":1639063669545,"results":"941","hashOfConfig":"640"},{"size":8869,"mtime":1639063800408,"results":"942","hashOfConfig":"640"},{"size":24234,"mtime":1638764773459,"results":"943","hashOfConfig":"640"},{"size":879,"mtime":1638064176425,"results":"944","hashOfConfig":"640"},{"size":683,"mtime":1638064239149,"results":"945","hashOfConfig":"640"},{"size":693,"mtime":1638064051891,"results":"946","hashOfConfig":"640"},{"size":736,"mtime":1638064098760,"results":"947","hashOfConfig":"640"},{"size":212,"mtime":1638172282050,"results":"948","hashOfConfig":"640"},{"size":726,"mtime":1638064229298,"results":"949","hashOfConfig":"640"},{"size":957,"mtime":1638113568251,"results":"950","hashOfConfig":"640"},{"size":176,"mtime":1638189013410,"results":"951","hashOfConfig":"640"},{"size":1056,"mtime":1638199168189,"results":"952","hashOfConfig":"640"},{"size":175,"mtime":1638189001426,"results":"953","hashOfConfig":"640"},{"size":3544,"mtime":1638844845091,"results":"954","hashOfConfig":"640"},{"size":1309,"mtime":1638711885810,"results":"955","hashOfConfig":"640"},{"size":1056,"mtime":1638724980499,"results":"956","hashOfConfig":"640"},{"size":175,"mtime":1638725004641,"results":"957","hashOfConfig":"640"},{"size":925,"mtime":1638725343906,"results":"958","hashOfConfig":"640"},{"size":167,"mtime":1638725369531,"results":"959","hashOfConfig":"640"},{"size":1016,"mtime":1638725530053,"results":"960","hashOfConfig":"640"},{"size":181,"mtime":1638725545603,"results":"961","hashOfConfig":"640"},{"size":912,"mtime":1638725848973,"results":"962","hashOfConfig":"640"},{"size":165,"mtime":1638725867948,"results":"963","hashOfConfig":"640"},{"size":1003,"mtime":1638726017088,"results":"964","hashOfConfig":"640"},{"size":179,"mtime":1638726036775,"results":"965","hashOfConfig":"640"},{"size":8087,"mtime":1641138314354,"results":"966","hashOfConfig":"640"},{"size":43550,"mtime":1641139574264,"results":"967","hashOfConfig":"640"},{"size":2573,"mtime":1635132644076,"results":"968","hashOfConfig":"969"},{"size":362,"mtime":1612573013334,"results":"970","hashOfConfig":"969"},{"size":1797,"mtime":1634484908980,"results":"971","hashOfConfig":"969"},{"size":6806,"mtime":1624942731129,"results":"972","hashOfConfig":"969"},{"size":5109,"mtime":1622455758272,"results":"973","hashOfConfig":"969"},{"size":14576,"mtime":1631500334893,"results":"974","hashOfConfig":"969"},{"size":20820,"mtime":1623596141428,"results":"975","hashOfConfig":"969"},{"size":6104,"mtime":1624718011778,"results":"976","hashOfConfig":"969"},{"size":5426,"mtime":1622470700044,"results":"977","hashOfConfig":"969"},{"size":21503,"mtime":1624982037307,"results":"978","hashOfConfig":"969"},{"size":632,"mtime":1626319057021,"results":"979","hashOfConfig":"969"},{"size":646,"mtime":1626924860523,"results":"980","hashOfConfig":"969"},{"size":1649,"mtime":1641138050048,"results":"981","hashOfConfig":"969"},{"size":1695,"mtime":1641138187450,"results":"982","hashOfConfig":"969"},{"size":24202,"mtime":1624975052616,"results":"983","hashOfConfig":"969"},{"size":4603,"mtime":1624942857309,"results":"984","hashOfConfig":"969"},{"size":10813,"mtime":1624893831506,"results":"985","hashOfConfig":"969"},{"size":3955,"mtime":1622472085041,"results":"986","hashOfConfig":"969"},{"size":3564,"mtime":1623643063828,"results":"987","hashOfConfig":"969"},{"size":4243,"mtime":1622467767067,"results":"988","hashOfConfig":"969"},{"size":20287,"mtime":1623596884027,"results":"989","hashOfConfig":"969"},{"size":17438,"mtime":1624975146229,"results":"990","hashOfConfig":"969"},{"size":783,"mtime":1626360373349,"results":"991","hashOfConfig":"969"},{"size":7757,"mtime":1648215580440,"results":"992","hashOfConfig":"969"},{"size":4554,"mtime":1648252097739,"results":"993","hashOfConfig":"969"},{"size":6148,"mtime":1648212345518,"results":"994","hashOfConfig":"969"},{"size":6321,"mtime":1642069123421,"results":"995","hashOfConfig":"969"},{"size":7363,"mtime":1634909116888,"results":"996","hashOfConfig":"969"},{"size":7545,"mtime":1648217379528,"results":"997","hashOfConfig":"969"},{"size":6899,"mtime":1634876017551,"results":"998","hashOfConfig":"969"},{"size":5961,"mtime":1637685050308,"results":"999","hashOfConfig":"969"},{"size":7363,"mtime":1641137970584,"results":"1000","hashOfConfig":"969"},{"size":3123,"mtime":1634570733091,"results":"1001","hashOfConfig":"969"},{"size":995,"mtime":1639703740352,"results":"1002","hashOfConfig":"969"},{"size":880,"mtime":1626096922916,"results":"1003","hashOfConfig":"969"},{"size":7037,"mtime":1642072324231,"results":"1004","hashOfConfig":"969"},{"size":10298,"mtime":1648256161744,"results":"1005","hashOfConfig":"969"},{"size":7889,"mtime":1648254216310,"results":"1006","hashOfConfig":"969"},{"size":4599,"mtime":1641139133504,"results":"1007","hashOfConfig":"969"},{"size":5507,"mtime":1625586024782,"results":"1008","hashOfConfig":"969"},{"size":5033,"mtime":1626003907193,"results":"1009","hashOfConfig":"969"},{"size":4588,"mtime":1621068413791,"results":"1010","hashOfConfig":"969"},{"size":4601,"mtime":1621181277849,"results":"1011","hashOfConfig":"969"},{"size":4648,"mtime":1621145879842,"results":"1012","hashOfConfig":"969"},{"size":3276,"mtime":1624400993741,"results":"1013","hashOfConfig":"969"},{"size":4573,"mtime":1623249268883,"results":"1014","hashOfConfig":"969"},{"size":4606,"mtime":1623134606132,"results":"1015","hashOfConfig":"969"},{"size":23761,"mtime":1634652731486,"results":"1016","hashOfConfig":"969"},{"size":25777,"mtime":1648253429067,"results":"1017","hashOfConfig":"969"},{"size":5333,"mtime":1635007469907,"results":"1018","hashOfConfig":"969"},{"size":4715,"mtime":1648251861389,"results":"1019","hashOfConfig":"969"},{"size":9330,"mtime":1637691578788,"results":"1020","hashOfConfig":"969"},{"size":224,"mtime":1626004799326,"results":"1021","hashOfConfig":"969"},{"size":1252,"mtime":1641255342472,"results":"1022","hashOfConfig":"969"},{"size":15277,"mtime":1627310902031,"results":"1023","hashOfConfig":"969"},{"size":37895,"mtime":1635302540329,"results":"1024","hashOfConfig":"969"},{"size":12373,"mtime":1637687305167,"results":"1025","hashOfConfig":"969"},{"size":10534,"mtime":1629638230140,"results":"1026","hashOfConfig":"969"},{"size":10013,"mtime":1622815489342,"results":"1027","hashOfConfig":"969"},{"size":12225,"mtime":1636384160006,"results":"1028","hashOfConfig":"969"},{"size":6602,"mtime":1631155967994,"results":"1029","hashOfConfig":"969"},{"size":22575,"mtime":1627999314264,"results":"1030","hashOfConfig":"969"},{"size":785,"mtime":1625802942098,"results":"1031","hashOfConfig":"969"},{"size":1524,"mtime":1631151422337,"results":"1032","hashOfConfig":"969"},{"size":782,"mtime":1632381220962,"results":"1033","hashOfConfig":"969"},{"size":1055,"mtime":1630040562812,"results":"1034","hashOfConfig":"969"},{"size":1145,"mtime":1631841429724,"results":"1035","hashOfConfig":"969"},{"size":3018,"mtime":1623915372850,"results":"1036","hashOfConfig":"969"},{"size":2747,"mtime":1626248406133,"results":"1037","hashOfConfig":"969"},{"size":1542,"mtime":1648217257266,"results":"1038","hashOfConfig":"969"},{"size":8161,"mtime":1631759753657,"results":"1039","hashOfConfig":"969"},{"size":3817,"mtime":1637684606889,"results":"1040","hashOfConfig":"969"},{"size":646,"mtime":1625798737997,"results":"1041","hashOfConfig":"969"},{"size":5098,"mtime":1627307574977,"results":"1042","hashOfConfig":"969"},{"size":1133,"mtime":1631197215977,"results":"1043","hashOfConfig":"969"},{"size":6774,"mtime":1623164342378,"results":"1044","hashOfConfig":"969"},{"size":6877,"mtime":1623164315199,"results":"1045","hashOfConfig":"969"},{"size":768,"mtime":1637682593331,"results":"1046","hashOfConfig":"969"},{"size":547,"mtime":1625758222838,"results":"1047","hashOfConfig":"969"},{"size":770,"mtime":1630322149187,"results":"1048","hashOfConfig":"969"},{"size":1511,"mtime":1631234568295,"results":"1049","hashOfConfig":"969"},{"size":228,"mtime":1626012237438,"results":"1050","hashOfConfig":"969"},{"size":1764,"mtime":1625668077798,"results":"1051","hashOfConfig":"969"},{"size":1061,"mtime":1634881131142,"results":"1052","hashOfConfig":"969"},{"size":1497,"mtime":1624329676645,"results":"1053","hashOfConfig":"969"},{"size":724,"mtime":1625838060126,"results":"1054","hashOfConfig":"969"},{"size":734,"mtime":1625837998174,"results":"1055","hashOfConfig":"969"},{"size":238,"mtime":1626013581220,"results":"1056","hashOfConfig":"969"},{"size":453,"mtime":1625889377868,"results":"1057","hashOfConfig":"969"},{"size":777,"mtime":1625837935113,"results":"1058","hashOfConfig":"969"},{"size":952,"mtime":1625837870028,"results":"1059","hashOfConfig":"969"},{"size":493,"mtime":1627306271324,"results":"1060","hashOfConfig":"969"},{"size":224,"mtime":1626059101507,"results":"1061","hashOfConfig":"969"},{"size":3116,"mtime":1620536608782,"results":"1062","hashOfConfig":"969"},{"size":588,"mtime":1626320911504,"results":"1063","hashOfConfig":"969"},{"size":3432,"mtime":1624282741154,"results":"1064","hashOfConfig":"969"},{"size":3421,"mtime":1621866966445,"results":"1065","hashOfConfig":"969"},{"size":3192,"mtime":1621251598936,"results":"1066","hashOfConfig":"969"},{"size":3129,"mtime":1620537502474,"results":"1067","hashOfConfig":"969"},{"size":3189,"mtime":1621005948632,"results":"1068","hashOfConfig":"969"},{"size":3214,"mtime":1621176394282,"results":"1069","hashOfConfig":"969"},{"size":3206,"mtime":1621344267720,"results":"1070","hashOfConfig":"969"},{"size":3203,"mtime":1626019204916,"results":"1071","hashOfConfig":"969"},{"size":3269,"mtime":1630335029071,"results":"1072","hashOfConfig":"969"},{"size":3181,"mtime":1621167963865,"results":"1073","hashOfConfig":"969"},{"size":3382,"mtime":1626073403818,"results":"1074","hashOfConfig":"969"},{"size":3259,"mtime":1626091164763,"results":"1075","hashOfConfig":"969"},{"size":3394,"mtime":1624718959496,"results":"1076","hashOfConfig":"969"},{"size":3438,"mtime":1639063669545,"results":"1077","hashOfConfig":"969"},{"size":3683,"mtime":1623172638593,"results":"1078","hashOfConfig":"969"},{"size":3204,"mtime":1648132141654,"results":"1079","hashOfConfig":"969"},{"size":3255,"mtime":1648132109132,"results":"1080","hashOfConfig":"969"},{"size":3219,"mtime":1621342487299,"results":"1081","hashOfConfig":"969"},{"size":225,"mtime":1621779292940,"results":"1082","hashOfConfig":"969"},{"size":3587,"mtime":1641139281701,"results":"1083","hashOfConfig":"969"},{"size":450,"mtime":1628647536437,"results":"1084","hashOfConfig":"969"},{"size":3277,"mtime":1623164294695,"results":"1085","hashOfConfig":"969"},{"size":1355,"mtime":1627302664346,"results":"1086","hashOfConfig":"969"},{"size":1573,"mtime":1623196100107,"results":"1087","hashOfConfig":"969"},{"size":2609,"mtime":1623164278370,"results":"1088","hashOfConfig":"969"},{"size":760,"mtime":1626012143637,"results":"1089","hashOfConfig":"969"},{"size":808,"mtime":1629685308895,"results":"1090","hashOfConfig":"969"},{"size":750,"mtime":1626012044446,"results":"1091","hashOfConfig":"969"},{"size":803,"mtime":1630322171248,"results":"1092","hashOfConfig":"969"},{"size":16793,"mtime":1631073947286,"results":"1093","hashOfConfig":"969"},{"size":3175,"mtime":1631062866392,"results":"1094","hashOfConfig":"969"},{"size":24514,"mtime":1636385388042,"results":"1095","hashOfConfig":"969"},{"size":2024,"mtime":1623052037787,"results":"1096","hashOfConfig":"969"},{"size":2604,"mtime":1628653532909,"results":"1097","hashOfConfig":"969"},{"size":2343,"mtime":1622902246334,"results":"1098","hashOfConfig":"969"},{"size":4085,"mtime":1622901629555,"results":"1099","hashOfConfig":"969"},{"size":5874,"mtime":1648253149921,"results":"1100","hashOfConfig":"969"},{"size":10108,"mtime":1634559262117,"results":"1101","hashOfConfig":"969"},{"size":14209,"mtime":1648209487384,"results":"1102","hashOfConfig":"969"},{"size":2844,"mtime":1624970722378,"results":"1103","hashOfConfig":"969"},{"size":14739,"mtime":1648210391916,"results":"1104","hashOfConfig":"969"},{"size":9275,"mtime":1642073747785,"results":"1105","hashOfConfig":"969"},{"size":6583,"mtime":1648170350090,"results":"1106","hashOfConfig":"969"},{"size":6672,"mtime":1634559013641,"results":"1107","hashOfConfig":"969"},{"size":8392,"mtime":1637030502847,"results":"1108","hashOfConfig":"969"},{"size":43550,"mtime":1641139574264,"results":"1109","hashOfConfig":"969"},{"size":17729,"mtime":1648260505366,"results":"1110","hashOfConfig":"969"},{"size":44557,"mtime":1648259253928,"results":"1111","hashOfConfig":"969"},{"size":15075,"mtime":1648217666901,"results":"1112","hashOfConfig":"969"},{"size":29314,"mtime":1641054008835,"results":"1113","hashOfConfig":"969"},{"size":490,"mtime":1642070433823,"results":"1114","hashOfConfig":"969"},{"size":15963,"mtime":1648252327847,"results":"1115","hashOfConfig":"969"},{"size":1866,"mtime":1623210071067,"results":"1116","hashOfConfig":"969"},{"size":798,"mtime":1629647228296,"results":"1117","hashOfConfig":"969"},{"size":1366,"mtime":1636382785490,"results":"1118","hashOfConfig":"969"},{"size":839,"mtime":1629643605781,"results":"1119","hashOfConfig":"969"},{"size":717,"mtime":1626000835564,"results":"1120","hashOfConfig":"969"},{"size":727,"mtime":1626000997584,"results":"1121","hashOfConfig":"969"},{"size":1018,"mtime":1626000648360,"results":"1122","hashOfConfig":"969"},{"size":713,"mtime":1625839833770,"results":"1123","hashOfConfig":"969"},{"size":703,"mtime":1625839094668,"results":"1124","hashOfConfig":"969"},{"size":724,"mtime":1625802698233,"results":"1125","hashOfConfig":"969"},{"size":1093,"mtime":1635268047989,"results":"1126","hashOfConfig":"969"},{"size":3797,"mtime":1626278320869,"results":"1127","hashOfConfig":"969"},{"size":4101,"mtime":1627307324405,"results":"1128","hashOfConfig":"969"},{"size":4012,"mtime":1634915187548,"results":"1129","hashOfConfig":"969"},{"size":28732,"mtime":1624808084032,"results":"1130","hashOfConfig":"969"},{"size":2587,"mtime":1634559156672,"results":"1131","hashOfConfig":"969"},{"size":2409,"mtime":1634559139097,"results":"1132","hashOfConfig":"969"},{"size":2475,"mtime":1634559121280,"results":"1133","hashOfConfig":"969"},{"size":2441,"mtime":1634559105876,"results":"1134","hashOfConfig":"969"},{"size":2519,"mtime":1634559087977,"results":"1135","hashOfConfig":"969"},{"size":501,"mtime":1625800533121,"results":"1136","hashOfConfig":"969"},{"size":1104,"mtime":1632152172173,"results":"1137","hashOfConfig":"969"},{"size":724,"mtime":1639756462279,"results":"1138","hashOfConfig":"969"},{"size":3198,"mtime":1621867179865,"results":"1139","hashOfConfig":"969"},{"size":734,"mtime":1625802828834,"results":"1140","hashOfConfig":"969"},{"size":736,"mtime":1638064098760,"results":"1141","hashOfConfig":"969"},{"size":693,"mtime":1638064051891,"results":"1142","hashOfConfig":"969"},{"size":1347,"mtime":1632038635671,"results":"1143","hashOfConfig":"969"},{"size":6500,"mtime":1648253804026,"results":"1144","hashOfConfig":"969"},{"size":8375,"mtime":1637684299791,"results":"1145","hashOfConfig":"969"},{"size":10932,"mtime":1637692699211,"results":"1146","hashOfConfig":"969"},{"size":2548,"mtime":1640447189471,"results":"1147","hashOfConfig":"969"},{"size":6242,"mtime":1641260718158,"results":"1148","hashOfConfig":"969"},{"size":5856,"mtime":1629609486675,"results":"1149","hashOfConfig":"969"},{"size":4527,"mtime":1629609173318,"results":"1150","hashOfConfig":"969"},{"size":3544,"mtime":1638844845091,"results":"1151","hashOfConfig":"969"},{"size":8420,"mtime":1631793255860,"results":"1152","hashOfConfig":"969"},{"size":7371,"mtime":1632069433022,"results":"1153","hashOfConfig":"969"},{"size":10316,"mtime":1637716742367,"results":"1154","hashOfConfig":"969"},{"size":5627,"mtime":1629620972884,"results":"1155","hashOfConfig":"969"},{"size":3732,"mtime":1635340659798,"results":"1156","hashOfConfig":"969"},{"size":3316,"mtime":1631156734641,"results":"1157","hashOfConfig":"969"},{"size":3172,"mtime":1626248281244,"results":"1158","hashOfConfig":"969"},{"size":4162,"mtime":1624344761683,"results":"1159","hashOfConfig":"969"},{"size":3060,"mtime":1624986119782,"results":"1160","hashOfConfig":"969"},{"size":4686,"mtime":1631156653187,"results":"1161","hashOfConfig":"969"},{"size":3400,"mtime":1631156699697,"results":"1162","hashOfConfig":"969"},{"size":3426,"mtime":1631156530288,"results":"1163","hashOfConfig":"969"},{"size":3632,"mtime":1632060061809,"results":"1164","hashOfConfig":"969"},{"size":2756,"mtime":1635340787289,"results":"1165","hashOfConfig":"969"},{"size":678,"mtime":1631761584227,"results":"1166","hashOfConfig":"969"},{"size":1017,"mtime":1631851197671,"results":"1167","hashOfConfig":"969"},{"size":218,"mtime":1632042511765,"results":"1168","hashOfConfig":"969"},{"size":3110,"mtime":1634569366384,"results":"1169","hashOfConfig":"969"},{"size":729,"mtime":1627307060429,"results":"1170","hashOfConfig":"969"},{"size":743,"mtime":1625801372351,"results":"1171","hashOfConfig":"969"},{"size":742,"mtime":1625800887575,"results":"1172","hashOfConfig":"969"},{"size":748,"mtime":1625833836425,"results":"1173","hashOfConfig":"969"},{"size":714,"mtime":1625831978364,"results":"1174","hashOfConfig":"969"},{"size":731,"mtime":1625832717517,"results":"1175","hashOfConfig":"969"},{"size":741,"mtime":1625832767335,"results":"1176","hashOfConfig":"969"},{"size":342,"mtime":1630468829740,"results":"1177","hashOfConfig":"969"},{"size":716,"mtime":1628652117726,"results":"1178","hashOfConfig":"969"},{"size":746,"mtime":1625800910412,"results":"1179","hashOfConfig":"969"},{"size":789,"mtime":1625802984510,"results":"1180","hashOfConfig":"969"},{"size":753,"mtime":1625801448372,"results":"1181","hashOfConfig":"969"},{"size":727,"mtime":1626014379405,"results":"1182","hashOfConfig":"969"},{"size":717,"mtime":1626014330237,"results":"1183","hashOfConfig":"969"},{"size":1072,"mtime":1632306858886,"results":"1184","hashOfConfig":"969"},{"size":770,"mtime":1626014520002,"results":"1185","hashOfConfig":"969"},{"size":796,"mtime":1625802990123,"results":"1186","hashOfConfig":"969"},{"size":739,"mtime":1627306207024,"results":"1187","hashOfConfig":"969"},{"size":782,"mtime":1627306338795,"results":"1188","hashOfConfig":"969"},{"size":726,"mtime":1628652185180,"results":"1189","hashOfConfig":"969"},{"size":769,"mtime":1628652247996,"results":"1190","hashOfConfig":"969"},{"size":477,"mtime":1632542575544,"results":"1191","hashOfConfig":"969"},{"size":784,"mtime":1625832816616,"results":"1192","hashOfConfig":"969"},{"size":965,"mtime":1625833417248,"results":"1193","hashOfConfig":"969"},{"size":704,"mtime":1625831924179,"results":"1194","hashOfConfig":"969"},{"size":1187,"mtime":1637680924176,"results":"1195","hashOfConfig":"969"},{"size":1375,"mtime":1632042598961,"results":"1196","hashOfConfig":"969"},{"size":11692,"mtime":1637686197465,"results":"1197","hashOfConfig":"969"},{"size":757,"mtime":1625831672038,"results":"1198","hashOfConfig":"969"},{"size":916,"mtime":1625832650282,"results":"1199","hashOfConfig":"969"},{"size":738,"mtime":1625833769320,"results":"1200","hashOfConfig":"969"},{"size":1309,"mtime":1638711885810,"results":"1201","hashOfConfig":"969"},{"size":1104,"mtime":1632040092091,"results":"1202","hashOfConfig":"969"},{"size":1067,"mtime":1631801114382,"results":"1203","hashOfConfig":"969"},{"size":212,"mtime":1638172282050,"results":"1204","hashOfConfig":"969"},{"size":165,"mtime":1638188907547,"results":"1205","hashOfConfig":"969"},{"size":173,"mtime":1638188950802,"results":"1206","hashOfConfig":"969"},{"size":218,"mtime":1626014179037,"results":"1207","hashOfConfig":"969"},{"size":222,"mtime":1632278524654,"results":"1208","hashOfConfig":"969"},{"size":789,"mtime":1626011673317,"results":"1209","hashOfConfig":"969"},{"size":978,"mtime":1625833701287,"results":"1210","hashOfConfig":"969"},{"size":2989,"mtime":1635340446909,"results":"1211","hashOfConfig":"969"},{"size":945,"mtime":1631850525624,"results":"1212","hashOfConfig":"969"},{"size":2867,"mtime":1631850526504,"results":"1213","hashOfConfig":"969"},{"size":1493,"mtime":1631788310025,"results":"1214","hashOfConfig":"969"},{"size":14524,"mtime":1624364976073,"results":"1215","hashOfConfig":"969"},{"size":683,"mtime":1638064239149,"results":"1216","hashOfConfig":"969"},{"size":879,"mtime":1638064176425,"results":"1217","hashOfConfig":"969"},{"size":24234,"mtime":1638764773459,"results":"1218","hashOfConfig":"969"},{"size":1002,"mtime":1636388943169,"results":"1219","hashOfConfig":"969"},{"size":1393,"mtime":1635270477858,"results":"1220","hashOfConfig":"969"},{"size":1099,"mtime":1630230678288,"results":"1221","hashOfConfig":"969"},{"size":713,"mtime":1626014110639,"results":"1222","hashOfConfig":"969"},{"size":998,"mtime":1626013831261,"results":"1223","hashOfConfig":"969"},{"size":2522,"mtime":1634559062497,"results":"1224","hashOfConfig":"969"},{"size":1771,"mtime":1622901266272,"results":"1225","hashOfConfig":"969"},{"size":1683,"mtime":1622901272783,"results":"1226","hashOfConfig":"969"},{"size":1553,"mtime":1622901288533,"results":"1227","hashOfConfig":"969"},{"size":1748,"mtime":1622901284562,"results":"1228","hashOfConfig":"969"},{"size":1024,"mtime":1629990451713,"results":"1229","hashOfConfig":"969"},{"size":1553,"mtime":1622901780920,"results":"1230","hashOfConfig":"969"},{"size":527,"mtime":1625758258329,"results":"1231","hashOfConfig":"969"},{"size":476,"mtime":1625801885836,"results":"1232","hashOfConfig":"969"},{"size":180,"mtime":1638188926234,"results":"1233","hashOfConfig":"969"},{"size":1165,"mtime":1631761610044,"results":"1234","hashOfConfig":"969"},{"size":1056,"mtime":1638199168189,"results":"1235","hashOfConfig":"969"},{"size":1003,"mtime":1638726017088,"results":"1236","hashOfConfig":"969"},{"size":912,"mtime":1638725848973,"results":"1237","hashOfConfig":"969"},{"size":1016,"mtime":1638725530053,"results":"1238","hashOfConfig":"969"},{"size":925,"mtime":1638725343906,"results":"1239","hashOfConfig":"969"},{"size":1056,"mtime":1638724980499,"results":"1240","hashOfConfig":"969"},{"size":175,"mtime":1638189001426,"results":"1241","hashOfConfig":"969"},{"size":175,"mtime":1638725004641,"results":"1242","hashOfConfig":"969"},{"size":181,"mtime":1638725545603,"results":"1243","hashOfConfig":"969"},{"size":167,"mtime":1638725369531,"results":"1244","hashOfConfig":"969"},{"size":165,"mtime":1638725867948,"results":"1245","hashOfConfig":"969"},{"size":179,"mtime":1638726036775,"results":"1246","hashOfConfig":"969"},{"size":10095,"mtime":1637692814429,"results":"1247","hashOfConfig":"969"},{"size":3293,"mtime":1634559702235,"results":"1248","hashOfConfig":"969"},{"size":2967,"mtime":1635092470309,"results":"1249","hashOfConfig":"969"},{"size":3996,"mtime":1637716655551,"results":"1250","hashOfConfig":"969"},{"size":18831,"mtime":1648254460482,"results":"1251","hashOfConfig":"969"},{"size":756,"mtime":1626014159472,"results":"1252","hashOfConfig":"969"},{"size":50668,"mtime":1640959888119,"results":"1253","hashOfConfig":"969"},{"size":443,"mtime":1626102558368,"results":"1254","hashOfConfig":"969"},{"size":573,"mtime":1648254005254,"results":"1255","hashOfConfig":"969"},{"size":37956,"mtime":1639758161585,"results":"1256","hashOfConfig":"969"},{"size":40682,"mtime":1639105671812,"results":"1257","hashOfConfig":"969"},{"size":8087,"mtime":1641138314354,"results":"1258","hashOfConfig":"969"},{"size":8786,"mtime":1648251819632,"results":"1259","hashOfConfig":"969"},{"size":7363,"mtime":1634871706848,"results":"1260","hashOfConfig":"969"},{"size":6507,"mtime":1637685063413,"results":"1261","hashOfConfig":"969"},{"size":7628,"mtime":1623592662975,"results":"1262","hashOfConfig":"969"},{"size":6811,"mtime":1648251722280,"results":"1263","hashOfConfig":"969"},{"size":5794,"mtime":1648251693652,"results":"1264","hashOfConfig":"969"},{"size":317,"mtime":1648254572444,"results":"1265","hashOfConfig":"969"},{"size":4605,"mtime":1631451877442,"results":"1266","hashOfConfig":"969"},{"size":5649,"mtime":1638110644307,"results":"1267","hashOfConfig":"969"},{"size":3372,"mtime":1648211577193,"results":"1268","hashOfConfig":"969"},{"size":16690,"mtime":1648215877667,"results":"1269","hashOfConfig":"969"},{"size":3369,"mtime":1648212158387,"results":"1270","hashOfConfig":"969"},{"size":12469,"mtime":1648213450862,"results":"1271","hashOfConfig":"969"},{"size":9667,"mtime":1648213349830,"results":"1272","hashOfConfig":"969"},{"size":8473,"mtime":1648215298146,"results":"1273","hashOfConfig":"969"},{"size":3354,"mtime":1648217049715,"results":"1274","hashOfConfig":"969"},{"size":8088,"mtime":1648218910848,"results":"1275","hashOfConfig":"969"},{"size":12169,"mtime":1648219300541,"results":"1276","hashOfConfig":"969"},{"size":3354,"mtime":1648217497433,"results":"1277","hashOfConfig":"969"},{"size":12141,"mtime":1648219500997,"results":"1278","hashOfConfig":"969"},{"size":9038,"mtime":1648219717798,"results":"1279","hashOfConfig":"969"},{"filePath":"1280","messages":"1281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1282","usedDeprecatedRules":"1283"},"hf3r1g",{"filePath":"1284","messages":"1285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1286","usedDeprecatedRules":"1283"},{"filePath":"1287","messages":"1288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1289","messages":"1290","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1291","usedDeprecatedRules":"1283"},{"filePath":"1292","messages":"1293","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1294","usedDeprecatedRules":"1283"},{"filePath":"1295","messages":"1296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1297","usedDeprecatedRules":"1283"},{"filePath":"1298","messages":"1299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1300","messages":"1301","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1302","usedDeprecatedRules":"1283"},{"filePath":"1303","messages":"1304","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1305","usedDeprecatedRules":"1283"},{"filePath":"1306","messages":"1307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1308","usedDeprecatedRules":"1283"},{"filePath":"1309","messages":"1310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1311","messages":"1312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1313","usedDeprecatedRules":"1283"},{"filePath":"1314","messages":"1315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1316","usedDeprecatedRules":"1283"},{"filePath":"1317","messages":"1318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1319","messages":"1320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1321","usedDeprecatedRules":"1283"},{"filePath":"1322","messages":"1323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1324","messages":"1325","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1326","usedDeprecatedRules":"1283"},{"filePath":"1327","messages":"1328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1329","messages":"1330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1331","messages":"1332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1333","messages":"1334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1335","messages":"1336","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1337","usedDeprecatedRules":"1283"},{"filePath":"1338","messages":"1339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1340","messages":"1341","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1342","usedDeprecatedRules":"1283"},{"filePath":"1343","messages":"1344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1345","messages":"1346","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1347","usedDeprecatedRules":"1283"},{"filePath":"1348","messages":"1349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1350","messages":"1351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1352","messages":"1353","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1354","usedDeprecatedRules":"1355"},"1lbpp8a",{"filePath":"1356","messages":"1357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1358","messages":"1359","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1360","messages":"1361","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1362","usedDeprecatedRules":"1283"},{"filePath":"1363","messages":"1364","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1365","usedDeprecatedRules":"1283"},{"filePath":"1366","messages":"1367","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1368","usedDeprecatedRules":"1283"},{"filePath":"1369","messages":"1370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1371","usedDeprecatedRules":"1283"},{"filePath":"1372","messages":"1373","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1374","usedDeprecatedRules":"1283"},{"filePath":"1375","messages":"1376","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1377","usedDeprecatedRules":"1283"},{"filePath":"1378","messages":"1379","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1380","usedDeprecatedRules":"1283"},{"filePath":"1381","messages":"1382","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1383","usedDeprecatedRules":"1283"},{"filePath":"1384","messages":"1385","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1386","usedDeprecatedRules":"1283"},{"filePath":"1387","messages":"1388","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1389","usedDeprecatedRules":"1283"},{"filePath":"1390","messages":"1391","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1392","usedDeprecatedRules":"1393"},{"filePath":"1394","messages":"1395","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1396","usedDeprecatedRules":"1283"},{"filePath":"1397","messages":"1398","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1399","usedDeprecatedRules":"1283"},{"filePath":"1400","messages":"1401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1402","usedDeprecatedRules":"1283"},{"filePath":"1403","messages":"1404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1405","messages":"1406","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1407","usedDeprecatedRules":"1283"},{"filePath":"1408","messages":"1409","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1410","usedDeprecatedRules":"1283"},{"filePath":"1411","messages":"1412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1413","messages":"1414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1415","messages":"1416","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1417","usedDeprecatedRules":"1283"},{"filePath":"1418","messages":"1419","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1420","usedDeprecatedRules":"1283"},{"filePath":"1421","messages":"1422","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1423","usedDeprecatedRules":"1283"},{"filePath":"1424","messages":"1425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1426","messages":"1427","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1428","usedDeprecatedRules":"1283"},{"filePath":"1429","messages":"1430","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1431","usedDeprecatedRules":"1283"},{"filePath":"1432","messages":"1433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1434","messages":"1435","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1436","usedDeprecatedRules":"1283"},{"filePath":"1437","messages":"1438","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1439","usedDeprecatedRules":"1283"},{"filePath":"1440","messages":"1441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1442","messages":"1443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1444","messages":"1445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1446"},{"filePath":"1447","messages":"1448","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1449","usedDeprecatedRules":"1283"},{"filePath":"1450","messages":"1451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1452"},{"filePath":"1453","messages":"1454","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1455","usedDeprecatedRules":"1283"},{"filePath":"1456","messages":"1457","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1458","usedDeprecatedRules":"1283"},{"filePath":"1459","messages":"1460","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1461","usedDeprecatedRules":"1283"},{"filePath":"1462","messages":"1463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1464","messages":"1465","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1466","usedDeprecatedRules":"1283"},{"filePath":"1467","messages":"1468","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1469","usedDeprecatedRules":"1283"},{"filePath":"1470","messages":"1471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1472","messages":"1473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1474","messages":"1475","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1476","usedDeprecatedRules":"1283"},{"filePath":"1477","messages":"1478","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1479","messages":"1480","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1481","messages":"1482","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1483","usedDeprecatedRules":"1283"},{"filePath":"1484","messages":"1485","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1486","usedDeprecatedRules":"1283"},{"filePath":"1487","messages":"1488","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1489","usedDeprecatedRules":"1283"},{"filePath":"1490","messages":"1491","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1492","usedDeprecatedRules":"1283"},{"filePath":"1493","messages":"1494","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1495","usedDeprecatedRules":"1283"},{"filePath":"1496","messages":"1497","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1498","usedDeprecatedRules":"1283"},{"filePath":"1499","messages":"1500","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1501","usedDeprecatedRules":"1283"},{"filePath":"1502","messages":"1503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1504","messages":"1505","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1506","usedDeprecatedRules":"1283"},{"filePath":"1507","messages":"1508","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1509","usedDeprecatedRules":"1283"},{"filePath":"1510","messages":"1511","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1512","usedDeprecatedRules":"1283"},{"filePath":"1513","messages":"1514","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1515","usedDeprecatedRules":"1283"},{"filePath":"1516","messages":"1517","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1518","usedDeprecatedRules":"1283"},{"filePath":"1519","messages":"1520","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1521","usedDeprecatedRules":"1283"},{"filePath":"1522","messages":"1523","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1524","usedDeprecatedRules":"1525"},{"filePath":"1526","messages":"1527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1528"},{"filePath":"1529","messages":"1530","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1531","usedDeprecatedRules":"1283"},{"filePath":"1532","messages":"1533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1534","messages":"1535","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1536","usedDeprecatedRules":"1283"},{"filePath":"1537","messages":"1538","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1539","usedDeprecatedRules":"1283"},{"filePath":"1540","messages":"1541","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1542","usedDeprecatedRules":"1543"},{"filePath":"1544","messages":"1545","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1546","usedDeprecatedRules":"1283"},{"filePath":"1547","messages":"1548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1549","messages":"1550","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1551","usedDeprecatedRules":"1283"},{"filePath":"1552","messages":"1553","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1554","usedDeprecatedRules":"1555"},{"filePath":"1556","messages":"1557","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1558","usedDeprecatedRules":"1283"},{"filePath":"1559","messages":"1560","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1561","usedDeprecatedRules":"1283"},{"filePath":"1562","messages":"1563","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1564","usedDeprecatedRules":"1283"},{"filePath":"1565","messages":"1566","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1567","messages":"1568","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1569","usedDeprecatedRules":"1283"},{"filePath":"1570","messages":"1571","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1572","usedDeprecatedRules":"1283"},{"filePath":"1573","messages":"1574","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1575","usedDeprecatedRules":"1283"},{"filePath":"1576","messages":"1577","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1578","usedDeprecatedRules":"1283"},{"filePath":"1579","messages":"1580","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1581","usedDeprecatedRules":"1283"},{"filePath":"1582","messages":"1583","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1584","usedDeprecatedRules":"1283"},{"filePath":"1585","messages":"1586","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1587","usedDeprecatedRules":"1283"},{"filePath":"1588","messages":"1589","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1590","usedDeprecatedRules":"1283"},{"filePath":"1591","messages":"1592","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1593","usedDeprecatedRules":"1283"},{"filePath":"1594","messages":"1595","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1596","usedDeprecatedRules":"1283"},{"filePath":"1597","messages":"1598","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1599","usedDeprecatedRules":"1283"},{"filePath":"1600","messages":"1601","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1602","usedDeprecatedRules":"1283"},{"filePath":"1603","messages":"1604","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1605","usedDeprecatedRules":"1283"},{"filePath":"1606","messages":"1607","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1608","usedDeprecatedRules":"1283"},{"filePath":"1609","messages":"1610","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1611","usedDeprecatedRules":"1283"},{"filePath":"1612","messages":"1613","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1614","usedDeprecatedRules":"1283"},{"filePath":"1615","messages":"1616","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1617","usedDeprecatedRules":"1283"},{"filePath":"1618","messages":"1619","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1620","usedDeprecatedRules":"1283"},{"filePath":"1621","messages":"1622","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1623","usedDeprecatedRules":"1283"},{"filePath":"1624","messages":"1625","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1626","usedDeprecatedRules":"1283"},{"filePath":"1627","messages":"1628","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1629","usedDeprecatedRules":"1283"},{"filePath":"1630","messages":"1631","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1632","usedDeprecatedRules":"1633"},{"filePath":"1634","messages":"1635","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1636","usedDeprecatedRules":"1633"},{"filePath":"1637","messages":"1638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1633"},{"filePath":"1639","messages":"1640","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1641","usedDeprecatedRules":"1283"},{"filePath":"1642","messages":"1643","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1644","usedDeprecatedRules":"1283"},{"filePath":"1645","messages":"1646","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1647","usedDeprecatedRules":"1283"},{"filePath":"1648","messages":"1649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1650","messages":"1651","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1652","usedDeprecatedRules":"1283"},{"filePath":"1653","messages":"1654","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1655","usedDeprecatedRules":"1283"},{"filePath":"1656","messages":"1657","errorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1658","usedDeprecatedRules":"1283"},{"filePath":"1659","messages":"1660","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1661","usedDeprecatedRules":"1283"},{"filePath":"1662","messages":"1663","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1664","usedDeprecatedRules":"1283"},{"filePath":"1665","messages":"1666","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1667","usedDeprecatedRules":"1283"},{"filePath":"1668","messages":"1669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1670","messages":"1671","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1672","usedDeprecatedRules":"1283"},{"filePath":"1673","messages":"1674","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1675","usedDeprecatedRules":"1283"},{"filePath":"1676","messages":"1677","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1678","usedDeprecatedRules":"1283"},{"filePath":"1679","messages":"1680","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1681","usedDeprecatedRules":"1283"},{"filePath":"1682","messages":"1683","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1684","usedDeprecatedRules":"1283"},{"filePath":"1685","messages":"1686","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1687","usedDeprecatedRules":"1688"},{"filePath":"1689","messages":"1690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1691","messages":"1692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1693","messages":"1694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1695","messages":"1696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1697","messages":"1698","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1699","usedDeprecatedRules":"1283"},{"filePath":"1700","messages":"1701","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1702","usedDeprecatedRules":"1283"},{"filePath":"1703","messages":"1704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1705"},{"filePath":"1706","messages":"1707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1708","messages":"1709","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1710","usedDeprecatedRules":"1283"},{"filePath":"1711","messages":"1712","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1713","usedDeprecatedRules":"1283"},{"filePath":"1714","messages":"1715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1716","messages":"1717","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1718","usedDeprecatedRules":"1283"},{"filePath":"1719","messages":"1720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1721","messages":"1722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1723","messages":"1724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1725","messages":"1726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1727","messages":"1728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1729","messages":"1730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1731","messages":"1732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1733","messages":"1734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1735","messages":"1736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1737","messages":"1738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1739","messages":"1740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1741","messages":"1742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1705"},{"filePath":"1743","messages":"1744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1745","messages":"1746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1747","messages":"1748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1749","messages":"1750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1751","messages":"1752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1753","messages":"1754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1755","messages":"1756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1757","messages":"1758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1759","messages":"1760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1761","messages":"1762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1763","messages":"1764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1765","messages":"1766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1767","messages":"1768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1769","messages":"1770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1771","messages":"1772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1773","messages":"1774","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1775","messages":"1776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1777","messages":"1778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1779","messages":"1780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1781","messages":"1782","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1783","usedDeprecatedRules":"1283"},{"filePath":"1784","messages":"1785","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1786","usedDeprecatedRules":"1283"},{"filePath":"1787","messages":"1788","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1789","messages":"1790","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1791","usedDeprecatedRules":"1283"},{"filePath":"1792","messages":"1793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1794","messages":"1795","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1796","messages":"1797","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1798","messages":"1799","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1800","usedDeprecatedRules":"1283"},{"filePath":"1801","messages":"1802","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1803","usedDeprecatedRules":"1283"},{"filePath":"1804","messages":"1805","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1806","messages":"1807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1808","messages":"1809","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1810","messages":"1811","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1812","messages":"1813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1814","messages":"1815","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1816","messages":"1817","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1818","messages":"1819","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1820","messages":"1821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1822","messages":"1823","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1824","usedDeprecatedRules":"1283"},{"filePath":"1825","messages":"1826","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1827","messages":"1828","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1829","messages":"1830","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1831","messages":"1832","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1833","usedDeprecatedRules":"1283"},{"filePath":"1834","messages":"1835","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1836","usedDeprecatedRules":"1283"},{"filePath":"1837","messages":"1838","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1839","usedDeprecatedRules":"1283"},{"filePath":"1840","messages":"1841","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1842","messages":"1843","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1844","usedDeprecatedRules":"1283"},{"filePath":"1845","messages":"1846","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1847","usedDeprecatedRules":"1283"},{"filePath":"1848","messages":"1849","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1850","messages":"1851","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1852","messages":"1853","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1854","usedDeprecatedRules":"1283"},{"filePath":"1855","messages":"1856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1857","messages":"1858","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1859","usedDeprecatedRules":"1283"},{"filePath":"1860","messages":"1861","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1862","messages":"1863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1864","messages":"1865","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1866","messages":"1867","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1868","messages":"1869","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1870","messages":"1871","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1872","messages":"1873","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1874","messages":"1875","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1876"},{"filePath":"1877","messages":"1878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1879"},{"filePath":"1880","messages":"1881","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1879"},{"filePath":"1882","messages":"1883","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1879"},{"filePath":"1884","messages":"1885","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1886","messages":"1887","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1876"},{"filePath":"1888","messages":"1889","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1876"},{"filePath":"1890","messages":"1891","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1892","messages":"1893","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1894","messages":"1895","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1896","messages":"1897","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1898","messages":"1899","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1900","messages":"1901","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1902","messages":"1903","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1904","messages":"1905","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1906","messages":"1907","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1908","messages":"1909","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1910","messages":"1911","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1912","messages":"1913","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1914","messages":"1915","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1916","messages":"1917","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1918","messages":"1919","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1920","messages":"1921","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1922","messages":"1923","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1924","messages":"1925","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1926","messages":"1927","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1928","usedDeprecatedRules":"1283"},{"filePath":"1929","messages":"1930","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1931","usedDeprecatedRules":"1283"},{"filePath":"1932","messages":"1933","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1934","usedDeprecatedRules":"1283"},{"filePath":"1935","messages":"1936","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1937","usedDeprecatedRules":"1283"},{"filePath":"1938","messages":"1939","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1940","usedDeprecatedRules":"1283"},{"filePath":"1941","messages":"1942","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"1944","messages":"1945","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1946","messages":"1947","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1948","usedDeprecatedRules":"1283"},{"filePath":"1949","messages":"1950","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1951","messages":"1952","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1953","usedDeprecatedRules":"1283"},{"filePath":"1954","messages":"1955","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1956","messages":"1957","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1958","usedDeprecatedRules":"1283"},{"filePath":"1959","messages":"1960","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1961","messages":"1962","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1963","messages":"1964","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1965","usedDeprecatedRules":"1283"},{"filePath":"1966","messages":"1967","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1968","usedDeprecatedRules":"1283"},{"filePath":"1969","messages":"1970","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1971","usedDeprecatedRules":"1283"},{"filePath":"1972","messages":"1973","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1974","messages":"1975","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1976","usedDeprecatedRules":"1283"},{"filePath":"1977","messages":"1978","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1979","usedDeprecatedRules":"1283"},{"filePath":"1980","messages":"1981","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1982","usedDeprecatedRules":"1283"},{"filePath":"1983","messages":"1984","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1985","messages":"1986","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1987","usedDeprecatedRules":"1988"},{"filePath":"1989","messages":"1990","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1991","messages":"1992","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1993","usedDeprecatedRules":"1283"},{"filePath":"1994","messages":"1995","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"1996","messages":"1997","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1998","usedDeprecatedRules":"1283"},{"filePath":"1999","messages":"2000","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2001","usedDeprecatedRules":"1283"},{"filePath":"2002","messages":"2003","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2004"},{"filePath":"2005","messages":"2006","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2007","usedDeprecatedRules":"1283"},{"filePath":"2008","messages":"2009","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2010","messages":"2011","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2012","messages":"2013","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2014","messages":"2015","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2016","messages":"2017","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2018","messages":"2019","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2020","messages":"2021","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2022","usedDeprecatedRules":"1283"},{"filePath":"2023","messages":"2024","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2025","usedDeprecatedRules":"1283"},{"filePath":"2026","messages":"2027","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2028","messages":"2029","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2030","usedDeprecatedRules":"2031"},{"filePath":"2032","messages":"2033","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2034","messages":"2035","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2036","usedDeprecatedRules":"1283"},{"filePath":"2037","messages":"2038","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2039","usedDeprecatedRules":"1283"},{"filePath":"2040","messages":"2041","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2042","usedDeprecatedRules":"1283"},{"filePath":"2043","messages":"2044","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2045","messages":"2046","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2047","messages":"2048","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2049","usedDeprecatedRules":"1283"},{"filePath":"2050","messages":"2051","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2052","usedDeprecatedRules":"1283"},{"filePath":"2053","messages":"2054","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2055","usedDeprecatedRules":"1283"},{"filePath":"2056","messages":"2057","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2058","usedDeprecatedRules":"1283"},{"filePath":"2059","messages":"2060","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2061","messages":"2062","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2063","messages":"2064","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2065","messages":"2066","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2067","messages":"2068","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2069","messages":"2070","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2071"},{"filePath":"2072","messages":"2073","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2074"},{"filePath":"2075","messages":"2076","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2074"},{"filePath":"2077","messages":"2078","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2079","messages":"2080","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2081","messages":"2082","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2083","usedDeprecatedRules":"1283"},{"filePath":"2084","messages":"2085","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2086","messages":"2087","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2088","messages":"2089","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2090","messages":"2091","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2092","messages":"2093","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2094","messages":"2095","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2096","messages":"2097","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2098","messages":"2099","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2100","messages":"2101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2102","messages":"2103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2104","messages":"2105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1283"},{"filePath":"2106","messages":"2107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2108","usedDeprecatedRules":"1283"},{"filePath":"2109","messages":"2110","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2111","usedDeprecatedRules":"1283"},{"filePath":"2112","messages":"2113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1282","usedDeprecatedRules":"2114"},"1aybg2t",{"filePath":"2115","messages":"2116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2117","messages":"2118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1286","usedDeprecatedRules":"2114"},{"filePath":"2119","messages":"2120","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1374","usedDeprecatedRules":"2114"},{"filePath":"2121","messages":"2122","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1347","usedDeprecatedRules":"2114"},{"filePath":"2123","messages":"2124","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1396","usedDeprecatedRules":"2114"},{"filePath":"2125","messages":"2126","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1439","usedDeprecatedRules":"2114"},{"filePath":"2127","messages":"2128","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1362","usedDeprecatedRules":"2114"},{"filePath":"2129","messages":"2130","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1486","usedDeprecatedRules":"2114"},{"filePath":"2131","messages":"2132","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1420","usedDeprecatedRules":"2114"},{"filePath":"2133","messages":"2134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1699","usedDeprecatedRules":"2114"},{"filePath":"2135","messages":"2136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2137"},{"filePath":"2138","messages":"2139","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1599","usedDeprecatedRules":"2114"},{"filePath":"2140","messages":"2141","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2022","usedDeprecatedRules":"2114"},{"filePath":"2142","messages":"2143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2144","messages":"2145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1383","usedDeprecatedRules":"2114"},{"filePath":"2146","messages":"2147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1399","usedDeprecatedRules":"2114"},{"filePath":"2148","messages":"2149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1371","usedDeprecatedRules":"2114"},{"filePath":"2150","messages":"2151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2152","messages":"2153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1489","usedDeprecatedRules":"2114"},{"filePath":"2154","messages":"2155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2156","messages":"2157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1423","usedDeprecatedRules":"2114"},{"filePath":"2158","messages":"2159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2160","messages":"2161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2162","messages":"2163","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2164","usedDeprecatedRules":"2114"},{"filePath":"2165","messages":"2166","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2167","usedDeprecatedRules":"2114"},{"filePath":"2168","messages":"2169","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2170","usedDeprecatedRules":"2114"},{"filePath":"2171","messages":"2172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2173","usedDeprecatedRules":"2114"},{"filePath":"2174","messages":"2175","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2176","usedDeprecatedRules":"2114"},{"filePath":"2177","messages":"2178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2179","usedDeprecatedRules":"2114"},{"filePath":"2180","messages":"2181","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2182","usedDeprecatedRules":"2114"},{"filePath":"2183","messages":"2184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2173","usedDeprecatedRules":"2114"},{"filePath":"2185","messages":"2186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2187","messages":"2188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2189","messages":"2190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1710","usedDeprecatedRules":"2114"},{"filePath":"2191","messages":"2192","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2193","usedDeprecatedRules":"2114"},{"filePath":"2194","messages":"2195","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2196","usedDeprecatedRules":"2114"},{"filePath":"2197","messages":"2198","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2199","usedDeprecatedRules":"2114"},{"filePath":"2200","messages":"2201","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1294","usedDeprecatedRules":"2114"},{"filePath":"2202","messages":"2203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1297","usedDeprecatedRules":"2114"},{"filePath":"2204","messages":"2205","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2206","usedDeprecatedRules":"2114"},{"filePath":"2207","messages":"2208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1365","usedDeprecatedRules":"2114"},{"filePath":"2209","messages":"2210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1377","usedDeprecatedRules":"2114"},{"filePath":"2211","messages":"2212","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1389","usedDeprecatedRules":"2114"},{"filePath":"2213","messages":"2214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2215","messages":"2216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1458","usedDeprecatedRules":"2114"},{"filePath":"2217","messages":"2218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1407","usedDeprecatedRules":"2114"},{"filePath":"2219","messages":"2220","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1587","usedDeprecatedRules":"2114"},{"filePath":"2221","messages":"2222","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2223","usedDeprecatedRules":"2114"},{"filePath":"2224","messages":"2225","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2226","usedDeprecatedRules":"2114"},{"filePath":"2227","messages":"2228","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2229","usedDeprecatedRules":"2114"},{"filePath":"2230","messages":"2231","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2007","usedDeprecatedRules":"2114"},{"filePath":"2232","messages":"2233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2234","messages":"2235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2236","messages":"2237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1641","usedDeprecatedRules":"2114"},{"filePath":"2238","messages":"2239","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1713","usedDeprecatedRules":"2114"},{"filePath":"2240","messages":"2241","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1368","usedDeprecatedRules":"2114"},{"filePath":"2242","messages":"2243","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1386","usedDeprecatedRules":"2114"},{"filePath":"2244","messages":"2245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1402","usedDeprecatedRules":"2114"},{"filePath":"2246","messages":"2247","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1672","usedDeprecatedRules":"2114"},{"filePath":"2248","messages":"2249","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1461","usedDeprecatedRules":"2114"},{"filePath":"2250","messages":"2251","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1449","usedDeprecatedRules":"2114"},{"filePath":"2252","messages":"2253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2254","messages":"2255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2256","messages":"2257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1940","usedDeprecatedRules":"2114"},{"filePath":"2258","messages":"2259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2260","messages":"2261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2262","messages":"2263","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1581","usedDeprecatedRules":"2114"},{"filePath":"2264","messages":"2265","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1578","usedDeprecatedRules":"2114"},{"filePath":"2266","messages":"2267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2268","messages":"2269","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1572","usedDeprecatedRules":"2114"},{"filePath":"2270","messages":"2271","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1575","usedDeprecatedRules":"2114"},{"filePath":"2272","messages":"2273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2137"},{"filePath":"2274","messages":"2275","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1506","usedDeprecatedRules":"2114"},{"filePath":"2276","messages":"2277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2278","messages":"2279","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1431","usedDeprecatedRules":"2114"},{"filePath":"2280","messages":"2281","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1428","usedDeprecatedRules":"2114"},{"filePath":"2282","messages":"2283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1718","usedDeprecatedRules":"2114"},{"filePath":"2284","messages":"2285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2286","messages":"2287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2288","messages":"2289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2290","messages":"2291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2292","messages":"2293","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1531","usedDeprecatedRules":"2114"},{"filePath":"2294","messages":"2295","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1337","usedDeprecatedRules":"2114"},{"filePath":"2296","messages":"2297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2298","messages":"2299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2300","messages":"2301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2302","messages":"2303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2304","messages":"2305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2306","messages":"2307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2308","messages":"2309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2310","messages":"2311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2312","messages":"2313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2314","messages":"2315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2316","messages":"2317","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1326","usedDeprecatedRules":"2114"},{"filePath":"2318","messages":"2319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2320","messages":"2321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2322","messages":"2323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2324","messages":"2325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2326","messages":"2327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2328","messages":"2329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2330","messages":"2331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2332","messages":"2333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2334","messages":"2335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1321","usedDeprecatedRules":"2114"},{"filePath":"2336","messages":"2337","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1316","usedDeprecatedRules":"2114"},{"filePath":"2338","messages":"2339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1783","usedDeprecatedRules":"2114"},{"filePath":"2340","messages":"2341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1786","usedDeprecatedRules":"2114"},{"filePath":"2342","messages":"2343","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1644","usedDeprecatedRules":"2114"},{"filePath":"2344","messages":"2345","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2052","usedDeprecatedRules":"2114"},{"filePath":"2346","messages":"2347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1313","usedDeprecatedRules":"2114"},{"filePath":"2348","messages":"2349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2350","messages":"2351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2352","messages":"2353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1308","usedDeprecatedRules":"2114"},{"filePath":"2354","messages":"2355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2356","messages":"2357","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1551","usedDeprecatedRules":"2114"},{"filePath":"2358","messages":"2359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2360","messages":"2361","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1536","usedDeprecatedRules":"2114"},{"filePath":"2362","messages":"2363","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1492","usedDeprecatedRules":"2114"},{"filePath":"2364","messages":"2365","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1476","usedDeprecatedRules":"2114"},{"filePath":"2366","messages":"2367","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1539","usedDeprecatedRules":"2114"},{"filePath":"2368","messages":"2369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2370","messages":"2371","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1847","usedDeprecatedRules":"2114"},{"filePath":"2372","messages":"2373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2374","messages":"2375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2376","messages":"2377","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1675","usedDeprecatedRules":"2114"},{"filePath":"2378","messages":"2379","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1953","usedDeprecatedRules":"2114"},{"filePath":"2380","messages":"2381","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1678","usedDeprecatedRules":"2114"},{"filePath":"2382","messages":"2383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2384","messages":"2385","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1436","usedDeprecatedRules":"2114"},{"filePath":"2386","messages":"2387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2388","messages":"2389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2390","messages":"2391","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2392","usedDeprecatedRules":"2114"},{"filePath":"2393","messages":"2394","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1410","usedDeprecatedRules":"2114"},{"filePath":"2395","messages":"2396","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2397","usedDeprecatedRules":"2114"},{"filePath":"2398","messages":"2399","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1417","usedDeprecatedRules":"2114"},{"filePath":"2400","messages":"2401","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2402","usedDeprecatedRules":"2114"},{"filePath":"2403","messages":"2404","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2405","usedDeprecatedRules":"2114"},{"filePath":"2406","messages":"2407","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2408","usedDeprecatedRules":"2114"},{"filePath":"2409","messages":"2410","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1931","usedDeprecatedRules":"2411"},{"filePath":"2412","messages":"2413","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1342","usedDeprecatedRules":"2114"},{"filePath":"2414","messages":"2415","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2111","usedDeprecatedRules":"2114"},{"filePath":"2416","messages":"2417","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2418","messages":"2419","errorCount":0,"warningCount":47,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2420","usedDeprecatedRules":"2114"},{"filePath":"2421","messages":"2422","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2423","usedDeprecatedRules":"2114"},{"filePath":"2424","messages":"2425","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2039","usedDeprecatedRules":"2114"},{"filePath":"2426","messages":"2427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2428","messages":"2429","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2430","usedDeprecatedRules":"2114"},{"filePath":"2431","messages":"2432","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1546","usedDeprecatedRules":"2114"},{"filePath":"2433","messages":"2434","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1844","usedDeprecatedRules":"2114"},{"filePath":"2435","messages":"2436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2437","messages":"2438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2439","messages":"2440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2441","messages":"2442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2443","messages":"2444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2445","messages":"2446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2447","messages":"2448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2449","messages":"2450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2451","messages":"2452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2453","messages":"2454","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1498","usedDeprecatedRules":"2114"},{"filePath":"2455","messages":"2456","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1501","usedDeprecatedRules":"2114"},{"filePath":"2457","messages":"2458","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1495","usedDeprecatedRules":"2114"},{"filePath":"2459","messages":"2460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2461","messages":"2462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2463","messages":"2464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2465","messages":"2466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2467","messages":"2468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2469","messages":"2470","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1469","usedDeprecatedRules":"2114"},{"filePath":"2471","messages":"2472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2473","messages":"2474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2475","messages":"2476","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1833","usedDeprecatedRules":"2114"},{"filePath":"2477","messages":"2478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2479","messages":"2480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2481","messages":"2482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2483","messages":"2484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2485","messages":"2486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2487","messages":"2488","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2489","usedDeprecatedRules":"2114"},{"filePath":"2490","messages":"2491","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2492","usedDeprecatedRules":"2114"},{"filePath":"2493","messages":"2494","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2042","usedDeprecatedRules":"2114"},{"filePath":"2495","messages":"2496","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1993","usedDeprecatedRules":"2114"},{"filePath":"2497","messages":"2498","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2004","usedDeprecatedRules":"2114"},{"filePath":"2499","messages":"2500","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1836","usedDeprecatedRules":"2114"},{"filePath":"2501","messages":"2502","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1839","usedDeprecatedRules":"2114"},{"filePath":"2503","messages":"2504","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2083","usedDeprecatedRules":"2114"},{"filePath":"2505","messages":"2506","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1561","usedDeprecatedRules":"2114"},{"filePath":"2507","messages":"2508","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1569","usedDeprecatedRules":"2114"},{"filePath":"2509","messages":"2510","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1934","usedDeprecatedRules":"2114"},{"filePath":"2511","messages":"2512","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1854","usedDeprecatedRules":"2114"},{"filePath":"2513","messages":"2514","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1968","usedDeprecatedRules":"2114"},{"filePath":"2515","messages":"2516","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1614","usedDeprecatedRules":"2114"},{"filePath":"2517","messages":"2518","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1611","usedDeprecatedRules":"2114"},{"filePath":"2519","messages":"2520","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1623","usedDeprecatedRules":"2114"},{"filePath":"2521","messages":"2522","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1620","usedDeprecatedRules":"2114"},{"filePath":"2523","messages":"2524","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1617","usedDeprecatedRules":"2114"},{"filePath":"2525","messages":"2526","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1859","usedDeprecatedRules":"2114"},{"filePath":"2527","messages":"2528","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1684","usedDeprecatedRules":"2114"},{"filePath":"2529","messages":"2530","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2001","usedDeprecatedRules":"2114"},{"filePath":"2531","messages":"2532","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1965","usedDeprecatedRules":"2114"},{"filePath":"2533","messages":"2534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2535","messages":"2536","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1979","usedDeprecatedRules":"2114"},{"filePath":"2537","messages":"2538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2539","messages":"2540","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1998","usedDeprecatedRules":"2114"},{"filePath":"2541","messages":"2542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2543","messages":"2544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2545","messages":"2546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2547","messages":"2548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2549","messages":"2550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2551","messages":"2552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2553","messages":"2554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2555","messages":"2556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2557","messages":"2558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2559","messages":"2560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2561","messages":"2562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2563","messages":"2564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2565","messages":"2566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2567","messages":"2568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2569","messages":"2570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2571","messages":"2572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2573","messages":"2574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2575","messages":"2576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2577","messages":"2578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2579","messages":"2580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2581","messages":"2582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2583","messages":"2584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2585","messages":"2586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2587","messages":"2588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2589","messages":"2590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2591","messages":"2592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2593","messages":"2594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2595","messages":"2596","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1928","usedDeprecatedRules":"2114"},{"filePath":"2597","messages":"2598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2599","messages":"2600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2601","messages":"2602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2603","messages":"2604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2605","messages":"2606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2607","messages":"2608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2609","messages":"2610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2611","messages":"2612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2613","messages":"2614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2615","messages":"2616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2617","messages":"2618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2619","messages":"2620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2621","messages":"2622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2623","messages":"2624","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1971","usedDeprecatedRules":"2114"},{"filePath":"2625","messages":"2626","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1982","usedDeprecatedRules":"2114"},{"filePath":"2627","messages":"2628","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1976","usedDeprecatedRules":"2114"},{"filePath":"2629","messages":"2630","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1958","usedDeprecatedRules":"2114"},{"filePath":"2631","messages":"2632","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1483","usedDeprecatedRules":"2114"},{"filePath":"2633","messages":"2634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2635","messages":"2636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2637","messages":"2638","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2058","usedDeprecatedRules":"2114"},{"filePath":"2639","messages":"2640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2641","messages":"2642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2643","messages":"2644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2645","messages":"2646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2647","messages":"2648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2649","messages":"2650","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1466","usedDeprecatedRules":"2114"},{"filePath":"2651","messages":"2652","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1509","usedDeprecatedRules":"2114"},{"filePath":"2653","messages":"2654","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1512","usedDeprecatedRules":"2114"},{"filePath":"2655","messages":"2656","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1521","usedDeprecatedRules":"2114"},{"filePath":"2657","messages":"2658","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1518","usedDeprecatedRules":"2114"},{"filePath":"2659","messages":"2660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2661","messages":"2662","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1515","usedDeprecatedRules":"2114"},{"filePath":"2663","messages":"2664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2665","messages":"2666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2667","messages":"2668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2669","messages":"2670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2671","messages":"2672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2673","messages":"2674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2675","messages":"2676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2677","messages":"2678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2679","messages":"2680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2681","messages":"2682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2683","messages":"2684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2685","messages":"2686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2687","messages":"2688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2689","messages":"2690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2691","messages":"2692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2693","messages":"2694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2695","messages":"2696","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1937","usedDeprecatedRules":"2114"},{"filePath":"2697","messages":"2698","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1948","usedDeprecatedRules":"2114"},{"filePath":"2699","messages":"2700","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1564","usedDeprecatedRules":"2114"},{"filePath":"2701","messages":"2702","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2049","usedDeprecatedRules":"2114"},{"filePath":"2703","messages":"2704","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2705","usedDeprecatedRules":"2114"},{"filePath":"2706","messages":"2707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2708","messages":"2709","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1593","usedDeprecatedRules":"2114"},{"filePath":"2710","messages":"2711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2712"},{"filePath":"2713","messages":"2714","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2715"},{"filePath":"2716","messages":"2717","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1629","usedDeprecatedRules":"2114"},{"filePath":"2718","messages":"2719","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1305","usedDeprecatedRules":"2114"},{"filePath":"2720","messages":"2721","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2108","usedDeprecatedRules":"2114"},{"filePath":"2722","messages":"2723","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2724","usedDeprecatedRules":"2114"},{"filePath":"2725","messages":"2726","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1664","usedDeprecatedRules":"2114"},{"filePath":"2727","messages":"2728","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2036","usedDeprecatedRules":"2114"},{"filePath":"2729","messages":"2730","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1302","usedDeprecatedRules":"2114"},{"filePath":"2731","messages":"2732","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2733","usedDeprecatedRules":"2114"},{"filePath":"2734","messages":"2735","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2736","usedDeprecatedRules":"2114"},{"filePath":"2737","messages":"2738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2114"},{"filePath":"2739","messages":"2740","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1681","usedDeprecatedRules":"2114"},{"filePath":"2741","messages":"2742","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1626","usedDeprecatedRules":"2114"},{"filePath":"2743","messages":"2744","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2745","usedDeprecatedRules":"2114"},{"filePath":"2746","messages":"2747","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2748","usedDeprecatedRules":"2114"},{"filePath":"2749","messages":"2750","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2751","usedDeprecatedRules":"2114"},{"filePath":"2752","messages":"2753","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2754","usedDeprecatedRules":"2114"},{"filePath":"2755","messages":"2756","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2757","usedDeprecatedRules":"2114"},{"filePath":"2758","messages":"2759","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2760","usedDeprecatedRules":"2114"},{"filePath":"2761","messages":"2762","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2763","usedDeprecatedRules":"2114"},{"filePath":"2764","messages":"2765","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2766","usedDeprecatedRules":"2114"},{"filePath":"2767","messages":"2768","errorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2769","usedDeprecatedRules":"2114"},{"filePath":"2770","messages":"2771","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2772","usedDeprecatedRules":"2114"},{"filePath":"2773","messages":"2774","errorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2775","usedDeprecatedRules":"2114"},{"filePath":"2776","messages":"2777","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2778","usedDeprecatedRules":"2114"},"D:\\react-myprojects\\hrms-airtable\\src\\index.js",["2779"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { Loading } from \"./components/app/Loading\";\nimport { RecoilRoot } from \"recoil\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { ApolloClient } from \"apollo-client\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { EmployeesProvider } from \"./context/employees_context\";\nimport { LeavesProvider } from \"./context/leaves_context\";\nimport { ExpensesProvider } from \"./context/expenses_context\";\nimport { PayslipsProvider } from \"./context/payslips_context\";\nimport { DailyAllowancesProvider } from \"./context/dailyallowances_context\";\nimport { TablesProvider } from \"./context/tables_context\";\nimport { TrainingsProvider } from \"./context/trainings_context\";\nimport { AuthProvider } from \"./context/auth_context\";\n\nconst client = new ApolloClient({\n  link: new HttpLink({\n    uri: \"https://localhost:4000/graphql\",\n    credentials: \"include\",\n  }),\n  cache: new InMemoryCache(),\n});\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <RecoilRoot>\n        <ApolloProvider client={client}>\n          <AuthProvider>\n            <EmployeesProvider>\n              <PayslipsProvider>\n                <LeavesProvider>\n                  <ExpensesProvider>\n                    <DailyAllowancesProvider>\n                      <TrainingsProvider>\n                        <TablesProvider>\n                          {/* <Loading /> */}\n                          {/* <DevTools /> */}\n                          <App />\n                        </TablesProvider>\n                      </TrainingsProvider>\n                    </DailyAllowancesProvider>\n                  </ExpensesProvider>\n                </LeavesProvider>\n              </PayslipsProvider>\n            </EmployeesProvider>\n          </AuthProvider>\n        </ApolloProvider>\n      </RecoilRoot>\n      <ReactQueryDevtools />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  //document.getElementById(\"root\").style.transform = \"scale(1)\"\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["2780","2781"],"D:\\react-myprojects\\hrms-airtable\\src\\App.js",["2782"],"//import React, { useState } from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n//import { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n//import Switch from \"@material-ui/core/Switch\";\nimport { theme } from \"./components/theme\";\nimport { Loading } from \"./components/app/Loading\";\n// import {\n//   orange,\n//   lightBlue,\n//   deepPurple,\n//   deepOrange,\n// } from \"@material-ui/core/colors\";\n//import DashboardMain from \"./components/DashboardMain\";\nimport Main from \"./components/Main\";\nimport MainMenu from \"./components/MainMenu\";\n\nconst App = () => {\n  //const [darkState, setDarkState] = useState(false);\n  //const palletType = darkState ? \"dark\" : \"light\";\n  //const mainPrimaryColor = darkState ? orange[500] : lightBlue[500];\n  //const mainSecondaryColor = darkState ? deepOrange[900] : deepPurple[500];\n\n  // const darkTheme = createMuiTheme({\n  //   palette: {\n  //     type: palletType,\n  //     primary: {\n  //       main: mainPrimaryColor,\n  //     },\n  //     secondary: {\n  //       main: mainSecondaryColor,\n  //     },\n  //   },\n  // });\n  // const lightTheme = createMuiTheme({\n  //   palette: {\n  //     type: palletType,\n  //     primary: {\n  //       main: \"#4dabf5\",\n  //     },\n  //     secondary: {\n  //       main: \"#f73378\",\n  //     },\n  //   },\n  // });\n\n  // const handleThemeChange = () => {\n  //   setDarkState(!darkState);\n  // };\n\n  return (\n    <ChakraProvider theme={theme}>\n      {/* <ThemeProvider theme={lightTheme}> */}\n      <CssBaseline />\n      <div>\n        <Loading />\n        <MainMenu />\n      </div>\n      {/* <Switch checked={darkState} onChange={handleThemeChange} /> */}\n\n      {/* </ThemeProvider> */}\n    </ChakraProvider>\n  );\n};\n\nexport default App;\n","D:\\react-myprojects\\hrms-airtable\\src\\reportWebVitals.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\Appbanner.js",["2783","2784","2785","2786","2787"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { Button, Heading, HStack, Text, Tooltip } from \"@chakra-ui/react\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\n//import Tooltip from \"@material-ui/core/Tooltip\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExitToApplication from \"@material-ui/icons/ExitToApp\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useUser } from \"./user/useUser\";\r\nimport App from \"../utils/firebase\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst Appbanner = ({\r\n  handleDrawerOpen,\r\n  handleDrawerClose,\r\n  handleSelect,\r\n  open,\r\n  title,\r\n}) => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const { user, clearUser } = useUser();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n\r\n  const handleExit = (e) => {\r\n    e.preventDefault();\r\n    setLoginLevel({ ...loginLevel, login: false });\r\n    clearUser();\r\n    App.auth().signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"absolute\"\r\n      className={clsx(classes.appBar, open && classes.appBarShift)}\r\n    >\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={handleDrawerOpen}\r\n          className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h6\"\r\n          color=\"inherit\"\r\n          noWrap\r\n          className={classes.title}\r\n        >\r\n          {title}\r\n        </Typography>\r\n        {/* <Heading size=\"md\">\r\n          {title}\r\n        </Heading> */}\r\n        <HStack justifyContent=\"flex-start\" px={2}>\r\n          <Button\r\n            colorScheme=\"white\"\r\n            aria-label=\"Staff\"\r\n            onClick={() => {\r\n              history.push(\"/\");\r\n              handleSelect(\"Staff\");\r\n            }}\r\n          >\r\n            <Heading size=\"sm\">Staff</Heading>\r\n          </Button>\r\n          {loginLevel.loginRole > 1 && loginLevel.loginRole !== 3 && (\r\n            <Button\r\n              colorScheme=\"white\"\r\n              aria-label=\"Admin\"\r\n              onClick={() => {\r\n                history.push(\"/\");\r\n                handleSelect(\"Admin\");\r\n              }}\r\n            >\r\n              <Heading size=\"sm\">Admin</Heading>\r\n            </Button>\r\n          )}\r\n          {loginLevel.loginRole > 2 && (\r\n            <Button\r\n              colorScheme=\"white\"\r\n              aria-label=\"Ops Supervisor\"\r\n              onClick={() => {\r\n                history.push(\"/\");\r\n                handleSelect(\"OpsSpvr\");\r\n              }}\r\n            >\r\n              <Heading size=\"sm\">Ops Supervisor</Heading>\r\n            </Button>\r\n          )}\r\n          {loginLevel.loginRole > 3 && (\r\n            <Button\r\n              colorScheme=\"white\"\r\n              aria-label=\"Admin Manager\"\r\n              onClick={() => {\r\n                history.push(\"/\");\r\n                handleSelect(\"AdminManager\");\r\n              }}\r\n            >\r\n              <Heading size=\"sm\">Admin Manager</Heading>\r\n            </Button>\r\n          )}\r\n          {loginLevel.loginRole > 4 && (\r\n            <Button\r\n              colorScheme=\"white\"\r\n              aria-label=\"Manager\"\r\n              onClick={() => {\r\n                history.push(\"/\");\r\n                handleSelect(\"Manager\");\r\n              }}\r\n            >\r\n              <Heading size=\"sm\">Manager</Heading>\r\n            </Button>\r\n          )}\r\n          {loginLevel.loginRole > 5 && (\r\n            <Button\r\n              colorScheme=\"white\"\r\n              aria-label=\"Director\"\r\n              onClick={() => {\r\n                history.push(\"/\");\r\n                handleSelect(\"Director\");\r\n              }}\r\n            >\r\n              <Heading size=\"sm\">Director</Heading>\r\n            </Button>\r\n          )}\r\n        </HStack>\r\n        <HStack>\r\n          {/* <Text fontSize=\"18\"> */}\r\n          {loginLevel.loginUser && (\r\n            <Heading size=\"sm\">{loginLevel.loginEmail}!</Heading>\r\n          )}\r\n          {/* </Text> */}\r\n        </HStack>\r\n        {/* <IconButton color=\"inherit\">\r\n          <Badge badgeContent={0} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton> */}\r\n\r\n        <Tooltip label=\"Logout\">\r\n          <IconButton color=\"inherit\" onClick={(e) => handleExit(e)}>\r\n            <ExitToApplication />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default Appbanner;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\SideDrawer.js",["2788","2789","2790","2791","2792","2793","2794","2795","2796","2797"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport {\r\n  RecoilRoot,\r\n  atom,\r\n  selector,\r\n  useRecoilState,\r\n  useRecoilValue,\r\n  useSetRecoilState,\r\n} from \"recoil\";\r\n\r\nimport MenuListItems from \"./MenuListItems\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport MenuListItemsStaff from \"./MenuListItemsStaff\";\r\nimport MenuListItemsAdmin from \"./MenuListItemsAdmin\";\r\nimport MenuListItemsOpsSpvr from \"./MenuListItemsOpsSpvr\";\r\nimport MenuListItemsAdminManager from \"./MenuListItemsAdminManager\";\r\nimport MenuListItemsManager from \"./MenuListItemsManager\";\r\nimport MenuListItemsDirector from \"./MenuListItemsDirector\"\r\nimport headerlogo from \"../assets/headerlogo.png\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst SideDrawer = ({ HandleDrawerOpen, handleDrawerClose, open }) => {\r\n  const classes = useStyles();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n\r\n  const SwitchCase = () => {\r\n  \r\n    switch (loginLevel.loginLevel) {\r\n      case \"Staff\":\r\n        return <MenuListItemsStaff />;\r\n      case \"Admin\":\r\n        return <MenuListItemsAdmin />;\r\n      case \"OpsSpvr\":\r\n        return <MenuListItemsOpsSpvr />;\r\n      case \"AdminManager\":\r\n        return <MenuListItemsAdminManager />;\r\n      case \"Manager\":\r\n        return <MenuListItemsManager />;\r\n      case \"Director\":\r\n        return <MenuListItemsDirector />;\r\n      default:\r\n        return \"You are not authorised user!\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        {/* \"flex-end\" */}\r\n\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n\r\n        <Divider />\r\n        <List>\r\n          <SwitchCase />\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      //changing the sidebar hide width\r\n      width: theme.spacing(7),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  image: {\r\n    width: 200,\r\n    height: 1150,\r\n  },\r\n  img: {\r\n    margin: \"auto\",\r\n    display: \"block\",\r\n    maxWidth: \"100%\",\r\n    maxHeight: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default SideDrawer;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\SingleEmployee.js",["2798"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EmployeeForm from \"./EmployeeForm\";\r\nimport EmployeeFormNew from \"./EmployeeFormNew\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ToolbarHeader = ({ title }) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SingleEmployee = ({ title }) => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { isEditing } = useEmployeesContext();\r\n  if (isEditing) {\r\n    return (\r\n      <div>\r\n        <CssBaseline />\r\n\r\n        <div className={classes.appBarSpacer}>\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid container spacing={3}>\r\n              {/* <Grid item xs={12} md={8} lg={9}> */}\r\n              <Grid item xs={12}>\r\n                <Paper className={fixedHeightPaper}>\r\n                  <Link to=\"/allemployees\">\r\n                    <div>\r\n                      <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                    </div>\r\n                  </Link>\r\n                  <div>\r\n                    {/* <ToolbarHeader title={title} /> */}\r\n\r\n                    <EmployeeForm />\r\n                  </div>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\nreturn (\r\n  <div>\r\n    <CssBaseline />\r\n\r\n    <div className={classes.appBarSpacer}>\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container spacing={3}>\r\n          {/* <Grid item xs={12} md={8} lg={9}> */}\r\n          <Grid item xs={12}>\r\n            <Paper className={fixedHeightPaper}>\r\n              <Link to=\"/allemployees\">\r\n                <div>\r\n                  <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                </div>\r\n              </Link>\r\n              <div>\r\n                {/* <ToolbarHeader title={title} /> */}\r\n\r\n                <EmployeeFormNew />\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  </div>\r\n);\r\n  }\r\n  \r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nexport default SingleEmployee;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\pages\\index.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\MenuListItems.js",["2799","2800"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport FlightIcon from \"@material-ui/icons/Flight\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport MoneyIcon from \"@material-ui/icons/Money\";\r\n// import Collapse from \"@material-ui/core/Collapse\";\r\n// import ExpandLess from \"@material-ui/icons/ExpandLess\";\r\n// import ExpandMore from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst MenuListItems = () => {\r\n  const classes = useStyles();\r\n  const [openPay, setOpenPay] = useState(false);\r\n  const [openTable, setOpenTable] = useState(false);\r\n\r\n  const handleClickPay = () => {\r\n    setOpenPay(!openPay);\r\n  };\r\n\r\n  const handleClickTable = () => {\r\n    setOpenTable(!openTable);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <ListSubheader inset className={classes.mainHeader}>\r\n        Admin\r\n      </ListSubheader>\r\n\r\n      <Link to=\"/\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <DashboardIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Dashboard\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/allemployees\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <PeopleIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"All Employees\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/leave\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FlightIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Leave\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n      <Link to=\"/payrun\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MonetizationOnIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Payrun\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n      <Link to=\"/payslip\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MonetizationOnIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Payroll\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <ListItem button onClick={handleClickPay}>\r\n        <ListItemIcon className={classes.itemIcon}>\r\n          <LayersIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Payroll\" className={classes.item} />\r\n        {openPay ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n\r\n      <Collapse in={openPay} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/payroll\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Payroll Run\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/payslip\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Payslip\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse> */}\r\n\r\n      <Link to=\"/expenses\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <ShoppingCartIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Expenses\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/dailyallowances\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MoneyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Site Allowances\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n      <Link to=\"/tables\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <LayersIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Tables\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <ListItem button onClick={handleClickTable}>\r\n        <ListItemIcon className={classes.itemIcon}>\r\n          <LayersIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Tables\" className={classes.item} />\r\n        {openTable ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={openTable} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/clients\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Clients\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/departments\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Departments\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/designation\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Designation\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/allowances\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Allowances\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainHeader: {\r\n    fontSize: 24,\r\n    color: \"primary\",\r\n  },\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: \"orange\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: \"primary\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: \"rgba(255, 255, 255, 0.08)\",\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: \"#232f3e\",\r\n    boxShadow: \"0 -1px 0 #404854 inset\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.orange,\r\n  },\r\n  itemActiveItem: {\r\n    color: \"primary\",\r\n  },\r\n  itemPrimary: {\r\n    fontSize: \"inherit\",\r\n  },\r\n  itemIcon: {\r\n    minWidth: \"auto\",\r\n    marginRight: theme.spacing(2),\r\n    color: \"primary\",\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default MenuListItems;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmployeeForm.js",["2801","2802","2803","2804","2805","2806","2807","2808","2809","2810","2811","2812","2813"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  Divider,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport currency from \"currency.js\";\r\nimport { useBoolean } from \"@chakra-ui/hooks\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { editEmployeeIdState } from \"./data/atomdata\";\r\nimport { useAllEmployees } from \"./employees/useAllEmployees\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useAddEmployees } from \"./employees/useAddEmployees\";\r\nimport { useUpdateEmployees } from \"./employees/useUpdateEmployees\";\r\nimport { useDepartments } from \"./departments/useDepartments\";\r\nimport { useDesignations } from \"./designations/useDesignations\";\r\nimport { useCurrency } from \"./currency/useCurrency\";\r\nimport EmpFamily from \"./EmpFamily\";\r\nimport EmpEducations from \"./EmpEducations\";\r\nimport EmpExperiences from \"./EmpExperiences\";\r\nimport EmpTrainings from \"./EmpTrainings\";\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  gender: \"\",\r\n  ic_no: \"\",\r\n  email: \"\",\r\n  birthdate: null,\r\n  age: 0,\r\n  nationality: \"\",\r\n  address: \"\",\r\n  leave_bal: 0,\r\n  leave_bf: 0,\r\n  leave_entitled: 0,\r\n  basic_salary: 0,\r\n  salary_currency: \"BND\",\r\n  bank_name: \"\",\r\n  bank_acno: \"\",\r\n  tap_checkbox: true,\r\n  tap_acno: \"\",\r\n  scp_acno: \"\",\r\n  date_of_join: null,\r\n  date_of_resign: null,\r\n  designation: \"\",\r\n  department: \"\",\r\n  passportno: \"\",\r\n  passport_expirydate: null,\r\n  workpermitno: \"\",\r\n  workpermit_expirydate: null,\r\n  siteallows_fee: 0,\r\n  perdiem_fee: 0,\r\n  empno: \"\",\r\n  reporting_to: \"\",\r\n  reporting_email: \"\",\r\n};\r\n\r\nconst EmployeeForm = () => {\r\n  const classes = useStyles();\r\n  const { employees, employeeId, setEmployeeId } = useEmployees();\r\n  const { allemployees, setAllEmpId } = useAllEmployees();\r\n  const addEmployees = useAddEmployees();\r\n  const updateEmployees = useUpdateEmployees();\r\n  //const currencyRate = useCurrency()\r\n  const { designations } = useDesignations();\r\n  const { departments } = useDepartments();\r\n  const [reportemail, setReportEmail] = useState(\"\");\r\n  const [empage, setEmpage] = useState(0);\r\n  const [checktap, setCheckTap] = useState(false);\r\n  const [empId, setEmpId] = useRecoilState(editEmployeeIdState);\r\n  const { handleSubmit, control, setValue, register } = useForm();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { isEditing, editEmployeeID } = useEmployeesContext();\r\n  const single_employee = allemployees\r\n    .filter((r) => r.id === editEmployeeID)\r\n    .map((r) => {\r\n      return { ...r };\r\n    });\r\n  const {\r\n    name,\r\n    ic_no,\r\n    gender,\r\n    birthdate,\r\n    age,\r\n    email,\r\n    nationality,\r\n    address,\r\n    leave_bal,\r\n    leave_entitled,\r\n    leave_bf,\r\n    basic_salary,\r\n    salary_currency,\r\n    bank_name,\r\n    bank_acno,\r\n    tap_checkbox,\r\n    tap_acno,\r\n    scp_acno,\r\n    date_of_join,\r\n    date_of_resign,\r\n    designation,\r\n    department,\r\n    passportno,\r\n    passport_expirydate,\r\n    workpermitno,\r\n    workpermit_expirydate,\r\n    siteallows_fee,\r\n    perdiem_fee,\r\n    empno,\r\n    reporting_to,\r\n    reporting_email,\r\n  } = single_employee[0] || initial_values;\r\n\r\n  const calculateAge = (dob) => {\r\n    var today = new Date();\r\n    var birthDate = new Date(dob);\r\n    var age = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age--;\r\n    }\r\n    return age;\r\n  };\r\n\r\n  const handleReportingTo = (name) => {\r\n    const emp = employees\r\n      .filter((f) => f.name === name)\r\n      .map((r) => {\r\n        return { ...r };\r\n      });\r\n    setReportEmail(emp[0].email);\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    if (isEditing) {\r\n      updateEmployees({\r\n        id: editEmployeeID,\r\n        ...data,\r\n        reporting_email: reportemail,\r\n      });\r\n    } else {\r\n      addEmployees({ ...data, reporting_email: reportemail });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let age = calculateAge(birthdate);\r\n    setEmpage(age);\r\n    setCheckTap(tap_checkbox);\r\n    setReportEmail(reporting_email);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setAllEmpId(\"111\");\r\n  }, []);\r\n\r\n  if (!allemployees) {\r\n    return <h2>Loading ...</h2>;\r\n  }\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Paper className={classes.root}>\r\n          <Grid container className={classes.root} spacing={15}>\r\n            <div>\r\n              <Typography variant=\"h5\" component=\"h3\">\r\n                EMPLOYEE FORM\r\n              </Typography>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n              >\r\n                Submit <Icon className={classes.rightIcon}>send</Icon>\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n          <Divider className={classes.divider} />\r\n          <Grid item xs={12}>\r\n            <div>\r\n              <div>\r\n                <Controller\r\n                  name=\"name\"\r\n                  control={control}\r\n                  defaultValue={name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Name\"\r\n                        id=\"standard-name\"\r\n                        name=\"name\"\r\n                        defaultValue={name}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"empno\"\r\n                  control={control}\r\n                  defaultValue={empno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Emp No\"\r\n                        id=\"standard-empno\"\r\n                        defaultValue={empno}\r\n                        name=\"empno\"\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"email\"\r\n                  control={control}\r\n                  defaultValue={email}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Email\"\r\n                        id=\"standard-email\"\r\n                        name=\"email\"\r\n                        defaultValue={email}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: \"Email is required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"ic_no\"\r\n                  control={control}\r\n                  defaultValue={ic_no}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"IC No\"\r\n                        id=\"standard-icno\"\r\n                        defaultValue={ic_no}\r\n                        name=\"ic_no\"\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"birthdate\"\r\n                  control={control}\r\n                  defaultValue={birthdate}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Birth Date\"\r\n                        id=\"standard-birthdate\"\r\n                        name=\"birthdate\"\r\n                        type=\"date\"\r\n                        defaultValue={birthdate}\r\n                        className={classes.textField}\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          onChange(e.target.value);\r\n                          let age = calculateAge(e.target.value);\r\n                          console.log(\"emp\", birthdate, age);\r\n                          setEmpage(age);\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"age\"\r\n                  control={control}\r\n                  defaultValue={empage}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Age\"\r\n                        type=\"number\"\r\n                        id=\"standard-age\"\r\n                        name=\"empage\"\r\n                        //defaultValue={age}\r\n                        value={empage}\r\n                        className={classes.textField}\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          onChange(parseInt(e.target.value, 10));\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        inputProps={{ readOnly: true }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"passportno\"\r\n                  control={control}\r\n                  defaultValue={passportno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Passport No\"\r\n                        id=\"standard-passportno\"\r\n                        name=\"passportno\"\r\n                        defaultValue={passportno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"passport_expirydate\"\r\n                  control={control}\r\n                  defaultValue={passport_expirydate}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Passport Expiry Date\"\r\n                        id=\"standard-ppexpiry\"\r\n                        name=\"passport_expirydate\"\r\n                        type=\"date\"\r\n                        defaultValue={passport_expirydate}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"nationality\"\r\n                  control={control}\r\n                  defaultValue={nationality}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Nationality\"\r\n                        id=\"standard-nationality\"\r\n                        name=\"nationality\"\r\n                        defaultValue={nationality}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"gender\"\r\n                  control={control}\r\n                  defaultValue={gender}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Gender\"\r\n                        id=\"standard-gender\"\r\n                        name=\"gender\"\r\n                        defaultValue={gender}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        select\r\n                      >\r\n                        <MenuItem value=\"Male\">Male</MenuItem>\r\n                        <MenuItem value=\"Female\">Female</MenuItem>\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"address\"\r\n                  control={control}\r\n                  defaultValue={address}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Address\"\r\n                        id=\"standard-address\"\r\n                        name=\"address\"\r\n                        defaultValue={address}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <Divider className={classes.divider} />\r\n            <div>\r\n              <div>\r\n                {loginLevel.loginLevel !== \"Admin\" && (\r\n                  <Controller\r\n                    name=\"basic_salary\"\r\n                    control={control}\r\n                    defaultValue={basic_salary}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <CurrencyTextField\r\n                          label=\"Basic Salary\"\r\n                          variant=\"standard\"\r\n                          value={basic_salary}\r\n                          currencySymbol=\"$\"\r\n                          outputFormat=\"string\"\r\n                          decimalCharacter=\".\"\r\n                          digitGroupSeparator=\",\"\r\n                          decimalPlaces=\"2\"\r\n                          className={classes.textField}\r\n                          id=\"standard-basicsalary\"\r\n                          name=\"basic_salary\"\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            onChange(parseFloat(currency(e.target.value), 10));\r\n                          }}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                        />\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"IC No required\" }}\r\n                  />\r\n                )}\r\n                {loginLevel.loginLevel !== \"Admin\" && (\r\n                  <Controller\r\n                    name=\"salary_currency\"\r\n                    control={control}\r\n                    defaultValue={salary_currency}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Currency\"\r\n                          id=\"standard-currency\"\r\n                          name=\"salary_currency\"\r\n                          defaultValue={salary_currency}\r\n                          className={classes.textField}\r\n                          onChange={onChange}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                          select\r\n                        >\r\n                          <MenuItem value=\"BND\">BND</MenuItem>\r\n                          <MenuItem value=\"USD\">USD</MenuItem>\r\n                          <MenuItem value=\"MYR\">MYR</MenuItem>\r\n                        </TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"IC No required\" }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div>\r\n                {loginLevel.loginLevel !== \"Admin\" && (\r\n                  <Controller\r\n                    name=\"siteallows_fee\"\r\n                    control={control}\r\n                    defaultValue={siteallows_fee}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <CurrencyTextField\r\n                          label=\"Site Allowances Fee\"\r\n                          variant=\"standard\"\r\n                          value={siteallows_fee}\r\n                          currencySymbol=\"$\"\r\n                          outputFormat=\"number\"\r\n                          decimalCharacter=\".\"\r\n                          digitGroupSeparator=\",\"\r\n                          decimalPlaces=\"2\"\r\n                          className={classes.textField}\r\n                          id=\"standard-siteallowances\"\r\n                          name=\"siteallows_fee\"\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            onChange(parseFloat(currency(e.target.value), 10));\r\n                          }}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                        />\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"IC No required\" }}\r\n                  />\r\n                )}\r\n                {loginLevel.loginLevel !== \"Admin\" && (\r\n                  <Controller\r\n                    name=\"perdiem_fee\"\r\n                    control={control}\r\n                    defaultValue={perdiem_fee}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <CurrencyTextField\r\n                          label=\"Per Diem Fee\"\r\n                          variant=\"standard\"\r\n                          value={perdiem_fee}\r\n                          currencySymbol=\"$\"\r\n                          outputFormat=\"number\"\r\n                          decimalCharacter=\".\"\r\n                          digitGroupSeparator=\",\"\r\n                          decimalPlaces=\"2\"\r\n                          className={classes.textField}\r\n                          id=\"standard-perdiem\"\r\n                          name=\"perdiem_fee\"\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            onChange(parseFloat(currency(e.target.value), 10));\r\n                          }}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                        />\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"IC No required\" }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"tap_checkbox\"\r\n                  control={control}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            name=\"tap_checkbox\"\r\n                            defaultValue={tap_checkbox}\r\n                            checked={checktap}\r\n                            type=\"checkbox\"\r\n                            onChange={(e) => {\r\n                              onChange(e.target.checked);\r\n                              setCheckTap(e.target.checked);\r\n                            }}\r\n                          />\r\n                        }\r\n                        label=\"TAP/SCP Contribution\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"tap_acno\"\r\n                  control={control}\r\n                  defaultValue={tap_acno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"TAP Ac No\"\r\n                        id=\"standard-tapno\"\r\n                        name=\"tap_acno\"\r\n                        defaultValue={tap_acno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"scp_acno\"\r\n                  control={control}\r\n                  defaultValue={scp_acno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"SCP Ac No\"\r\n                        id=\"standard-scpno\"\r\n                        name=\"scp_acno\"\r\n                        defaultValue={scp_acno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"bank_name\"\r\n                  control={control}\r\n                  defaultValue={bank_name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Bank Name\"\r\n                        id=\"standard-bankname\"\r\n                        name=\"bank_name\"\r\n                        defaultValue={bank_name}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"bank_acno\"\r\n                  control={control}\r\n                  defaultValue={bank_acno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Bank Ac No\"\r\n                        id=\"standard-backacno\"\r\n                        name=\"bank_acno\"\r\n                        defaultValue={bank_acno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  // rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"workpermitno\"\r\n                  control={control}\r\n                  defaultValue={workpermitno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Work Permit No\"\r\n                        id=\"standard-workpermitno\"\r\n                        name=\"workpermitno\"\r\n                        defaultValue={workpermitno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"workpermit_expirydate\"\r\n                  control={control}\r\n                  defaultValue={workpermit_expirydate}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Work Permit Expiry Date\"\r\n                        id=\"standard-workpermitexpiry\"\r\n                        name=\"workpermit_expirydate\"\r\n                        type=\"date\"\r\n                        defaultValue={workpermit_expirydate}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <Divider className={classes.divider} />\r\n              <div>\r\n                <Controller\r\n                  name=\"date_of_join\"\r\n                  control={control}\r\n                  defaultValue={date_of_join}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Joining Date\"\r\n                        id=\"standard-joiningdate\"\r\n                        name=\"date_of_join\"\r\n                        type=\"date\"\r\n                        defaultValue={date_of_join}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"date_of_resign\"\r\n                  control={control}\r\n                  defaultValue={date_of_resign}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Resign Date\"\r\n                        id=\"standard-resindate\"\r\n                        name=\"date_of_resign\"\r\n                        type=\"date\"\r\n                        defaultValue={date_of_resign}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"leave_entitled\"\r\n                  control={control}\r\n                  defaultValue={leave_entitled}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Annual Leaves Entitled\"\r\n                        id=\"standard-annualleave\"\r\n                        name=\"leave_entitled\"\r\n                        type=\"numeric\"\r\n                        defaultValue={leave_entitled}\r\n                        className={classes.textField}\r\n                        onChange={(e) =>\r\n                          onChange(parseFloat(e.target.value, 10))\r\n                        }\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"leave_bf\"\r\n                  control={control}\r\n                  defaultValue={leave_bf}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Leaves B/F\"\r\n                        id=\"standard-leavebal\"\r\n                        name=\"leave_bf\"\r\n                        type=\"numeric\"\r\n                        defaultValue={leave_bf}\r\n                        className={classes.textField}\r\n                        onChange={(e) =>\r\n                          onChange(parseFloat(e.target.value, 10))\r\n                        }\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"designation\"\r\n                  control={control}\r\n                  defaultValue={designation}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Designation\"\r\n                        id=\"standard-designation\"\r\n                        name=\"designation\"\r\n                        defaultValue={designation}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        select\r\n                      >\r\n                        <MenuItem value=\"\">None</MenuItem>\r\n                        {designations &&\r\n                          designations.map((r) => {\r\n                            return (\r\n                              <MenuItem key={r.id} value={r.name}>\r\n                                {r.name}\r\n                              </MenuItem>\r\n                            );\r\n                          })}\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"department\"\r\n                  control={control}\r\n                  defaultValue={department}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Department\"\r\n                        id=\"standard-department\"\r\n                        name=\"department\"\r\n                        defaultValue={department}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        select\r\n                      >\r\n                        <MenuItem value=\"\">None</MenuItem>\r\n                        {departments &&\r\n                          departments.map((r) => {\r\n                            return (\r\n                              <MenuItem key={r.id} value={r.name}>\r\n                                {r.name}\r\n                              </MenuItem>\r\n                            );\r\n                          })}\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"reporting_to\"\r\n                  control={control}\r\n                  defaultValue={reporting_to}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Reporting To\"\r\n                        id=\"standard-reportingto\"\r\n                        name=\"reporting_to\"\r\n                        defaultValue={reporting_to}\r\n                        className={classes.textField}\r\n                        onChange={(e) => {\r\n                          onChange(e.target.value);\r\n                          handleReportingTo(e.target.value);\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        select\r\n                      >\r\n                        <MenuItem value=\"\">None</MenuItem>\r\n                        {employees &&\r\n                          employees.map((r) => {\r\n                            return (\r\n                              <MenuItem key={r.id} value={r.name}>\r\n                                {r.name}\r\n                              </MenuItem>\r\n                            );\r\n                          })}\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"reporting_email\"\r\n                  control={control}\r\n                  defaultValue={reportemail}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Reporting Email\"\r\n                        id=\"standard-reportingemail\"\r\n                        name=\"reporting_email\"\r\n                        value={reportemail}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <Divider className={classes.divider} />\r\n            </div>\r\n          </Grid>\r\n          <Divider />\r\n        </Paper>\r\n      </form>\r\n\r\n      <div>\r\n        <Grid xs={12}>\r\n          <EmpFamily />\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <EmpEducations />\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <EmpExperiences />\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <EmpTrainings />\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  divider: {\r\n    padding: 4,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n}));\r\n\r\nexport default EmployeeForm;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\pages\\AllEmployeesPage.js",["2814"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport AllEmployeesTable from \"../components/AllEmployeesTable\";\r\nimport { headEmployeesTableCells } from \"../utils/constants\";\r\nconst drawerWidth = 240;\r\n\r\nconst AllEmployees = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <AllEmployeesTable title=\"All Employees\" />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n    height: \"95vh\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n  },\r\n  fixedHeight: {\r\n    // height: 240,\r\n    height: \"80vh\",\r\n  },\r\n}));\r\nexport default AllEmployees;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\pages\\DashboardPage.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\pages\\ExpensesPage.js",["2815"],"import React, { useEffect } from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n//import { headExpenseTableCells } from \"../utils/constants\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport ExpenseTable from \"../components/ExpenseTable\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ExpensesPage = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { loadExpenses, expenses_loading } = useExpensesContext();\r\n\r\n  useEffect(() => {\r\n    loadExpenses();\r\n  }, []);\r\n\r\n  if (expenses_loading) {\r\n    return (\r\n      <div>\r\n        <Paper className={fixedHeightPaper}>\r\n          \r\n        <h2>Loading...Expenses</h2>\r\n         </Paper>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <div>\r\n                  <ExpenseTable title=\"Expenses Claims\" />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    // height: 240,\r\n    height: \"85vh\",\r\n  },\r\n}));\r\nexport default ExpensesPage;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\pages\\PayrollPage.js",["2816"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport PayslipsPeriods from \"../components/PayslipsPeriods\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst PayrollPage = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <div>\r\n                  <h2>Payroll Page</h2>\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default PayrollPage;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\pages\\LeavePage.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\pages\\PayslipPage.js",["2817"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport PayslipPeriods from \"../components/PayslipsPeriods\";\r\nimport PayslipTable from \"../components/PayslipTable\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst Payslips = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"xl\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <div>\r\n                  <PayslipTable />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n    width: \"100%\"\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid \",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    // height: 240,\r\n    height: \"80vh\",\r\n  },\r\n}));\r\n\r\nexport default Payslips;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\pages\\DepartmentsPage.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\pages\\PrivateRoute.js",["2818","2819","2820"],"import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAuthContext } from \"../context/auth_context\";\r\n\r\nconst PrivateRoute = ({ components: RouteCompenent, ...rest }) => {\r\n  const { currentUser } = useAuthContext();\r\n  return (\r\n    <div>\r\n      {/* <Route>\r\n        {...rest}\r\n        render=\r\n        {(routeProps) =>\r\n          !!currentUser ? (\r\n            <RouteCompenent {...routeProps} />\r\n          ) : (\r\n            <Redirect to=\"/login\" />\r\n          )\r\n        }\r\n      </Route> */}\r\n    </div>\r\n  );\r\n};\r\nexport default PrivateRoute;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\pages\\AllowancesPage.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\pages\\DesignationPage.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\pages\\DailyAllowancesPage.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\pages\\ClientsPage.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\pages\\ErrorPage.js",["2821","2822","2823"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link as ReactLink } from \"react-router-dom\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Box, Container, Flex, Heading, Link, HStack, Stack } from \"@chakra-ui/react\";\r\n\r\nconst ErrorPage = () => {\r\n  return (\r\n    <Container w=\"100%\" h=\"600\" align=\"center\">\r\n      <Box mt={100} w=\"100%\" h=\"100%\" align=\"center\">\r\n        <Heading>404</Heading>\r\n        <Heading size=\"md\">Sorry, the page you tried cannot be found</Heading>\r\n        <Link as={ReactLink} to=\"/\">\r\n          <HStack pt=\"20\" pl=\"30%\">\r\n          <ArrowBackIcon /> <Heading size=\"md\" color=\"red\">Back Home</Heading>\r\n          </HStack>\r\n        </Link>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.main`\r\n  background: var(--clr-primary-10);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  h1 {\r\n    font-size: 10rem;\r\n  }\r\n  h3 {\r\n    text-transform: none;\r\n    margin-bottom: 2rem;\r\n  }\r\n`;\r\n\r\nexport default ErrorPage;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\Copyright.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\AllEmployeesTable.js",["2824","2825","2826","2827","2828","2829","2830","2831","2832","2833","2834","2835","2836"],"import React, { useState, useEffect, useMemo } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Box} from \"@chakra-ui/react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Icon } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { editEmployeeIdState } from \"./data/atomdata\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport EmployeeView from \"./EmployeeView\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useDepartments } from \"./departments/useDepartments\";\r\nimport { useDesignations } from \"./designations/useDesignations\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useAllEmployees } from \"./employees/useAllEmployees\";\r\nimport { useDeleteEmployees } from \"./employees/useDeleteEmployees\";\r\nimport App from \"../utils/firebase\";\r\n\r\nexport default function AllEmployeesTable() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const { designations } = useDesignations();\r\n  const { departments } = useDepartments();\r\n  const { employees, setEmployeeId } = useEmployees();\r\n  const { allemployees, setAllEmpId } = useAllEmployees();\r\n  const [empId, setEmpId] = useRecoilState(editEmployeeIdState);\r\n  const deleteEmployees = useDeleteEmployees();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n\r\n  const columns = useMemo(() => [\r\n    {\r\n      title: \"Name\",\r\n      field: \"name\",\r\n    },\r\n    { title: \"IC No\", field: \"ic_no\" },\r\n    { title: \"Gender\", field: \"gender\" },\r\n    {\r\n      title: \"Birth Date\",\r\n      field: \"birthdate\",\r\n      type: \"date\",\r\n      dateSetting: { locale: \"en-GB\" },\r\n    },\r\n    { title: \"Email\", field: \"email\" },\r\n  ]);\r\n\r\n  const {\r\n    editEmployeeID,\r\n    employees_loading,\r\n    //deleteEmployee,\r\n    //loadEmployees,\r\n    setEditEmployeeID,\r\n    setIsEditingOn,\r\n    setIsEditingOff,\r\n    resetSingleEmployee,\r\n    resetEmployees,\r\n    //getSingleEmployee,\r\n  } = useEmployeesContext();\r\n\r\n  const { loadDepartments, loadDesignations, resetTables } = useTablesContext();\r\n\r\n  useEffect(() => {\r\n    setAllEmpId(\"111\");\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   resetEmployees();\r\n  //   loadEmployees();\r\n  // }, []);\r\n\r\n  const update_Employee = async (data) => {\r\n    const { id } = data;\r\n    resetSingleEmployee();\r\n    resetEmployees();\r\n    setEditEmployeeID(id);\r\n    setIsEditingOn();\r\n    setEmployeeId(id);\r\n\r\n    history.push(\"/singleemployee\");\r\n  };\r\n\r\n  const add_Employee = async (data) => {\r\n    resetSingleEmployee();\r\n    setEditEmployeeID(\"\");\r\n    setIsEditingOff();\r\n    //handleDialogOpen();\r\n    history.push(\"/singleemployee\");\r\n  };\r\n\r\n  const delete_Employee = (data) => {\r\n    const { id } = data;\r\n    setEditEmployeeID(id);\r\n    handleAlertOpen();\r\n    //deleteEmployee(id);\r\n    //loadEmployees();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    //loadEmployees();\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editEmployeeID;\r\n    deleteEmployees(id);\r\n    //loadEmployees();\r\n  };\r\n\r\n  const calculateAge = (dob) => {\r\n    var today = new Date();\r\n    var birthDate = new Date(dob);\r\n    var age = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age--;\r\n    }\r\n    return age;\r\n  };\r\n\r\n  const Reset_PW = () => {\r\n    allemployees.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        try {\r\n          if (rec.password) {\r\n            App.auth().createUserWithEmailAndPassword(rec.email, rec.password);\r\n          } else {\r\n            App.auth().createUserWithEmailAndPassword(rec.email, \"abc123*\");\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n        try {\r\n          App.auth().sendPasswordResetEmail(rec.email);\r\n          toast({\r\n            title: `Reset Password sent to ${rec.email}!`,\r\n            status: \"success\",\r\n          });\r\n        } catch (error) {\r\n          toast({\r\n            title: `Error send to  ${rec.email}!`,\r\n            status: \"warning\",\r\n          });\r\n        }\r\n      }\r\n    });\r\n    allemployees.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  // if (employees_loading) {\r\n  //   return <div>Loading...</div>;\r\n  // } else {\r\n  //   //console.log(employees);\r\n  // }\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}> */}\r\n        <Box maxW=\"100%\" pt=\"5px\">\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={allemployees.sort((a, b) =>\r\n            a.name > b.name ? 1 : b.name > a.name ? -1 : 0\r\n          )}\r\n          title=\"Employees Listing\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              position: \"row\",\r\n              onClick: (event, rowData) => {\r\n                update_Employee(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              position: \"row\",\r\n              onClick: (event, rowData) => {\r\n                delete_Employee(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Employee(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            selection: true,\r\n            paging: false,\r\n            headerStyle: {\r\n              //backgroundColor: \"#DAAD86\",\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"secondary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Reset_PW}\r\n                  >\r\n                    Reset PW <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={true}\r\n        >\r\n          <EmployeeView handleDialogClose={handleDialogClose} />\r\n        </CustomDialog>\r\n\r\n        <AlertDialogBox\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Employee\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\utils\\constants.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\context\\employees_context.js",["2837","2838","2839","2840","2841","2842","2843","2844"],"import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/employees_reducer\";\r\nimport { employees_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  SET_EDITEMPLOYEEID,\r\n  SET_ISEDITING_ON,\r\n  SET_ISEDITING_OFF,\r\n  SET_SINGLEEMPLOYEE,\r\n  GET_EMPLOYEES_BEGIN,\r\n  GET_EMPLOYEES_SUCCESS,\r\n  GET_EMPLOYEES_ERROR,\r\n  GET_SINGLE_EMPLOYEE_BEGIN,\r\n  GET_SINGLE_EMPLOYEE_SUCCESS,\r\n  GET_SINGLE_EMPLOYEE_ERROR,\r\n  ADD_EMPLOYEE_BEGIN,\r\n  ADD_EMPLOYEE_SUCCESS,\r\n  ADD_EMPLOYEE_ERROR,\r\n  DELETE_EMPLOYEE_BEGIN,\r\n  DELETE_EMPLOYEE_SUCCESS,\r\n  DELETE_EMPLOYEE_ERROR,\r\n  UPDATE_EMPLOYEE_BEGIN,\r\n  UPDATE_EMPLOYEE_SUCCESS,\r\n  UPDATE_EMPLOYEE_ERROR,\r\n  RESET_SINGLE_EMPLOYEE,\r\n  RESET_EMPLOYEES,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  isEditing: false,\r\n  alert: { show: false, msg: \"\", type: \"\" },\r\n  editEmployeeID: null,\r\n  employees_loading: false,\r\n  employees_error: false,\r\n  employees: [],\r\n  single_employee_loading: false,\r\n  single_employee_error: false,\r\n  single_employee: {},\r\n  delete_employee_loading: false,\r\n  delete_employee_error: false,\r\n  update_employee_loading: false,\r\n  update_employee_error: false,\r\n  add_employee_loading: false,\r\n  add_employee_error: false,\r\n  // filterValue: \"Female\",\r\n  // filterfield: \"gender\",\r\n};\r\n\r\nconst EmployeesContext = React.createContext();\r\n\r\nexport const EmployeesProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const loadEmployees = async () => {\r\n    dispatch({ type: GET_EMPLOYEES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(employees_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const employees = await res.json();\r\n      dispatch({ type: GET_EMPLOYEES_SUCCESS, payload: employees });\r\n    } catch (error) {\r\n      dispatch({ type: GET_EMPLOYEES_ERROR });\r\n    }\r\n  };\r\n\r\n  const setIsEditingOn = () => {\r\n    dispatch({ type: SET_ISEDITING_ON });\r\n  };\r\n\r\n  const setIsEditingOff = () => {\r\n    dispatch({ type: SET_ISEDITING_OFF });\r\n  };\r\n\r\n  const resetSingleEmployee = () => {\r\n    dispatch({ type: RESET_SINGLE_EMPLOYEE });\r\n  };\r\n\r\n  const resetEmployees = () => {\r\n    dispatch({ type: RESET_EMPLOYEES });\r\n  };\r\n\r\n  const setEditEmployeeID = async (id) => {\r\n    try {\r\n      dispatch({ type: SET_EDITEMPLOYEEID, payload: id });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSingleEmployee = async (id) => {\r\n    dispatch({ type: GET_SINGLE_EMPLOYEE_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${employees_url}?id=${id}`);\r\n      const singleemployee = data;\r\n      dispatch({ type: GET_SINGLE_EMPLOYEE_SUCCESS, payload: singleemployee });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_EMPLOYEE_ERROR });\r\n    }\r\n  };\r\n\r\n  const getSingleEmployeeEmail = async (fv) => {\r\n    dispatch({ type: GET_SINGLE_EMPLOYEE_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${employees_url}?fv=${fv}`);\r\n      const singleemployee = data;\r\n      dispatch({ type: GET_SINGLE_EMPLOYEE_SUCCESS, payload: singleemployee });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_EMPLOYEE_ERROR });\r\n    }\r\n  };\r\n\r\n  const addEmployee = async (data) => {\r\n    const { id, name, ic_no, email, age, gender } = data;\r\n    //\r\n    dispatch({ type: ADD_EMPLOYEE_BEGIN });\r\n    try {\r\n      await fetch(employees_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_EMPLOYEE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_EMPLOYEE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateEmployee = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_EMPLOYEE_BEGIN });\r\n    try {\r\n      await fetch(employees_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_EMPLOYEE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_EMPLOYEE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteEmployee = async (id) => {\r\n    dispatch({ type: DELETE_EMPLOYEE_BEGIN });\r\n    try {\r\n      await fetch(employees_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_EMPLOYEE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_EMPLOYEE_ERROR });\r\n    }\r\n  };\r\n  return (\r\n    <EmployeesContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadEmployees,\r\n        addEmployee,\r\n        updateEmployee,\r\n        deleteEmployee,\r\n        getSingleEmployee,\r\n        getSingleEmployeeEmail,\r\n        setEditEmployeeID,\r\n        setIsEditingOn,\r\n        setIsEditingOff,\r\n        resetSingleEmployee,\r\n        resetEmployees,\r\n      }}\r\n    >\r\n      {children}\r\n    </EmployeesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useEmployeesContext = () => {\r\n  return useContext(EmployeesContext);\r\n};\r\n","D:\\react-myprojects\\hrms-airtable\\src\\actions.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\reducers\\employees_reducer.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\EmployeeForm2.js",["2845","2846","2847","2848","2849","2850","2851","2852","2853"],"import React, { useState, useReducer, useEffect } from \"react\";\r\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  gender: \"\",\r\n  ic_no: \"\",\r\n  email: \"\",\r\n  age: 0,\r\n};\r\n\r\nconst EmployeeForm = () => {\r\n  const classes = useStyles();\r\n  const { isEditing, single_employee } = useEmployeesContext();\r\n  const { name, gender, ic_no, email, age } = single_employee || initial_values;\r\n\r\n  const [formInput, setFormInput] = useState(initial_values);\r\n\r\n  const handleInput = (e) => {\r\n    const { name, type, value } = e.target;\r\n    const val = type === \"number\" ? parseFloat(value) : value;\r\n    setFormInput({ [name]: val });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let data = { formInput };\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          EMPLOYEE FORM\r\n        </Typography>\r\n        <Typography component=\"p\">Employee Particulars</Typography>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <TextField\r\n              label=\"Name\"\r\n              id=\"margin-normal\"\r\n              name=\"name\"\r\n              defaultValue={formInput.name}\r\n              className={classes.textField}\r\n              helperText=\"Enter your full name\"\r\n              onChange={handleInput}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"IC No\"\r\n              id=\"margin-normal\"\r\n              name=\"ic_no\"\r\n              defaultValue={formInput.ic_no}\r\n              className={classes.textField}\r\n              helperText=\"Enter your I/C No\"\r\n              onChange={handleInput}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"Gender\"\r\n              id=\"margin-normal\"\r\n              name=\"gender\"\r\n              defaultValue={formInput.gender}\r\n              className={classes.textField}\r\n              helperText=\"Enter your gender\"\r\n              onChange={handleInput}\r\n              select\r\n            >\r\n              <MenuItem value=\"Maine\">Male</MenuItem>\r\n              <MenuItem value=\"Female\">Female</MenuItem>\r\n            </TextField>\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"Age\"\r\n              id=\"margin-normal\"\r\n              type=\"number\"\r\n              name=\"age\"\r\n              defaultValue={formInput.age}\r\n              className={classes.textField}\r\n              helperText=\"Enter your age\"\r\n              onChange={handleInput}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"Email\"\r\n              id=\"margin-normal\"\r\n              name=\"email\"\r\n              defaultValue={formInput.name}\r\n              className={classes.textField}\r\n              helperText=\"e.g. name@gmail.com\"\r\n              onChange={handleInput}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n            >\r\n              Submit <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default EmployeeForm;\r\n",["2854","2855"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\TableForm.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveTable.js",["2856","2857","2858","2859","2860","2861","2862","2863","2864","2865"],"D:\\react-myprojects\\hrms-airtable\\src\\context\\leaves_context.js",["2866","2867","2868","2869","2870","2871","2872","2873","2874","2875"],"import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/leaves_reducer\";\r\nimport { leaves_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  SET_EDITLEAVEID,\r\n  SET_ISLEAVEEDITING_ON,\r\n  SET_ISLEAVEEDITING_OFF,\r\n  SET_SINGLELEAVE,\r\n  GET_LEAVES_BEGIN,\r\n  GET_LEAVES_SUCCESS,\r\n  GET_LEAVES_ERROR,\r\n  GET_SINGLE_LEAVE_BEGIN,\r\n  GET_SINGLE_LEAVE_SUCCESS,\r\n  GET_SINGLE_LEAVE_ERROR,\r\n  GET_SINGLEBATCH_LEAVE_BEGIN,\r\n  GET_SINGLEBATCH_LEAVE_SUCCESS,\r\n  GET_SINGLEBATCH_LEAVE_ERROR,\r\n  ADD_LEAVE_BEGIN,\r\n  ADD_LEAVE_SUCCESS,\r\n  ADD_LEAVE_ERROR,\r\n  DELETE_LEAVE_BEGIN,\r\n  DELETE_LEAVE_SUCCESS,\r\n  DELETE_LEAVE_ERROR,\r\n  UPDATE_LEAVE_BEGIN,\r\n  UPDATE_LEAVE_SUCCESS,\r\n  UPDATE_LEAVE_ERROR,\r\n  RESET_SINGLE_LEAVE,\r\n  RESET_TABLES,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  isLeaveEditing: false,\r\n  alertleave: { show: false, msg: \"\", type: \"\" },\r\n  editLeaveID: null,\r\n  leaves_loading: false,\r\n  leaves_error: false,\r\n  leaves: [],\r\n  single_leave_loading: false,\r\n  single_leave_error: false,\r\n  single_leave: {},\r\n  singlebatch_leave_loading: false,\r\n  singlebatch_leave_error: false,\r\n  singlebatch_leave: {},\r\n  delete_leave_loading: false,\r\n  delete_leave_error: false,\r\n  update_leave_loading: false,\r\n  update_leave_error: false,\r\n  add_leave_loading: false,\r\n  add_leave_error: false,\r\n  // filterValue: \"Female\",\r\n  // filterfield: \"gender\",\r\n};\r\n\r\nconst LeavesContext = React.createContext();\r\n\r\nexport const LeavesProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const loadLeaves = async () => {\r\n    dispatch({ type: GET_LEAVES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(leaves_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const leaves = await res.json();\r\n      dispatch({ type: GET_LEAVES_SUCCESS, payload: leaves });\r\n    } catch (error) {\r\n      dispatch({ type: GET_LEAVES_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadPendingLeaves = async (fi) => {\r\n    dispatch({ type: GET_LEAVES_BEGIN });\r\n    try {\r\n      //const res = await fetch(leaves_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const { data } = await axios.get(`${leaves_url}?fi=${fi}`);\r\n      const leaves = data;\r\n\r\n      dispatch({ type: GET_LEAVES_SUCCESS, payload: leaves });\r\n    } catch (error) {\r\n      dispatch({ type: GET_LEAVES_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadEmpLeaves = async (fv) => {\r\n    dispatch({ type: GET_LEAVES_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${leaves_url}?fv=${fv}`);\r\n      const leaves = data;\r\n\r\n      dispatch({ type: GET_LEAVES_SUCCESS, payload: leaves });\r\n    } catch (error) {\r\n      dispatch({ type: GET_LEAVES_ERROR });\r\n    }\r\n  };\r\n\r\n  const setIsLeaveEditingOn = () => {\r\n    dispatch({ type: SET_ISLEAVEEDITING_ON });\r\n  };\r\n\r\n  const setIsLeaveEditingOff = () => {\r\n    dispatch({ type: SET_ISLEAVEEDITING_OFF });\r\n  };\r\n\r\n  const resetSingleLeave = () => {\r\n    dispatch({ type: RESET_SINGLE_LEAVE });\r\n  };\r\n\r\n  const setEditLeaveID = async (id) => {\r\n    try {\r\n      dispatch({ type: SET_EDITLEAVEID, payload: id });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSingleLeave = async (id) => {\r\n    dispatch({ type: GET_SINGLE_LEAVE_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${leaves_url}?id=${id}`);\r\n      const singleleave = data;\r\n      dispatch({ type: GET_SINGLE_LEAVE_SUCCESS, payload: singleleave });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_LEAVE_ERROR });\r\n    }\r\n  };\r\n\r\n  const getSingleBatchLeave = async (empid) => {\r\n    dispatch({ type: GET_SINGLEBATCH_LEAVE_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${leaves_url}?fv=${empid}`);\r\n      const singlebatchleave = data;\r\n\r\n      // const res = await fetch(`${leaves_url}?fv=${empid}`);\r\n      //console.log(`${family_url}?fv=${linkid}`);\r\n      // const singlebatchleave = await res.json();\r\n\r\n      dispatch({\r\n        type: GET_SINGLEBATCH_LEAVE_SUCCESS,\r\n        payload: singlebatchleave,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLEBATCH_LEAVE_ERROR });\r\n    }\r\n  };\r\n\r\n  const addLeave = async (data) => {\r\n    const { id, name, from_date, to_date, reason, no_of_days, status } = data;\r\n    //\r\n    dispatch({ type: ADD_LEAVE_BEGIN });\r\n    try {\r\n      await fetch(leaves_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_LEAVE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_LEAVE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateLeave = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_LEAVE_BEGIN });\r\n    try {\r\n      await fetch(leaves_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_LEAVE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_LEAVE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteLeave = async (id) => {\r\n    dispatch({ type: DELETE_LEAVE_BEGIN });\r\n    try {\r\n      await fetch(leaves_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_LEAVE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_LEAVE_ERROR });\r\n    }\r\n  };\r\n  return (\r\n    <LeavesContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadLeaves,\r\n        loadPendingLeaves,\r\n        loadEmpLeaves,\r\n        addLeave,\r\n        updateLeave,\r\n        deleteLeave,\r\n        getSingleLeave,\r\n        getSingleBatchLeave,\r\n        setEditLeaveID,\r\n        setIsLeaveEditingOn,\r\n        setIsLeaveEditingOff,\r\n        resetSingleLeave,\r\n      }}\r\n    >\r\n      {children}\r\n    </LeavesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useLeavesContext = () => {\r\n  return useContext(LeavesContext);\r\n};\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\SingleLeave.js",["2876","2877","2878"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LeaveForm from \"./LeaveForm\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ToolbarHeader = ({ title }) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SingleLeave = ({ title }) => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Link to=\"/leave\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link>\r\n                <div>\r\n                  {/* <ToolbarHeader title={title} /> */}\r\n\r\n                  <LeaveForm />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nexport default SingleLeave;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveForm.js",["2879","2880","2881","2882","2883","2884","2885","2886","2887","2888","2889"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useLeaves } from \"./leaves/useLeaves\";\r\nimport { useAddLeaves } from \"./leaves/useAddLeaves\";\r\nimport { useDeleteLeaves } from \"./leaves/useDeleteLeaves\";\r\nimport { useUpdateLeaves } from \"./leaves/useUpdateLeaves\";\r\n\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\nconst initial_state = {\r\n  name: \"\",\r\n  to_date: \"\",\r\n  from_date: \"\",\r\n  reason: \"\",\r\n  status: \"Pending\",\r\n  no_of_days: 0,\r\n  leave_bal: 0,\r\n  reporting_email: \"\",\r\n};\r\n\r\nconst LeaveForm = ({\r\n  formdata,\r\n  leavestate,\r\n  setFormdata,\r\n  handleDialogClose,\r\n}) => {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const { employees } = useEmployees();\r\n  const { leaves, filter, setFilter, setLeaveId } = useLeaves();\r\n  const updateLeaves = useUpdateLeaves();\r\n  const addLeaves = useAddLeaves();\r\n  const [state, setState] = useState(initial_state);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { handleSubmit, control } = useForm();\r\n  const initialValues = Object.values(initial_state).join(\"\");\r\n  const { isLeaveEditing, editLeaveID } = useLeavesContext();\r\n\r\n  const handleSentEmail = (data) => {\r\n    const { from_date, to_date } = data;\r\n    //console.log(\"leave form\", loginLevel);\r\n    var emaildata = {\r\n      to_name: loginLevel.loginUser,\r\n      to_email: loginLevel.loginEmail,\r\n      message: `Your leave application from ${from_date} to ${to_date} has been successfully submitted for approval`,\r\n      cc_to: loginLevel.reporting_email,\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(\"leave\", data);\r\n    if (isLeaveEditing) {\r\n      updateLeaves({ id: editLeaveID, ...data });\r\n      toast({\r\n        title: \"Your leave has been updated!\",\r\n        status: \"success\",\r\n      });\r\n    } else {\r\n      addLeaves({\r\n        ...data,\r\n        empid: loginLevel.loginUserId,\r\n        reporting_email: loginLevel.reporting_email,\r\n      });\r\n      handleSentEmail(data);\r\n    }\r\n\r\n    //history.push(\"/leave\");\r\n    handleDialogClose();\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setState(initial_state);\r\n  //   setState({ ...formdata });\r\n  //   setState({ ...formdata });\r\n  //   console.log(\"laeve form\",state)\r\n  // }, [initialValues]);\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          LEAVE FORM\r\n        </Typography>\r\n        <Typography component=\"p\">Leave Application</Typography>\r\n        <Divider />\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Controller\r\n              name=\"name\"\r\n              control={control}\r\n              defaultValue={loginLevel.loginUser}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    id=\"margin-normal\"\r\n                    name=\"name\"\r\n                    //value={value}\r\n                    defaultValue={loginLevel.loginUser}\r\n                    className={classes.textField}\r\n                    onChange={(e) => {\r\n                      console.log(e.target.value);\r\n                      onChange(e.target.value);\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    //select\r\n                  >\r\n                    {/* {employees.map((e) => {\r\n                      return (\r\n                        <MenuItem key={e.name} value={e.name}>\r\n                          {e.name}\r\n                        </MenuItem>\r\n                      );\r\n                    })} */}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              // rules={{ required: \"Name required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"from_date\"\r\n              control={control}\r\n              defaultValue={formdata.from_date}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"From Date\"\r\n                    type=\"date\"\r\n                    id=\"margin-normal\"\r\n                    name=\"from_date\"\r\n                    defaultValue={formdata.from_date}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"From Date is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"to_date\"\r\n              control={control}\r\n              defaultValue={formdata.to_date}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"To Date\"\r\n                    id=\"margin-normal\"\r\n                    type=\"date\"\r\n                    name=\"to_date\"\r\n                    defaultValue={formdata.to_date}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"To Date is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"leave_bal\"\r\n              control={control}\r\n              defaultValue={leavestate.leave_bal}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    disable\r\n                    label=\"Leave Balance\"\r\n                    type=\"number\"\r\n                    id=\"standard-number\"\r\n                    name=\"leave_bal\"\r\n                    defaultValue={leavestate.leave_bal}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"no_of_days\"\r\n              control={control}\r\n              defaultValue={formdata.no_of_days}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"No Of Days\"\r\n                    type=\"number\"\r\n                    id=\"standard-number\"\r\n                    name=\"no_of_days\"\r\n                    defaultValue={formdata.no_of_days}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"reason\"\r\n              control={control}\r\n              defaultValue={formdata.reason}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Reason\"\r\n                    id=\"margin-normal\"\r\n                    name=\"reason\"\r\n                    defaultValue={formdata.reason}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"status\"\r\n              control={control}\r\n              defaultValue={formdata.status}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Status\"\r\n                    id=\"margin-normal\"\r\n                    name=\"status\"\r\n                    defaultValue={formdata.status}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    // select\r\n                  >\r\n                    {/* <MenuItem value=\"Pending\">Pending</MenuItem>\r\n                    <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n                    <MenuItem value=\"Approve\">Approve</MenuItem>\r\n                    <MenuItem value=\"Reject\">Reject</MenuItem> */}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              Submit <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default LeaveForm;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\reducers\\leaves_reducer.js",["2890"],"import {\r\n  SET_EDITLEAVEID,\r\n  SET_ISLEAVEEDITING_ON,\r\n  SET_ISLEAVEEDITING_OFF,\r\n  SET_SINGLELEAVE,\r\n  GET_LEAVES_BEGIN,\r\n  GET_LEAVES_SUCCESS,\r\n  GET_LEAVES_ERROR,\r\n  GET_SINGLE_LEAVE_BEGIN,\r\n  GET_SINGLE_LEAVE_SUCCESS,\r\n  GET_SINGLE_LEAVE_ERROR,\r\n  GET_SINGLEBATCH_LEAVE_BEGIN,\r\n  GET_SINGLEBATCH_LEAVE_SUCCESS,\r\n  GET_SINGLEBATCH_LEAVE_ERROR,\r\n  ADD_LEAVE_BEGIN,\r\n  ADD_LEAVE_SUCCESS,\r\n  ADD_LEAVE_ERROR,\r\n  DELETE_LEAVE_BEGIN,\r\n  DELETE_LEAVE_SUCCESS,\r\n  DELETE_LEAVE_ERROR,\r\n  UPDATE_LEAVE_BEGIN,\r\n  UPDATE_LEAVE_SUCCESS,\r\n  UPDATE_LEAVE_ERROR,\r\n  RESET_SINGLE_LEAVE,\r\n} from \"../actions\";\r\n\r\nconst leaves_reducer = (state, action) => {\r\n  // set leaves variables\r\n  if (action.type === SET_EDITLEAVEID) {\r\n    return { ...state, editLeaveID: action.payload };\r\n  }\r\n\r\n  if (action.type === SET_ISLEAVEEDITING_ON) {\r\n    return { ...state, isLeaveEditing: true };\r\n  }\r\n  if (action.type === SET_ISLEAVEEDITING_OFF) {\r\n    return { ...state, isLeaveEditing: false };\r\n  }\r\n  if (action.type === RESET_SINGLE_LEAVE) {\r\n    return { ...state, single_leave: {} };\r\n  }\r\n  // get leaves\r\n  if (action.type === GET_LEAVES_BEGIN) {\r\n    return { ...state, leaves_loading: true };\r\n  }\r\n  if (action.type === GET_LEAVES_SUCCESS) {\r\n    return { ...state, leaves_loading: false, leaves: action.payload };\r\n  }\r\n  if (action.type === GET_LEAVES_ERROR) {\r\n    return { ...state, leaves_loading: false, leaves_error: true };\r\n  }\r\n\r\n  // add leave\r\n  if (action.type === ADD_LEAVE_BEGIN) {\r\n    return { ...state, add_leave_loading: true };\r\n  }\r\n  if (action.type === ADD_LEAVE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_leaves_loading: false,\r\n      leaves: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_LEAVE_ERROR) {\r\n    return { ...state, leaves_loading: false, add_leave_error: true };\r\n  }\r\n  // update leave\r\n  if (action.type === UPDATE_LEAVE_BEGIN) {\r\n    return { ...state, update_leave_loading: true };\r\n  }\r\n  if (action.type === UPDATE_LEAVE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      leaves_loading: false,\r\n      single_leave: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_LEAVE_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_leave_loading: false,\r\n      update_leave_error: true,\r\n    };\r\n  }\r\n\r\n  // delete leave\r\n  if (action.type === DELETE_LEAVE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_leave_loading: true,\r\n      delete_leave_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_LEAVE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_leave_loading: false,\r\n      delete_leave_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_LEAVE_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_leave_loading: false,\r\n      delete_leave_error: true,\r\n    };\r\n  }\r\n\r\n  //single leave\r\n  if (action.type === GET_SINGLE_LEAVE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_leave_loading: true,\r\n      single_leave_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_LEAVE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_leave_loading: false,\r\n      single_leave: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_LEAVE_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_leave_loading: false,\r\n      single_leave_error: true,\r\n    };\r\n  }\r\n\r\n  //single batch leave\r\n  if (action.type === GET_SINGLEBATCH_LEAVE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      singlebatch_leave_loading: true,\r\n      singlebatch_leave_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_LEAVE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      singlebatch_leave_loading: false,\r\n      singlebatch_leave: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_LEAVE_ERROR) {\r\n    return {\r\n      ...state,\r\n      singlebatch_leave_loading: false,\r\n      singlebatch_leave_error: true,\r\n    };\r\n  }\r\n\r\n  // return state;\r\n  throw new Error(`No Matching \"${action.type}\" - action type`);\r\n};\r\n\r\nexport default leaves_reducer;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\context\\expenses_context.js",["2891","2892","2893","2894","2895","2896","2897","2898","2899"],"import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/expenses_reducer\";\r\nimport { expenses_url } from \"../utils/constants\";\r\nimport { unpaidexpenses_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  SET_EDITEXPENSEID,\r\n  SET_ISEXPENSEEDITING_ON,\r\n  SET_ISEXPENSEEDITING_OFF,\r\n  SET_SINGLEEXPENSE,\r\n  GET_EXPENSES_BEGIN,\r\n  GET_EXPENSES_SUCCESS,\r\n  GET_EXPENSES_ERROR,\r\n  GET_UNPAIDEXPENSES_BEGIN,\r\n  GET_UNPAIDEXPENSES_SUCCESS,\r\n  GET_UNPAIDEXPENSES_ERROR,\r\n  GET_PERIODEXPENSES_BEGIN,\r\n  GET_PERIODEXPENSES_SUCCESS,\r\n  GET_PERIODEXPENSES_ERROR,\r\n  GET_SINGLE_EXPENSE_BEGIN,\r\n  GET_SINGLE_EXPENSE_SUCCESS,\r\n  GET_SINGLE_EXPENSE_ERROR,\r\n  ADD_EXPENSE_BEGIN,\r\n  ADD_EXPENSE_SUCCESS,\r\n  ADD_EXPENSE_ERROR,\r\n  DELETE_EXPENSE_BEGIN,\r\n  DELETE_EXPENSE_SUCCESS,\r\n  DELETE_EXPENSE_ERROR,\r\n  UPDATE_EXPENSE_BEGIN,\r\n  UPDATE_EXPENSE_SUCCESS,\r\n  UPDATE_EXPENSE_ERROR,\r\n  RESET_SINGLE_EXPENSE,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  isExpenseEditing: false,\r\n  alertExpense: { show: false, msg: \"\", type: \"\" },\r\n  editExpenseID: null,\r\n  expenses_loading: false,\r\n  expenses_error: false,\r\n  expenses: [],\r\n  single_expense_loading: false,\r\n  single_expense_error: false,\r\n  single_expense: {},\r\n  delete_expense_loading: false,\r\n  delete_expense_error: false,\r\n  update_expense_loading: false,\r\n  update_expense_error: false,\r\n  add_expense_loading: false,\r\n  add_expense_error: false,\r\n  unpaid_expense_loading: false,\r\n  unpaid_expense_error: false,\r\n  unpaidexpenses: [],\r\n  period_expense_loading: false,\r\n  period_expense_error: false,\r\n  periodexpenses: [],\r\n  // filterValue: \"Female\",\r\n  // filterfield: \"gender\",\r\n};\r\n\r\nconst ExpensesContext = React.createContext();\r\n\r\nexport const ExpensesProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const loadExpenses = async () => {\r\n    dispatch({ type: GET_EXPENSES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(expenses_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const expenses = await res.json();\r\n      dispatch({ type: GET_EXPENSES_SUCCESS, payload: expenses });\r\n    } catch (error) {\r\n      dispatch({ type: GET_EXPENSES_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadPendingExpenses = async (fi) => {\r\n    dispatch({ type: GET_EXPENSES_BEGIN });\r\n    try {\r\n      //const res = await fetch(leaves_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const { data } = await axios.get(`${expenses_url}?fi=${fi}`);\r\n      const expenses = data;\r\n\r\n      dispatch({ type: GET_EXPENSES_SUCCESS, payload: expenses });\r\n    } catch (error) {\r\n      dispatch({ type: GET_EXPENSES_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadEmpExpenses = async (fv) => {\r\n    dispatch({ type: GET_EXPENSES_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${expenses_url}?fv=${fv}`);\r\n      const expenses = data;\r\n\r\n      dispatch({ type: GET_EXPENSES_SUCCESS, payload: expenses });\r\n    } catch (error) {\r\n      dispatch({ type: GET_EXPENSES_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadUnpaidExpenses = async () => {\r\n    dispatch({ type: GET_UNPAIDEXPENSES_BEGIN });\r\n    try {\r\n      // const { data } = await axios.get(`${unpaidexpenses_url}`);\r\n      // const unpaidexpenses = data;\r\n      const res = await fetch(unpaidexpenses_url);\r\n      const unpaidexpenses = await res.json();\r\n      dispatch({ type: GET_UNPAIDEXPENSES_SUCCESS, payload: unpaidexpenses });\r\n    } catch (error) {\r\n      dispatch({ type: GET_UNPAIDEXPENSES_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadPeriodExpenses = async () => {\r\n    dispatch({ type: GET_PERIODEXPENSES_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${unpaidexpenses_url}`);\r\n      const periodexpenses = data;\r\n\r\n      dispatch({ type: GET_PERIODEXPENSES_SUCCESS, payload: periodexpenses });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PERIODEXPENSES_ERROR });\r\n    }\r\n  };\r\n\r\n  const setIsExpenseEditingOn = () => {\r\n    dispatch({ type: SET_ISEXPENSEEDITING_ON });\r\n  };\r\n\r\n  const setIsExpenseEditingOff = () => {\r\n    dispatch({ type: SET_ISEXPENSEEDITING_OFF });\r\n  };\r\n\r\n  const resetSingleExpense = () => {\r\n    dispatch({ type: RESET_SINGLE_EXPENSE });\r\n  };\r\n\r\n  const setEditExpenseID = async (id) => {\r\n    try {\r\n      dispatch({ type: SET_EDITEXPENSEID, payload: id });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSingleExpense = async (id) => {\r\n    dispatch({ type: GET_SINGLE_EXPENSE_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${expenses_url}?id=${id}`);\r\n      const singleexpense = data;\r\n      dispatch({ type: GET_SINGLE_EXPENSE_SUCCESS, payload: singleexpense });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_EXPENSE_ERROR });\r\n    }\r\n  };\r\n\r\n  const addExpense = async (data) => {\r\n    const { id, name, date, purchased_date, remark, amount, status } = data;\r\n    //\r\n    dispatch({ type: ADD_EXPENSE_BEGIN });\r\n    try {\r\n      await fetch(expenses_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_EXPENSE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_EXPENSE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateExpense = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_EXPENSE_BEGIN });\r\n    try {\r\n      await fetch(expenses_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_EXPENSE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_EXPENSE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteExpense = async (id) => {\r\n    dispatch({ type: DELETE_EXPENSE_BEGIN });\r\n    try {\r\n      await fetch(expenses_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_EXPENSE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_EXPENSE_ERROR });\r\n    }\r\n  };\r\n  return (\r\n    <ExpensesContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadExpenses,\r\n        loadPendingExpenses,\r\n        loadEmpExpenses,\r\n        loadUnpaidExpenses,\r\n        loadPeriodExpenses,\r\n        addExpense,\r\n        updateExpense,\r\n        deleteExpense,\r\n        getSingleExpense,\r\n        setEditExpenseID,\r\n        setIsExpenseEditingOn,\r\n        setIsExpenseEditingOff,\r\n        resetSingleExpense,\r\n      }}\r\n    >\r\n      {children}\r\n    </ExpensesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useExpensesContext = () => {\r\n  return useContext(ExpensesContext);\r\n};\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\SingleExpense.js",["2900","2901","2902"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ToolbarHeader = ({ title }) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SingleExpense = ({ title }) => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Link to=\"/expenses\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link>\r\n                <div>\r\n                  {/* <ToolbarHeader title={title} /> */}\r\n\r\n                  <ExpenseForm />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nexport default SingleExpense;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseTable.js",["2903","2904","2905","2906","2907","2908","2909"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\n\r\nconst columns = [\r\n  { title: \"Name\", field: \"name\", editable: \"never\" },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Description\",\r\n    field: \"description\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\", editable: \"never\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function ExpenseTable() {\r\n  const classes = useStyles();\r\n  const [isLoad, setIsLoad] = useState(false);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [expensesdata, setExpensesdata] = useState([]);\r\n  const { loadEmployees } = useEmployeesContext();\r\n  const {\r\n    expenses,\r\n    editExpenseID,\r\n    updateExpense,\r\n    expenses_loading,\r\n    deleteExpense,\r\n    loadExpenses,\r\n    getSingleExpense,\r\n    setEditExpenseID,\r\n    setIsExpenseEditingOn,\r\n    setIsExpenseEditingOff,\r\n    resetSingleExpense,\r\n  } = useExpensesContext();\r\n\r\n  useEffect(() => {\r\n    setExpensesdata(expenses);\r\n    console.log(expensesdata)\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   loadEmployees();\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (expenses) {\r\n  //     setExpensesdata(expenses);\r\n  //     console.log(\"expenses\", expenses, expensesdata)\r\n  //   } else {\r\n  //     setIsLoad(!isLoad);\r\n  //   }\r\n  // }, [isLoad]);\r\n\r\n  const add_Expense = async (data) => {\r\n    // const { id } = data;\r\n    resetSingleExpense();\r\n    setEditExpenseID(\"\");\r\n    setIsExpenseEditingOff();\r\n    handleDialogOpen();\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const approve_Expense = async (data) => {\r\n    console.log(\"approve\", data);\r\n    const { id, rec_id, ...fields } = data;\r\n    updateExpense({ id, ...fields });\r\n    // loadExpenses();\r\n  };\r\n\r\n  const update_Expense = async (data) => {\r\n    const { id } = data;\r\n    setEditExpenseID(id);\r\n    setIsExpenseEditingOn();\r\n    getSingleExpense(id);\r\n    handleDialogOpen();\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const delete_Expense = (data) => {\r\n    const { id } = data;\r\n    setEditExpenseID(id);\r\n    handleAlertOpen();\r\n\r\n    // deleteExpense(id);\r\n    // loadExpenses();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    loadExpenses();\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editExpenseID;\r\n    deleteExpense(id);\r\n    loadExpenses();\r\n  };\r\n\r\n  // if (expenses_loading) {\r\n  //   return (\r\n  //     <div>\r\n  //       <h2>Loading...Expenses</h2>\r\n  //     </div>\r\n  //   );\r\n  // }\r\nif (!expensesdata) {\r\n  return (\r\n    <div>\r\n      <h2>Loading...Expenses</h2>\r\n    </div>\r\n  );\r\n}\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={expensesdata}\r\n          title=\"Expenses Claims Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          editable={{\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...expensesdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setExpensesdata([...dataUpdate]);\r\n                  //approve_Expense(newData);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Expense(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Expense(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Expense(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n          isFullwidth={false}\r\n        >\r\n          <ExpenseForm handleDialogClose={handleDialogClose} />\r\n        </CustomDialog>\r\n\r\n        <AlertDialogBox\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\reducers\\expenses_reducer.js",["2910"],"import {\r\n  SET_EDITEXPENSEID,\r\n  SET_ISEXPENSEEDITING_ON,\r\n  SET_ISEXPENSEEDITING_OFF,\r\n  SET_SINGLEEXPENSE,\r\n  GET_EXPENSES_BEGIN,\r\n  GET_EXPENSES_SUCCESS,\r\n  GET_EXPENSES_ERROR,\r\n  GET_UNPAIDEXPENSES_BEGIN,\r\n  GET_UNPAIDEXPENSES_SUCCESS,\r\n  GET_UNPAIDEXPENSES_ERROR,\r\n  GET_PERIODEXPENSES_BEGIN,\r\n  GET_PERIODEXPENSES_SUCCESS,\r\n  GET_PERIODEXPENSES_ERROR,\r\n  GET_SINGLE_EXPENSE_BEGIN,\r\n  GET_SINGLE_EXPENSE_SUCCESS,\r\n  GET_SINGLE_EXPENSE_ERROR,\r\n  ADD_EXPENSE_BEGIN,\r\n  ADD_EXPENSE_SUCCESS,\r\n  ADD_EXPENSE_ERROR,\r\n  DELETE_EXPENSE_BEGIN,\r\n  DELETE_EXPENSE_SUCCESS,\r\n  DELETE_EXPENSE_ERROR,\r\n  UPDATE_EXPENSE_BEGIN,\r\n  UPDATE_EXPENSE_SUCCESS,\r\n  UPDATE_EXPENSE_ERROR,\r\n  RESET_SINGLE_EXPENSE,\r\n} from \"../actions\";\r\n\r\nconst expenses_reducer = (state, action) => {\r\n  // set leaves variables\r\n  if (action.type === SET_EDITEXPENSEID) {\r\n    return { ...state, editExpenseID: action.payload };\r\n  }\r\n\r\n  if (action.type === SET_ISEXPENSEEDITING_ON) {\r\n    return { ...state, isExpenseEditing: true };\r\n  }\r\n  if (action.type === SET_ISEXPENSEEDITING_OFF) {\r\n    return { ...state, isExpenseEditing: false };\r\n  }\r\n  if (action.type === RESET_SINGLE_EXPENSE) {\r\n    return { ...state, single_expense: {} };\r\n  }\r\n  // get employees\r\n  if (action.type === GET_EXPENSES_BEGIN) {\r\n    return { ...state, expenses_loading: true };\r\n  }\r\n  if (action.type === GET_EXPENSES_SUCCESS) {\r\n    return { ...state, expenses_loading: false, expenses: action.payload };\r\n  }\r\n  if (action.type === GET_EXPENSES_ERROR) {\r\n    return { ...state, expenses_loading: false, expenses_error: true };\r\n  }\r\n\r\n  // get unpaid expenses\r\n  if (action.type === GET_UNPAIDEXPENSES_BEGIN) {\r\n    return { ...state, unpaid_expenses_loading: true };\r\n  }\r\n  if (action.type === GET_UNPAIDEXPENSES_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      unpaid_expenses_loading: false,\r\n      unpaidexpenses: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_UNPAIDEXPENSES_ERROR) {\r\n    return {\r\n      ...state,\r\n      unpaid_expenses_loading: false,\r\n      unpaid_expenses_error: true,\r\n    };\r\n  }\r\n\r\n  // get period expenses\r\n  if (action.type === GET_PERIODEXPENSES_BEGIN) {\r\n    return { ...state, period_expenses_loading: true };\r\n  }\r\n  if (action.type === GET_PERIODEXPENSES_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      period_expenses_loading: false,\r\n      periodexpenses: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_PERIODEXPENSES_ERROR) {\r\n    return {\r\n      ...state,\r\n      period_expenses_loading: false,\r\n      period_expenses_error: true,\r\n    };\r\n  }\r\n\r\n  // add employee\r\n  if (action.type === ADD_EXPENSE_BEGIN) {\r\n    return { ...state, add_expense_loading: true };\r\n  }\r\n  if (action.type === ADD_EXPENSE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_expenses_loading: false,\r\n      expenses: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_EXPENSE_ERROR) {\r\n    return { ...state, expenses_loading: false, add_expense_error: true };\r\n  }\r\n  // update employee\r\n  if (action.type === UPDATE_EXPENSE_BEGIN) {\r\n    return { ...state, update_expense_loading: true };\r\n  }\r\n  if (action.type === UPDATE_EXPENSE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      expenses_loading: false,\r\n      single_expense: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_EXPENSE_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_expense_loading: false,\r\n      update_expense_error: true,\r\n    };\r\n  }\r\n\r\n  // delete employee\r\n  if (action.type === DELETE_EXPENSE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_expense_loading: true,\r\n      delete_expense_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_EXPENSE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_expense_loading: false,\r\n      delete_expense_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_EXPENSE_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_expense_loading: false,\r\n      delete_expense_error: true,\r\n    };\r\n  }\r\n\r\n  //single employee\r\n  if (action.type === GET_SINGLE_EXPENSE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_expense_loading: true,\r\n      single_expense_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_EXPENSE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_expense_loading: false,\r\n      single_expense: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_EXPENSE_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_expense_loading: false,\r\n      single_expense_error: true,\r\n    };\r\n  }\r\n\r\n  // return state;\r\n  throw new Error(`No Matching \"${action.type}\" - action type`);\r\n};\r\n\r\nexport default expenses_reducer;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseForm.js",["2911","2912","2913","2914","2915","2916","2917","2918","2919"],"import React from \"react\";\r\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useExpenses } from \"./expenses/useExpenses\";\r\nimport { useAddExpenses } from \"./expenses/useAddExpenses\";\r\nimport { useDeleteExpenses } from \"./expenses/useDeleteExpenses\";\r\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\r\n\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  date: \"\",\r\n  purchased_date: \"\",\r\n  purchased_from: \"\",\r\n  description: \"\",\r\n  remark: \"\",\r\n  status: \"Pending\",\r\n  amount: 0,\r\n};\r\n\r\nconst ExpenseForm = ({ formdata, setFormdata, handleDialogClose }) => {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const { expenses, filter, setFilter, setExpenseId } = useExpenses();\r\n  const updateExpenses = useUpdateExpenses();\r\n  const addExpenses = useAddExpenses();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { isExpenseEditing, editExpenseID } = useExpensesContext();\r\n\r\n  const { handleSubmit, control } = useForm();\r\n\r\n  const handleSentEmail = (data) => {\r\n    const { date } = data;\r\n    //console.log(\"expense form\", loginLevel);\r\n    var emaildata = {\r\n      to_name: loginLevel.loginUser,\r\n      to_email: loginLevel.loginEmail,\r\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\r\n      cc_to: loginLevel.reporting_email,\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const onSubmit = (data, e) => {\r\n    e.preventDefault();\r\n    if (isExpenseEditing) {\r\n      updateExpenses({ id: editExpenseID, ...data });\r\n    } else {\r\n      addExpenses({ empid: loginLevel.loginUserId, ...data });\r\n      handleSentEmail(data);\r\n    }\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          EXPENSES CLAIM FORM\r\n        </Typography>\r\n        <Typography component=\"p\">Expense Claim Application</Typography>\r\n\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Controller\r\n              name=\"name\"\r\n              control={control}\r\n              defaultValue={loginLevel.loginUser}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    id=\"margin-normal1\"\r\n                    name=\"name\"\r\n                    defaultValue={loginLevel.loginUser}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"date\"\r\n              control={control}\r\n              defaultValue={formdata.date}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Date\"\r\n                    type=\"date\"\r\n                    id=\"margin-normal2\"\r\n                    name=\"formdata.date\"\r\n                    value={value}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"From Date is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Controller\r\n              name=\"purchased_from\"\r\n              control={control}\r\n              defaultValue={formdata.purchased_from}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Purchased From\"\r\n                    id=\"margin-normal3\"\r\n                    name=\"purchased_from\"\r\n                    defaultValue={formdata.purchased_from}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"description\"\r\n              control={control}\r\n              defaultValue={formdata.description}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Description\"\r\n                    id=\"margin-normal4\"\r\n                    name=\"description\"\r\n                    defaultValue={formdata.description}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"amount\"\r\n              control={control}\r\n              defaultValue={formdata.amount}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Amount\"\r\n                    type=\"number\"\r\n                    id=\"standard-number1\"\r\n                    name=\"amount\"\r\n                    defaultValue={formdata.amount}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"remark\"\r\n              control={control}\r\n              defaultValue={formdata.remark}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Remark\"\r\n                    id=\"margin-normal5\"\r\n                    name=\"remark\"\r\n                    defaultValue={formdata.remark}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"status\"\r\n              control={control}\r\n              defaultValue=\"Pending\"\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Status\"\r\n                    id=\"margin-normal6\"\r\n                    name=\"status\"\r\n                    defaultValue=\"Pending\"\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              //onClick={() => handleSubmit(onSubmit)()}\r\n            >\r\n              Save <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default ExpenseForm;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\SingleDailyAllowance.js",["2920","2921","2922"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DailyAllowanceForm from \"./DaiylAllowanceForm\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ToolbarHeader = ({ title }) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SingleDailyAllowance = ({ title }) => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Link to=\"/batchdailyallowances\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link>\r\n                <div>\r\n                  {/* <ToolbarHeader title={title} /> */}\r\n\r\n                  <DailyAllowanceForm />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nexport default SingleDailyAllowance;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesTable.js",["2923","2924","2925","2926","2927","2928","2929"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  useSetRecoilState,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  useRecoilValueLoadable,\r\n} from \"recoil\";\r\nimport {\r\n  allowsPeriodState,\r\n  allowsDataState,\r\n  empidState,\r\n} from \"./data/atomdata\";\r\nimport { fetchDailyAllowancesSelector } from \"./data/selectordata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\nimport DailyAllowsDetlsTable from \"./DailyAllowsDetlsTable\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  { title: \"Period\", field: \"period\" },\r\n  { title: \"Location\", field: \"location\" },\r\n  { title: \"Manager Name\", field: \"manager_name\" },\r\n  { title: \"No Of Days\", field: \"no_of_days\", type: \"numeric\" },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function DailyAllowancesTable() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [tmpallowsdata, setTmpallowsdata] = useState([]);\r\n  const allows_period = useRecoilValue(allowsPeriodState);\r\n  const allows_empid = useRecoilValue(empidState);\r\n  const [allowsdata, setAllowsdata] = useRecoilState(allowsDataState);\r\n  const setEmpID = useSetRecoilState(empidState);\r\n  const title = `Site Allowances (${allows_period})`;\r\n  const {\r\n    singlebatch_dailyallowance,\r\n    singlebatch_dailyallowance_loading,\r\n    deleteDailyAllowance,\r\n    setEditDailyAllowanceID,\r\n    setIsDailyAllowanceEditingOn,\r\n    setIsDailyAllowanceEditingOff,\r\n    resetSingleDailyAllowance,\r\n    dailyallowance_period,\r\n    getSingleBatchDailyAllowance,\r\n  } = useDailyAllowancesContext();\r\n\r\n  useEffect(() => {\r\n    getSingleBatchDailyAllowance(allows_period);\r\n  }, []);\r\n\r\n  const update_DailyAllowance = async (data) => {\r\n    const { empid, period } = data;\r\n    console.log(\"id\", empid, period);\r\n    setEmpID(empid);\r\n    setEditDailyAllowanceID(empid);\r\n    setIsDailyAllowanceEditingOn();\r\n    //getSingleBatchDailyAllowsDetl(empid, period);\r\n    // getSingleBatchDailyAllowsDetl(empid, period);\r\n    //handleDialogOpen();\r\n\r\n    history.push(\"/singledailyallowsdetlstable\");\r\n  };\r\n\r\n  const add_DailyAllowance = async (data) => {\r\n    // const { id } = data;\r\n    resetSingleDailyAllowance();\r\n    setEditDailyAllowanceID(\"\");\r\n    setIsDailyAllowanceEditingOff();\r\n    handleDialogOpen();\r\n    //history.push(\"/singledailyallowance\");\r\n  };\r\n\r\n  const delete_DailyAllowance = (data) => {\r\n    const { id } = data;\r\n    setEditDailyAllowanceID(id);\r\n    deleteDailyAllowance(id);\r\n    getSingleBatchDailyAllowance(allows_period);\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    //console.log(\"allowsdetls\", allowsdata, allowsdataRef, singlebatch_dailyallowsdetl);\r\n    //setAllowsdata({ singlebatch_dailyallowsdetl });\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    //getSingleBatchDailyAllowance(dailyallowance_period);\r\n  };\r\n\r\n  if (singlebatch_dailyallowance_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... daily allowances</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={singlebatch_dailyallowance}\r\n          title={title}\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_DailyAllowance(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_DailyAllowance(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_DailyAllowance(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <Link to=\"/dailyallowances\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <div className={classes.dialog}>\r\n          <CustomDialog\r\n            isOpen={isDialogOpen}\r\n            handleClose={handleDialogClose}\r\n            title=\"\"\r\n            showButton={true}\r\n            isFullscreen={true}\r\n            isFullwidth={true}\r\n          >\r\n            <DailyAllowsDetlsTable\r\n              setAllowsdata={setAllowsdata}\r\n              allowsdata={allowsdata}\r\n              handleDialogClose={handleDialogClose}\r\n            />\r\n          </CustomDialog>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  dialog: {\r\n    width: 1000,\r\n  },\r\n}));\r\n",["2930","2931"],"D:\\react-myprojects\\hrms-airtable\\src\\context\\dailyallowances_context.js",["2932","2933","2934","2935","2936","2937","2938","2939","2940","2941","2942","2943","2944","2945","2946","2947","2948","2949","2950","2951","2952"],"import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/dailyallowances_reducer\";\r\nimport {\r\n  dailyallowances_url,\r\n  dailyallowsdetls_url,\r\n  unpaiddailyallows_url,\r\n  pendingdailyallowsdetls_url,\r\n} from \"../utils/constants\";\r\n\r\nimport {\r\n  SET_EDITDAILYALLOWANCEID,\r\n  SET_ISDAILYALLOWANCEEDITING_ON,\r\n  SET_ISDAILYALLOWANCEEDITING_OFF,\r\n  SET_DAILYALLOWANCE_PERIOD,\r\n  SET_SINGLEDAILYALLOWANCE,\r\n  LOAD_DAILYALLOWANCES,\r\n  GET_DAILYALLOWANCES_BEGIN,\r\n  GET_DAILYALLOWANCES_SUCCESS,\r\n  GET_DAILYALLOWANCES_ERROR,\r\n  GET_UNPAIDDAILYALLOWS_BEGIN,\r\n  GET_UNPAIDDAILYALLOWS_SUCCESS,\r\n  GET_UNPAIDDAILYALLOWS_ERROR,\r\n  GET_SINGLE_DAILYALLOWANCE_BEGIN,\r\n  GET_SINGLE_DAILYALLOWANCE_SUCCESS,\r\n  GET_SINGLE_DAILYALLOWANCE_ERROR,\r\n  GET_SINGLEBATCH_DAILYALLOWANCE_BEGIN,\r\n  GET_SINGLEBATCH_DAILYALLOWANCE_SUCCESS,\r\n  GET_SINGLEBATCH_DAILYALLOWANCE_ERROR,\r\n  ADD_DAILYALLOWANCE_BEGIN,\r\n  ADD_DAILYALLOWANCE_SUCCESS,\r\n  ADD_DAILYALLOWANCE_ERROR,\r\n  DELETE_DAILYALLOWANCE_BEGIN,\r\n  DELETE_DAILYALLOWANCE_SUCCESS,\r\n  DELETE_DAILYALLOWANCE_ERROR,\r\n  UPDATE_DAILYALLOWANCE_BEGIN,\r\n  UPDATE_DAILYALLOWANCE_SUCCESS,\r\n  UPDATE_DAILYALLOWANCE_ERROR,\r\n  RESET_SINGLE_DAILYALLOWANCE,\r\n  LOAD_DAILYALLOWSDETLS,\r\n  SET_DAILYALLOWSDETL_PERIOD,\r\n  GET_DAILYALLOWSDETLS_BEGIN,\r\n  GET_DAILYALLOWSDETLS_SUCCESS,\r\n  GET_DAILYALLOWSDETLS_ERROR,\r\n  GET_SINGLE_DAILYALLOWSDETL_BEGIN,\r\n  GET_SINGLE_DAILYALLOWSDETL_SUCCESS,\r\n  GET_SINGLE_DAILYALLOWSDETL_ERROR,\r\n  GET_PENDING_DAILYALLOWSDETL_BEGIN,\r\n  GET_PENDING_DAILYALLOWSDETL_SUCCESS,\r\n  GET_PENDING_DAILYALLOWSDETL_ERROR,\r\n  GET_SINGLEBATCH_DAILYALLOWSDETL_BEGIN,\r\n  GET_SINGLEBATCH_DAILYALLOWSDETL_SUCCESS,\r\n  GET_SINGLEBATCH_DAILYALLOWSDETL_ERROR,\r\n  ADD_DAILYALLOWSDETL_BEGIN,\r\n  ADD_DAILYALLOWSDETL_SUCCESS,\r\n  ADD_DAILYALLOWSDETL_ERROR,\r\n  DELETE_DAILYALLOWSDETL_BEGIN,\r\n  DELETE_DAILYALLOWSDETL_SUCCESS,\r\n  DELETE_DAILYALLOWSDETL_ERROR,\r\n  UPDATE_DAILYALLOWSDETL_BEGIN,\r\n  UPDATE_DAILYALLOWSDETL_SUCCESS,\r\n  UPDATE_DAILYALLOWSDETL_ERROR,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  isDailyAllowanceEditing: false,\r\n  alertDailyAllowance: { show: false, msg: \"\", type: \"\" },\r\n  editDailyAllowanceID: null,\r\n  dailyallowances_loading: false,\r\n  dailyallowances_error: false,\r\n  dailyallowances: [],\r\n  single_dailyallowance_loading: false,\r\n  single_dailyallowance_error: false,\r\n  single_dailyallowance: {},\r\n  singlebatch_dailyallowance_loading: false,\r\n  singlebatch_dailyallowance_error: false,\r\n  singlebatch_dailyallowances: {},\r\n  delete_dailyallowance_loading: false,\r\n  delete_dailyallowance_error: false,\r\n  update_dailyallowance_loading: false,\r\n  update_dailyallowance_error: false,\r\n  add_dailyallowance_loading: false,\r\n  add_dailyallowance_error: false,\r\n  dailyallowance_period: \"\",\r\n  isDailyAllowsDetlEditing: false,\r\n  alertDailyAllowsDetl: { show: false, msg: \"\", type: \"\" },\r\n  editDailyAllowsDetlID: null,\r\n  dailyallowsdetls_loading: false,\r\n  dailyallowsdetls_error: false,\r\n  dailyallowsdetls: [],\r\n  single_dailyallowsdetl_loading: false,\r\n  single_dailyallowsdetl_error: false,\r\n  single_dailyallowsdetl: {},\r\n  pending_dailyallowsdetl_loading: false,\r\n  pending_dailyallowsdetl_error: false,\r\n  pending_dailyallowsdetl: {},\r\n  singlebatch_dailyallowsdetl: {},\r\n  singlebatch_dailyallowsdetl_loading: false,\r\n  singlebatch_dailyallowsdetl_error: false,\r\n  delete_dailyallowsdetl_loading: false,\r\n  delete_dailyallowsdetl_error: false,\r\n  update_dailyallowsdetl_loading: false,\r\n  update_dailyallowsdetl_error: false,\r\n  add_dailyallowsdetl_loading: false,\r\n  add_dailyallowsdetl_error: false,\r\n  unpaid_dailyallows_loading: false,\r\n  unpaid_dailyallows_error: false,\r\n  unpaiddailyallows: [],\r\n  dailyallowsdetl_period: \"\",\r\n  // filterValue: \"Female\",\r\n  // filterfield: \"gender\",\r\n};\r\n\r\nconst DailyAllowancesContext = React.createContext();\r\n\r\nexport const DailyAllowancesProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  //daily allowances\r\n  const loadDailyAllowances = async () => {\r\n    dispatch({ type: GET_DAILYALLOWANCES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(dailyallowances_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const dailyallowances = await res.json();\r\n      dispatch({ type: GET_DAILYALLOWANCES_SUCCESS, payload: dailyallowances });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DAILYALLOWANCES_ERROR });\r\n    }\r\n  };\r\n\r\n  //unpaid daily allowances\r\n  const loadUnpaidDailyAllows = async () => {\r\n    dispatch({ type: GET_UNPAIDDAILYALLOWS_BEGIN });\r\n    try {\r\n      const res = await fetch(unpaiddailyallows_url);\r\n      const dailyallowances = await res.json();\r\n      dispatch({\r\n        type: GET_UNPAIDDAILYALLOWS_SUCCESS,\r\n        payload: dailyallowances,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_UNPAIDDAILYALLOWS_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadPendingDailyAllowances = async (fi) => {\r\n    dispatch({ type: GET_DAILYALLOWANCES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const { data } = await axios.get(`${dailyallowances_url}?fi=${fi}`);\r\n      const dailyallowances = data;\r\n      dispatch({ type: GET_DAILYALLOWANCES_SUCCESS, payload: dailyallowances });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DAILYALLOWANCES_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadEmpDailyAllowances = async (em) => {\r\n    dispatch({ type: GET_DAILYALLOWANCES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const { data } = await axios.get(`${dailyallowances_url}?em=${em}`);\r\n      const dailyallowances = data;\r\n      dispatch({ type: GET_DAILYALLOWANCES_SUCCESS, payload: dailyallowances });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DAILYALLOWANCES_ERROR });\r\n    }\r\n  };\r\n\r\n  const setIsDailyAllowanceEditingOn = () => {\r\n    dispatch({ type: SET_ISDAILYALLOWANCEEDITING_ON });\r\n  };\r\n\r\n  const setIsDailyAllowanceEditingOff = () => {\r\n    dispatch({ type: SET_ISDAILYALLOWANCEEDITING_OFF });\r\n  };\r\n\r\n  const resetSingleDailyAllowance = () => {\r\n    dispatch({ type: RESET_SINGLE_DAILYALLOWANCE });\r\n  };\r\n\r\n  const setDailyAllowancePeriod = async (name) => {\r\n    try {\r\n      dispatch({ type: SET_DAILYALLOWANCE_PERIOD, payload: name });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const setEditDailyAllowanceID = async (id) => {\r\n    try {\r\n      dispatch({ type: SET_EDITDAILYALLOWANCEID, payload: id });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSingleDailyAllowance = async (id) => {\r\n    dispatch({ type: GET_SINGLE_DAILYALLOWANCE_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${dailyallowances_url}?id=${id}`);\r\n      const singledailyallowance = data;\r\n      dispatch({\r\n        type: GET_SINGLE_DAILYALLOWANCE_SUCCESS,\r\n        payload: singledailyallowance,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_DAILYALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const getSingleBatchDailyAllowance = async (period) => {\r\n    dispatch({ type: GET_SINGLEBATCH_DAILYALLOWANCE_BEGIN });\r\n    try {\r\n      const res = await fetch(`${dailyallowances_url}?fv=${period}`);\r\n      const singlebatchdailyallowance = await res.json();\r\n\r\n      dispatch({\r\n        type: GET_SINGLEBATCH_DAILYALLOWANCE_SUCCESS,\r\n        payload: singlebatchdailyallowance,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLEBATCH_DAILYALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDailyAllowance = async (data) => {\r\n    const {\r\n      id,\r\n      name,\r\n      period,\r\n      location,\r\n      manager_name,\r\n      no_of_days,\r\n      amount,\r\n      status,\r\n    } = data;\r\n    //\r\n    dispatch({ type: ADD_DAILYALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(dailyallowances_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DAILYALLOWANCE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DAILYALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDailyAllowance = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DAILYALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(dailyallowances_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DAILYALLOWANCE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DAILYALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDailyAllowance = async (id) => {\r\n    dispatch({ type: DELETE_DAILYALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(dailyallowances_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DAILYALLOWANCE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DAILYALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadDailyAllowsDetls = async () => {\r\n    dispatch({ type: GET_DAILYALLOWSDETLS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(dailyallowsdetls_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const dailyallowsdetls = await res.json();\r\n      dispatch({\r\n        type: GET_DAILYALLOWSDETLS_SUCCESS,\r\n        payload: dailyallowsdetls,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DAILYALLOWSDETLS_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadEmpDailyAllowsDetls = async (empid, period) => {\r\n    dispatch({ type: GET_DAILYALLOWSDETLS_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(\r\n        `${dailyallowsdetls_url}?fv=${empid}&period=${period}`\r\n      );\r\n      const dailyallowsdetls = data;\r\n\r\n      dispatch({\r\n        type: GET_DAILYALLOWSDETLS_SUCCESS,\r\n        payload: dailyallowsdetls,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DAILYALLOWSDETLS_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadPendingDailyAllowsDetls = async (empid, period) => {\r\n    dispatch({ type: GET_PENDING_DAILYALLOWSDETL_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${pendingdailyallowsdetls_url}`);\r\n      const pending_dailyallowsdetls = data;\r\n\r\n      dispatch({\r\n        type: GET_PENDING_DAILYALLOWSDETL_SUCCESS,\r\n        payload: pending_dailyallowsdetls,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PENDING_DAILYALLOWSDETL_ERROR });\r\n    }\r\n  };\r\n\r\n  const setDailyAllowsDetlPeriod = async (name) => {\r\n    try {\r\n      dispatch({ type: SET_DAILYALLOWSDETL_PERIOD, payload: name });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSingleDailyAllowsDetl = async (id) => {\r\n    dispatch({ type: GET_SINGLE_DAILYALLOWSDETL_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${dailyallowsdetls_url}?id=${id}`);\r\n      const singledailyallowsdetl = data;\r\n      dispatch({\r\n        type: GET_SINGLE_DAILYALLOWSDETL_SUCCESS,\r\n        payload: singledailyallowsdetl,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_DAILYALLOWSDETL_ERROR });\r\n    }\r\n  };\r\n\r\n  const getSingleBatchDailyAllowsDetl = async (empid, period) => {\r\n    dispatch({ type: GET_SINGLEBATCH_DAILYALLOWSDETL_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(\r\n        `${dailyallowsdetls_url}?fv=${empid}&period=${period}`\r\n      );\r\n      const singlebatchdailyallowsdetl = data;\r\n      dispatch({\r\n        type: GET_SINGLEBATCH_DAILYALLOWSDETL_SUCCESS,\r\n        payload: singlebatchdailyallowsdetl,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLEBATCH_DAILYALLOWSDETL_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDailyAllowsDetl = async (data) => {\r\n    const {\r\n      id,\r\n      name,\r\n      period,\r\n      location,\r\n      manager_name,\r\n      no_of_days,\r\n      amount,\r\n      status,\r\n    } = data;\r\n    //\r\n    dispatch({ type: ADD_DAILYALLOWSDETL_BEGIN });\r\n    try {\r\n      await fetch(dailyallowsdetls_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DAILYALLOWSDETL_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DAILYALLOWSDETL_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDailyAllowsDetl = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DAILYALLOWSDETL_BEGIN });\r\n    try {\r\n      await fetch(dailyallowsdetls_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DAILYALLOWSDETL_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DAILYALLOWSDETL_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDailyAllowsDetl = async (id) => {\r\n    dispatch({ type: DELETE_DAILYALLOWSDETL_BEGIN });\r\n    try {\r\n      await fetch(dailyallowsdetls_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DAILYALLOWSDETL_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DAILYALLOWSDETL_ERROR });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DailyAllowancesContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadDailyAllowances,\r\n        loadPendingDailyAllowances,\r\n        loadEmpDailyAllowances,\r\n        loadUnpaidDailyAllows,\r\n        addDailyAllowance,\r\n        updateDailyAllowance,\r\n        deleteDailyAllowance,\r\n        getSingleDailyAllowance,\r\n        getSingleBatchDailyAllowance,\r\n        setEditDailyAllowanceID,\r\n        setIsDailyAllowanceEditingOn,\r\n        setIsDailyAllowanceEditingOff,\r\n        setDailyAllowancePeriod,\r\n        resetSingleDailyAllowance,\r\n\r\n        loadDailyAllowsDetls,\r\n        loadEmpDailyAllowsDetls,\r\n        loadPendingDailyAllowsDetls,\r\n        addDailyAllowsDetl,\r\n        updateDailyAllowsDetl,\r\n        deleteDailyAllowsDetl,\r\n        getSingleDailyAllowsDetl,\r\n        getSingleBatchDailyAllowsDetl,\r\n        setDailyAllowsDetlPeriod,\r\n        setDailyAllowsDetlPeriod,\r\n      }}\r\n    >\r\n      {children}\r\n    </DailyAllowancesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useDailyAllowancesContext = () => {\r\n  return useContext(DailyAllowancesContext);\r\n};\r\n","D:\\react-myprojects\\hrms-airtable\\src\\reducers\\dailyallowances_reducer.js",["2953","2954"],"import {\r\n  SET_EDITDAILYALLOWANCEID,\r\n  SET_ISDAILYALLOWANCEEDITING_ON,\r\n  SET_ISDAILYALLOWANCEEDITING_OFF,\r\n  SET_DAILYALLOWANCE_PERIOD,\r\n  SET_SINGLEDAILYALLOWANCE,\r\n  GET_DAILYALLOWANCES_BEGIN,\r\n  GET_DAILYALLOWANCES_SUCCESS,\r\n  GET_DAILYALLOWANCES_ERROR,\r\n  GET_UNPAIDDAILYALLOWS_BEGIN,\r\n  GET_UNPAIDDAILYALLOWS_SUCCESS,\r\n  GET_UNPAIDDAILYALLOWS_ERROR,\r\n  GET_SINGLE_DAILYALLOWANCE_BEGIN,\r\n  GET_SINGLE_DAILYALLOWANCE_SUCCESS,\r\n  GET_SINGLE_DAILYALLOWANCE_ERROR,\r\n  GET_SINGLEBATCH_DAILYALLOWANCE_BEGIN,\r\n  GET_SINGLEBATCH_DAILYALLOWANCE_SUCCESS,\r\n  GET_SINGLEBATCH_DAILYALLOWANCE_ERROR,\r\n  ADD_DAILYALLOWANCE_BEGIN,\r\n  ADD_DAILYALLOWANCE_SUCCESS,\r\n  ADD_DAILYALLOWANCE_ERROR,\r\n  DELETE_DAILYALLOWANCE_BEGIN,\r\n  DELETE_DAILYALLOWANCE_SUCCESS,\r\n  DELETE_DAILYALLOWANCE_ERROR,\r\n  UPDATE_DAILYALLOWANCE_BEGIN,\r\n  UPDATE_DAILYALLOWANCE_SUCCESS,\r\n  UPDATE_DAILYALLOWANCE_ERROR,\r\n  RESET_SINGLE_DAILYALLOWANCE,\r\n  // daily allowances details\r\n  LOAD_DAILYALLOWSDETLS,\r\n  SET_DAILYALLOWSDETL_PERIOD,\r\n  GET_DAILYALLOWSDETLS_BEGIN,\r\n  GET_DAILYALLOWSDETLS_SUCCESS,\r\n  GET_DAILYALLOWSDETLS_ERROR,\r\n  GET_SINGLE_DAILYALLOWSDETL_BEGIN,\r\n  GET_SINGLE_DAILYALLOWSDETL_SUCCESS,\r\n  GET_SINGLE_DAILYALLOWSDETL_ERROR,\r\n  GET_PENDING_DAILYALLOWSDETL_BEGIN,\r\n  GET_PENDING_DAILYALLOWSDETL_SUCCESS,\r\n  GET_PENDING_DAILYALLOWSDETL_ERROR,\r\n  GET_SINGLEBATCH_DAILYALLOWSDETL_BEGIN,\r\n  GET_SINGLEBATCH_DAILYALLOWSDETL_SUCCESS,\r\n  GET_SINGLEBATCH_DAILYALLOWSDETL_ERROR,\r\n  ADD_DAILYALLOWSDETL_BEGIN,\r\n  ADD_DAILYALLOWSDETL_SUCCESS,\r\n  ADD_DAILYALLOWSDETL_ERROR,\r\n  DELETE_DAILYALLOWSDETL_BEGIN,\r\n  DELETE_DAILYALLOWSDETL_SUCCESS,\r\n  DELETE_DAILYALLOWSDETL_ERROR,\r\n  UPDATE_DAILYALLOWSDETL_BEGIN,\r\n  UPDATE_DAILYALLOWSDETL_SUCCESS,\r\n  UPDATE_DAILYALLOWSDETL_ERROR,\r\n} from \"../actions\";\r\n\r\nconst dailyallowances_reducer = (state, action) => {\r\n  // set daily allowances variables\r\n  if (action.type === SET_DAILYALLOWANCE_PERIOD) {\r\n    return { ...state, dailyallowance_period: action.payload };\r\n  }\r\n  if (action.type === SET_EDITDAILYALLOWANCEID) {\r\n    return { ...state, editDailyAllowanceID: action.payload };\r\n  }\r\n\r\n  if (action.type === SET_ISDAILYALLOWANCEEDITING_ON) {\r\n    return { ...state, isDailyAllowanceEditing: true };\r\n  }\r\n  if (action.type === SET_ISDAILYALLOWANCEEDITING_OFF) {\r\n    return { ...state, isDailyAllowanceEditing: false };\r\n  }\r\n  if (action.type === RESET_SINGLE_DAILYALLOWANCE) {\r\n    return { ...state, single_dailyallowance: {} };\r\n  }\r\n  // get daily allowances\r\n  if (action.type === GET_DAILYALLOWANCES_BEGIN) {\r\n    return { ...state, dailyallowances_loading: true };\r\n  }\r\n  if (action.type === GET_DAILYALLOWANCES_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      dailyallowances_loading: false,\r\n      dailyallowances: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_DAILYALLOWANCES_ERROR) {\r\n    return {\r\n      ...state,\r\n      dailyallowances_loading: false,\r\n      dailyallowances_error: true,\r\n    };\r\n  }\r\n\r\n  // get unpaid daily allowances\r\n  if (action.type === GET_UNPAIDDAILYALLOWS_BEGIN) {\r\n    return { ...state, unpaid_dailyallows_loading: true };\r\n  }\r\n  if (action.type === GET_UNPAIDDAILYALLOWS_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      unpaid_dailyallows_loading: false,\r\n      unpaiddailyallows: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_UNPAIDDAILYALLOWS_ERROR) {\r\n    return {\r\n      ...state,\r\n      unpaid_dailyallows_loading: false,\r\n      unpaid_dailyallows_error: true,\r\n    };\r\n  }\r\n\r\n  // add daily allowance\r\n  if (action.type === ADD_DAILYALLOWANCE_BEGIN) {\r\n    return { ...state, add_dailyallowance_loading: true };\r\n  }\r\n  if (action.type === ADD_DAILYALLOWANCE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_dailyallowance_loading: false,\r\n      dailyallowances: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_DAILYALLOWANCE_ERROR) {\r\n    return {\r\n      ...state,\r\n      add_dailyallowance_loading: false,\r\n      add_dailyallowance_error: true,\r\n    };\r\n  }\r\n  // update daily allowances\r\n  if (action.type === UPDATE_DAILYALLOWANCE_BEGIN) {\r\n    return { ...state, update_dailyallowance_loading: true };\r\n  }\r\n  if (action.type === UPDATE_DAILYALLOWANCE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      update_dailyallowances_loading: false,\r\n      single_dailyallowance: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_DAILYALLOWANCE_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_dailyallowance_loading: false,\r\n      update_dailyallowance_error: true,\r\n    };\r\n  }\r\n\r\n  // delete daily allowances\r\n  if (action.type === DELETE_DAILYALLOWANCE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_dailyallowance_loading: true,\r\n      delete_dailyallowance_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_DAILYALLOWANCE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_dailyallowance_loading: false,\r\n      delete_dailyallowance_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_DAILYALLOWANCE_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_dailyallowance_loading: false,\r\n      delete_dailyallowance_error: true,\r\n    };\r\n  }\r\n\r\n  //single daily allowances\r\n  if (action.type === GET_SINGLE_DAILYALLOWANCE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_dailyallowance_loading: true,\r\n      single_dailyallowance_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_DAILYALLOWANCE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_dailyallowance_loading: false,\r\n      single_dailyallowance: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_DAILYALLOWANCE_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_dailyallowance_loading: false,\r\n      single_dailyallowance_error: true,\r\n    };\r\n  }\r\n\r\n  //single batch daily allowances\r\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWANCE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      singlebatch_dailyallowance_loading: true,\r\n      singlebatch_dailyallowance_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWANCE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      singlebatch_dailyallowance_loading: false,\r\n      singlebatch_dailyallowance: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWANCE_ERROR) {\r\n    return {\r\n      ...state,\r\n      singlebatch_dailyallowance_loading: false,\r\n      singlebatch_dailyallowance_error: true,\r\n    };\r\n  }\r\n\r\n  // daily allowances details\r\n  // set daily allowances details variables\r\n  if (action.type === SET_DAILYALLOWSDETL_PERIOD) {\r\n    return { ...state, dailyallowsdetl_period: action.payload };\r\n  }\r\n  // get daily allowances details\r\n  if (action.type === GET_DAILYALLOWSDETLS_BEGIN) {\r\n    return { ...state, dailyallowsdetls_loading: true };\r\n  }\r\n  if (action.type === GET_DAILYALLOWSDETLS_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      dailyallowsdetls_loading: false,\r\n      dailyallowsdetls: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_DAILYALLOWSDETLS_ERROR) {\r\n    return {\r\n      ...state,\r\n      dailyallowsdetls_loading: false,\r\n      dailyallowsdetls_error: true,\r\n    };\r\n  }\r\n\r\n  // add daily allowance details\r\n  if (action.type === ADD_DAILYALLOWSDETL_BEGIN) {\r\n    return { ...state, add_dailyallowsdetl_loading: true };\r\n  }\r\n  if (action.type === ADD_DAILYALLOWSDETL_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_dailyallowsdetl_loading: false,\r\n      dailyallowsdetls: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_DAILYALLOWSDETL_ERROR) {\r\n    return {\r\n      ...state,\r\n      add_dailyallowsdetl_loading: false,\r\n      add_dailyallowsdetl_error: true,\r\n    };\r\n  }\r\n  // update daily allowances\r\n  if (action.type === UPDATE_DAILYALLOWSDETL_BEGIN) {\r\n    return { ...state, update_dailyallowsdetl_loading: true };\r\n  }\r\n  if (action.type === UPDATE_DAILYALLOWSDETL_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      update_dailyallowsdetl_loading: false,\r\n      single_dailyallowsdetl: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_DAILYALLOWSDETL_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_dailyallowsdetl_loading: false,\r\n      update_dailyallowsdetl_error: true,\r\n    };\r\n  }\r\n\r\n  // delete daily allowances details\r\n  if (action.type === DELETE_DAILYALLOWSDETL_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_dailyallowsdetl_loading: true,\r\n      delete_dailyallowsdetl_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_DAILYALLOWSDETL_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_dailyallowsdetl_loading: false,\r\n      delete_dailyallowsdetl_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_DAILYALLOWSDETL_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_dailyallowsdetl_loading: false,\r\n      delete_dailyallowsdetl_error: true,\r\n    };\r\n  }\r\n\r\n  //single daily allowances details\r\n  if (action.type === GET_SINGLE_DAILYALLOWSDETL_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_dailyallowsdetl_loading: true,\r\n      single_dailyallowsdetl_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_DAILYALLOWSDETL_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_dailyallowsdetl_loading: false,\r\n      single_dailyallowsdetl: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_DAILYALLOWSDETL_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_dailyallowsdetl_loading: false,\r\n      single_dailyallowsdetl_error: true,\r\n    };\r\n  }\r\n\r\n  //pending daily allowances details\r\n  if (action.type === GET_PENDING_DAILYALLOWSDETL_BEGIN) {\r\n    return {\r\n      ...state,\r\n      pending_dailyallowsdetl_loading: true,\r\n      pending_dailyallowsdetl_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_PENDING_DAILYALLOWSDETL_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      pending_dailyallowsdetl_loading: false,\r\n      pending_dailyallowsdetl: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_PENDING_DAILYALLOWSDETL_ERROR) {\r\n    return {\r\n      ...state,\r\n      pending_dailyallowsdetl_loading: false,\r\n      pending_dailyallowsdetl_error: true,\r\n    };\r\n  }\r\n\r\n  //single daily batch allowances details\r\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWSDETL_BEGIN) {\r\n    return {\r\n      ...state,\r\n      singlebatch_dailyallowsdetl_loading: true,\r\n      singlebatch_dailyallowsdetl_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWSDETL_SUCCESS) {\r\n    console.log(\"reducer\", action.payload);\r\n    return {\r\n      ...state,\r\n      singlebatch_dailyallowsdetl_loading: false,\r\n      singlebatch_dailyallowsdetl: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWSDETL_ERROR) {\r\n    return {\r\n      ...state,\r\n      singlebatch_dailyallowsdetl_loading: false,\r\n      singlebatch_dailyallowsdetl_error: true,\r\n    };\r\n  }\r\n\r\n  // return state;\r\n  throw new Error(`No Matching \"${action.type}\" - action type`);\r\n};\r\n\r\nexport default dailyallowances_reducer;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\DaiylAllowanceForm.js",["2955"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  period: \"\",\r\n  location: \"\",\r\n  manager_name: \"\",\r\n  status: \"Pending\",\r\n  no_of_days: 0,\r\n  amount: 0,\r\n};\r\n\r\nconst DailyAllowanceForm = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const {\r\n    isDailyAllowanceEditing,\r\n    single_dailyallowance,\r\n    updateDailyAllowance,\r\n    addDailyAllowance,\r\n    editDailyAllowanceID,\r\n    loadDailyAllowances,\r\n    single_dailyallowance_loading,\r\n    dailyallowance_period,\r\n  } = useDailyAllowancesContext();\r\n  const { loadEmployees, employees } = useEmployeesContext();\r\n  const { name, period, location, manager_name, status, no_of_days, amount } =\r\n    single_dailyallowance || initial_values;\r\n  const { handleSubmit, control } = useForm();\r\n\r\n  useEffect(() => {\r\n    loadEmployees();\r\n  }, []);\r\n\r\n  const onSubmit = (data) => {\r\n    if (isDailyAllowanceEditing) {\r\n      updateDailyAllowance({ id: editDailyAllowanceID, ...data });\r\n    } else {\r\n      addDailyAllowance({ ...data });\r\n    }\r\n    loadDailyAllowances();\r\n    history.push(\"/batchdailyallowances\");\r\n  };\r\n\r\n  if (single_dailyallowance_loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          DAILY ALLOWANCES CLAIM FORM\r\n        </Typography>\r\n        <Typography component=\"p\">\r\n          Daily Allowances Claim Application\r\n        </Typography>\r\n\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Controller\r\n              name=\"name\"\r\n              control={control}\r\n              defaultValue={name}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    id=\"margin-normal\"\r\n                    name=\"name\"\r\n                    defaultValue={name}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    {employees.map((e) => {\r\n                      return (\r\n                        <MenuItem key={e.name} value={e.name}>\r\n                          {e.name}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              rules={{ required: \"Name required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"period\"\r\n              control={control}\r\n              defaultValue={\r\n                isDailyAllowanceEditing ? period : dailyallowance_period\r\n              }\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Period\"\r\n                    id=\"margin-normal\"\r\n                    name=\"period\"\r\n                    defaultValue={\r\n                      isDailyAllowanceEditing ? period : dailyallowance_period\r\n                    }\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"Period is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"location\"\r\n              control={control}\r\n              defaultValue={location}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Location\"\r\n                    id=\"margin-normal\"\r\n                    name=\"location\"\r\n                    defaultValue={location}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"Purchased Date is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"manager_name\"\r\n              control={control}\r\n              defaultValue={manager_name}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Manager Name\"\r\n                    id=\"margin-normal\"\r\n                    name=\"manager_name\"\r\n                    defaultValue={manager_name}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"no_of_days\"\r\n              control={control}\r\n              defaultValue={no_of_days}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"No Of Days\"\r\n                    type=\"number\"\r\n                    id=\"standard-number\"\r\n                    name=\"no_of_days\"\r\n                    defaultValue={no_of_days}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"amount\"\r\n              control={control}\r\n              defaultValue={amount}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Amount\"\r\n                    type=\"number\"\r\n                    id=\"standard-number\"\r\n                    name=\"amount\"\r\n                    defaultValue={amount}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"status\"\r\n              control={control}\r\n              defaultValue=\"Pending\"\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Status\"\r\n                    id=\"margin-normal\"\r\n                    name=\"status\"\r\n                    defaultValue={status}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"Pending\">Pending</MenuItem>\r\n                    <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n                    <MenuItem value=\"Approved\">Approved</MenuItem>\r\n                    <MenuItem value=\"Rejected\">Rejected</MenuItem>\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n            >\r\n              Submit <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default DailyAllowanceForm;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\BatchDailyAllowances.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\SinglePayslip.js",["2956","2957","2958"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport PayslipForm from \"./PayslipForm\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ToolbarHeader = ({ title }) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </div>\r\n  );\r\n};\r\nconst SinglePayslip = ({ title }) => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Link to=\"/batchpayslips\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link>\r\n                <div>\r\n                  {/* <ToolbarHeader title={title} /> */}\r\n\r\n                  <PayslipForm />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nexport default SinglePayslip;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipTable.js",["2959","2960","2961","2962","2963","2964","2965","2966","2967","2968","2969","2970","2971","2972","2973","2974","2975","2976","2977"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { payrunState, payrunIdState, payrunStatusState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { usePayrun } from \"./payrun/usePayrun\";\r\nimport { usePayslipsBatch } from \"./payslips/usePayslipsBatch\";\r\nimport { useDeletePayrun } from \"./payrun/useDeletePayrun\";\r\nimport { useExpensesPayrun } from \"./expenses/useExpensesPayrun\";\r\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\r\nimport { useDailyAllowsPayrun } from \"./dailyallows/useDailyAllowsPayrun\";\r\nimport { useUpdateDailyAllows } from \"./dailyallows/useUpdateDailyAllows\";\r\n\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  // { title: \"Period\", field: \"period\" },\r\n  {\r\n    title: \"Payrun Batch\",\r\n    field: \"payrun\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  // {\r\n  //   title: \"Pay Date\",\r\n  //   field: \"pay_date\",\r\n  //   type: \"date\",\r\n  //   dateSetting: { locale: \"en-GB\" },\r\n  // },\r\n  { title: \"Total Wages\", field: \"totalwages\", type: \"currency\" },\r\n  { title: \"TAP Amount\", field: \"totaltap\", type: \"currency\" },\r\n  { title: \"SCP Amount\", field: \"totalscp\", type: \"currency\" },\r\n  { title: \"Site Allowances\", field: \"totalsitesallows\", type: \"currency\" },\r\n  { title: \"Expenses Claims\", field: \"totalexpensesclaims\", type: \"currency\" },\r\n  { title: \"Total Allowances\", field: \"totalallows\", type: \"currency\" },\r\n  { title: \"Total Deductions\", field: \"totaldeducts\", type: \"currency\" },\r\n  { title: \"Total Payroll\", field: \"totalpayroll\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function PayslipTable() {\r\n  let history = useHistory();\r\n  const toast = useCustomToast();\r\n  const classes = useStyles();\r\n  const { payrun } = usePayrun();\r\n  const { payslipsbatch, psbpayrunId, setPSBPayrunId } = usePayslipsBatch();\r\n  const { expensespayrun, setExpPayrunId } = useExpensesPayrun();\r\n  const { dailyallowspayrun, setDailyAllowsPayrunId } = useDailyAllowsPayrun();\r\n  const updateExpenses = useUpdateExpenses();\r\n  const deletePayrun = useDeletePayrun();\r\n  const updateDailyAllows = useUpdateDailyAllows();\r\n  const [input, setInput] = useRecoilState(payrunState);\r\n  const [isLoadInput, setIsLoadInput] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [deletestate, setDeletestate] = useState({ id: \"\", payrun: \"\" });\r\n  const [payrunId, setPayrunId] = useRecoilState(payrunIdState);\r\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\r\n  const { loadPeriodExpenses, periodexpenses, updateExpense } =\r\n    useExpensesContext();\r\n  const {\r\n    getSingleBatchDailyAllowance,\r\n    singlebatchdailyallowance,\r\n    updateDailyAllowance,\r\n    deleteDailyAllowance,\r\n  } = useDailyAllowancesContext();\r\n  const {\r\n    //payrun,\r\n    getPayrun,\r\n    payrun_loading,\r\n    payrun_error,\r\n    getSinglePayslip,\r\n    setEditPayslipID,\r\n    setIsPayslipEditingOn,\r\n    single_payslip,\r\n    setPayslipPeriod,\r\n    //deletePayrun,\r\n    deletePayslip,\r\n    pending_payslips,\r\n    loadPendingPayslips,\r\n  } = usePayslipsContext();\r\n\r\n  // useEffect(() => {\r\n  //   if (single_payslip.payrun) {\r\n  //     console.log(\"single_payslip\", single_payslip);\r\n  //   }\r\n  // }, [single_payslip]);\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const update_Input = async (data) => {\r\n    console.log(\"input\", data);\r\n\r\n    setInput({\r\n      ...input,\r\n      id: data.id,\r\n      payfreq: data.payfreq,\r\n      fromdate: data.fromdate,\r\n      todate: data.todate,\r\n      paydate: data.paydate,\r\n      period: data.period,\r\n      payrun: data.payrun,\r\n      totalwages: data.totalwages,\r\n      totaltap: data.totaltap,\r\n      totalscp: data.totalscp,\r\n      totalallows: data.totalallows,\r\n      totaldeducts: data.totaldeducts,\r\n      totalpayroll: data.totalpayroll,\r\n      status: data.status,\r\n    });\r\n\r\n    setInput({\r\n      ...input,\r\n      id: data.id,\r\n      payfreq: data.payfreq,\r\n      fromdate: data.fromdate,\r\n      todate: data.todate,\r\n      paydate: data.paydate,\r\n      period: data.period,\r\n      payrun: data.payrun,\r\n      totalwages: data.totalwages,\r\n      totaltap: data.totaltap,\r\n      totalscp: data.totalscp,\r\n      totalallows: data.totalallows,\r\n      totaldeducts: data.totaldeducts,\r\n      totalpayroll: data.totalpayroll,\r\n      status: data.status,\r\n    });\r\n    console.log(\"payrun\", input);\r\n  };\r\n\r\n  const update_Payslip = async (data) => {\r\n    const { id, payrun } = data;\r\n    setPayrunId(id);\r\n    setPayrunStatus(data.status);\r\n    setPayslipPeriod(payrun); //save to recoil\r\n    setEditPayslipID(id);\r\n    setIsPayslipEditingOn();\r\n    getSinglePayslip(id);\r\n    history.push(\"/payrunbatch\");\r\n  };\r\n\r\n  const delete_Payslip = (data) => {\r\n    const { id, payrun } = data;\r\n    setDeletestate({ id: id, payrun: payrun });\r\n    setPSBPayrunId(payrun);\r\n    setExpPayrunId(payrun);\r\n    setDailyAllowsPayrunId(payrun);\r\n    //loadPeriodExpenses(payrun);\r\n    //getSingleBatchDailyAllowance(payrun);\r\n    handleAlertOpen();\r\n  };\r\n\r\n  const handleOnDeleteConfirm = (data) => {\r\n    console.log(\"payslip delete\", deletestate);\r\n    const { id, payrun } = deletestate;\r\n\r\n    //load period expenses\r\n    //loadPeriodExpenses(payrun);\r\n\r\n    //delete allows detls\r\n    payslipsbatch &&\r\n      payslipsbatch.forEach((rec) => {\r\n        if (rec.payrun === payrun) {\r\n          deletePayslip(rec.id);\r\n        }\r\n      });\r\n\r\n    //unpaid expenses\r\n    expensespayrun &&\r\n      expensespayrun.forEach((rec) => {\r\n        if (rec.payrun === payrun) {\r\n          updateExpenses({ id: rec.id, payrun: \"\" });\r\n        }\r\n      });\r\n\r\n    //delete dailyallows\r\n    dailyallowspayrun &&\r\n      dailyallowspayrun.forEach((rec) => {\r\n        if (rec.payrun === payrun) {\r\n          updateDailyAllows({ id: rec.id, payrun: \"\" });\r\n        }\r\n      });\r\n\r\n    //delete payrun\r\n    deletePayrun(id);\r\n    toast({\r\n      title: `Payroll Batch being deleted!`,\r\n      status: \"warning\",\r\n    });\r\n    //getPayrun();\r\n  };\r\n\r\n  if (payrun_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading.....Payslips</h2>\r\n      </div>\r\n    );\r\n  }\r\n  if (payrun_error) {\r\n    return (\r\n      <div>\r\n        <h2>Internet connection problem!</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payrun}\r\n          title=\"Payroll\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n            Build: (props) => <BuildOutlinedIcon />,\r\n          }}\r\n          actions={[\r\n            (rowData) => ({\r\n              //disabled: rowData.status !== \"Pending\",\r\n              icon: \"edit\",\r\n              position: \"row\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Input(rowData);\r\n                update_Payslip(rowData);\r\n              },\r\n            }),\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              position: \"row\",\r\n              onClick: (event, rowData) => {\r\n                //delete_Payslip(rowData);\r\n                delete_Payslip(rowData);\r\n              },\r\n            }),\r\n\r\n            // {\r\n            //   icon: \"add\",\r\n            //   tooltip: \"Add Record\",\r\n            //   isFreeAction: true,\r\n            //   onClick: (event, rowData) => {\r\n            //     add_Payslip(rowData);\r\n            //   },\r\n            // },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"black\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                {/* <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={(e) => handleVerifyPayslipData(e)}\r\n                  >\r\n                    Verify <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div> */}\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <AlertDialogBox\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Payslip Batch\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesPeriods.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\BatchPayslips.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipsPeriods.js",["2978","2979","2980","2981","2982","2983"],"import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { payrunIdState,payPeriodState, payPeriodEndMonthState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { periods } from \"../utils/constants\";\r\nimport BatchPayslips from \"./BatchPayslips\";\r\n\r\nconst PayslipsPeriods = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const setPayPeriod = useSetRecoilState(payPeriodState);\r\n  const setPayPeriodEndMonth = useSetRecoilState(payPeriodEndMonthState);\r\n  const { setPayslipPeriod, setPayslipEndMonthDate } = usePayslipsContext();\r\n  const { loadEmployees, employees } = useEmployeesContext();\r\n  const { loadAllowances, allowances, loadDeductions, deductions } =\r\n    useTablesContext();\r\n\r\n  const handlePeriod = (name, monthenddate) => {\r\n    setPayPeriod(name);\r\n     setPayPeriodEndMonth(monthenddate);\r\n    setPayslipPeriod(name);\r\n    setPayslipEndMonthDate(monthenddate);\r\n    history.push(\"/batchpayslips\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllowances();\r\n    loadDeductions();\r\n    loadEmployees()\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          <h2>Payroll Period</h2>\r\n        </Typography>\r\n      </Toolbar>\r\n      <Grid container spacing={3}>\r\n        {periods.map((e) => {\r\n          const { name, monthenddate } = e;\r\n          return (\r\n            <Grid item xs={3} inline>\r\n              <Paper className={classes.paper}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  onClick={() => handlePeriod(name, monthenddate)}\r\n                >\r\n                  {name}\r\n                </Button>\r\n              </Paper>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\nexport default PayslipsPeriods;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\context\\payslips_context.js",["2984","2985","2986","2987","2988","2989","2990","2991","2992","2993","2994","2995","2996","2997","2998","2999","3000","3001","3002","3003","3004","3005","3006","3007","3008"],"import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/payslips_reducer\";\r\nimport { payslips_url } from \"../utils/constants\";\r\nimport { payslipitems_url } from \"../utils/constants\";\r\nimport { payrun_url } from \"../utils/constants\";\r\nimport { payslipearnings_url } from \"../utils/constants\";\r\nimport { payslipdeductions_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  SET_EDITPAYSLIPID,\r\n  SET_PAYSLIPS_DATA,\r\n  RESET_PAYSLIPS_DATA,\r\n  UPDATE_PAYSLIPS_DATA,\r\n  SET_ISPAYSLIPEDITING_ON,\r\n  SET_ISPAYSLIPEDITING_OFF,\r\n  SET_PAYSLIP_PERIOD,\r\n  SET_PAYSLIP_ENDMONTHDATE,\r\n  SET_SINGLEPAYSLIP,\r\n  SET_PAYSLIPEARNING_AMOUNT,\r\n  SET_PAYSLIPDEDUCTION_AMOUNT,\r\n  GET_PAYSLIPS_BEGIN,\r\n  GET_PAYSLIPS_SUCCESS,\r\n  GET_PAYSLIPS_ERROR,\r\n  GET_PAYSLIPITEMS_BEGIN,\r\n  GET_PAYSLIPITEMS_SUCCESS,\r\n  GET_PAYSLIPITEMS_ERROR,\r\n  ADD_PAYSLIPITEM_BEGIN,\r\n  ADD_PAYSLIPITEM_SUCCESS,\r\n  ADD_PAYSLIPITEM_ERROR,\r\n  DELETE_PAYSLIPITEM_BEGIN,\r\n  DELETE_PAYSLIPITEM_SUCCESS,\r\n  DELETE_PAYSLIPITEM_ERROR,\r\n  UPDATE_PAYSLIPITEM_BEGIN,\r\n  UPDATE_PAYSLIPITEM_SUCCESS,\r\n  UPDATE_PAYSLIPITEM_ERROR,\r\n  GET_PAYRUN_BEGIN,\r\n  GET_PAYRUN_SUCCESS,\r\n  GET_PAYRUN_ERROR,\r\n  GET_BATCHPAYRUN_BEGIN,\r\n  GET_BATCHPAYRUN_SUCCESS,\r\n  GET_BATCHPAYRUN_ERROR,\r\n  ADD_PAYRUN_BEGIN,\r\n  ADD_PAYRUN_SUCCESS,\r\n  ADD_PAYRUN_ERROR,\r\n  UPDATE_PAYRUN_BEGIN,\r\n  UPDATE_PAYRUN_SUCCESS,\r\n  UPDATE_PAYRUN_ERROR,\r\n  DELETE_PAYRUN_BEGIN,\r\n  DELETE_PAYRUN_SUCCESS,\r\n  DELETE_PAYRUN_ERROR,\r\n  GET_SINGLE_PAYSLIP_BEGIN,\r\n  GET_SINGLE_PAYSLIP_SUCCESS,\r\n  GET_SINGLE_PAYSLIP_ERROR,\r\n  GET_PENDING_PAYSLIP_BEGIN,\r\n  GET_PENDING_PAYSLIP_SUCCESS,\r\n  GET_PENDING_PAYSLIP_ERROR,\r\n  GET_SINGLEBATCH_PAYSLIP_BEGIN,\r\n  GET_SINGLEBATCH_PAYSLIP_SUCCESS,\r\n  GET_SINGLEBATCH_PAYSLIP_ERROR,\r\n  ADD_PAYSLIP_BEGIN,\r\n  ADD_PAYSLIP_SUCCESS,\r\n  ADD_PAYSLIP_ERROR,\r\n  DELETE_PAYSLIP_BEGIN,\r\n  DELETE_PAYSLIP_SUCCESS,\r\n  DELETE_PAYSLIP_ERROR,\r\n  UPDATE_PAYSLIP_BEGIN,\r\n  UPDATE_PAYSLIP_SUCCESS,\r\n  UPDATE_PAYSLIP_ERROR,\r\n  RESET_SINGLE_PAYSLIP,\r\n  GET_PAYSLIPEARNINGS_BEGIN,\r\n  GET_PAYSLIPEARNINGS_SUCCESS,\r\n  GET_PAYSLIPEARNINGS_ERROR,\r\n  GET_SINGLE_PAYSLIPEARNING_BEGIN,\r\n  GET_SINGLE_PAYSLIPEARNING_SUCCESS,\r\n  GET_SINGLE_PAYSLIPEARNING_ERROR,\r\n  ADD_PAYSLIPEARNING_BEGIN,\r\n  ADD_PAYSLIPEARNING_SUCCESS,\r\n  ADD_PAYSLIPEARNING_ERROR,\r\n  DELETE_PAYSLIPEARNING_BEGIN,\r\n  DELETE_PAYSLIPEARNING_SUCCESS,\r\n  DELETE_PAYSLIPEARNING_ERROR,\r\n  UPDATE_PAYSLIPEARNING_BEGIN,\r\n  UPDATE_PAYSLIPEARNING_SUCCESS,\r\n  UPDATE_PAYSLIPEARNING_ERROR,\r\n  GET_PAYSLIPDEDUCTIONS_BEGIN,\r\n  GET_PAYSLIPDEDUCTIONS_SUCCESS,\r\n  GET_PAYSLIPDEDUCTIONS_ERROR,\r\n  GET_SINGLE_PAYSLIPDEDUCTION_BEGIN,\r\n  GET_SINGLE_PAYSLIPDEDUCTION_SUCCESS,\r\n  GET_SINGLE_PAYSLIPDEDUCTION_ERROR,\r\n  ADD_PAYSLIPDEDUCTION_BEGIN,\r\n  ADD_PAYSLIPDEDUCTION_SUCCESS,\r\n  ADD_PAYSLIPDEDUCTION_ERROR,\r\n  DELETE_PAYSLIPDEDUCTION_BEGIN,\r\n  DELETE_PAYSLIPDEDUCTION_SUCCESS,\r\n  DELETE_PAYSLIPDEDUCTION_ERROR,\r\n  UPDATE_PAYSLIPDEDUCTION_BEGIN,\r\n  UPDATE_PAYSLIPDEDUCTION_SUCCESS,\r\n  UPDATE_PAYSLIPDEDUCTION_ERROR,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  isPayslipEditing: false,\r\n  alertPayslip: { show: false, msg: \"\", type: \"\" },\r\n  editPayslipID: null,\r\n  payslips_loading: false,\r\n  payslips_error: false,\r\n  payslip_period: \"\",\r\n  payslip_endmonthdate: \"\",\r\n  payslip_earning_amount: 0,\r\n  payslip_deduction_amount: 0,\r\n  payslips: [],\r\n  payslipsdata: [],\r\n  single_payslip_loading: false,\r\n  single_payslip_error: false,\r\n  single_payslip: {},\r\n  singlebatch_payslip_loading: false,\r\n  singlebatch_payslip_error: false,\r\n  singlebatch_payslip: {},\r\n  delete_payslip_loading: false,\r\n  delete_payslip_error: false,\r\n  update_payslip_loading: false,\r\n  update_payslip_error: false,\r\n  add_payslip_loading: false,\r\n  add_payslip_error: false,\r\n  // filterValue: \"Female\",\r\n  // filterfield: \"gender\",\r\n  // payslip earnings\r\n  isPayslipEarningEditing: false,\r\n  alertPayslipEarning: { show: false, msg: \"\", type: \"\" },\r\n  editPayslipEarningID: null,\r\n  payslipearnings_loading: false,\r\n  payslipearnings_error: false,\r\n  payslipearnings: [],\r\n  pending_payslips_loading: false,\r\n  pending_payslips_error: false,\r\n  pending_payslips: [],\r\n  single_payslipearning_loading: false,\r\n  single_payslipearning_error: false,\r\n  single_payslipearning: {},\r\n  delete_payslipearning_loading: false,\r\n  delete_payslipearning_error: false,\r\n  update_payslipearning_loading: false,\r\n  update_payslipearning_error: false,\r\n  add_payslipearning_loading: false,\r\n  add_payslipearning_error: false,\r\n  // payslip deductions\r\n  isPayslipDeductionEditing: false,\r\n  alertPayslipDeduction: { show: false, msg: \"\", type: \"\" },\r\n  editPayslipDeductionID: null,\r\n  payslipdeductions_loading: false,\r\n  payslipdeductions_error: false,\r\n  payslipdeductions: [],\r\n  single_payslipdeduction_loading: false,\r\n  single_payslipdeduction_error: false,\r\n  single_payslipdeduction: {},\r\n  delete_payslipdeduction_loading: false,\r\n  delete_payslipdeduction_error: false,\r\n  update_payslipdeduction_loading: false,\r\n  update_payslipdeduction_error: false,\r\n  add_payslipdeduction_loading: false,\r\n  add_payslipdeduction_error: false,\r\n  payslipitems_loading: false,\r\n  payslipitems_error: false,\r\n  payslipitems: [],\r\n  delete_payslipitem_loading: false,\r\n  delete_payslipitem_error: false,\r\n  update_payslipitem_loading: false,\r\n  update_payslipitem_error: false,\r\n  add_payslipitem_loading: false,\r\n  add_payslipitem_error: false,\r\n  single_payslipitem: {},\r\n\r\n  payrun_loading: false,\r\n  payrun_error: false,\r\n  payrun: [],\r\n  batchpayrun_loading: false,\r\n  batchpayrun_error: false,\r\n  batchpayrun: [],\r\n  delete_payrun_loading: false,\r\n  delete_payrun_error: false,\r\n  update_payrun_loading: false,\r\n  update_payrun_error: false,\r\n  add_payrun_loading: false,\r\n  add_payrun_error: false,\r\n  single_payrun: {},\r\n};\r\n\r\nconst PayslipsContext = React.createContext();\r\n\r\nexport const PayslipsProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  //....... payslip\r\n  const loadPayslips = async () => {\r\n    dispatch({ type: GET_PAYSLIPS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(payslips_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payslips = await res.json();\r\n      dispatch({ type: GET_PAYSLIPS_SUCCESS, payload: payslips });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYSLIPS_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadPendingPayslips = async (fi) => {\r\n    dispatch({ type: GET_PENDING_PAYSLIP_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(`${payslips_url}?fi=${fi}`);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const pending_payslips = await res.json();\r\n      dispatch({\r\n        type: GET_PENDING_PAYSLIP_SUCCESS,\r\n        payload: pending_payslips,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PENDING_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadEmpPayslips = async (em) => {\r\n    dispatch({ type: GET_PAYSLIPS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(`${payslips_url}?em=${em}`);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payslips = await res.json();\r\n      dispatch({ type: GET_PAYSLIPS_SUCCESS, payload: payslips });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYSLIPS_ERROR });\r\n    }\r\n  };\r\n\r\n  const getSingleBatchPayslip = async (payrun) => {\r\n    dispatch({ type: GET_SINGLEBATCH_PAYSLIP_BEGIN });\r\n    try {\r\n      const res = await fetch(`${payslips_url}?fv=${payrun}`);\r\n      const singlebatchpayslip = await res.json();\r\n      console.log(\"context\", singlebatchpayslip);\r\n      dispatch({\r\n        type: GET_SINGLEBATCH_PAYSLIP_SUCCESS,\r\n        payload: singlebatchpayslip,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLEBATCH_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n\r\n  const setIsPayslipEditingOn = () => {\r\n    dispatch({ type: SET_ISPAYSLIPEDITING_ON });\r\n  };\r\n\r\n  const setIsPayslipEditingOff = () => {\r\n    dispatch({ type: SET_ISPAYSLIPEDITING_OFF });\r\n  };\r\n\r\n  const setPayslipsData = (value) => {\r\n    dispatch({ type: SET_PAYSLIPS_DATA, payload: value });\r\n  };\r\n\r\n  const resetPayslipsData = () => {\r\n    dispatch({ type: RESET_PAYSLIPS_DATA });\r\n  };\r\n\r\n  const updatePayslipsData = (name, value) => {\r\n    dispatch({ type: UPDATE_PAYSLIPS_DATA, payload: { name, value } });\r\n  };\r\n\r\n  const resetSinglePayslip = () => {\r\n    dispatch({ type: RESET_SINGLE_PAYSLIP });\r\n  };\r\n\r\n  const setPayslipEarningAmount = (value) => {\r\n    dispatch({ type: SET_PAYSLIPEARNING_AMOUNT, payload: value });\r\n  };\r\n  const setPayslipDeductionAmount = (value) => {\r\n    dispatch({ type: SET_PAYSLIPDEDUCTION_AMOUNT, payload: value });\r\n  };\r\n\r\n  const setPayslipPeriod = async (name) => {\r\n    try {\r\n      dispatch({ type: SET_PAYSLIP_PERIOD, payload: name });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n  const setPayslipEndMonthDate = async (name) => {\r\n    try {\r\n      dispatch({ type: SET_PAYSLIP_ENDMONTHDATE, payload: name });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const setEditPayslipID = async (id) => {\r\n    try {\r\n      dispatch({ type: SET_EDITPAYSLIPID, payload: id });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSinglePayslip = async (id) => {\r\n    dispatch({ type: GET_SINGLE_PAYSLIP_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${payslips_url}?id=${id}`);\r\n      const singlepayslip = data;\r\n      dispatch({ type: GET_SINGLE_PAYSLIP_SUCCESS, payload: singlepayslip });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n\r\n  const addPayslip = async (data) => {\r\n    const { id, name, from_date, to_date, reason, no_of_days, status } = data;\r\n    //\r\n    dispatch({ type: ADD_PAYSLIP_BEGIN });\r\n    try {\r\n      await fetch(payslips_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_PAYSLIP_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n\r\n  const updatePayslip = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_PAYSLIP_BEGIN });\r\n    try {\r\n      await fetch(payslips_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_PAYSLIP_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n\r\n  const deletePayslip = async (id) => {\r\n    dispatch({ type: DELETE_PAYSLIP_BEGIN });\r\n    try {\r\n      await fetch(payslips_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_PAYSLIP_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n\r\n  //.... payslip items\r\n  const getPayslipitems = async (fv) => {\r\n    dispatch({ type: GET_PAYSLIPITEMS_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${payslipitems_url}?period=${fv}`);\r\n      const payslipitems = data;\r\n      dispatch({ type: GET_PAYSLIPITEMS_SUCCESS, payload: payslipitems });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYSLIPITEMS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addPayslipitem = async (data) => {\r\n    //const { id, name, empid, period, payitem, paytype, amount } = data;\r\n    //\r\n    dispatch({ type: ADD_PAYSLIPITEM_BEGIN });\r\n    try {\r\n      await fetch(payslipitems_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_PAYSLIPITEM_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_PAYSLIPITEM_ERROR });\r\n    }\r\n  };\r\n\r\n  const updatePayslipitem = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_PAYSLIPITEM_BEGIN });\r\n    try {\r\n      await fetch(payslipitems_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_PAYSLIPITEM_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_PAYSLIPITEM_ERROR });\r\n    }\r\n  };\r\n\r\n  const deletePayslipitem = async (id) => {\r\n    dispatch({ type: DELETE_PAYSLIPITEM_BEGIN });\r\n    try {\r\n      await fetch(payslipitems_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_PAYSLIPITEM_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_PAYSLIPITEM_ERROR });\r\n    }\r\n  };\r\n\r\n  //.... payrun\r\n  const getPayrun = async () => {\r\n    dispatch({ type: GET_PAYRUN_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${payrun_url}`);\r\n      const payrun = data;\r\n      dispatch({ type: GET_PAYRUN_SUCCESS, payload: payrun });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYRUN_ERROR });\r\n    }\r\n  };\r\n\r\n  \r\n  //.... payrun\r\n  const getBatchPayrun = async (fi) => {\r\n    dispatch({ type: GET_BATCHPAYRUN_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${payrun_url}?fi=${fi}`);\r\n      const payrun = data;\r\n      dispatch({ type: GET_BATCHPAYRUN_SUCCESS, payload: payrun });\r\n    } catch (error) {\r\n      dispatch({ type: GET_BATCHPAYRUN_ERROR });\r\n    }\r\n  };\r\n\r\n  const addPayrun = async (data) => {\r\n    //const { id, name, empid, period, payitem, paytype, amount } = data;\r\n    //\r\n    dispatch({ type: ADD_PAYRUN_BEGIN });\r\n    try {\r\n      await fetch(payrun_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_PAYRUN_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_PAYRUN_ERROR });\r\n    }\r\n  };\r\n\r\n  const updatePayrun = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_PAYRUN_BEGIN });\r\n    try {\r\n      await fetch(payrun_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_PAYRUN_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_PAYRUN_ERROR });\r\n    }\r\n  };\r\n\r\n  const deletePayrun = async (id) => {\r\n    dispatch({ type: DELETE_PAYRUN_BEGIN });\r\n    try {\r\n      await fetch(payrun_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_PAYRUN_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_PAYRUN_ERROR });\r\n    }\r\n  };\r\n\r\n  //.... payslip earnings\r\n  const loadPayslipEarnings = async () => {\r\n    dispatch({ type: GET_PAYSLIPEARNINGS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(payslipearnings_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payslipearnings = await res.json();\r\n      dispatch({ type: GET_PAYSLIPEARNINGS_SUCCESS, payload: payslipearnings });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYSLIPEARNINGS_ERROR });\r\n    }\r\n  };\r\n  //.... payslip earnings\r\n  const getSingleBatchPayslipEarnings = async (empid, period) => {\r\n    dispatch({ type: GET_PAYSLIPEARNINGS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(\r\n        `${payslipearnings_url}?fv=${empid}&period=${period}`\r\n      );\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payslipearnings = await res.json();\r\n      dispatch({ type: GET_PAYSLIPEARNINGS_SUCCESS, payload: payslipearnings });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYSLIPEARNINGS_ERROR });\r\n    }\r\n  };\r\n  const addPayslipEarning = async (data) => {\r\n    const { id, name, period, description, amount } = data;\r\n    //\r\n    dispatch({ type: ADD_PAYSLIPEARNING_BEGIN });\r\n    try {\r\n      await fetch(payslipearnings_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_PAYSLIPEARNING_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_PAYSLIPEARNING_ERROR });\r\n    }\r\n  };\r\n\r\n  const updatePayslipEarning = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_PAYSLIPEARNING_BEGIN });\r\n    try {\r\n      await fetch(payslipearnings_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_PAYSLIPEARNING_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_PAYSLIPEARNING_ERROR });\r\n    }\r\n  };\r\n\r\n  const deletePayslipEarning = async (id) => {\r\n    dispatch({ type: DELETE_PAYSLIPEARNING_BEGIN });\r\n    try {\r\n      await fetch(payslipearnings_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_PAYSLIPEARNING_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_PAYSLIPEARNING_ERROR });\r\n    }\r\n  };\r\n\r\n  //.... payslip deductions\r\n  const loadPayslipDeductions = async () => {\r\n    dispatch({ type: GET_PAYSLIPDEDUCTIONS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(payslipdeductions_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payslipdeductions = await res.json();\r\n      dispatch({\r\n        type: GET_PAYSLIPDEDUCTIONS_SUCCESS,\r\n        payload: payslipdeductions,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYSLIPDEDUCTIONS_ERROR });\r\n    }\r\n  };\r\n  const getSingleBatchPayslipDeductions = async (empid, period) => {\r\n    dispatch({ type: GET_PAYSLIPDEDUCTIONS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(\r\n        `${payslipdeductions_url}?fv=${empid}&period=${period}`\r\n      );\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payslipdeductions = await res.json();\r\n      dispatch({\r\n        type: GET_PAYSLIPDEDUCTIONS_SUCCESS,\r\n        payload: payslipdeductions,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYSLIPDEDUCTIONS_ERROR });\r\n    }\r\n  };\r\n  const addPayslipDeduction = async (data) => {\r\n    const { id, name, period, description, amount } = data;\r\n    //\r\n    dispatch({ type: ADD_PAYSLIPDEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(payslipdeductions_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_PAYSLIPDEDUCTION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_PAYSLIPDEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  const updatePayslipDeduction = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_PAYSLIPDEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(payslipdeductions_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_PAYSLIPDEDUCTION_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_PAYSLIPDEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  const deletePayslipDeduction = async (id) => {\r\n    dispatch({ type: DELETE_PAYSLIPDEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(payslipdeductions_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_PAYSLIPDEDUCTION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_PAYSLIPDEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PayslipsContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadPayslips,\r\n        loadPendingPayslips,\r\n        loadEmpPayslips,\r\n        addPayslip,\r\n        updatePayslip,\r\n        deletePayslip,\r\n        getSinglePayslip,\r\n        getSingleBatchPayslip,\r\n        setEditPayslipID,\r\n        setIsPayslipEditingOn,\r\n        setIsPayslipEditingOff,\r\n        setPayslipsData,\r\n        resetPayslipsData,\r\n        updatePayslipsData,\r\n        loadPayslipEarnings,\r\n        addPayslipEarning,\r\n        updatePayslipEarning,\r\n        deletePayslipEarning,\r\n        getSingleBatchPayslipEarnings,\r\n        setPayslipEarningAmount,\r\n        loadPayslipDeductions,\r\n        addPayslipDeduction,\r\n        updatePayslipDeduction,\r\n        deletePayslipDeduction,\r\n        getSingleBatchPayslipDeductions,\r\n        setPayslipDeductionAmount,\r\n        resetSinglePayslip,\r\n        setPayslipPeriod,\r\n        setPayslipEndMonthDate,\r\n        getPayslipitems,\r\n        deletePayslipitem,\r\n        updatePayslipitem,\r\n        addPayslipitem,\r\n        getPayrun,\r\n        getBatchPayrun,\r\n        deletePayrun,\r\n        updatePayrun,\r\n        addPayrun,\r\n      }}\r\n    >\r\n      {children}\r\n    </PayslipsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const usePayslipsContext = () => {\r\n  return useContext(PayslipsContext);\r\n};\r\n","D:\\react-myprojects\\hrms-airtable\\src\\reducers\\payslips_reducer.js",["3009"],"import {\r\n  SET_EDITPAYSLIPID,\r\n  SET_ISPAYSLIPEDITING_ON,\r\n  SET_ISPAYSLIPEDITING_OFF,\r\n  SET_PAYSLIP_PERIOD,\r\n  SET_PAYSLIPS_DATA,\r\n  RESET_PAYSLIPS_DATA,\r\n  UPDATE_PAYSLIPS_DATA,\r\n  SET_PAYSLIP_ENDMONTHDATE,\r\n  SET_PAYSLIPEARNING_AMOUNT,\r\n  SET_PAYSLIPDEDUCTION_AMOUNT,\r\n  SET_SINGLEPAYSLIP,\r\n  GET_PAYSLIPS_BEGIN,\r\n  GET_PAYSLIPS_SUCCESS,\r\n  GET_PAYSLIPS_ERROR,\r\n  GET_SINGLE_PAYSLIP_BEGIN,\r\n  GET_SINGLE_PAYSLIP_SUCCESS,\r\n  GET_SINGLE_PAYSLIP_ERROR,\r\n  GET_PENDING_PAYSLIP_BEGIN,\r\n  GET_PENDING_PAYSLIP_SUCCESS,\r\n  GET_PENDING_PAYSLIP_ERROR,\r\n  GET_SINGLEBATCH_PAYSLIP_BEGIN,\r\n  GET_SINGLEBATCH_PAYSLIP_SUCCESS,\r\n  GET_SINGLEBATCH_PAYSLIP_ERROR,\r\n  GET_PAYSLIPITEMS_BEGIN,\r\n  GET_PAYSLIPITEMS_SUCCESS,\r\n  GET_PAYSLIPITEMS_ERROR,\r\n  ADD_PAYSLIPITEM_BEGIN,\r\n  ADD_PAYSLIPITEM_SUCCESS,\r\n  ADD_PAYSLIPITEM_ERROR,\r\n  UPDATE_PAYSLIPITEM_BEGIN,\r\n  UPDATE_PAYSLIPITEM_SUCCESS,\r\n  UPDATE_PAYSLIPITEM_ERROR,\r\n  DELETE_PAYSLIPITEM_BEGIN,\r\n  DELETE_PAYSLIPITEM_SUCCESS,\r\n  DELETE_PAYSLIPITEM_ERROR,\r\n  GET_PAYRUN_BEGIN,\r\n  GET_PAYRUN_SUCCESS,\r\n  GET_PAYRUN_ERROR,\r\n  GET_BATCHPAYRUN_BEGIN,\r\n  GET_BATCHPAYRUN_SUCCESS,\r\n  GET_BATCHPAYRUN_ERROR,\r\n  ADD_PAYRUN_BEGIN,\r\n  ADD_PAYRUN_SUCCESS,\r\n  ADD_PAYRUN_ERROR,\r\n  UPDATE_PAYRUN_BEGIN,\r\n  UPDATE_PAYRUN_SUCCESS,\r\n  UPDATE_PAYRUN_ERROR,\r\n  DELETE_PAYRUN_BEGIN,\r\n  DELETE_PAYRUN_SUCCESS,\r\n  DELETE_PAYRUN_ERROR,\r\n  ADD_PAYSLIP_BEGIN,\r\n  ADD_PAYSLIP_SUCCESS,\r\n  ADD_PAYSLIP_ERROR,\r\n  DELETE_PAYSLIP_BEGIN,\r\n  DELETE_PAYSLIP_SUCCESS,\r\n  DELETE_PAYSLIP_ERROR,\r\n  UPDATE_PAYSLIP_BEGIN,\r\n  UPDATE_PAYSLIP_SUCCESS,\r\n  UPDATE_PAYSLIP_ERROR,\r\n  RESET_SINGLE_PAYSLIP,\r\n  GET_PAYSLIPEARNINGS_BEGIN,\r\n  GET_PAYSLIPEARNINGS_SUCCESS,\r\n  GET_PAYSLIPEARNINGS_ERROR,\r\n  GET_SINGLE_PAYSLIPEARNING_BEGIN,\r\n  GET_SINGLE_PAYSLIPEARNING_SUCCESS,\r\n  GET_SINGLE_PAYSLIPEARNING_ERROR,\r\n  ADD_PAYSLIPEARNING_BEGIN,\r\n  ADD_PAYSLIPEARNING_SUCCESS,\r\n  ADD_PAYSLIPEARNING_ERROR,\r\n  DELETE_PAYSLIPEARNING_BEGIN,\r\n  DELETE_PAYSLIPEARNING_SUCCESS,\r\n  DELETE_PAYSLIPEARNING_ERROR,\r\n  UPDATE_PAYSLIPEARNING_BEGIN,\r\n  UPDATE_PAYSLIPEARNING_SUCCESS,\r\n  UPDATE_PAYSLIPEARNING_ERROR,\r\n  GET_PAYSLIPDEDUCTIONS_BEGIN,\r\n  GET_PAYSLIPDEDUCTIONS_SUCCESS,\r\n  GET_PAYSLIPDEDUCTIONS_ERROR,\r\n  GET_SINGLE_PAYSLIPDEDUCTION_BEGIN,\r\n  GET_SINGLE_PAYSLIPDEDUCTION_SUCCESS,\r\n  GET_SINGLE_PAYSLIPDEDUCTION_ERROR,\r\n  ADD_PAYSLIPDEDUCTION_BEGIN,\r\n  ADD_PAYSLIPDEDUCTION_SUCCESS,\r\n  ADD_PAYSLIPDEDUCTION_ERROR,\r\n  DELETE_PAYSLIPDEDUCTION_BEGIN,\r\n  DELETE_PAYSLIPDEDUCTION_SUCCESS,\r\n  DELETE_PAYSLIPDEDUCTION_ERROR,\r\n  UPDATE_PAYSLIPDEDUCTION_BEGIN,\r\n  UPDATE_PAYSLIPDEDUCTION_SUCCESS,\r\n  UPDATE_PAYSLIPDEDUCTION_ERROR,\r\n} from \"../actions\";\r\n\r\nconst payslips_reducer = (state, action) => {\r\n  // set payslips variables\r\n  if (action.type === SET_PAYSLIP_PERIOD) {\r\n    return { ...state, payslip_period: action.payload };\r\n  }\r\n  if (action.type === SET_PAYSLIP_ENDMONTHDATE) {\r\n    return { ...state, payslip_endmonthdate: action.payload };\r\n  }\r\n  if (action.type === SET_EDITPAYSLIPID) {\r\n    return { ...state, editPayslipID: action.payload };\r\n  }\r\n  if (action.type === SET_PAYSLIPEARNING_AMOUNT) {\r\n    return { ...state, payslip_earning_amount: action.payload };\r\n  }\r\n  if (action.type === SET_PAYSLIPDEDUCTION_AMOUNT) {\r\n    return { ...state, payslip_deduction_amount: action.payload };\r\n  }\r\n  if (action.type === SET_PAYSLIPS_DATA) {\r\n    return { ...state, payslipsdata: action.payload };\r\n  }\r\n  if (action.type === RESET_PAYSLIPS_DATA) {\r\n    return { ...state, payslipsdata: [] };\r\n  }\r\n\r\n  if (action.type === UPDATE_PAYSLIPS_DATA) {\r\n    console.log(\"reducer\", action.payload.name, action.payload.value);\r\n    //return { ...state, payslipsdata: { [action.payload.name]: action.payload.value } };\r\n    return null;\r\n  }\r\n\r\n  if (action.type === SET_ISPAYSLIPEDITING_ON) {\r\n    return { ...state, isPayslipEditing: true };\r\n  }\r\n  if (action.type === SET_ISPAYSLIPEDITING_OFF) {\r\n    return { ...state, isPayslipEditing: false };\r\n  }\r\n  if (action.type === RESET_SINGLE_PAYSLIP) {\r\n    return { ...state, single_payslip: {} };\r\n  }\r\n  // get payslips\r\n  if (action.type === GET_PAYSLIPS_BEGIN) {\r\n    return { ...state, payslips_loading: true };\r\n  }\r\n  if (action.type === GET_PAYSLIPS_SUCCESS) {\r\n    return { ...state, payslips_loading: false, payslips: action.payload };\r\n  }\r\n  if (action.type === GET_PAYSLIPS_ERROR) {\r\n    return { ...state, payslips_loading: false, payslips_error: true };\r\n  }\r\n\r\n  // get pending payslips\r\n  if (action.type === GET_PENDING_PAYSLIP_BEGIN) {\r\n    return { ...state, pending_payslips_loading: true };\r\n  }\r\n  if (action.type === GET_PENDING_PAYSLIP_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      pending_payslips_loading: false,\r\n      pending_payslips: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_PENDING_PAYSLIP_ERROR) {\r\n    return {\r\n      ...state,\r\n      pending_payslips_loading: false,\r\n      pending_payslips_error: true,\r\n    };\r\n  }\r\n\r\n  // add payslips\r\n  if (action.type === ADD_PAYSLIP_BEGIN) {\r\n    return { ...state, add_payslip_loading: true };\r\n  }\r\n  if (action.type === ADD_PAYSLIP_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_payslips_loading: false,\r\n      payslips: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_PAYSLIP_ERROR) {\r\n    return { ...state, payslips_loading: false, add_payslip_error: true };\r\n  }\r\n  // update payslips\r\n  if (action.type === UPDATE_PAYSLIP_BEGIN) {\r\n    return { ...state, update_payslip_loading: true };\r\n  }\r\n  if (action.type === UPDATE_PAYSLIP_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      payslips_loading: false,\r\n      single_payslip: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_PAYSLIP_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_payslip_loading: false,\r\n      update_payslip_error: true,\r\n    };\r\n  }\r\n\r\n  // delete payslips\r\n  if (action.type === DELETE_PAYSLIP_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_payslip_loading: true,\r\n      delete_payslip_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_PAYSLIP_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_payslip_loading: false,\r\n      delete_payslip_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_PAYSLIP_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_payslip_loading: false,\r\n      delete_payslip_error: true,\r\n    };\r\n  }\r\n\r\n  //single payslips\r\n  if (action.type === GET_SINGLE_PAYSLIP_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_payslip_loading: true,\r\n      single_payslip_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_PAYSLIP_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_payslip_loading: false,\r\n      single_payslip: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_PAYSLIP_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_payslip_loading: false,\r\n      single_payslip_error: true,\r\n    };\r\n  }\r\n\r\n  //single batch payslips\r\n  if (action.type === GET_SINGLEBATCH_PAYSLIP_BEGIN) {\r\n    return {\r\n      ...state,\r\n      singlebatch_payslip_loading: true,\r\n      singlebatch_payslip_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_PAYSLIP_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      singlebatch_payslip_loading: false,\r\n      singlebatchpayslip: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_PAYSLIP_ERROR) {\r\n    return {\r\n      ...state,\r\n      singlebatch_payslip_loading: false,\r\n      singlebatch_payslip_error: true,\r\n    };\r\n  }\r\n\r\n  // ------ payslip earnings\r\n  // get payslip earning\r\n  if (action.type === GET_PAYSLIPEARNINGS_BEGIN) {\r\n    return { ...state, payslipearnings_loading: true };\r\n  }\r\n  if (action.type === GET_PAYSLIPEARNINGS_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      payslipearnings_loading: false,\r\n      payslipearnings: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_PAYSLIPEARNINGS_ERROR) {\r\n    return {\r\n      ...state,\r\n      payslipearnings_loading: false,\r\n      payslipearnings_error: true,\r\n    };\r\n  }\r\n\r\n  // add payslip earning\r\n  if (action.type === ADD_PAYSLIPEARNING_BEGIN) {\r\n    return { ...state, add_payslipearning_loading: true };\r\n  }\r\n  if (action.type === ADD_PAYSLIPEARNING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_payslipearnings_loading: false,\r\n      payslipearnings: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_PAYSLIPEARNING_ERROR) {\r\n    return {\r\n      ...state,\r\n      add_payslipearnings_loading: false,\r\n      add_payslipearning_error: true,\r\n    };\r\n  }\r\n  // update payslip earning\r\n  if (action.type === UPDATE_PAYSLIPEARNING_BEGIN) {\r\n    return { ...state, update_payslipearning_loading: true };\r\n  }\r\n  if (action.type === UPDATE_PAYSLIPEARNING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      update_payslipearnings_loading: false,\r\n      single_payslipearning: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_PAYSLIPEARNING_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_payslipearning_loading: false,\r\n      update_payslipearning_error: true,\r\n    };\r\n  }\r\n\r\n  // delete payslip earning\r\n  if (action.type === DELETE_PAYSLIPEARNING_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_payslipearning_loading: true,\r\n      delete_payslipearning_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_PAYSLIPEARNING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_payslipearning_loading: false,\r\n      delete_payslipearning_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_PAYSLIPEARNING_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_payslipearning_loading: false,\r\n      delete_payslipearning_error: true,\r\n    };\r\n  }\r\n\r\n  //single payslip earning\r\n  if (action.type === GET_SINGLE_PAYSLIPEARNING_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_payslipearning_loading: true,\r\n      single_payslipearning_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_PAYSLIPEARNING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_payslipearning_loading: false,\r\n      single_payslipearning: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_PAYSLIPEARNING_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_payslipearning_loading: false,\r\n      single_payslipearning_error: true,\r\n    };\r\n  }\r\n\r\n  // ..........payslip deductions\r\n  // get payslip deduction\r\n  if (action.type === GET_PAYSLIPDEDUCTIONS_BEGIN) {\r\n    return { ...state, payslipdeductions_loading: true };\r\n  }\r\n  if (action.type === GET_PAYSLIPDEDUCTIONS_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      payslipdeductions_loading: false,\r\n      payslipdeductions: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_PAYSLIPDEDUCTIONS_ERROR) {\r\n    return {\r\n      ...state,\r\n      payslipdeductions_loading: false,\r\n      payslipdeductions_error: true,\r\n    };\r\n  }\r\n\r\n  // add payslip deduction\r\n  if (action.type === ADD_PAYSLIPDEDUCTION_BEGIN) {\r\n    return { ...state, add_payslipdeduction_loading: true };\r\n  }\r\n  if (action.type === ADD_PAYSLIPDEDUCTION_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_payslipdeductions_loading: false,\r\n      payslipdeductions: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_PAYSLIPDEDUCTION_ERROR) {\r\n    return {\r\n      ...state,\r\n      add_payslipdeductions_loading: false,\r\n      add_payslipdeduction_error: true,\r\n    };\r\n  }\r\n  // update payslip deduction\r\n  if (action.type === UPDATE_PAYSLIPDEDUCTION_BEGIN) {\r\n    return { ...state, update_payslipdeduction_loading: true };\r\n  }\r\n  if (action.type === UPDATE_PAYSLIPDEDUCTION_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      update_payslipdeductions_loading: false,\r\n      single_payslipdeduction: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_PAYSLIPDEDUCTION_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_payslipdeduction_loading: false,\r\n      update_payslipdeduction_error: true,\r\n    };\r\n  }\r\n\r\n  // delete payslip deduction\r\n  if (action.type === DELETE_PAYSLIPDEDUCTION_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_payslipdeduction_loading: true,\r\n      delete_payslipdeduction_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_PAYSLIPDEDUCTION_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_payslipdeduction_loading: false,\r\n      delete_payslipdeduction_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_PAYSLIPDEDUCTION_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_payslipdeduction_loading: false,\r\n      delete_payslipdeduction_error: true,\r\n    };\r\n  }\r\n\r\n  //single payslip deduction\r\n  if (action.type === GET_SINGLE_PAYSLIPDEDUCTION_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_payslipdeduction_loading: true,\r\n      single_payslipdeduction_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_PAYSLIPDEDUCTION_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_payslipdeduction_loading: false,\r\n      single_payslipdeduction: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_PAYSLIPDEDUCTION_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_payslipdeduction_loading: false,\r\n      single_payslipdeduction_error: true,\r\n    };\r\n  }\r\n\r\n  // ..........payslip items\r\n  // get payslip items\r\n  if (action.type === GET_PAYSLIPITEMS_BEGIN) {\r\n    return { ...state, payslipitems_loading: true };\r\n  }\r\n  if (action.type === GET_PAYSLIPITEMS_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      payslipitems_loading: false,\r\n      payslipitems: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_PAYSLIPITEMS_ERROR) {\r\n    return {\r\n      ...state,\r\n      payslipitems_loading: false,\r\n      payslipitems_error: true,\r\n    };\r\n  }\r\n\r\n  // add payslip item\r\n  if (action.type === ADD_PAYSLIPITEM_BEGIN) {\r\n    return { ...state, add_payslipitem_loading: true };\r\n  }\r\n  if (action.type === ADD_PAYSLIPITEM_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_payslipitem_loading: false,\r\n      payslipitem: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_PAYSLIPITEM_ERROR) {\r\n    return {\r\n      ...state,\r\n      add_payslipitem_loading: false,\r\n      add_payslipitem_error: true,\r\n    };\r\n  }\r\n  // update payslip items\r\n  if (action.type === UPDATE_PAYSLIPITEM_BEGIN) {\r\n    return { ...state, update_payslipitem_loading: true };\r\n  }\r\n  if (action.type === UPDATE_PAYSLIPITEM_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      update_payslipitem_loading: false,\r\n      single_payslipitem: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_PAYSLIPITEM_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_payslipitem_loading: false,\r\n      update_payslipitem_error: true,\r\n    };\r\n  }\r\n\r\n  // delete payslip item\r\n  if (action.type === DELETE_PAYSLIPITEM_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_payslipitem_loading: true,\r\n      delete_payslipitem_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_PAYSLIPITEM_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_payslipitem_loading: false,\r\n      delete_payslipitem_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_PAYSLIPITEM_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_payslipitem_loading: false,\r\n      delete_payslipitem_error: true,\r\n    };\r\n  }\r\n\r\n  // ..........payrun\r\n  // get payrun\r\n  if (action.type === GET_PAYRUN_BEGIN) {\r\n    return { ...state, payrun_loading: true };\r\n  }\r\n  if (action.type === GET_PAYRUN_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      payrun_loading: false,\r\n      payrun: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_PAYRUN_ERROR) {\r\n    return {\r\n      ...state,\r\n      payrun_loading: false,\r\n      payrun_error: true,\r\n    };\r\n  }\r\n\r\n  // get batch payrun\r\n  if (action.type === GET_BATCHPAYRUN_BEGIN) {\r\n    return { ...state, batchpayrun_loading: true };\r\n  }\r\n  if (action.type === GET_BATCHPAYRUN_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      batchpayrun_loading: false,\r\n      batchpayrun: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_BATCHPAYRUN_ERROR) {\r\n    return {\r\n      ...state,\r\n      batchpayrun_loading: false,\r\n      batchpayrun_error: true,\r\n    };\r\n  }\r\n\r\n  // add payrun\r\n  if (action.type === ADD_PAYRUN_BEGIN) {\r\n    return { ...state, add_payrun_loading: true };\r\n  }\r\n  if (action.type === ADD_PAYRUN_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_payrun_loading: false,\r\n      single_payrun: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_PAYRUN_ERROR) {\r\n    return {\r\n      ...state,\r\n      add_payrun_loading: false,\r\n      add_payrun_error: true,\r\n    };\r\n  }\r\n  // update payslip items\r\n  if (action.type === UPDATE_PAYRUN_BEGIN) {\r\n    return { ...state, update_payrun_loading: true };\r\n  }\r\n  if (action.type === UPDATE_PAYRUN_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      update_payrun_loading: false,\r\n      single_payrun: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_PAYRUN_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_payrun_loading: false,\r\n      update_payrun_error: true,\r\n    };\r\n  }\r\n\r\n  // delete payslip item\r\n  if (action.type === DELETE_PAYRUN_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_payrun_loading: true,\r\n      delete_payrun_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_PAYRUN_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_payrun_loading: false,\r\n      delete_payrun_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_PAYRUN_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_payrun_loading: false,\r\n      delete_payrun_error: true,\r\n    };\r\n  }\r\n\r\n  // return state;\r\n  throw new Error(`No Matching \"${action.type}\" - action type`);\r\n};\r\n\r\nexport default payslips_reducer;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\Example.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\Payslip_Earnings.js",["3010","3011","3012","3013","3014","3015","3016","3017","3018","3019","3020","3021","3022","3023"],"import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Icon, TextField, MenuItem } from \"@material-ui/core\";\r\n\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n  payEarningDataState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nexport default function Payslip_Earnings({\r\n  setCalc,\r\n  earningsdata,\r\n  oldEarningsdata,\r\n  setEarningsdata,\r\n  handleDialogClose,\r\n}) {\r\n  let history = useHistory();\r\n   const classes = useStyles();\r\n  const payPeriodEmpId = useRecoilValue(payPeriodEmpIdState);\r\n  const payPeriod = useRecoilValue(payPeriodState);\r\n  const payEarningData = useRecoilValue(payEarningDataState);\r\n  const {\r\n    payslipearnings,\r\n    payslip_earning_amount,\r\n    setPayslipEarningAmount,\r\n    addPayslipEarning,\r\n    payslipearnings_loading,\r\n    updatePayslipEarning,\r\n    deletePayslipEarning,\r\n    updatePayslip,\r\n    editPayslipID,\r\n    single_payslip,\r\n    payslip_period,\r\n    getSingleBatchPayslipEarnings,\r\n  } = usePayslipsContext();\r\n\r\n  const { name, amount } = payslipearnings;\r\n  const { allowances } = useTablesContext();\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Description\",\r\n      field: \"description\",\r\n      editComponent: (props) => (\r\n        <TextField\r\n          //defaultValue={props.value || null}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n          style={{ width: 200 }}\r\n          value={props.value}\r\n          select\r\n        >\r\n          {allowances.map((r) => {\r\n            return <MenuItem value={r.name}>{r.name}</MenuItem>;\r\n          })}\r\n        </TextField>\r\n      ),\r\n    },\r\n    { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\r\n  }, []);\r\n\r\n  const calc_Earning = (data) => {\r\n    const sum = data.reduce((a, v) => (a = a + v.amount), 0);\r\n    console.log(\"Earning\", data);\r\n    setPayslipEarningAmount(sum);\r\n  };\r\n\r\n  const update_Payslip = () => {\r\n    const { rec_id, id, total_earnings, ...paydata } = single_payslip;\r\n    updatePayslip({\r\n      id: editPayslipID,\r\n      total_earnings: payslip_earning_amount,\r\n      ...paydata,\r\n    });\r\n    setCalc(true);\r\n  };\r\n\r\n  const update_PayslipEarning = async (data) => {\r\n    const { id, rec_id, empid, ...fields } = data;\r\n    console.log(\"update\", data);\r\n    updatePayslipEarning({ id: data.id, empid: empid, ...fields });\r\n\r\n    update_Payslip();\r\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const add_PayslipEarning = (data) => {\r\n    console.log(\"add\", data);\r\n    const { description, amount } = data;\r\n    addPayslipEarning({\r\n      description: description,\r\n      amount: amount,\r\n      name: single_payslip.name,\r\n      empid: single_payslip.empid,\r\n      period: single_payslip.period,\r\n    });\r\n\r\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const delete_PayslipEarning = (data) => {\r\n    const { id } = data;\r\n    deletePayslipEarning(id);\r\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const Save_EarningsData = () => {\r\n    // delete unwanted data\r\n    console.log(\"update\", earningsdata, oldEarningsdata);\r\n    oldEarningsdata.forEach((row) => {\r\n      const { id, rec_id } = row;\r\n      const res = earningsdata.find((r) => r.rec_id === rec_id);\r\n      console.log(\"find\", id, res);\r\n      if (!res) {\r\n        deletePayslipEarning(id);\r\n      }\r\n    });\r\n    //add or update new data\r\n\r\n    earningsdata.forEach((data) => {\r\n      const { id, description, amount } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updatePayslipEarning({ id, ...fields });\r\n      } else {\r\n        addPayslipEarning({\r\n          description: description,\r\n          amount: amount,\r\n          name: single_payslip.name,\r\n          empid: payPeriodEmpId,\r\n          period: payPeriod,\r\n        });\r\n      }\r\n    });\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  if (payslipearnings_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... Incomes.</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={earningsdata}\r\n          title=\"Income\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  setEarningsdata([...earningsdata, newData]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...earningsdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setEarningsdata([...dataUpdate]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...earningsdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setEarningsdata([...dataDelete]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_EarningsData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\Payslip_Deductions.js",["3024","3025","3026","3027","3028","3029","3030","3031","3032","3033","3034","3035"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Icon, TextField, MenuItem } from \"@material-ui/core\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n  payEarningDataState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nexport default function Payslip_Deductions({\r\n  setCalc,\r\n  deductionsdata,\r\n  oldDeductionsdata,\r\n  setDeductionsdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const payPeriodEmpId = useRecoilValue(payPeriodEmpIdState);\r\n  const payPeriod = useRecoilValue(payPeriodState);\r\n  const payEarningData = useRecoilValue(payEarningDataState);\r\n  const {\r\n    payslipdeductions,\r\n    payslip_deduction_amount,\r\n    setPayslipDeductionAmount,\r\n    loadPayslipDeductions,\r\n    addPayslipDeduction,\r\n    payslipdeductions_loading,\r\n    updatePayslipDeduction,\r\n    deletePayslipDeduction,\r\n    updatePayslip,\r\n    editPayslipID,\r\n    single_payslip,\r\n    payslip_period,\r\n    getSingleBatchPayslipDeductions,\r\n  } = usePayslipsContext();\r\n  const { name, amount } = payslipdeductions;\r\n  const { deductions } = useTablesContext();\r\n\r\n  const calc_Deduction = (data) => {\r\n    const sum = data.reduce((a, v) => (a = a + v.amount), 0);\r\n    setPayslipDeductionAmount(sum);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Description\",\r\n      field: \"description\",\r\n      editComponent: (props) => (\r\n        <TextField\r\n          //defaultValue={props.value || null}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n          style={{ width: 200 }}\r\n          value={props.value}\r\n          select\r\n        >\r\n          {deductions.map((r) => {\r\n            return <MenuItem value={r.name}>{r.name}</MenuItem>;\r\n          })}\r\n        </TextField>\r\n      ),\r\n    },\r\n    { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  }, []);\r\n\r\n  const update_Payslip = () => {\r\n    const { rec_id, id, total_deductions, ...paydata } = single_payslip;\r\n    updatePayslip({\r\n      id: editPayslipID,\r\n      total_deductions: payslip_deduction_amount,\r\n      ...paydata,\r\n    });\r\n  };\r\n\r\n  const update_PayslipDeduction = async (data) => {\r\n    const { id, rec_id, empid, ...fields } = data;\r\n    updatePayslipDeduction({ id: data.id, empid: empid, ...fields });\r\n    update_Payslip();\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const add_PayslipDeduction = (data) => {\r\n    const { description, amount } = data;\r\n    addPayslipDeduction({\r\n      description: description,\r\n      amount: amount,\r\n      name: single_payslip.name,\r\n      empid: single_payslip.empid,\r\n      period: single_payslip.period,\r\n    });\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const delete_PayslipDeduction = (data) => {\r\n    const { id } = data;\r\n    deletePayslipDeduction(id);\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const Save_DeductionsData = () => {\r\n    // delete unwanted data\r\n    console.log(\"update\", deductionsdata, oldDeductionsdata);\r\n    oldDeductionsdata.forEach((row) => {\r\n      const { id, rec_id } = row;\r\n      const res = deductionsdata.find((r) => r.rec_id === rec_id);\r\n      console.log(\"find\", id, res);\r\n      if (!res) {\r\n        deletePayslipDeduction(id);\r\n      }\r\n    });\r\n    //add or update new data\r\n\r\n    deductionsdata.forEach((data) => {\r\n      const { id, description, amount } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updatePayslipDeduction({ id, ...fields });\r\n      } else {\r\n        addPayslipDeduction({\r\n          description: description,\r\n          amount: amount,\r\n          name: single_payslip.name,\r\n          empid: payPeriodEmpId,\r\n          period: payPeriod,\r\n        });\r\n      }\r\n    });\r\n    handleDialogClose();\r\n  };\r\n\r\n  if (payslipdeductions_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... Expenses.</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={deductionsdata}\r\n          title=\"Deductions\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  setDeductionsdata([...deductionsdata, newData]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...deductionsdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setDeductionsdata([...dataUpdate]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...deductionsdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setDeductionsdata([...dataDelete]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_DeductionsData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\pages\\TablesPage.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\TablesUpdate.js",["3036","3037","3038","3039","3040","3041","3042","3043","3044","3045","3046","3047","3048","3049","3050","3051"],"import React from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Select,\r\n  Divider,\r\n  Grid,\r\n  Toolbar,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nimport { useDepartments } from \"./departments/useDepartments\";\r\nimport { useDesignations } from \"./designations/useDesignations\";\r\nimport { useAllowances } from \"./allowances/useAllowances\";\r\nimport { useDeductions } from \"./deductions/useDeductions\";\r\nimport { useCurrency } from \"./currency/useCurrency\";\r\n\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport UpdateAllowances from \"./AllowancesTable\";\r\nimport UpdateDeductions from \"./DeductionsTable\";\r\nimport UpdateDepartments from \"./DepartmentsTable\";\r\nimport UpdateDesignations from \"./DesignationsTable\";\r\nimport UpdateInstitutes from \"./InstitutesTable\";\r\nimport UpdateCurrency from \"./CurrencyTable\";\r\n\r\nconst TablesUpdate = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const departments = useDepartments();\r\n  const deductions = useDeductions();\r\n  const allowances = useAllowances();\r\n  const currency = useCurrency();\r\n\r\n  return (\r\n    <div>\r\n      <Grid container alignItems=\"center\" className={classes.grid}>\r\n        <Grid xs={12}>\r\n          <h2>Tables Maintenance</h2>\r\n        </Grid>\r\n\r\n        <Grid xs={12}>\r\n          <UpdateAllowances />\r\n        </Grid>\r\n        <Divider />\r\n\r\n        <Grid xs={12}>\r\n          <UpdateDeductions />\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <UpdateDepartments />\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <UpdateDesignations />\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <UpdateInstitutes />\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <UpdateCurrency />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n  grid: {\r\n    padding: theme.spacing(3, 2),\r\n    // justifyContent: \"center\",\r\n  },\r\n  box: {\r\n    height: 100,\r\n    display: \"flex\",\r\n    border: \"1px solid black\",\r\n    padding: 8,\r\n  },\r\n}));\r\n\r\nexport default TablesUpdate;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\context\\tables_context.js",["3052","3053","3054","3055","3056","3057","3058","3059","3060","3061","3062","3063","3064","3065","3066","3067","3068","3069"],"import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/tables_reducer\";\r\nimport { allowances_url } from \"../utils/constants\";\r\nimport { deductions_url } from \"../utils/constants\";\r\nimport { departments_url } from \"../utils/constants\";\r\nimport { designations_url } from \"../utils/constants\";\r\nimport { family_url } from \"../utils/constants\";\r\nimport { educations_url } from \"../utils/constants\";\r\nimport { experiences_url } from \"../utils/constants\";\r\nimport { payitems_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  GET_PAYITEMS_BEGIN,\r\n  GET_PAYITEMS_SUCCESS,\r\n  GET_PAYITEMS_ERROR,\r\n  ADD_PAYITEM_BEGIN,\r\n  ADD_PAYITEM_SUCCESS,\r\n  ADD_PAYITEM_ERROR,\r\n  UPDATE_PAYITEM_BEGIN,\r\n  UPDATE_PAYITEM_SUCCESS,\r\n  UPDATE_PAYITEM_ERROR,\r\n  DELETE_PAYITEM_BEGIN,\r\n  DELETE_PAYITEM_SUCCESS,\r\n  DELETE_PAYITEM_ERROR,\r\n  GET_ALLOWANCES_BEGIN,\r\n  GET_ALLOWANCES_SUCCESS,\r\n  GET_ALLOWANCES_ERROR,\r\n  ADD_ALLOWANCE_BEGIN,\r\n  ADD_ALLOWANCE_SUCCESS,\r\n  ADD_ALLOWANCE_ERROR,\r\n  UPDATE_ALLOWANCE_BEGIN,\r\n  UPDATE_ALLOWANCE_SUCCESS,\r\n  UPDATE_ALLOWANCE_ERROR,\r\n  DELETE_ALLOWANCE_BEGIN,\r\n  DELETE_ALLOWANCE_SUCCESS,\r\n  DELETE_ALLOWANCE_ERROR,\r\n  GET_DEDUCTIONS_BEGIN,\r\n  GET_DEDUCTIONS_SUCCESS,\r\n  GET_DEDUCTIONS_ERROR,\r\n  ADD_DEDUCTION_BEGIN,\r\n  ADD_DEDUCTION_SUCCESS,\r\n  ADD_DEDUCTION_ERROR,\r\n  UPDATE_DEDUCTION_BEGIN,\r\n  UPDATE_DEDUCTION_SUCCESS,\r\n  UPDATE_DEDUCTION_ERROR,\r\n  DELETE_DEDUCTION_BEGIN,\r\n  DELETE_DEDUCTION_SUCCESS,\r\n  DELETE_DEDUCTION_ERROR,\r\n  GET_DEPARTMENTS_BEGIN,\r\n  GET_DEPARTMENTS_SUCCESS,\r\n  GET_DEPARTMENTS_ERROR,\r\n  ADD_DEPARTMENT_BEGIN,\r\n  ADD_DEPARTMENT_SUCCESS,\r\n  ADD_DEPARTMENT_ERROR,\r\n  UPDATE_DEPARTMENT_BEGIN,\r\n  UPDATE_DEPARTMENT_SUCCESS,\r\n  UPDATE_DEPARTMENT_ERROR,\r\n  DELETE_DEPARTMENT_BEGIN,\r\n  DELETE_DEPARTMENT_SUCCESS,\r\n  DELETE_DEPARTMENT_ERROR,\r\n  GET_DESIGNATIONS_BEGIN,\r\n  GET_DESIGNATIONS_SUCCESS,\r\n  GET_DESIGNATIONS_ERROR,\r\n  ADD_DESIGNATION_BEGIN,\r\n  ADD_DESIGNATION_SUCCESS,\r\n  ADD_DESIGNATION_ERROR,\r\n  UPDATE_DESIGNATION_BEGIN,\r\n  UPDATE_DESIGNATION_SUCCESS,\r\n  UPDATE_DESIGNATION_ERROR,\r\n  DELETE_DESIGNATION_BEGIN,\r\n  DELETE_DESIGNATION_SUCCESS,\r\n  DELETE_DESIGNATION_ERROR,\r\n  GET_FAMILY_BEGIN,\r\n  GET_FAMILY_SUCCESS,\r\n  GET_FAMILY_ERROR,\r\n  ADD_FAMILY_BEGIN,\r\n  ADD_FAMILY_SUCCESS,\r\n  ADD_FAMILY_ERROR,\r\n  UPDATE_FAMILY_BEGIN,\r\n  UPDATE_FAMILY_SUCCESS,\r\n  UPDATE_FAMILY_ERROR,\r\n  DELETE_FAMILY_BEGIN,\r\n  DELETE_FAMILY_SUCCESS,\r\n  DELETE_FAMILY_ERROR,\r\n  LOAD_SINGLEBATCH_FAMILY_BEGIN,\r\n  LOAD_SINGLEBATCH_FAMILY_SUCCESS,\r\n  LOAD_SINGLEBATCH_FAMILY_ERROR,\r\n  // education\r\n  GET_EDUCATION_BEGIN,\r\n  GET_EDUCATION_SUCCESS,\r\n  GET_EDUCATION_ERROR,\r\n  ADD_EDUCATION_BEGIN,\r\n  ADD_EDUCATION_SUCCESS,\r\n  ADD_EDUCATION_ERROR,\r\n  UPDATE_EDUCATION_BEGIN,\r\n  UPDATE_EDUCATION_SUCCESS,\r\n  UPDATE_EDUCATION_ERROR,\r\n  DELETE_EDUCATION_BEGIN,\r\n  DELETE_EDUCATION_SUCCESS,\r\n  DELETE_EDUCATION_ERROR,\r\n  LOAD_SINGLEBATCH_EDUCATION_BEGIN,\r\n  LOAD_SINGLEBATCH_EDUCATION_SUCCESS,\r\n  LOAD_SINGLEBATCH_EDUCATION_ERROR,\r\n  // experience\r\n  GET_EXPERIENCE_BEGIN,\r\n  GET_EXPERIENCE_SUCCESS,\r\n  GET_EXPERIENCE_ERROR,\r\n  ADD_EXPERIENCE_BEGIN,\r\n  ADD_EXPERIENCE_SUCCESS,\r\n  ADD_EXPERIENCE_ERROR,\r\n  UPDATE_EXPERIENCE_BEGIN,\r\n  UPDATE_EXPERIENCE_SUCCESS,\r\n  UPDATE_EXPERIENCE_ERROR,\r\n  DELETE_EXPERIENCE_BEGIN,\r\n  DELETE_EXPERIENCE_SUCCESS,\r\n  DELETE_EXPERIENCE_ERROR,\r\n  LOAD_SINGLEBATCH_EXPERIENCE_BEGIN,\r\n  LOAD_SINGLEBATCH_EXPERIENCE_SUCCESS,\r\n  LOAD_SINGLEBATCH_EXPERIENCE_ERROR,\r\n  // reset\r\n  RESET_TABLES,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  payitems: [],\r\n  payitems_loading: false,\r\n  payitems_error: false,\r\n  allowances: [],\r\n  allowances_loading: false,\r\n  allowances_error: false,\r\n  deductions: [],\r\n  deductions_loading: false,\r\n  deductions_error: false,\r\n  departments: [],\r\n  departments_loading: false,\r\n  departments_error: false,\r\n  designatons: [],\r\n  designations_loading: false,\r\n  designations_error: false,\r\n  family: [],\r\n  family_loading: false,\r\n  family_error: false,\r\n  singlebatch_family_loading: false,\r\n  singlebatch_family_error: false,\r\n  singlebatchfamily: {},\r\n  single_family: {},\r\n  education: [],\r\n  education_loading: false,\r\n  education_error: false,\r\n  singlebatch_education_loading: false,\r\n  singlebatch_education_error: false,\r\n  singlebatcheducation: {},\r\n  experience: [],\r\n  experience_loading: false,\r\n  experience_error: false,\r\n  singlebatch_experience_loading: false,\r\n  singlebatch_experience_error: false,\r\n  singlebatchexperience: {},\r\n};\r\n\r\nconst TablesContext = React.createContext();\r\n\r\nexport const TablesProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  // payitems\r\n  const loadPayitems = async () => {\r\n    dispatch({ type: GET_PAYITEMS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(payitems_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payitems = await res.json();\r\n      dispatch({ type: GET_PAYITEMS_SUCCESS, payload: payitems });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYITEMS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addPayitem = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_PAYITEM_BEGIN });\r\n    try {\r\n      await fetch(payitems_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_PAYITEM_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_PAYITEM_ERROR });\r\n    }\r\n  };\r\n\r\n  const updatePayitem = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_PAYITEM_BEGIN });\r\n    try {\r\n      await fetch(payitems_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_PAYITEM_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_PAYITEM_ERROR });\r\n    }\r\n  };\r\n\r\n  const deletePayitem = async (id) => {\r\n    dispatch({ type: DELETE_PAYITEM_BEGIN });\r\n    try {\r\n      await fetch(payitems_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_PAYITEM_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_PAYITEM_ERROR });\r\n    }\r\n  };\r\n\r\n  // Allowances\r\n  const loadAllowances = async () => {\r\n    dispatch({ type: GET_ALLOWANCES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(allowances_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const allowances = await res.json();\r\n      dispatch({ type: GET_ALLOWANCES_SUCCESS, payload: allowances });\r\n    } catch (error) {\r\n      dispatch({ type: GET_ALLOWANCES_ERROR });\r\n    }\r\n  };\r\n\r\n  const addAllowance = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_ALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(allowances_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_ALLOWANCE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_ALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateAllowance = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_ALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(allowances_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_ALLOWANCE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_ALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteAllowance = async (id) => {\r\n    dispatch({ type: DELETE_ALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(allowances_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_ALLOWANCE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_ALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  // Deductions\r\n  const loadDeductions = async () => {\r\n    dispatch({ type: GET_DEDUCTIONS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(deductions_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const deductions = await res.json();\r\n      dispatch({ type: GET_DEDUCTIONS_SUCCESS, payload: deductions });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DEDUCTIONS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDeduction = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_DEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(deductions_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DEDUCTION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDeduction = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(deductions_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DEDUCTION_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDeduction = async (id) => {\r\n    dispatch({ type: DELETE_DEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(deductions_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DEDUCTION_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  // Departments\r\n  const loadDepartments = async () => {\r\n    dispatch({ type: GET_DEPARTMENTS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(departments_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const departments = await res.json();\r\n      dispatch({ type: GET_DEPARTMENTS_SUCCESS, payload: departments });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DEPARTMENTS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDepartment = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_DEPARTMENT_BEGIN });\r\n    try {\r\n      await fetch(departments_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DEPARTMENT_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DEPARTMENT_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDepartment = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DEPARTMENT_BEGIN });\r\n    try {\r\n      await fetch(departments_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DEPARTMENT_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DEPARTMENT_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDepartment = async (id) => {\r\n    dispatch({ type: DELETE_DEPARTMENT_BEGIN });\r\n    try {\r\n      await fetch(departments_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DEPARTMENT_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DEPARTMENT_ERROR });\r\n    }\r\n  };\r\n\r\n  // Designations\r\n  const loadDesignations = async () => {\r\n    dispatch({ type: GET_DESIGNATIONS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(designations_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const designations = await res.json();\r\n      dispatch({ type: GET_DESIGNATIONS_SUCCESS, payload: designations });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DESIGNATIONS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDesignation = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_DESIGNATION_BEGIN });\r\n    try {\r\n      await fetch(designations_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DESIGNATION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DESIGNATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDesignation = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DESIGNATION_BEGIN });\r\n    try {\r\n      await fetch(designations_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DESIGNATION_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DESIGNATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDesignation = async (id) => {\r\n    dispatch({ type: DELETE_DESIGNATION_BEGIN });\r\n    try {\r\n      await fetch(designations_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DESIGNATION_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DESIGNATION_ERROR });\r\n    }\r\n  };\r\n\r\n  // Family\r\n  const loadFamily = async () => {\r\n    dispatch({ type: GET_FAMILY_BEGIN });\r\n    try {\r\n      const res = await fetch(family_url);\r\n      const family = await res.json();\r\n      dispatch({ type: GET_FAMILY_SUCCESS, payload: family });\r\n    } catch (error) {\r\n      dispatch({ type: GET_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadSingleBatchFamily = async (empid) => {\r\n    dispatch({ type: LOAD_SINGLEBATCH_FAMILY_BEGIN });\r\n    try {\r\n      const res = await fetch(`${family_url}?fv=${empid}`);\r\n      //console.log(`${family_url}?fv=${linkid}`);\r\n      const singlebatchfamily = await res.json();\r\n\r\n      dispatch({\r\n        type: LOAD_SINGLEBATCH_FAMILY_SUCCESS,\r\n        payload: singlebatchfamily,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: LOAD_SINGLEBATCH_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  const addFamily = async (data) => {\r\n    const { id, name } = data;\r\n\r\n    dispatch({ type: ADD_FAMILY_BEGIN });\r\n    try {\r\n      await fetch(family_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_FAMILY_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateFamily = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_FAMILY_BEGIN });\r\n    try {\r\n      await fetch(family_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_FAMILY_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteFamily = async (id) => {\r\n    dispatch({ type: DELETE_FAMILY_BEGIN });\r\n    try {\r\n      await fetch(family_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_FAMILY_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  // Education\r\n  const loadEducation = async () => {\r\n    dispatch({ type: GET_EDUCATION_BEGIN });\r\n    try {\r\n      const res = await fetch(educations_url);\r\n\r\n      const education = await res.json();\r\n      dispatch({ type: GET_EDUCATION_SUCCESS, payload: education });\r\n    } catch (error) {\r\n      dispatch({ type: GET_EDUCATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadSingleBatchEducation = async (empid) => {\r\n    dispatch({ type: LOAD_SINGLEBATCH_EDUCATION_BEGIN });\r\n    try {\r\n      const res = await fetch(`${educations_url}?fv=${empid}`);\r\n\r\n      const singlebatcheducation = await res.json();\r\n      dispatch({\r\n        type: LOAD_SINGLEBATCH_EDUCATION_SUCCESS,\r\n        payload: singlebatcheducation,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: LOAD_SINGLEBATCH_EDUCATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const addEducation = async (data) => {\r\n    const { id, name } = data;\r\n\r\n    dispatch({ type: ADD_EDUCATION_BEGIN });\r\n    try {\r\n      await fetch(educations_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_EDUCATION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_EDUCATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateEducation = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_EDUCATION_BEGIN });\r\n    try {\r\n      await fetch(educations_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_EDUCATION_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_EDUCATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteEducation = async (id) => {\r\n    dispatch({ type: DELETE_EDUCATION_BEGIN });\r\n    try {\r\n      await fetch(educations_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_EDUCATION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_EDUCATION_ERROR });\r\n    }\r\n  };\r\n\r\n  // Experience\r\n  const loadExperience = async () => {\r\n    dispatch({ type: GET_EXPERIENCE_BEGIN });\r\n    try {\r\n      const res = await fetch(educations_url);\r\n\r\n      const experience = await res.json();\r\n      dispatch({ type: GET_EXPERIENCE_SUCCESS, payload: experience });\r\n    } catch (error) {\r\n      dispatch({ type: GET_EXPERIENCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadSingleBatchExperience = async (empid) => {\r\n    dispatch({ type: LOAD_SINGLEBATCH_EXPERIENCE_BEGIN });\r\n    try {\r\n      const res = await fetch(`${experiences_url}?fv=${empid}`);\r\n\r\n      const singlebatchexperience = await res.json();\r\n      dispatch({\r\n        type: LOAD_SINGLEBATCH_EXPERIENCE_SUCCESS,\r\n        payload: singlebatchexperience,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: LOAD_SINGLEBATCH_EXPERIENCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const addExperience = async (data) => {\r\n    const { id, name } = data;\r\n\r\n    dispatch({ type: ADD_EXPERIENCE_BEGIN });\r\n    try {\r\n      await fetch(experiences_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_EXPERIENCE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_EXPERIENCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateExperience = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_EXPERIENCE_BEGIN });\r\n    try {\r\n      await fetch(experiences_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_EXPERIENCE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_EXPERIENCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteExperience = async (id) => {\r\n    dispatch({ type: DELETE_EXPERIENCE_BEGIN });\r\n    try {\r\n      await fetch(experiences_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_EXPERIENCE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_EXPERIENCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const resetTables = () => {\r\n    dispatch({ type: RESET_TABLES });\r\n  };\r\n\r\n  return (\r\n    <TablesContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadPayitems,\r\n        addPayitem,\r\n        deletePayitem,\r\n        updatePayitem,\r\n        loadAllowances,\r\n        addAllowance,\r\n        deleteAllowance,\r\n        updateAllowance,\r\n        loadDeductions,\r\n        addDeduction,\r\n        deleteDeduction,\r\n        updateDeduction,\r\n        loadDepartments,\r\n        addDepartment,\r\n        deleteDepartment,\r\n        updateDepartment,\r\n        loadDesignations,\r\n        addDesignation,\r\n        deleteDesignation,\r\n        updateDesignation,\r\n        loadFamily,\r\n        loadSingleBatchFamily,\r\n        addFamily,\r\n        deleteFamily,\r\n        updateFamily,\r\n        loadEducation,\r\n        loadSingleBatchEducation,\r\n        addEducation,\r\n        deleteEducation,\r\n        updateEducation,\r\n        loadExperience,\r\n        loadSingleBatchExperience,\r\n        addExperience,\r\n        deleteExperience,\r\n        updateExperience,\r\n        resetTables,\r\n      }}\r\n    >\r\n      {children}\r\n    </TablesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTablesContext = () => {\r\n  return useContext(TablesContext);\r\n};\r\n","D:\\react-myprojects\\hrms-airtable\\src\\reducers\\tables_reducer.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\pages\\BatchPayslipsPage.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\Preferences.js",[],["3070","3071"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipForm.js",["3072","3073","3074","3075","3076","3077","3078","3079","3080","3081","3082","3083","3084","3085","3086","3087","3088","3089","3090","3091","3092","3093","3094","3095","3096","3097","3098","3099","3100","3101","3102","3103"],"import React, { useState, useReducer, useEffect, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Checkbox,\r\n  Paper,\r\n  Typography,\r\n  Select,\r\n  Divider,\r\n  Grid,\r\n  Toolbar,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CardLayout from \"../helpers/CardLayout\";\r\nimport CardLayout2 from \"../helpers/CardLayout2\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n  payEarningDataState,\r\n  payDeductionDataState,\r\n} from \"./data/atomdata\";\r\n\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport Payslip_ViewEarnings from \"./Payslip_ViewEarnings\";\r\nimport Payslip_ViewDeductions from \"./Payslip_ViewDeductions\";\r\nimport Payslip_Earnings from \"./Payslip_Earnings\";\r\nimport Payslip_Deductions from \"./Payslip_Deductions\";\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  period: \"\",\r\n  date: \"\",\r\n  bank_name: \"\",\r\n  bank_acno: \"\",\r\n  status: \"Pending\",\r\n  total_earnings: 0,\r\n  total_deductions: 0,\r\n  tap_amount: 0,\r\n  scp_amount: 0,\r\n  basic_pay: 0,\r\n  nett_pay: 0,\r\n  tap_checkbox: true,\r\n};\r\n\r\nconst PayslipForm = () => {\r\n  let history = useHistory();\r\n  const [calc, setCalc] = useState(false);\r\n  const classes = useStyles();\r\n  const {\r\n    isPayslipEditing,\r\n    single_payslip,\r\n    updatePayslip,\r\n    addPayslip,\r\n    editPayslipID,\r\n    loadPayslips,\r\n    getSinglePayslip,\r\n    single_payslip_loading,\r\n    single_payslip_error,\r\n    payslip_period,\r\n    payslip_earning_amount,\r\n    payslip_deduction_amount,\r\n    setPayslipEarningAmount,\r\n    setPayslipDeductionAmount,\r\n    payslipearnings,\r\n    payslipdeductions,\r\n    getSingleBatchPayslipEarnings,\r\n    getSingleBatchPayslipDeductions,\r\n  } = usePayslipsContext();\r\n  const { loadEmployees, employees } = useEmployeesContext();\r\n  const { loadAllowances, loadDeductions, allowances, deductions } =\r\n    useTablesContext();\r\n  const payPeriodEmpId = useRecoilValue(payPeriodEmpIdState);\r\n  const payPeriod = useRecoilValue(payPeriodState);\r\n  const setPayEarningData = useSetRecoilState(payEarningDataState);\r\n  const setPayDeductionData = useSetRecoilState(payDeductionDataState);\r\n  const [earningsdata, setEarningsdata] = useState([]);\r\n  const [oldEarningsdata, setOldEarningsdata] = useState([]);\r\n  const [deductionsdata, setDeductionsdata] = useState([]);\r\n  const [oldDeductionsdata, setOldDeductionsdata] = useState([]);\r\n  const [isEarningsDialogOpen, setIsEarningsDialogOpen] = useState(false);\r\n  const [isDeductionsDialogOpen, setIsDeductionsDialogOpen] = useState(false);\r\n  //const [state, setState] = useState(single_payslip);\r\n  const { handleSubmit, control } = useForm();\r\n\r\n  const {\r\n    name,\r\n    period,\r\n    date,\r\n    bank_name,\r\n    bank_acno,\r\n    status,\r\n    total_earnings,\r\n    total_deductions,\r\n    tap_amount,\r\n    scp_amount,\r\n    basic_pay,\r\n    nett_pay,\r\n    tap_checkbox,\r\n  } = single_payslip;\r\n\r\n  useEffect(async () => {\r\n    getSinglePayslip(editPayslipID);\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (calc) {\r\n  //     setTimeout(() => {\r\n  //       console.log(\"calc\");\r\n  //       calc_totals();\r\n  //       setCalc(false);\r\n  //     }, 10000);\r\n  //   }\r\n  // }, [calc]);\r\n\r\n  const handleChange = (event) => {\r\n    //const { rec_id, ...fields } = single_payslip;\r\n    // const value =\r\n    //   event.target.type === \"number\"\r\n    //     ? parseInt(event.target.value, 10)\r\n    //     : event.target.value;\r\n    // setState({ ...state, [event.target.name]: value });\r\n  };\r\n\r\n  const calc_totals = () => {\r\n    let totalTAP = 0;\r\n    let totalSCP = 0;\r\n    if (tap_checkbox) {\r\n      totalTAP = Math.ceil(basic_pay * 0.05);\r\n      totalSCP = Math.round((basic_pay + Number.EPSILON) * 0.035 * 100) / 100;\r\n    }\r\n    console.log(\"calc\", totalTAP, totalSCP)\r\n    const totalEarnings = payslipearnings.reduce(\r\n      (a, v) => (a = a + v.amount),\r\n      0\r\n    );\r\n    const totalDeductions = payslipdeductions.reduce(\r\n      (a, v) => (a = a + v.amount),\r\n      0\r\n    );\r\n    const nettPay =\r\n      basic_pay + totalEarnings - totalDeductions - totalTAP - totalSCP;\r\n    setPayslipEarningAmount(totalEarnings);\r\n    setPayslipDeductionAmount(totalDeductions);\r\n    updatePayslip({\r\n      id: editPayslipID,\r\n      total_earnings: totalEarnings,\r\n      total_deductions: totalDeductions,\r\n      tap_amount: totalTAP,\r\n      scp_amount: totalSCP,\r\n      nett_pay: nettPay,\r\n    });\r\n    console.log(\r\n      \"total\",\r\n      totalEarnings,\r\n      totalDeductions,\r\n      totalTAP,\r\n      totalSCP,\r\n      nettPay\r\n    );\r\n    getSinglePayslip(editPayslipID);\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    const { rec_id, ...fields } = single_payslip;\r\n    updatePayslip(...fields);\r\n\r\n    // if (isPayslipEditing) {\r\n    //   updatePayslip({ id: editPayslipID, ...data });\r\n    // } else {\r\n    //   addPayslip({ ...data });\r\n    // }\r\n    // loadPayslips();\r\n    // history.push(\"/batchpayslips\");\r\n  };\r\n  const handleEarningsDialogOpen = () => {\r\n    // setPayEarningData([...payslipearnings]);\r\n    setOldEarningsdata([...payslipearnings]);\r\n    setEarningsdata([...payslipearnings]);\r\n    setIsEarningsDialogOpen(true);\r\n  };\r\n\r\n  const handleEarningsDialogClose = () => {\r\n    setIsEarningsDialogOpen(false);\r\n    getSingleBatchPayslipEarnings(payPeriodEmpId, payPeriod);\r\n  };\r\n  const handleDeductionsDialogOpen = () => {\r\n    setOldDeductionsdata([...payslipdeductions]);\r\n    setDeductionsdata([...payslipdeductions]);\r\n    setIsDeductionsDialogOpen(true);\r\n  };\r\n\r\n  const handleDeductionsDialogClose = () => {\r\n    setIsDeductionsDialogOpen(false);\r\n    getSingleBatchPayslipDeductions(payPeriodEmpId, payPeriod);\r\n  };\r\n\r\n  if (single_payslip_loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (single_payslip_error) {\r\n    history.push(\"/error\");\r\n  }\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Grid xs={12} md={8} lg={12}>\r\n          <CardLayout2 title=\"Employee Profile\">\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <Grid>\r\n                <div>\r\n                  <Typography variant=\"h5\" component=\"h3\">\r\n                    PAYSLIP FORM\r\n                  </Typography>\r\n                  <Typography component=\"p\">Payslip Preparation</Typography>\r\n\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                  >\r\n                    Submit <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n              <Divider className={classes.divider} />\r\n              <Grid item xs={12}>\r\n                <div>\r\n                  <Controller\r\n                    name=\"name\"\r\n                    control={control}\r\n                    defaultValue={name}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Name\"\r\n                          id=\"margin-normal\"\r\n                          name=\"name\"\r\n                          defaultValue={name}\r\n                          className={classes.textField}\r\n                          onChange={handleChange}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        >\r\n                          {/* {employees.map((e) => {\r\n                  return (\r\n                    <MenuItem key={e.name} value={e.name}>\r\n                      {e.name}\r\n                    </MenuItem>\r\n                  );\r\n                })} */}\r\n                        </TextField>\r\n                      );\r\n                    }}\r\n                    rules={{ required: \"Name required\" }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"period\"\r\n                    control={control}\r\n                    defaultValue={period}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Period\"\r\n                          id=\"margin-normal\"\r\n                          name=\"period\"\r\n                          defaultValue={period}\r\n                          className={classes.textField}\r\n                          onChange={handleChange}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                  <Controller\r\n                    name=\"date\"\r\n                    control={control}\r\n                    defaultValue={date}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Date\"\r\n                          type=\"date\"\r\n                          id=\"margin-normal\"\r\n                          name=\"date\"\r\n                          defaultValue={date}\r\n                          className={classes.textField}\r\n                          onChange={handleChange}\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"bank_name\"\r\n                    control={control}\r\n                    defaultValue={bank_name}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Bank Name\"\r\n                          id=\"margin-normal\"\r\n                          name=\"bank_name\"\r\n                          defaultValue={bank_name}\r\n                          className={classes.textField}\r\n                          onChange={handleChange}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                  <Controller\r\n                    name=\"bank_acno\"\r\n                    control={control}\r\n                    defaultValue={bank_acno}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Bank AC No\"\r\n                          id=\"margin-normal\"\r\n                          name=\"bank_acno\"\r\n                          value={bank_acno}\r\n                          className={classes.textField}\r\n                          onChange={handleChange}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"tap_amount\"\r\n                    control={control}\r\n                    defaultValue={tap_amount}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"TAP Contrinution\"\r\n                          type=\"currency\"\r\n                          id=\"standard-number\"\r\n                          name=\"tap_amount\"\r\n                          defaultValue={tap_amount}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            handleChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                  <Controller\r\n                    name=\"scp_amount\"\r\n                    control={control}\r\n                    defaultValue={scp_amount}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"SCP Contribution\"\r\n                          type=\"currency\"\r\n                          id=\"standard-number\"\r\n                          name=\"scp_amount\"\r\n                          defaultValue={scp_amount}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            handleChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"total_earnings\"\r\n                    control={control}\r\n                    defaultValue={total_earnings}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Total Earnings\"\r\n                          type=\"number\"\r\n                          id=\"standard-number\"\r\n                          name=\"total_earnings\"\r\n                          value={total_earnings}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            handleChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                  <Controller\r\n                    name=\"total_deductions\"\r\n                    control={control}\r\n                    defaultValue={total_deductions}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Total Deductions\"\r\n                          type=\"number\"\r\n                          id=\"standard-number\"\r\n                          name=\"total_deductions\"\r\n                          value={total_deductions}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            handleChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"basic_pay\"\r\n                    control={control}\r\n                    defaultValue={basic_pay}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Basic Pay\"\r\n                          type=\"number\"\r\n                          id=\"standard-number\"\r\n                          name=\"basic_pay\"\r\n                          value={basic_pay}\r\n                          className={classes.textField}\r\n                          onChange={handleChange}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                          // onChange={(e) => {\r\n                          //   handleChange(parseInt(e.target.value, 10));\r\n                          // }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                  <Controller\r\n                    name=\"nett_pay\"\r\n                    control={control}\r\n                    defaultValue={nett_pay}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Nett Pay\"\r\n                          type=\"number\"\r\n                          id=\"standard-number\"\r\n                          name=\"nett_pay\"\r\n                          value={nett_pay}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            handleChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                </div>\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  onClick={calc_totals}\r\n                >\r\n                  Calc <Icon className={classes.rightIcon}>send</Icon>\r\n                </Button>\r\n              </Grid>\r\n              <Divider className={classes.divider} />\r\n            </form>\r\n          </CardLayout2>\r\n        </Grid>\r\n        <div>\r\n          <Grid container alignItems=\"center\" className={classes.grid}>\r\n            <Grid item xs={6} md={8} lg={6}>\r\n              <div>\r\n                <CardLayout\r\n                  title=\"Earnings\"\r\n                  handleClick={handleEarningsDialogOpen}\r\n                >\r\n                  <Payslip_ViewEarnings />\r\n                </CardLayout>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={6} md={8} lg={6}>\r\n              <div>\r\n                <CardLayout\r\n                  title=\"Deductions\"\r\n                  handleClick={handleDeductionsDialogOpen}\r\n                >\r\n                  <Payslip_ViewDeductions />\r\n                </CardLayout>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        <Divider className={classes.divider} />\r\n        <CustomDialog\r\n          isOpen={isEarningsDialogOpen}\r\n          handleClose={handleEarningsDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <Payslip_Earnings\r\n            setEarningsdata={setEarningsdata}\r\n            earningsdata={earningsdata}\r\n            oldEarningsdata={oldEarningsdata}\r\n            handleDialogClose={handleEarningsDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isDeductionsDialogOpen}\r\n          handleClose={handleDeductionsDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <Payslip_Deductions\r\n            setDeductionsdata={setDeductionsdata}\r\n            deductionsdata={deductionsdata}\r\n            oldDeductionsdata={oldDeductionsdata}\r\n            handleDialogClose={handleDeductionsDialogClose}\r\n          />\r\n        </CustomDialog>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  divider: {\r\n    padding: 4,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n  grid: {\r\n    padding: theme.spacing(3, 2),\r\n    // justifyContent: \"center\",\r\n  },\r\n  box: {\r\n    height: 100,\r\n    display: \"flex\",\r\n    border: \"1px solid black\",\r\n    padding: 8,\r\n  },\r\n}));\r\n\r\nexport default PayslipForm;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\ModalDialog.js",[],["3104","3105"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\DashboardMain.js",["3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { Container, Flex, Heading } from \"@chakra-ui/react\";\r\n// import Chart from \"./Chart\";\r\n// import Deposits from \"./Deposits\";\r\n// import Orders from \"./Orders\";\r\n\r\nimport Appbanner from \"./Appbanner\";\r\nimport Example from \"./Example6\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport SingleEmployee from \"./SingleEmployee\";\r\nimport SingleLeave from \"./SingleLeave\";\r\nimport SingleExpense from \"./SingleExpense\";\r\nimport SingleDailyAllowance from \"./SingleDailyAllowance\";\r\nimport SingleDailyAllowsDetls from \"./SingleDailyAllowsDetls\";\r\nimport BatchDailyAllowances from \"./BatchDailyAllowances\";\r\nimport SinglePayslip from \"./SinglePayslip\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport Login from \"./LoginForm\";\r\nimport Payrun from \"./Payrun\";\r\nimport Payrunbatch from \"./Payrunbatch\";\r\nimport DashboardStaff from \"./DashboardStaff\";\r\nimport DashboardAdmin from \"./DashboardAdmin\";\r\nimport DashboardOpsSpvr from \"./DashboardOpsSpvr\";\r\nimport DashboardAdminManager from \"./DashboardAdminManager\";\r\nimport DashboardManager from \"./DashboardManager\";\r\nimport DashboardDirector from \"./DashboardDirector\";\r\n\r\nimport {\r\n  Home,\r\n  AllEmployees,\r\n  Leave,\r\n  Expenses,\r\n  Payslip,\r\n  BatchPayslips,\r\n  Payroll,\r\n  Departments,\r\n  Designation,\r\n  Tables,\r\n  Clients,\r\n  Allowances,\r\n  DailyAllowances,\r\n  // PrivateRoute,\r\n  Error,\r\n} from \"../pages\";\r\n\r\nconst drawerWidth = 0;\r\n\r\nexport default function DashboardMain() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [open, setOpen] = React.useState(true);\r\n  const [login, setLogin] = React.useState(true);\r\n  const [select, setSelect] = React.useState(\"Staff\");\r\n  //console.log(\"loginLevel\", loginLevel);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSelect = (title) => {\r\n    setLoginLevel({ ...loginLevel, loginLevel: title });\r\n    setSelect(title);\r\n    <Redirect to=\"/\" />;\r\n  };\r\n\r\n  //  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  if (!login) {\r\n    return <Login setLogin={setLogin} />;\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Router>\r\n        <Appbanner\r\n          handleDrawerOpen={handleDrawerOpen}\r\n          handleDrawerClose={handleDrawerClose}\r\n          handleSelect={handleSelect}\r\n          open={open}\r\n          setLogin={setLogin}\r\n          title=\"HRMS V1.4 - AppSmiths Sutera Sdn Bhd\"\r\n        />\r\n        <Flex>\r\n          {select === \"Staff\" && (\r\n            <DashboardStaff\r\n              open={open}\r\n              handleDrawerOpen={handleDrawerOpen}\r\n              handleDrawerClose={handleDrawerClose}\r\n            />\r\n          )}\r\n          {select === \"Admin\" && (\r\n            <DashboardAdmin\r\n              open={open}\r\n              handleDrawerOpen={handleDrawerOpen}\r\n              handleDrawerClose={handleDrawerClose}\r\n            />\r\n          )}\r\n          {select === \"OpsSpvr\" && (\r\n            <DashboardOpsSpvr\r\n              open={open}\r\n              handleDrawerOpen={handleDrawerOpen}\r\n              handleDrawerClose={handleDrawerClose}\r\n            />\r\n          )}\r\n          {select === \"AdminManager\" && (\r\n            <DashboardAdminManager\r\n              open={open}\r\n              handleDrawerOpen={handleDrawerOpen}\r\n              handleDrawerClose={handleDrawerClose}\r\n            />\r\n          )}\r\n          {select === \"Manager\" && (\r\n            <DashboardManager\r\n              open={open}\r\n              handleDrawerOpen={handleDrawerOpen}\r\n              handleDrawerClose={handleDrawerClose}\r\n            />\r\n          )}\r\n          {select === \"Director\" && (\r\n            <DashboardDirector\r\n              open={open}\r\n              handleDrawerOpen={handleDrawerOpen}\r\n              handleDrawerClose={handleDrawerClose}\r\n            />\r\n          )}\r\n        </Flex>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\SingleDailyAllowsDetls.js",["3136"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DailyAllowsDetlsTable from \"./DailyAllowsDetlsTable\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ToolbarHeader = ({ title }) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SingleDailyAllowsDetls = ({ title }) => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Link to=\"/batchdailyallowances\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link>\r\n                <div>\r\n                  {/* <ToolbarHeader title={title} /> */}\r\n                  \r\n                  <DailyAllowsDetlsTable />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nexport default SingleDailyAllowsDetls;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowsDetlsTable.js",["3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Icon, Button } from \"@material-ui/core\";\r\nimport {\r\n  selector,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  useRecoilValueLoadable,\r\n  useRecoilStateLoadable,\r\n} from \"recoil\";\r\nimport {\r\n  loginLevelState,\r\n  allowsDataState,\r\n  empidState,\r\n  allowsPeriodState,\r\n} from \"./data/atomdata\";\r\nimport { fetchDailyAllowsDetlsSelector } from \"./data/selectordata\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport { useDailyAllowsDetlsBatch } from \"./dailyallowsdetls/useDailyAllowsDetlsBatch\";\r\nimport { useDailyAllows } from \"./dailyallows/useDailyAllows\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    cellStyle: {\r\n      width: 120,\r\n      maxWidth: 120,\r\n    },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  { title: \"District\", field: \"district\" },\r\n  { title: \"Operation Type\", field: \"typeoperation\" },\r\n  { title: \"Client\", field: \"client\" },\r\n  { title: \"Location/Rig\", field: \"location\" },\r\n  { title: \"Ticket No/Job No\", field: \"jobno\" },\r\n  { title: \"Crew Operation\", field: \"crewoperation\" },\r\n  {\r\n    title: \"Job Bonus\",\r\n    field: \"jobbonus\",\r\n    type: \"currency\",\r\n    cellStyle: {\r\n      width: 8,\r\n      maxWidth: 8,\r\n    },\r\n    headerStyle: {\r\n      width: 8,\r\n      maxWidth: 8,\r\n    },\r\n  },\r\n  {\r\n    title: \"Per Diem\",\r\n    field: \"perdiem\",\r\n    type: \"currency\",\r\n    cellStyle: {\r\n      width: 8,\r\n      maxWidth: 8,\r\n    },\r\n    headerStyle: {\r\n      width: 8,\r\n      maxWidth: 8,\r\n    },\r\n  },\r\n];\r\n\r\nexport default function DailyAllowsDetlsTable() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  // const [allowsDetlsTable, setAllowsDetlsTable] =\r\n  // useRecoilState(allowsDataDetlsState);\r\n  //console.log(\"detlstable\", singlebatch_dailyallowsdetl);\r\n  //const [allowsDetlsdata, setAllowsDetilsdata] = useRecoilStateLoadable(fetchDailyAllowsDetlsSelector);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const allows_period = useRecoilValue(allowsPeriodState);\r\n  const allows_empid = useRecoilValue(empidState);\r\n  const { dailyallows, dailyAllowsId, setDailyAllowsId } = useDailyAllows();\r\n  const {\r\n    useDailyAllowsDetlsBatch,\r\n    setDailyAllowsDetlsId,\r\n    setDailyAllowsDetlsPeriod,\r\n  } = useDailyAllowsDetlsBatch();\r\n  const {\r\n    dailyallowsdetls,\r\n    addDailyAllowsDetl,\r\n    dailyallowsdetls_loading,\r\n    updateDailyAllowsDetl,\r\n    deleteDailyAllowsDetl,\r\n    getSingleBatchDailyAllowsDetl,\r\n    //singlebatch_dailyallowsdetl,\r\n    singlebatch_dailyallowsdetl_loading,\r\n    dailyallowance_period,\r\n    single_dailyallowance,\r\n    editDailyAllowanceID,\r\n  } = useDailyAllowancesContext();\r\n\r\n  // useEffect(() => {\r\n  //   getSingleBatchDailyAllowsDetl(allows_empid, allows_period);\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    setDailyAllowsId(allows_empid);\r\n    setDailyAllowsDetlsPeriod(allows_period);\r\n    setDailyAllowsDetlsId(allows_empid);\r\n  }, [allows_period, allows_empid]);\r\n\r\n  // const add_DailyAllowsDetl = async (data) => {\r\n  //   console.log(\"add\", data);\r\n  //   const { description, amount } = data;\r\n  //   addDailyAllowsDetl({\r\n  //     description: description,\r\n  //     amount: amount,\r\n  //     name: single_dailyallowance.name,\r\n  //     empid: single_dailyallowance.empid,\r\n  //     period: dailyallowance_period,\r\n  //   });\r\n  // };\r\n\r\n  // const delete_DailyAllowance = (data) => {\r\n  //   const { id } = data;\r\n  //   deleteDailyAllowsDetl(id);\r\n  //   //update_Daily Allowances Details;\r\n  //   getSingleBatchDailyAllowsDetl(\r\n  //     single_dailyallowance.empid,\r\n  //     dailyallowance_period\r\n  //   );\r\n  // };\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"75%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={dailyallowsdetls}\r\n          title=\"Site Allowances Details\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                // setTimeout(() => {\r\n                //   setAllowsdata([...allowsdata, newData]);\r\n                //   resolve();\r\n                // }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...dailyallowsdetls];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  //setAllowsDetlsTable([...dataUpdate]);\r\n                  //editable = dataUpdate;\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            // onRowDelete: (oldData) =>\r\n            //   new Promise((resolve, reject) => {\r\n            //     setTimeout(() => {\r\n            //       //const dataDelete = [...allowsDetlsTable];\r\n            //       const index = oldData.tableData.id;\r\n            //       //dataDelete.splice(index, 1);\r\n            //       //setAllowsDetlsTable([...dataDelete]);\r\n\r\n            //       resolve();\r\n            //     }, 1000);\r\n            //   }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    // onClick={Save_Allowsdata}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n    width: 1500,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\CustomDialog.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\AllowancesTable.js",["3161"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { usePayItems } from \"./payitems/usePayItems\";\r\nimport { useUpdatePayItems } from \"./payitems/useUpdatePayItems\";\r\nimport { useDeletePayItems } from \"./payitems/useDeletePayItems\";\r\nimport { useAddPayItems } from \"./payitems/useAddPayItems\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n];\r\n\r\nexport default function UpdateAllowances() {\r\n  const classes = useStyles();\r\n  const { payitems, setPayItemId } = usePayItems();\r\n  const updatePayItems = useUpdatePayItems();\r\n  const deletePayItems = useDeletePayItems();\r\n  const addPayItems = useAddPayItems();\r\n\r\n  const update_Allowance = (data) => {\r\n    const { id, rec_id, ...fields } = data;\r\n    updatePayItems({ id, ...fields });\r\n  };\r\n\r\n  const add_Allowance = async (data) => {\r\n    const fields = { ...data, pay_type: \"Allowances\" };\r\n    addPayItems(fields);\r\n  };\r\n\r\n  const delete_Allowance = (data) => {\r\n    const { id } = data;\r\n    deletePayItems(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPayItemId(\"Allowances\");\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payitems}\r\n          title=\"Allowances\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  add_Allowance(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  update_Allowance(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  delete_Allowance(oldData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\DeductionsTable.js",["3162"],"import React, { useEffect} from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { usePayItems } from \"./payitems/usePayItems\";\r\nimport { useUpdatePayItems } from \"./payitems/useUpdatePayItems\";\r\nimport { useDeletePayItems } from \"./payitems/useDeletePayItems\";\r\nimport { useAddPayItems } from \"./payitems/useAddPayItems\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n];\r\n\r\nexport default function UpdateDeductions() {\r\n  const classes = useStyles();\r\n  const { payitems, setPayItemId } = usePayItems();\r\n  const updatePayItems = useUpdatePayItems();\r\n  const deletePayItems = useDeletePayItems();\r\n  const addPayItems = useAddPayItems();\r\n\r\n    \r\n  const update_Deduction = (data) => {\r\n    const { id, rec_id, ...fields } = data;\r\n    updatePayItems({ id, ...fields });\r\n  };\r\n\r\n  const add_Deduction = (data) => {\r\n    const fields = {...data, pay_type:\"Deductions\"}\r\n    addPayItems(fields);\r\n  };\r\n\r\n  const delete_Deduction = (data) => {\r\n    const { id } = data;\r\n    deletePayItems(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPayItemId(\"Deductions\");\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payitems}\r\n          title=\"Deductions\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  add_Deduction(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  update_Deduction(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  delete_Deduction(oldData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\DepartmentsTable.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\DesignationsTable.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\helpers\\CardLayout.js",["3163","3164","3165","3166","3167","3168","3169"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\n\r\nconst CardLayout = ({ title, children, handleClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardHeader\r\n        action={\r\n          <IconButton aria-label=\"settings\" onClick={handleClick}>\r\n            <EditIcon />\r\n          </IconButton>\r\n        }\r\n        title={title}\r\n      />\r\n      <CardContent>{children}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"500\",\r\n  },\r\n  card: {\r\n    margin: \"15px 10px\",\r\n    padding: 0,\r\n    border: \"solid 1px black\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"dark\",\r\n  },\r\n  small: {\r\n    gridRowEnd: \"span 26\",\r\n  },\r\n  medium: {\r\n    gridRowEnd: \"span 33\",\r\n  },\r\n  large: {\r\n    gridRowEnd: \"span 45\",\r\n  },\r\n}));\r\n\r\nexport default CardLayout;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\Example2.js",["3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\Example3.js",["3185","3186","3187"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\EmployeeView.js",["3188"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport CardLayout from \"../helpers/CardLayout\";\r\nimport CardLayout2 from \"../helpers/CardLayout2\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\n\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useTrainingsContext } from \"../context/trainings_context\";\r\nimport EmpViewFamily from \"./EmpViewFamily\";\r\nimport EmpViewEducations from \"./EmpViewEducations\";\r\nimport EmpViewExperiences from \"./EmpViewExperiences\";\r\nimport EmpViewLeaves from \"./EmpViewLeaves\";\r\nimport EmpViewTrainings from \"./EmpViewTrainings\";\r\nimport EmpPersonal from \"./EmpPersonal\";\r\nimport EmpFamily from \"./EmpFamily\";\r\nimport EmpEducations from \"./EmpEducations\";\r\nimport EmpExperiences from \"./EmpExperiences\";\r\nimport EmpTrainings from \"./EmpTrainings\";\r\n\r\n// const drawerWidth = 240;\r\n\r\n// const CardLayout = ({ title, children }) => {\r\n//   const classes = useStyles();\r\n//   return (\r\n//     <div>\r\n//       <CardLayout title=\"Personal Information\">\r\n//         <h2>details</h2>\r\n//       </CardLayout>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst EmployeeView = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [familydata, setFamilydata] = useState([]);\r\n  const [educationdata, setEducationdata] = useState([]);\r\n  const [experiencedata, setExperiencedata] = useState([]);\r\n  const [trainingdata, setTrainingdata] = useState([]);\r\n  const [isPersonalDialogOpen, setIsPersonalDialogOpen] = useState(false);\r\n  const [isFamilyDialogOpen, setIsFamilyDialogOpen] = useState(false);\r\n  const [isEducationDialogOpen, setIsEducationDialogOpen] = useState(false);\r\n  const [isExperienceDialogOpen, setIsExperienceDialogOpen] = useState(false);\r\n  const [isTrainingDialogOpen, setIsTrainingDialogOpen] = useState(false);\r\n\r\n  const {\r\n    editEmployeeID,\r\n    getSingleEmployee,\r\n    single_employee,\r\n    single_employee_loading,\r\n  } = useEmployeesContext();\r\n  const { singlebatch_training } = useTrainingsContext();\r\n\r\n  const {\r\n    loadDepartments,\r\n    loadDesignations,\r\n    loadSingleBatchFamily,\r\n    loadSingleBatchEducation,\r\n    singlebatchfamily,\r\n    singlebatcheducation,\r\n    singlebatchexperience,\r\n  } = useTablesContext();\r\n\r\n  useEffect(() => {\r\n    getSingleEmployee(editEmployeeID);\r\n    loadDepartments();\r\n    loadDesignations();\r\n  }, []);\r\n\r\n  //useEffect(() => {}, [singlebatchfamily]);\r\n\r\n  if (single_employee_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Employee</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handlePersonalDialogOpen = () => {\r\n    //setFamilydata([...singlebatchfamily]);\r\n    setIsPersonalDialogOpen(true);\r\n  };\r\n\r\n  const handlePersonalDialogClose = () => {\r\n    setIsPersonalDialogOpen(false);\r\n    //loadEmployees();\r\n  };\r\n\r\n  const handleFamilyDialogOpen = () => {\r\n    setFamilydata([]);\r\n    setFamilydata([...singlebatchfamily]);\r\n    setIsFamilyDialogOpen(true);\r\n  };\r\n\r\n  const handleFamilyDialogClose = () => {\r\n    setIsFamilyDialogOpen(false);\r\n    loadSingleBatchFamily(editEmployeeID);\r\n  };\r\n\r\n  const handleEducationDialogOpen = () => {\r\n    setEducationdata([]);\r\n    setEducationdata([...singlebatcheducation]);\r\n    setIsEducationDialogOpen(true);\r\n  };\r\n\r\n  const handleEducationDialogClose = () => {\r\n    setIsEducationDialogOpen(false);\r\n    loadSingleBatchEducation(editEmployeeID);\r\n  };\r\n\r\n  const handleExperienceDialogOpen = () => {\r\n    setExperiencedata([...singlebatchexperience]);\r\n    setIsExperienceDialogOpen(true);\r\n  };\r\n\r\n  const handleExperienceDialogClose = () => {\r\n    setIsExperienceDialogOpen(false);\r\n    //loadEmployees();\r\n  };\r\n\r\n  const handleTrainingDialogOpen = () => {\r\n    setTrainingdata([...singlebatch_training]);\r\n    setIsTrainingDialogOpen(true);\r\n    //loadEmployees();\r\n  };\r\n\r\n  const handleTrainingDialogClose = () => {\r\n    setIsTrainingDialogOpen(false);\r\n    //loadEmployees();\r\n  };\r\n\r\n  return (\r\n    <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={8} lg={12}>\r\n            <CardLayout2 title=\"Employee Profile\">\r\n              <div>\r\n                <form className={classes.form}>\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={single_employee.name}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    value={single_employee.phone}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    value={single_employee.email}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    label=\"Birth Date\"\r\n                    name=\"birthdate\"\r\n                    value={single_employee.birhdate}\r\n                    type=\"date\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    label=\"Gender\"\r\n                    name=\"gender\"\r\n                    value={single_employee.gender}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    label=\"Leave Balance\"\r\n                    name=\"leave_bal\"\r\n                    value={single_employee.leave_bal}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </form>\r\n              </div>\r\n            </CardLayout2>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <div>\r\n              <CardLayout\r\n                title=\"Personal Information\"\r\n                handleClick={handlePersonalDialogOpen}\r\n              >\r\n                <div>\r\n                  <form className={classes.form}>\r\n                    <TextField\r\n                      label=\"I/C No\"\r\n                      name=\"icno\"\r\n                      value={single_employee.ic_no}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    />\r\n\r\n                    <TextField\r\n                      label=\"I/C Expiry Date\"\r\n                      name=\"ic_expirydate\"\r\n                      value={single_employee.ic_expirydate}\r\n                      type=\"date\"\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                    />\r\n\r\n                    <TextField\r\n                      label=\"Passport No\"\r\n                      name=\"passportno\"\r\n                      value={single_employee.passportno}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    />\r\n                    <TextField\r\n                      label=\"Passport Expiry Date\"\r\n                      name=\"passport_expirydate\"\r\n                      value={single_employee.passport_expirydate}\r\n                      type=\"date\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    />\r\n\r\n                    <TextField\r\n                      label=\"Work Permit No\"\r\n                      name=\"workpermitno\"\r\n                      value={single_employee.workpermitno}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    />\r\n                    <TextField\r\n                      label=\"W/P Expiry Date\"\r\n                      name=\"workpermit_expirydate\"\r\n                      value={single_employee.workpermit_expirydate}\r\n                      type=\"date\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    />\r\n\r\n                    <div>\r\n                      <TextField\r\n                        label=\"Nationality\"\r\n                        name=\"nationality\"\r\n                        value={single_employee.nationality}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <TextField\r\n                        label=\"Marital Status\"\r\n                        name=\"marital_status\"\r\n                        value={single_employee.marital_status}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </CardLayout>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <div>\r\n              <CardLayout2 title=\"Leaves\">\r\n                <div>\r\n                  <EmpViewLeaves />\r\n                </div>\r\n              </CardLayout2>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <div>\r\n              <CardLayout\r\n                title=\"Training\"\r\n                handleClick={handleTrainingDialogOpen}\r\n              >\r\n                <EmpViewTrainings />\r\n              </CardLayout>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <div>\r\n              <CardLayout\r\n                title=\"Experiences\"\r\n                handleClick={handleExperienceDialogOpen}\r\n              >\r\n                <div>\r\n                  <EmpViewExperiences />\r\n                </div>\r\n              </CardLayout>\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <div>\r\n              <CardLayout\r\n                title=\"Education\"\r\n                handleClick={handleEducationDialogOpen}\r\n              >\r\n                <div>\r\n                  <EmpViewEducations />\r\n                </div>\r\n              </CardLayout>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <div>\r\n              <CardLayout title=\"Family\" handleClick={handleFamilyDialogOpen}>\r\n                <EmpViewFamily />\r\n              </CardLayout>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <CustomDialog\r\n        isOpen={isPersonalDialogOpen}\r\n        handleClose={handlePersonalDialogClose}\r\n        title=\"\"\r\n        showButton={true}\r\n        isFullscreen={false}\r\n        isFullwidth={false}\r\n      >\r\n        <EmpPersonal\r\n          //setPersonaldata={setFamilydata}\r\n          //familydata={familydata}\r\n          handleDialogClose={handlePersonalDialogClose}\r\n        />\r\n      </CustomDialog>\r\n      <CustomDialog\r\n        isOpen={isFamilyDialogOpen}\r\n        handleClose={handleFamilyDialogClose}\r\n        title=\"\"\r\n        showButton={true}\r\n        isFullscreen={false}\r\n        isFullwidth={false}\r\n      >\r\n        <EmpFamily\r\n          setFamilydata={setFamilydata}\r\n          familydata={familydata}\r\n          handleDialogClose={handleFamilyDialogClose}\r\n        />\r\n      </CustomDialog>\r\n      <CustomDialog\r\n        isOpen={isEducationDialogOpen}\r\n        handleClose={handleEducationDialogClose}\r\n        title=\"\"\r\n        showButton={true}\r\n        isFullscreen={false}\r\n        isFullwidth={false}\r\n      >\r\n        <EmpEducations\r\n          setEducationdata={setEducationdata}\r\n          educationdata={educationdata}\r\n          handleDialogClose={handleEducationDialogClose}\r\n        />\r\n      </CustomDialog>\r\n      <CustomDialog\r\n        isOpen={isExperienceDialogOpen}\r\n        handleClose={handleExperienceDialogClose}\r\n        title=\"\"\r\n        showButton={true}\r\n        isFullscreen={false}\r\n        isFullwidth={false}\r\n      >\r\n        <EmpExperiences\r\n          setExperiencedata={setExperiencedata}\r\n          experiencedata={experiencedata}\r\n          handleDialogClose={handleExperienceDialogClose}\r\n        />\r\n      </CustomDialog>\r\n      <CustomDialog\r\n        isOpen={isTrainingDialogOpen}\r\n        handleClose={handleTrainingDialogClose}\r\n        title=\"\"\r\n        showButton={true}\r\n        isFullscreen={false}\r\n        isFullwidth={false}\r\n      >\r\n        <EmpTrainings\r\n          setTrainingdata={setTrainingdata}\r\n          trainingdata={trainingdata}\r\n          handleDialogClose={handleTrainingDialogClose}\r\n        />\r\n      </CustomDialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  form: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nexport default EmployeeView;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\context\\trainings_context.js",["3189","3190","3191","3192","3193","3194","3195","3196","3197","3198"],"import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/trainings_reducer\";\r\nimport { trainings_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  SET_EDITTRAININGID,\r\n  SET_ISTRAININGEDITING_ON,\r\n  SET_ISTRAININGEDITING_OFF,\r\n  SET_SINGLETRAINING,\r\n  GET_TRAININGS_BEGIN,\r\n  GET_TRAININGS_SUCCESS,\r\n  GET_TRAININGS_ERROR,\r\n  GET_SINGLE_TRAINING_BEGIN,\r\n  GET_SINGLE_TRAINING_SUCCESS,\r\n  GET_SINGLE_TRAINING_ERROR,\r\n  GET_SINGLEBATCH_TRAINING_BEGIN,\r\n  GET_SINGLEBATCH_TRAINING_SUCCESS,\r\n  GET_SINGLEBATCH_TRAINING_ERROR,\r\n  ADD_TRAINING_BEGIN,\r\n  ADD_TRAINING_SUCCESS,\r\n  ADD_TRAINING_ERROR,\r\n  DELETE_TRAINING_BEGIN,\r\n  DELETE_TRAINING_SUCCESS,\r\n  DELETE_TRAINING_ERROR,\r\n  UPDATE_TRAINING_BEGIN,\r\n  UPDATE_TRAINING_SUCCESS,\r\n  UPDATE_TRAINING_ERROR,\r\n  RESET_SINGLE_TRAINING,\r\n  RESET_TABLES,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  isTrainingEditing: false,\r\n  alerttraining: { show: false, msg: \"\", type: \"\" },\r\n  editTrainingID: null,\r\n  trainings_loading: false,\r\n  trainings_error: false,\r\n  trainings: [],\r\n  single_training_loading: false,\r\n  single_training_error: false,\r\n  single_training: {},\r\n  singlebatch_training_loading: false,\r\n  singlebatch_training_error: false,\r\n  singlebatch_training: {},\r\n  delete_training_loading: false,\r\n  delete_training_error: false,\r\n  update_training_loading: false,\r\n  update_training_error: false,\r\n  add_training_loading: false,\r\n  add_training_error: false,\r\n  // filterValue: \"Female\",\r\n  // filterfield: \"gender\",\r\n};\r\n\r\nconst TrainingsContext = React.createContext();\r\n\r\nexport const TrainingsProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const loadTrainings = async () => {\r\n    dispatch({ type: GET_TRAININGS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(trainings_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const trainings = await res.json();\r\n      dispatch({ type: GET_TRAININGS_SUCCESS, payload: trainings });\r\n    } catch (error) {\r\n      dispatch({ type: GET_TRAININGS_ERROR });\r\n    }\r\n  };\r\n\r\n  const setIsTrainingEditingOn = () => {\r\n    dispatch({ type: SET_ISTRAININGEDITING_ON });\r\n  };\r\n\r\n  const setIsTrainingEditingOff = () => {\r\n    dispatch({ type: SET_ISTRAININGEDITING_OFF });\r\n  };\r\n\r\n  const resetSingleTraining = () => {\r\n    dispatch({ type: RESET_SINGLE_TRAINING });\r\n  };\r\n\r\n  const setEditTrainingID = async (id) => {\r\n    try {\r\n      dispatch({ type: SET_EDITTRAININGID, payload: id });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSingleTraining = async (id) => {\r\n    dispatch({ type: GET_SINGLE_TRAINING_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${trainings_url}?id=${id}`);\r\n      const singletraining = data;\r\n      dispatch({ type: GET_SINGLE_TRAINING_SUCCESS, payload: singletraining });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_TRAINING_ERROR });\r\n    }\r\n  };\r\n\r\n  const getSingleBatchTraining = async (empid) => {\r\n    dispatch({ type: GET_SINGLEBATCH_TRAINING_BEGIN });\r\n    try {\r\n      const res = await fetch(`${trainings_url}?fv=${empid}`);\r\n      //console.log(`${family_url}?fv=${linkid}`);\r\n      const singlebatchtraining = await res.json();\r\n\r\n      dispatch({\r\n        type: GET_SINGLEBATCH_TRAINING_SUCCESS,\r\n        payload: singlebatchtraining,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLEBATCH_TRAINING_ERROR });\r\n    }\r\n  };\r\n\r\n  const addTraining = async (data) => {\r\n    const { id, name, from_date, to_date, reason, no_of_days, status } = data;\r\n    //\r\n    dispatch({ type: ADD_TRAINING_BEGIN });\r\n    try {\r\n      await fetch(trainings_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_TRAINING_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_TRAINING_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateTraining = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_TRAINING_BEGIN });\r\n    try {\r\n      await fetch(trainings_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_TRAINING_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_TRAINING_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteTraining = async (id) => {\r\n    dispatch({ type: DELETE_TRAINING_BEGIN });\r\n    try {\r\n      await fetch(trainings_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_TRAINING_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_TRAINING_ERROR });\r\n    }\r\n  };\r\n  return (\r\n    <TrainingsContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadTrainings,\r\n        addTraining,\r\n        updateTraining,\r\n        deleteTraining,\r\n        getSingleTraining,\r\n        getSingleBatchTraining,\r\n        setEditTrainingID,\r\n        setIsTrainingEditingOn,\r\n        setIsTrainingEditingOff,\r\n        resetSingleTraining,\r\n      }}\r\n    >\r\n      {children}\r\n    </TrainingsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTrainingsContext = () => {\r\n  return useContext(TrainingsContext);\r\n};\r\n","D:\\react-myprojects\\hrms-airtable\\src\\reducers\\trainings_reducer.js",["3199","3200"],"import {\r\n  SET_EDITTRAININGID,\r\n  SET_ISTRAININGEDITING_ON,\r\n  SET_ISTRAININGEDITING_OFF,\r\n  SET_SINGLETRAINING,\r\n  GET_TRAININGS_BEGIN,\r\n  GET_TRAININGS_SUCCESS,\r\n  GET_TRAININGS_ERROR,\r\n  GET_SINGLE_TRAINING_BEGIN,\r\n  GET_SINGLE_TRAINING_SUCCESS,\r\n  GET_SINGLE_TRAINING_ERROR,\r\n  GET_SINGLEBATCH_TRAINING_BEGIN,\r\n  GET_SINGLEBATCH_TRAINING_SUCCESS,\r\n  GET_SINGLEBATCH_TRAINING_ERROR,\r\n  ADD_TRAINING_BEGIN,\r\n  ADD_TRAINING_SUCCESS,\r\n  ADD_TRAINING_ERROR,\r\n  DELETE_TRAINING_BEGIN,\r\n  DELETE_TRAINING_SUCCESS,\r\n  DELETE_TRAINING_ERROR,\r\n  UPDATE_TRAINING_BEGIN,\r\n  UPDATE_TRAINING_SUCCESS,\r\n  UPDATE_TRAINING_ERROR,\r\n  RESET_SINGLE_TRAINING,\r\n  RESET_TABLES,\r\n} from \"../actions\";\r\n\r\nconst trainings_reducer = (state, action) => {\r\n  // set training variables\r\n  if (action.type === SET_EDITTRAININGID) {\r\n    return { ...state, editTrainingID: action.payload };\r\n  }\r\n\r\n  if (action.type === SET_ISTRAININGEDITING_ON) {\r\n    return { ...state, isTrainingEditing: true };\r\n  }\r\n  if (action.type === SET_ISTRAININGEDITING_OFF) {\r\n    return { ...state, isTrainingEditing: false };\r\n  }\r\n  if (action.type === RESET_SINGLE_TRAINING) {\r\n    return { ...state, single_training: {} };\r\n  }\r\n  // get trainings\r\n  if (action.type === GET_TRAININGS_BEGIN) {\r\n    return { ...state, trainings_loading: true };\r\n  }\r\n  if (action.type === GET_TRAININGS_SUCCESS) {\r\n    return { ...state, trainings_loading: false, trainings: action.payload };\r\n  }\r\n  if (action.type === GET_TRAININGS_ERROR) {\r\n    return { ...state, trainings_loading: false, trainings_error: true };\r\n  }\r\n\r\n  // add training\r\n  if (action.type === ADD_TRAINING_BEGIN) {\r\n    return { ...state, add_training_loading: true };\r\n  }\r\n  if (action.type === ADD_TRAINING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_trainings_loading: false,\r\n      trainings: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_TRAINING_ERROR) {\r\n    return { ...state, trainings_loading: false, add_training_error: true };\r\n  }\r\n  // update trainig\r\n  if (action.type === UPDATE_TRAINING_BEGIN) {\r\n    return { ...state, update_training_loading: true };\r\n  }\r\n  if (action.type === UPDATE_TRAINING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      trainings_loading: false,\r\n      single_training: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_TRAINING_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_training_loading: false,\r\n      update_training_error: true,\r\n    };\r\n  }\r\n\r\n  // delete training\r\n  if (action.type === DELETE_TRAINING_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_training_loading: true,\r\n      delete_training_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_TRAINING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_training_loading: false,\r\n      delete_training_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_TRAINING_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_training_loading: false,\r\n      delete_training_error: true,\r\n    };\r\n  }\r\n\r\n  //single training\r\n  if (action.type === GET_SINGLE_TRAINING_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_training_loading: true,\r\n      single_training_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_TRAINING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_training_loading: false,\r\n      single_training: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_TRAINING_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_training_loading: false,\r\n      single_training_error: true,\r\n    };\r\n  }\r\n\r\n  //single batch training\r\n  if (action.type === GET_SINGLEBATCH_TRAINING_BEGIN) {\r\n    return {\r\n      ...state,\r\n      singlebatch_training_loading: true,\r\n      singlebatch_training_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_TRAINING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      singlebatch_training_loading: false,\r\n      singlebatch_training: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_TRAINING_ERROR) {\r\n    return {\r\n      ...state,\r\n      singlebatch_training_loading: false,\r\n      singlebatch_training_error: true,\r\n    };\r\n  }\r\n\r\n  // return state;\r\n  throw new Error(`No Matching \"${action.type}\" - action type`);\r\n};\r\n\r\nexport default trainings_reducer;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\CardLayout2.js",["3201","3202","3203","3204","3205","3206","3207","3208"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst CardLayout2 = ({ title, children, handleClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      {title && <CardHeader title={title} />}\r\n      <CardContent>{children}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"500\",\r\n  },\r\n  card: {\r\n    margin: \"15px 10px\",\r\n    padding: 0,\r\n    border: \"solid 1px black\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"dark\",\r\n  },\r\n  small: {\r\n    gridRowEnd: \"span 26\",\r\n  },\r\n  medium: {\r\n    gridRowEnd: \"span 33\",\r\n  },\r\n  large: {\r\n    gridRowEnd: \"span 45\",\r\n  },\r\n}));\r\n\r\nexport default CardLayout2;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpEducations.js",["3209"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useEducations } from \"./educations/useEducations\";\r\nimport { useUpdateEducations } from \"./educations/useUpdateEducations\";\r\nimport { useAddEducations } from \"./educations/useAddEducations\";\r\nimport { useDeleteEducations } from \"./educations/useDeleteEducations\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Institution\",\r\n    field: \"institution\",\r\n  },\r\n  {\r\n    title: \"Course\",\r\n    field: \"course\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"Archievement\",\r\n    field: \"archievement\",\r\n  },\r\n\r\n  { title: \"Grade\", field: \"grade\" },\r\n  {\r\n    title: \"Remark\",\r\n    field: \"remark\",\r\n  },\r\n];\r\n\r\nexport default function Emp_Educations({\r\n  educationdata,\r\n  setEducationdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const { educations, setEducationId } = useEducations();\r\n  const updateEducations = useUpdateEducations();\r\n  const addEducations = useAddEducations();\r\n  const deleteEducations = useDeleteEducations();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n\r\n  useEffect(() => {\r\n    setEducationId(editEmployeeID);\r\n  }, []);\r\n\r\n  const update_Education = (data) => {\r\n    const { id, rec_id, tableData, ...fields } = data;\r\n    updateEducations({ id, ...fields });\r\n  };\r\n\r\n  const add_Education = (data) => {\r\n    addEducations({ ...data, empid: editEmployeeID });\r\n  };\r\n\r\n  const delete_Education = (data) => {\r\n    const { id } = data;\r\n    deleteEducations(id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={educations}\r\n          title=\"Education\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  add_Education(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  update_Education(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  // const dataDelete = [...educationdata];\r\n                  // const index = oldData.tableData.id;\r\n                  // dataDelete.splice(index, 1);\r\n                  delete_Education(oldData);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpExperiences.js",["3210","3211"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useExperiences } from \"./experiences/useExperiences\";\r\nimport { useUpdateExperiences } from \"./experiences/useUpdateExperiences\";\r\nimport { useAddExperiences } from \"./experiences/useAddExperiences\";\r\nimport { useDeleteExperiences } from \"./experiences/useDeleteExperiences\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Company\",\r\n    field: \"company\",\r\n  },\r\n  {\r\n    title: \"Location\",\r\n    field: \"location\",\r\n  },\r\n  {\r\n    title: \"Position\",\r\n    field: \"position\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  { title: \"Remark\", field: \"remark\" },\r\n];\r\n\r\nexport default function Emp_Experiences({\r\n  experiencedata,\r\n  setExperiencedata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const { experiences, setExperienceId } = useExperiences();\r\n  const updateExperiences = useUpdateExperiences();\r\n  const addExperiences = useAddExperiences();\r\n  const deleteExperiences = useDeleteExperiences();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n\r\n  useEffect(() => {\r\n    setExperienceId(editEmployeeID);\r\n  }, []);\r\n\r\n  const update_Experience = (data) => {\r\n    const { id, rec_id, tableData, ...fields } = data;\r\n    updateExperiences({ id, ...fields });\r\n  };\r\n\r\n  const add_Experience = (data) => {\r\n    addExperiences({ ...data, empid: editEmployeeID });\r\n  };\r\n\r\n  const delete_Experience = (data) => {\r\n    const { id } = data;\r\n    deleteExperiences(id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={experiences}\r\n          title=\"Experience\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  add_Experience(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  update_Experience(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  delete_Experience(oldData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpFamily.js",["3212","3213","3214","3215","3216","3217"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Icon, TextField, MenuItem } from \"@material-ui/core\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nimport { useFamily } from \"./family/useFamily\";\r\nimport { useUpdateFamily } from \"./family/useUpdateFamily\";\r\nimport { useAddFamily } from \"./family/useAddFamily\";\r\nimport { useDeleteFamily } from \"./family/useDeleteFamily\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Relationship\",\r\n    field: \"relationship\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Father\">Father</MenuItem>\r\n        <MenuItem value=\"Mother\">Mother</MenuItem>\r\n        <MenuItem value=\"Husband\">Husband</MenuItem>\r\n        <MenuItem value=\"Wife\">Wife</MenuItem>\r\n        <MenuItem value=\"Daughter\">Daughter</MenuItem>\r\n        <MenuItem value=\"Son\">Son</MenuItem>\r\n        <MenuItem value=\"Son-in-law\">Son-in-law</MenuItem>\r\n        <MenuItem value=\"Daughter-in-law\">Daughter-in-law</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n  {\r\n    title: \"BIrth Date\",\r\n    field: \"birth_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"Phone\",\r\n    field: \"phone\",\r\n  },\r\n  { title: \"Age\", field: \"age\", type: \"numeric\" },\r\n];\r\n\r\nexport default function Emp_Family() {\r\n  const classes = useStyles();\r\n  const { family, filter, setFilter, setFamilyId } = useFamily();\r\n  const updateFamily = useUpdateFamily();\r\n  const addFamily = useAddFamily();\r\n  const deleteFamily = useDeleteFamily();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n\r\n  const update_Family = (data) => {\r\n    const { id, rec_id, tableData, ...fields } = data;\r\n    updateFamily({ id, ...fields });\r\n  };\r\n\r\n  const add_Family = (data) => {\r\n    addFamily({ ...data, empid: editEmployeeID });\r\n  };\r\n\r\n  const delete_Family = (data) => {\r\n    const { id } = data;\r\n    deleteFamily(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFamilyId(editEmployeeID);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={family}\r\n          title=\"Family\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  // setFamilydata([...familydata, newData]);\r\n                  add_Family(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  update_Family(newData);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  delete_Family(oldData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpPersonal.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpTrainings.js",["3218","3219","3220","3221","3222","3223","3224","3225","3226"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Icon, TextField, MenuItem, Select } from \"@material-ui/core\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTrainingsContext } from \"../context/trainings_context\";\r\nimport { useTrainings } from \"./trainings/useTrainings\";\r\nimport { useInstitutes } from \"./institutes/useInstitutes\";\r\nimport { useUpdateTrainings } from \"./trainings/useUpdateTrainings\";\r\nimport { useAddTrainings } from \"./trainings/useAddTrainings\";\r\nimport { useDeleteTrainings } from \"./trainings/useDeleteTrainings\";\r\n\r\n\r\nexport default function Emp_Training({\r\n  trainingdata,\r\n  setTrainingdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const { trainings, filter, setFilter, setTrainingId } = useTrainings();\r\n  const { institutes } = useInstitutes();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const updateTrainings = useUpdateTrainings();\r\n  const addTrainings = useAddTrainings();\r\n  const deleteTrainings = useDeleteTrainings();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  // const {\r\n  //   //getSingleBatchTraining,\r\n  //   //singlebatch_training,\r\n  //   //addTraining,\r\n  //   //deleteTraining,\r\n  //   //updateTraining,\r\n  //   //singlebatch_training_loading,\r\n  // } = useTrainingsContext();\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Institute\",\r\n    field: \"institute\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"\">None</MenuItem>\r\n        {institutes &&\r\n          institutes.map((r) => {\r\n            return <MenuItem value={r.name}>{r.name}</MenuItem>;\r\n          })}\r\n      </TextField>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Course\",\r\n    field: \"course\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"Expiry Date\",\r\n    field: \"expiry_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n];\r\n\r\n  useEffect(() => {\r\n    setTrainingId(editEmployeeID);\r\n  }, []);\r\n\r\n  const add_Training = (data) => {\r\n    addTrainings({\r\n      ...data,\r\n      name: loginLevel.loginUser,\r\n      empid: editEmployeeID,\r\n    });\r\n  };\r\n\r\n  const delete_Training = (data) => {\r\n    const { id } = data;\r\n    deleteTrainings(id);\r\n  };\r\n\r\n  const update_Training = (data) => {\r\n    const { id, rec_id, tableData, ...fields } = data;\r\n    updateTrainings({ id, ...fields });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={trainings}\r\n          title=\"Training\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  add_Training(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  update_Training(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  delete_Training(oldData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpViewTrainings.js",["3227"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTrainingsContext } from \"../context/trainings_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Institute\",\r\n    field: \"institute\",\r\n  },\r\n  {\r\n    title: \"Course\",\r\n    field: \"course\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    filtering: false,\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    filtering: false,\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  {\r\n    title: \"Expiry Date\",\r\n    field: \"expiry_date\",\r\n    type: \"date\",\r\n    filtering: false,\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n];\r\n\r\nexport default function Emp_ViewFamily() {\r\n  const classes = useStyles();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    singlebatch_training,\r\n    getSingleBatchTraining,\r\n    singlebatch_training_loading,\r\n  } = useTrainingsContext();\r\n\r\n  useEffect(() => {\r\n    getSingleBatchTraining(editEmployeeID);\r\n  }, []);\r\n\r\n  if (singlebatch_training_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Trainings</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={singlebatch_training}\r\n          title=\"\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpViewLeaves.js",["3228"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    filtering: false,\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    filtering: false,\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  {\r\n    title: \"Reason\",\r\n    field: \"Reason\",\r\n  },\r\n  {\r\n    title: \"No of Days\",\r\n    field: \"no_of_days\",\r\n    type: \"numeric\",\r\n    filtering: false,\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n  },\r\n];\r\n\r\nexport default function Emp_ViewFamily() {\r\n  const classes = useStyles();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const { singlebatch_leave, getSingleBatchLeave, singlebatch_leave_loading } =\r\n    useLeavesContext();\r\n\r\n  useEffect(() => {\r\n    getSingleBatchLeave(editEmployeeID);\r\n  }, []);\r\n\r\n  if (singlebatch_leave_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Leaves</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={singlebatch_leave}\r\n          title=\"\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpViewFamily.js",["3229"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    filtering: false,\r\n  },\r\n  {\r\n    title: \"Relationship\",\r\n    field: \"relationship\",\r\n  },\r\n  {\r\n    title: \"BIrth Date\",\r\n    field: \"birth_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    filtering: false,\r\n  },\r\n  {\r\n    title: \"Phone\",\r\n    field: \"phone\",\r\n  },\r\n];\r\n\r\nexport default function Emp_ViewFamily() {\r\n  const classes = useStyles();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    loadSingleBatchFamily,\r\n     singlebatchfamily,\r\n     singlebatch_family_loading,\r\n  } = useTablesContext();\r\n\r\n  useEffect(() => {\r\n    loadSingleBatchFamily(editEmployeeID);\r\n  }, []);\r\n  \r\n  if (singlebatch_family_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Family</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={singlebatchfamily}\r\n          title=\"Family\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpViewExperiences.js",["3230"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Company\",\r\n    field: \"company\",\r\n  },\r\n  {\r\n    title: \"Location\",\r\n    field: \"location\",\r\n  },\r\n  {\r\n    title: \"Position\",\r\n    field: \"position\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n];\r\n\r\nexport default function Emp_Experiences({\r\n  experiencedata,\r\n  setExperiencedata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    loadSingleBatchExperience,\r\n    singlebatchexperience,\r\n    singlebatch_experience_loading,\r\n  } = useTablesContext();\r\n\r\n  useEffect(() => {\r\n    //console.log(linkid);\r\n    loadSingleBatchExperience(editEmployeeID);\r\n  }, []);\r\n\r\n  if (singlebatch_experience_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Experience</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={singlebatchexperience}\r\n          title=\"Experience\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpViewEducations.js",["3231"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Institution\",\r\n    field: \"institution\",\r\n  },\r\n  {\r\n    title: \"Course\",\r\n    field: \"course\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n];\r\n\r\nexport default function Emp_Educations() {\r\n  const classes = useStyles();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n\r\n  const {\r\n    loadSingleBatchEducation,\r\n    singlebatcheducation,\r\n    singlebatch_education_loading,\r\n  } = useTablesContext();\r\n\r\n  useEffect(() => {\r\n    loadSingleBatchEducation(editEmployeeID);\r\n  }, []);\r\n\r\n  if (singlebatch_education_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Education</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={singlebatcheducation}\r\n          title=\"Experience\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\Example4.js",["3232","3233","3234","3235","3236","3237","3238","3239","3240","3241"],"import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport MaterialTable from \"material-table\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  atom,\r\n  selector,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  useSetRecoilState,\r\n  useRecoilValueLoadable,\r\n  useRecoilStateLoadable,\r\n} from \"recoil\";\r\n// import { useRecoilValue, useSetRecoilState, useRecoilState } from \"recoil\";\r\n// import { departmentsSelector } from \"../helpers/Recoilhelpers\";\r\nimport { departments_url } from \"../utils/constants\";\r\nimport { fetchDepartmentsSelector } from \"./data/selectordata\";\r\n\r\nconst url = `https://reqres.in/api/users?page=1`;\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    filtering: false,\r\n  },\r\n  {\r\n    title: \"ID\",\r\n    field: \"id\",\r\n  },\r\n\r\n  {\r\n    title: \"Rec ID\",\r\n    field: \"rec_id\",\r\n    type: \"numeric\",\r\n  },\r\n];\r\n\r\nexport const userdatastate = atom({\r\n  key: \"userdata\",\r\n  default: [],\r\n  dangerouslyAllowMutability: true,\r\n});\r\n\r\nconst fetchUserDetails = selector({\r\n  key: \"userDetailsSelector\",\r\n  get: async () => {\r\n    const { data } = await axios\r\n      .get(departments_url)\r\n      .then((res) => {\r\n        const data = res.data;\r\n        console.log(data);\r\n        return data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    return data;\r\n  },\r\n});\r\n\r\nconst fetchUserDetailsdata = selector({\r\n  key: \"userDetailsSelectordata\",\r\n  get: async () => {\r\n    const { data } = await axios.get(departments_url);\r\n    return data;\r\n  },\r\n});\r\n\r\nconst Example = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [userdata, setUserdata] = useRecoilState(fetchUserDetailsdata);\r\n  //const [userDetails, setUserDetails] =\r\n  //  useRecoilStateLoadable(fetchUserDetailsdata);\r\n  //   fetchDepartmentsSelector\r\n  // );\r\n\r\n  // const { state, contents } = userDetails;\r\n\r\n  // console.log(\r\n  //   \"userdetails\",\r\n  //   userDetails,\r\n  //   Object.isFrozen(userDetails.contents),\r\n  //   Object.isExtensible(userDetails.contents)\r\n  // );\r\n  console.log(\r\n    \"userdata\",\r\n    userdata,\r\n    Object.isFrozen(userdata),\r\n    Object.isExtensible(userdata)\r\n  );\r\n  // if (userDetails.state === \"hasError\") {\r\n  //   return <div> There is some problem! </div>;\r\n  // }\r\n\r\n  // if (state === \"loading\") {\r\n  //   return <div>Its loading</div>;\r\n  // }\r\n\r\n  // if (state === \"hasValue\") {\r\n\r\n  return (\r\n    <React.Suspense fallback={<h1>Loading profile...</h1>}>\r\n      <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n        <MaterialTable columns={columns} data={userdata} title=\"Family\" />\r\n      </Paper>\r\n    </React.Suspense>\r\n  );\r\n};\r\n\r\n// const DetailsWithSuspense = () => {\r\n//   const userDetails = useRecoilValue(fetchUserDetails);\r\n//   const { data } = userDetails;\r\n\r\n//   return data.map((item) => (\r\n//     <div key={item.id}>\r\n//       <p>{`Email: ${item.email} Name: ${item.first_name} ${item.last_name}`}</p>\r\n//     </div>\r\n//   ));\r\n// };\r\n\r\n// const Example = () => {\r\n//   const classes = useStyles();\r\n//   const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n//   const departsdata = useRecoilValue(departmentsSelector);\r\n\r\n//   return (\r\n//     <div>\r\n//       <DetailsWithoutSuspense />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n}));\r\n\r\nexport default Example;\r\n",["3242","3243"],"D:\\react-myprojects\\hrms-airtable\\src\\helpers\\Recoilhelpers.js",[],["3244","3245"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\data\\selectordata.js",["3246","3247","3248"],"import axios from \"axios\";\r\nimport { selector, useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport {\r\n  empidState,\r\n  allowsPeriodState,\r\n  allowsDataDetlsState,\r\n} from \"./atomdata\";\r\nimport { departments_url } from \"../../utils/constants\";\r\nimport {\r\n  dailyallowances_url,\r\n  dailyallowsdetls_url,\r\n  employees_url,\r\n} from \"../../utils/constants\";\r\n\r\nexport const fetchDepartmentsSelector = selector({\r\n  key: \"departmentsSelector\",\r\n  get: async ({ get }) => {\r\n    try {\r\n      const res = await fetch(departments_url);\r\n      const data = await res.json();\r\n\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n});\r\n\r\nexport const fetchEmployeesSelector = selector({\r\n  key: \"employeesSelector\",\r\n  get: async ({ get }) => {\r\n    try {\r\n      const res = await fetch(employees_url);\r\n      const data = await res.json();\r\n\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n});\r\n\r\nexport const fetchDailyAllowancesSelector = selector({\r\n  key: \"dailyallowancesSelector\",\r\n  get: async ({ get }) => {\r\n    try {\r\n      const period = get(allowsPeriodState);\r\n      const { data } = await axios.get(`${dailyallowances_url}?fv=${period}`);\r\n      const res = await data;\r\n\r\n      return res;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n});\r\n\r\nexport const fetchDailyAllowsDetlsSelector = selector({\r\n  key: \"dailyallowsDetlsSelector\",\r\n  get: async ({ get }) => {\r\n    try {\r\n      const period = get(allowsPeriodState);\r\n      const empid = get(empidState);\r\n      const { data } = await axios.get(\r\n        `${dailyallowsdetls_url}?fv=${empid}&period=${period}`\r\n      );\r\n      const res = await data;\r\n\r\n      return res;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n});\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\data\\atomdata.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\Payslip_ViewDeductions.js",["3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nexport default function Payslip_ViewDeductions() {\r\n  const classes = useStyles();\r\n  const payPeriodEmpId = useRecoilValue(payPeriodEmpIdState);\r\n  const payPeriod = useRecoilValue(payPeriodState);\r\n  \r\n  const {\r\n    payslipdeductions,\r\n    payslip_deduction_amount,\r\n    setPayslipDeductionAmount,\r\n    loadPayslipDeductions,\r\n    addPayslipDeduction,\r\n    payslipdeductions_loading,\r\n    updatePayslipDeduction,\r\n    deletePayslipDeduction,\r\n    updatePayslip,\r\n    editPayslipID,\r\n    single_payslip,\r\n    payslip_period,\r\n    getSingleBatchPayslipDeductions,\r\n  } = usePayslipsContext();\r\n  const { name, amount } = payslipdeductions;\r\n  const { deductions } = useTablesContext();\r\n\r\n  const calc_Deduction = (data) => {\r\n    const sum = data.reduce((a, v) => (a = a + v.amount), 0);\r\n    setPayslipDeductionAmount(sum);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      field: \"description\",\r\n    },\r\n    { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getSingleBatchPayslipDeductions(payPeriodEmpId, payPeriod);\r\n  }, []);\r\n\r\n  \r\n  const update_Payslip = () => {\r\n    const { rec_id, id, total_deductions, ...paydata } = single_payslip;\r\n    updatePayslip({\r\n      id: editPayslipID,\r\n      total_deductions: payslip_deduction_amount,\r\n      ...paydata,\r\n    });\r\n  };\r\n\r\n  const update_PayslipDeduction = async (data) => {\r\n    const { id, rec_id, empid, ...fields } = data;\r\n    updatePayslipDeduction({ id: data.id, empid: empid, ...fields });\r\n    update_Payslip();\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const add_PayslipDeduction = (data) => {\r\n    const { description, amount } = data;\r\n    addPayslipDeduction({\r\n      description: description,\r\n      amount: amount,\r\n      name: single_payslip.name,\r\n      empid: single_payslip.empid,\r\n      period: single_payslip.period,\r\n    });\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const delete_PayslipDeduction = (data) => {\r\n    const { id } = data;\r\n    deletePayslipDeduction(id);\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  \r\n  if (payslipdeductions_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... Expenses.</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payslipdeductions}\r\n          title=\"Expense\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\Payslip_ViewEarnings.js",["3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277"],"import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\n\r\n\r\nexport default function Payslip_ViewEarnings({ setCalc }) {\r\n  let history = useHistory();\r\n  const [load, setLoad] = useState(true);\r\n  const classes = useStyles();\r\n  const payPeriodEmpId = useRecoilValue(payPeriodEmpIdState);\r\n  const payPeriod = useRecoilValue(payPeriodState);\r\n  const {\r\n    payslipearnings,\r\n    payslip_earning_amount,\r\n    setPayslipEarningAmount,\r\n    addPayslipEarning,\r\n    payslipearnings_loading,\r\n    updatePayslipEarning,\r\n    deletePayslipEarning,\r\n    updatePayslip,\r\n    editPayslipID,\r\n    single_payslip,\r\n    payslip_period,\r\n    getSingleBatchPayslipEarnings,\r\n  } = usePayslipsContext();\r\n\r\n  const { description, amount } = payslipearnings;\r\n  const { allowances } = useTablesContext();\r\n  console.log(\"recoil\", payPeriod, payPeriodEmpId);\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"description\",\r\n  },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n];\r\n\r\n  useEffect(() => {\r\n    getSingleBatchPayslipEarnings(payPeriodEmpId, payPeriod);\r\n  }, []);\r\n\r\n  const calc_Earning = (data) => {\r\n    const sum = data.reduce((a, v) => (a = a + v.amount), 0);\r\n    console.log(\"Earning\", data);\r\n    setPayslipEarningAmount(sum);\r\n  };\r\n\r\n  const update_Payslip = () => {\r\n    const { rec_id, id, total_earnings, ...paydata } = single_payslip;\r\n    updatePayslip({\r\n      id: editPayslipID,\r\n      total_earnings: payslip_earning_amount,\r\n      ...paydata,\r\n    });\r\n    setCalc(true);\r\n  };\r\n\r\n  if (payslipearnings_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... Incomes.</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payslipearnings}\r\n          title=\"Income\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\Example5.js",["3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport MaterialTable from \"material-table\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  atom,\r\n  selector,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  useSetRecoilState,\r\n  useRecoilValueLoadable,\r\n  useRecoilStateLoadable,\r\n} from \"recoil\";\r\n// import { useRecoilValue, useSetRecoilState, useRecoilState } from \"recoil\";\r\n// import { departmentsSelector } from \"../helpers/Recoilhelpers\";\r\nimport { onleaves_url } from \"../utils/constants\";\r\nimport { fetchDepartmentsSelector } from \"./data/selectordata\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From Data\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Data\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n];\r\n\r\nexport const onleavesdatastate = atom({\r\n  key: \"onleavesdatastate\",\r\n  default: [],\r\n});\r\n\r\nconst fetchOnLeavesDetails = selector({\r\n  key: \"onLeaveDetailsSelector\",\r\n  get: async ({ get }) => {\r\n    try {\r\n      const { data } = await axios.get(onleaves_url);\r\n      const onleavesdata = data;\r\n\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n});\r\n\r\nconst Example = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [userdata, setUserdata] = useState([]);\r\n  //const [userdata, setUserdata] = useRecoilState(userdatastate);\r\n  const onLeavesDetails = useRecoilValueLoadable(fetchOnLeavesDetails);\r\n  const { state, contents } = onLeavesDetails;\r\n  \r\n  console.log(onLeavesDetails);\r\n  if (onLeavesDetails.state === \"hasError\") {\r\n    return <div> There is some problem! </div>;\r\n  }\r\n\r\n  if (state === \"loading\") {\r\n    return <div>Its loading</div>;\r\n  }\r\n\r\n  if (state === \"hasValue\") {\r\n    const editable = contents.map((r) => {\r\n      return { ...r };\r\n    });\r\n    return (\r\n      <paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={editable}\r\n          title=\"Staffs On Leave within 30 Days\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </paper>\r\n    );\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n}));\r\n\r\nexport default Example;\r\n",["3289","3290"],"D:\\react-myprojects\\hrms-airtable\\src\\helpers\\CardLayout3.js",["3291","3292","3293","3294","3295","3296","3297","3298"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\n\r\nconst CardLayout3 = ({ title, children, handleClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardHeader\r\n        action={\r\n          <div>\r\n            {/* <IconButton aria-label=\"settings\">\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n            <IconButton aria-label=\"settings\" onClick={handleClick}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </div>\r\n        }\r\n        title={title}\r\n      />\r\n      <CardContent>{children}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"500\",\r\n  },\r\n  card: {\r\n    margin: \"15px 10px\",\r\n    padding: 0,\r\n    border: \"solid 1px black\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"dark\",\r\n  },\r\n  small: {\r\n    gridRowEnd: \"span 26\",\r\n  },\r\n  medium: {\r\n    gridRowEnd: \"span 33\",\r\n  },\r\n  large: {\r\n    gridRowEnd: \"span 45\",\r\n  },\r\n}));\r\n\r\nexport default CardLayout3;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\pages\\HomePage2.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\pages\\HomePage.js",["3299","3300","3301","3302","3303","3304","3305","3306","3307"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport { loginLevelState } from \"../components/data/atomdata\";\r\nimport CardLayout3 from \"../helpers/CardLayout3\";\r\nimport Copyright from \"../components/Copyright\";\r\nimport HomeAdmin from \"../components/HomeAdmin\";\r\nimport HomeOpsSpvr from \"../components/HomeOpsSpvr\";\r\nimport HomeStaff from \"../components/HomeStaff\";\r\nimport HomeAdminManager from \"../components/HomeAdminManager\";\r\nimport HomeManager from \"../components/HomeManager\";\r\nimport HomeDirector from \"../components/HomeDirector\";\r\nconst drawerWidth = 240;\r\n\r\nconst HomePage = () => {\r\n  // const classes = useStyles();\r\n  // const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n\r\nconst SwitchCase = () => {\r\n \r\n  switch (loginLevel.loginLevel) {\r\n    case \"Staff\":\r\n      return <HomeStaff />;\r\n    case \"Admin\":\r\n      return <HomeAdmin />;\r\n    case \"OpsSpvr\":\r\n      return <HomeOpsSpvr />;\r\n    case \"AdminManager\":\r\n      return <HomeAdminManager />;\r\n    case \"Manager\":\r\n      return <HomeManager />;\r\n    case \"Director\":\r\n      return <HomeDirector />;\r\n    default:\r\n      return \"You are not authorised user!\";\r\n  }\r\n};\r\n\r\n  return (\r\n    <div>\r\n      <SwitchCase />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default HomePage;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveTableView.js",["3308","3309","3310","3311","3312","3313","3314","3315","3316","3317","3318","3319","3320","3321","3322","3323","3324","3325","3326","3327","3328","3329"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialogBox\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst FILTERSTRING = \"Pending\"\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Days\", field: \"no_of_days\", editable: \"never\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\n\r\n\r\nexport default function LeaveTableView() {\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const { loadEmployees } = useEmployeesContext();\r\n  const {\r\n    leaves,\r\n    leaves_error,\r\n    editLeaveID,\r\n    leaves_loading,\r\n    deleteLeave,\r\n    loadPendingLeaves,\r\n    getSingleLeave,\r\n    setEditLeaveID,\r\n    setIsLeaveEditingOn,\r\n    setIsLeaveEditingOff,\r\n    resetSingleLeave,\r\n  } = useLeavesContext();\r\n\r\n  useEffect(() => {\r\n    loadPendingLeaves(FILTERSTRING);\r\n  }, []);\r\n \r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    loadPendingLeaves(FILTERSTRING);\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editLeaveID;\r\n    deleteLeave(id);\r\n    loadPendingLeaves(FILTERSTRING);\r\n  };\r\n\r\n  if (leaves_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Leaves</h2>\r\n      </div>\r\n    );\r\n  }\r\n  if (leaves_error) {\r\n    return (\r\n      <div>\r\n        <h2>Internet connection problem!</h2>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={leaves}\r\n          title=\"Leave Application\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n",["3330","3331"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\HomeAdmin.js",["3332","3333","3334","3335","3336","3337","3338","3339","3340","3341","3342","3343","3344","3345","3346"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Divider,\r\n  Heading,\r\n  HStack,\r\n  Stack,\r\n  Select,\r\n  SimpleGrid,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n} from \"@chakra-ui/react\";\r\nimport { TextField, Grid, Paper, Container } from \"@material-ui/core\";\r\nimport CardLayout from \"../helpers/CardLayout\";\r\nimport CardLayout2 from \"../helpers/CardLayout2\";\r\nimport CardLayout3 from \"../helpers/CardLayout3\";\r\nimport Copyright from \"../components/Copyright\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport LeaveTableViewAdmin from \"./LeaveTableViewAdmin\";\r\nimport LeaveTableAdmin from \"./LeaveTableManager\";\r\n//import ExpenseTableView from \"./ExpenseTableView\";\r\nimport ExpenseTableAdmin from \"./ExpenseTableAdmin\";\r\n//import PayslipTableView from \"./PayslipTableView\";\r\nimport PayslipTableAdmin from \"./PayslipTableAdmin\";\r\nimport HocTableViewSummary from \"./HocTableViewSummary\";\r\n//import DailyAllowancesTableView from \"./DailyAllowancesTableView\";\r\nimport DailyAllowancesTableAdmin from \"./DailyAllowancesTableAdmin\";\r\nimport TrainingsTableViewAdmin from \"./TrainingsTableViewAdmin\";\r\nimport WPExpiryViewAdmin from \"./WPExpiryViewAdmin\";\r\nimport EmployeeTableLeaveView from \"./EmployeeTableLeaveView\";\r\nimport LeavesTableViewSummary from \"./LeavesTableViewSummary\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst EmployeeView = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { employees } = useEmployees();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [leavesdata, setLeavesdata] = useState([]);\r\n  const [isLeaveDialogOpen, setIsLeaveDialogOpen] = useState(false);\r\n  const [expensesdata, setExpensesdata] = useState([]);\r\n  const [isExpenseDialogOpen, setIsExpenseDialogOpen] = useState(false);\r\n  const [payslipsdata, setPayslipsdata] = useState([]);\r\n  const [isPayslipDialogOpen, setIsPayslipDialogOpen] = useState(false);\r\n  const [dailyallowancesdata, setDailyAllowancesdata] = useState([]);\r\n  const [isDailyAllowancesDialogOpen, setIsDailyAllowancesDialogOpen] =\r\n    useState(false);\r\n\r\n  const { leaves, loadPendingLeaves } = useLeavesContext();\r\n  const { expenses, loadPendingExpenses } = useExpensesContext();\r\n  const { payslips, loadPendingPayslips } = usePayslipsContext();\r\n  const { dailyallowances, loadPendingDailyAllowances } =\r\n    useDailyAllowancesContext();\r\n  const [selectleaveyear, setSelectLeaveYear] = useState(\"\");\r\n  const [selecthocyear, setSelectHocYear] = useState(\"\");\r\n  const currentyear = new Date().getFullYear();\r\n  const currentmonth = new Date().getMonth();\r\n\r\n  const handleLeaveDialogOpen = () => {\r\n    setLeavesdata([]);\r\n    setLeavesdata([...leaves]);\r\n    setIsLeaveDialogOpen(true);\r\n  };\r\n\r\n  const handleLeaveDialogClose = () => {\r\n    setIsLeaveDialogOpen(false);\r\n    loadPendingLeaves(FILTERSTRING);\r\n  };\r\n\r\n  const handleExpenseDialogOpen = () => {\r\n    setExpensesdata([]);\r\n    setExpensesdata([...expenses]);\r\n    setIsExpenseDialogOpen(true);\r\n  };\r\n\r\n  const handleExpenseDialogClose = () => {\r\n    setIsExpenseDialogOpen(false);\r\n    loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  const handlePayslipDialogOpen = () => {\r\n    setPayslipsdata([]);\r\n    setPayslipsdata([...payslips]);\r\n    setIsPayslipDialogOpen(true);\r\n  };\r\n\r\n  const handlePayslipDialogClose = () => {\r\n    setIsPayslipDialogOpen(false);\r\n    loadPendingPayslips(FILTERSTRING);\r\n  };\r\n\r\n  const handleDailyAllowancesDialogOpen = () => {\r\n    setDailyAllowancesdata([]);\r\n    setDailyAllowancesdata([...dailyallowances]);\r\n    setIsDailyAllowancesDialogOpen(true);\r\n  };\r\n\r\n  const handleDailyAllowancesDialogClose = () => {\r\n    setIsDailyAllowancesDialogOpen(false);\r\n    loadPendingDailyAllowances(FILTERSTRING);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSelectLeaveYear(currentyear);\r\n    setSelectHocYear(currentyear);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.appBarSpacer} />\r\n      <div style={{ paddingLeft: 50 }}>\r\n        {/* <h2>Welcome {loginLevel.loginUser}!</h2>\r\n        <h3>Dashboard</h3> */}\r\n      </div>\r\n      <Container maxWidth=\"full\" className={classes.container}>\r\n        <Stack direction=\"column\">\r\n          <Box>\r\n            <CardLayout2>\r\n              <LeaveTableViewAdmin />\r\n            </CardLayout2>\r\n          </Box>\r\n          <Box>\r\n            <CardLayout2>\r\n              <WPExpiryViewAdmin />\r\n            </CardLayout2>\r\n          </Box>\r\n          <Box>\r\n            <CardLayout2>\r\n              <TrainingsTableViewAdmin />\r\n            </CardLayout2>\r\n          </Box>\r\n          <Box\r\n            maxW=\"x3\"\r\n            padding=\"4\"\r\n            width=\"100%\"\r\n            height=\"750\"\r\n            borderColor=\"blue.500\"\r\n            borderWidth=\"1px\"\r\n            borderRadius=\"lg\"\r\n            overflow=\"scroll\"\r\n          >\r\n            <Tabs>\r\n              <TabList>\r\n                <Tab>Employees</Tab>\r\n                <Tab>Leaves</Tab>\r\n                <Tab>HOC History</Tab>\r\n              </TabList>\r\n              <TabPanels>\r\n                <TabPanel>\r\n                  <Box\r\n                    maxW=\"full\"\r\n                    padding=\"4\"\r\n                    width=\"100%\"\r\n                    height=\"700\"\r\n                    borderColor=\"blue.500\"\r\n                    borderWidth=\"1px\"\r\n                    borderRadius=\"lg\"\r\n                    overflow=\"scroll\"\r\n                  >\r\n                    <SimpleGrid>\r\n                      <Box>\r\n                        <Heading as=\"h2\" size=\"lg\">\r\n                          Employees\r\n                        </Heading>\r\n                      </Box>\r\n                      <Divider />\r\n                      <Box>\r\n                        <Tabs isLazy>\r\n                          {/* <TabList>\r\n                            <Tab>Details</Tab>\r\n                          </TabList> */}\r\n                          <TabPanels>\r\n                            <TabPanel>\r\n                              <EmployeeTableLeaveView />\r\n                            </TabPanel>\r\n                          </TabPanels>\r\n                        </Tabs>\r\n                      </Box>\r\n                      <Divider />\r\n                    </SimpleGrid>\r\n                  </Box>\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <Box\r\n                    maxW=\"100%\"\r\n                    padding=\"4\"\r\n                    width=\"full\"\r\n                    height=\"700\"\r\n                    borderColor=\"blue.500\"\r\n                    borderWidth=\"1px\"\r\n                    borderRadius=\"lg\"\r\n                    overflow=\"scroll\"\r\n                  >\r\n                    <SimpleGrid w=\"168vh\">\r\n                      <HStack>\r\n                        <Box>\r\n                          <Heading as=\"h2\" size=\"lg\">\r\n                            Leaves\r\n                          </Heading>\r\n                        </Box>\r\n                        <Box alignSelf=\"flex-end\">\r\n                          <HStack>\r\n                            <Select\r\n                              value={selectleaveyear}\r\n                              fontSize={20}\r\n                              onChange={(e) =>\r\n                                setSelectLeaveYear(e.target.value)\r\n                              }\r\n                            >\r\n                              <option value=\"2021\">2021</option>\r\n                              <option value=\"2022\">2022</option>\r\n                            </Select>\r\n                            {/* <Box size=\"xl\" py={2}>\r\n                              <Text fontSize=\"lg\">\r\n                                <ExportLeave2Excel\r\n                                  filename=\"leave\"\r\n                                  dataset={dataset}\r\n                                  title=\"Leave\"\r\n                                />\r\n                              </Text>\r\n                            </Box> */}\r\n                          </HStack>\r\n                        </Box>\r\n                      </HStack>\r\n                      <Divider />\r\n                      <Box>\r\n                        <Tabs defaultIndex={currentmonth} isLazy>\r\n                          <TabList>\r\n                            {/* <Tab>Chart</Tab>\r\n                          <Tab>Summary</Tab> */}\r\n                            <Tab>January</Tab>\r\n                            <Tab>February</Tab>\r\n                            <Tab>March</Tab>\r\n                            <Tab>April</Tab>\r\n                            <Tab>May</Tab>\r\n                            <Tab>June</Tab>\r\n                            <Tab>July</Tab>\r\n                            <Tab>August</Tab>\r\n                            <Tab>September</Tab>\r\n                            <Tab>October</Tab>\r\n                            <Tab>November</Tab>\r\n                            <Tab>December</Tab>\r\n                          </TabList>\r\n                          <TabPanels>\r\n                            {/* <TabPanel>\r\n                  <BarChart\r\n                    heading=\"Expenses for the Month\"\r\n                    barchartdata={expchartdata}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <SummaryTableView columns={columns} data={data} />\r\n                </TabPanel> */}\r\n                            <TabPanel>\r\n                              <LeavesTableViewSummary\r\n                                year={\r\n                                  selectleaveyear\r\n                                    ? selectleaveyear\r\n                                    : currentyear\r\n                                }\r\n                                month={1}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <LeavesTableViewSummary\r\n                                year={\r\n                                  selectleaveyear\r\n                                    ? selectleaveyear\r\n                                    : currentyear\r\n                                }\r\n                                month={2}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <LeavesTableViewSummary\r\n                                year={\r\n                                  selectleaveyear\r\n                                    ? selectleaveyear\r\n                                    : currentyear\r\n                                }\r\n                                month={3}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <LeavesTableViewSummary\r\n                                year={\r\n                                  selectleaveyear\r\n                                    ? selectleaveyear\r\n                                    : currentyear\r\n                                }\r\n                                month={4}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <LeavesTableViewSummary\r\n                                year={\r\n                                  selectleaveyear\r\n                                    ? selectleaveyear\r\n                                    : currentyear\r\n                                }\r\n                                month={5}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <LeavesTableViewSummary\r\n                                year={\r\n                                  selectleaveyear\r\n                                    ? selectleaveyear\r\n                                    : currentyear\r\n                                }\r\n                                month={6}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <LeavesTableViewSummary\r\n                                year={\r\n                                  selectleaveyear\r\n                                    ? selectleaveyear\r\n                                    : currentyear\r\n                                }\r\n                                month={7}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <LeavesTableViewSummary\r\n                                year={\r\n                                  selectleaveyear\r\n                                    ? selectleaveyear\r\n                                    : currentyear\r\n                                }\r\n                                month={8}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <LeavesTableViewSummary\r\n                                year={\r\n                                  selectleaveyear\r\n                                    ? selectleaveyear\r\n                                    : currentyear\r\n                                }\r\n                                month={9}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <LeavesTableViewSummary\r\n                                year={\r\n                                  selectleaveyear\r\n                                    ? selectleaveyear\r\n                                    : currentyear\r\n                                }\r\n                                month={10}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <LeavesTableViewSummary\r\n                                year={\r\n                                  selectleaveyear\r\n                                    ? selectleaveyear\r\n                                    : currentyear\r\n                                }\r\n                                month={11}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <LeavesTableViewSummary\r\n                                year={\r\n                                  selectleaveyear\r\n                                    ? selectleaveyear\r\n                                    : currentyear\r\n                                }\r\n                                month={12}\r\n                              />\r\n                            </TabPanel>\r\n                          </TabPanels>\r\n                        </Tabs>\r\n                      </Box>\r\n                      <Divider />\r\n                    </SimpleGrid>\r\n                  </Box>\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <Box\r\n                    maxW=\"100%\"\r\n                    padding=\"4\"\r\n                    width=\"full\"\r\n                    height=\"700\"\r\n                    borderColor=\"blue.500\"\r\n                    borderWidth=\"1px\"\r\n                    borderRadius=\"lg\"\r\n                    overflow=\"scroll\"\r\n                  >\r\n                    <SimpleGrid w=\"168vh\">\r\n                      <HStack>\r\n                        <Box>\r\n                          <Heading as=\"h2\" size=\"lg\">\r\n                            HOC History\r\n                          </Heading>\r\n                        </Box>\r\n                        <Box alignSelf=\"flex-end\">\r\n                          <HStack>\r\n                            <Select\r\n                              value={selecthocyear}\r\n                              fontSize={20}\r\n                              onChange={(e) => setSelectHocYear(e.target.value)}\r\n                            >\r\n                              <option value=\"2021\">2021</option>\r\n                              <option value=\"2022\">2022</option>\r\n                            </Select>\r\n                            {/* <Box size=\"xl\" py={2}>\r\n                              <Text fontSize=\"lg\">\r\n                                <ExportLeave2Excel\r\n                                  filename=\"leave\"\r\n                                  dataset={dataset}\r\n                                  title=\"Leave\"\r\n                                />\r\n                              </Text>\r\n                            </Box> */}\r\n                          </HStack>\r\n                        </Box>\r\n                      </HStack>\r\n                      <Divider />\r\n                      <Box>\r\n                        <Tabs defaultIndex={currentmonth} isLazy>\r\n                          <TabList>\r\n                            {/* <Tab>Chart</Tab>\r\n                          <Tab>Summary</Tab> */}\r\n                            <Tab>January</Tab>\r\n                            <Tab>February</Tab>\r\n                            <Tab>March</Tab>\r\n                            <Tab>April</Tab>\r\n                            <Tab>May</Tab>\r\n                            <Tab>June</Tab>\r\n                            <Tab>July</Tab>\r\n                            <Tab>August</Tab>\r\n                            <Tab>September</Tab>\r\n                            <Tab>October</Tab>\r\n                            <Tab>November</Tab>\r\n                            <Tab>December</Tab>\r\n                          </TabList>\r\n                          <TabPanels>\r\n                            {/* <TabPanel>\r\n                  <BarChart\r\n                    heading=\"Expenses for the Month\"\r\n                    barchartdata={expchartdata}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <SummaryTableView columns={columns} data={data} />\r\n                </TabPanel> */}\r\n                            <TabPanel>\r\n                              <HocTableViewSummary\r\n                                year={\r\n                                  selecthocyear ? selecthocyear : currentyear\r\n                                }\r\n                                month={1}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <HocTableViewSummary\r\n                                year={\r\n                                  selecthocyear ? selecthocyear : currentyear\r\n                                }\r\n                                month={2}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <HocTableViewSummary\r\n                                year={\r\n                                  selecthocyear ? selecthocyear : currentyear\r\n                                }\r\n                                month={3}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <HocTableViewSummary\r\n                                year={\r\n                                  selecthocyear ? selecthocyear : currentyear\r\n                                }\r\n                                month={4}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <HocTableViewSummary\r\n                                year={\r\n                                  selecthocyear ? selecthocyear : currentyear\r\n                                }\r\n                                month={5}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <HocTableViewSummary\r\n                                year={\r\n                                  selecthocyear ? selecthocyear : currentyear\r\n                                }\r\n                                month={6}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <HocTableViewSummary\r\n                                year={\r\n                                  selecthocyear ? selecthocyear : currentyear\r\n                                }\r\n                                month={7}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <HocTableViewSummary\r\n                                year={\r\n                                  selecthocyear ? selecthocyear : currentyear\r\n                                }\r\n                                month={8}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <HocTableViewSummary\r\n                                year={\r\n                                  selecthocyear ? selecthocyear : currentyear\r\n                                }\r\n                                month={9}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <HocTableViewSummary\r\n                                year={\r\n                                  selecthocyear ? selecthocyear : currentyear\r\n                                }\r\n                                month={10}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <HocTableViewSummary\r\n                                year={\r\n                                  selecthocyear ? selecthocyear : currentyear\r\n                                }\r\n                                month={11}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <HocTableViewSummary\r\n                                year={\r\n                                  selecthocyear ? selecthocyear : currentyear\r\n                                }\r\n                                month={12}\r\n                              />\r\n                            </TabPanel>\r\n                          </TabPanels>\r\n                        </Tabs>\r\n                      </Box>\r\n                      <Divider />\r\n                    </SimpleGrid>\r\n                  </Box>\r\n                </TabPanel>\r\n              </TabPanels>\r\n            </Tabs>\r\n          </Box>\r\n        </Stack>\r\n\r\n        <Box pt={4}>\r\n          <Copyright />\r\n        </Box>\r\n        <CustomDialog\r\n          isOpen={isLeaveDialogOpen}\r\n          handleClose={handleLeaveDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <LeaveTableAdmin\r\n            setLeavesdata={setLeavesdata}\r\n            leavesdata={leavesdata}\r\n            handleDialogClose={handleLeaveDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isExpenseDialogOpen}\r\n          handleClose={handleExpenseDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <ExpenseTableAdmin\r\n            setExpensesdata={setExpensesdata}\r\n            expensesdata={expensesdata}\r\n            handleDialogClose={handleExpenseDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isPayslipDialogOpen}\r\n          handleClose={handlePayslipDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={false}\r\n        >\r\n          <PayslipTableAdmin\r\n            setPayslipsdata={setPayslipsdata}\r\n            payslipsdata={payslipsdata}\r\n            handleDialogClose={handlePayslipDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isDailyAllowancesDialogOpen}\r\n          handleClose={handleDailyAllowancesDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={false}\r\n        >\r\n          <DailyAllowancesTableAdmin\r\n            setDailyAllowancesdata={setDailyAllowancesdata}\r\n            dailyallowancesdata={dailyallowancesdata}\r\n            handleDialogClose={handleDailyAllowancesDialogClose}\r\n          />\r\n        </CustomDialog>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default EmployeeView;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseTableAdmin.js",["3347","3348","3349","3350","3351","3352","3353","3354","3355"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  { title: \"Name\", field: \"name\", editable: \"never\" },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Description\",\r\n    field: \"description\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\", editable: \"never\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function ExpenseTable({\r\n  expensesdata,\r\n  setExpensesdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const [isLoad, setIsLoad] = useState(false);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const { loadEmployees } = useEmployeesContext();\r\n  const {\r\n    editExpenseID,\r\n    updateExpense,\r\n    update_expense_error,\r\n    expenses_loading,\r\n    deleteExpense,\r\n    loadPendingExpenses,\r\n  } = useExpensesContext();\r\n\r\n  // useEffect(() => {\r\n  //   setExpensesdata(expenses);\r\n  //   console.log(expensesdata)\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   loadEmployees();\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (expenses) {\r\n  //     setExpensesdata(expenses);\r\n  //     console.log(\"expenses\", expenses, expensesdata)\r\n  //   } else {\r\n  //     setIsLoad(!isLoad);\r\n  //   }\r\n  // }, [isLoad]);\r\n\r\n  const handleExpenseFormDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleExpenseFormDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  const handleExpenseFormAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleExpenseFormAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleExpenseFormOnDeleteConfirm = () => {\r\n    const id = editExpenseID;\r\n    deleteExpense(id);\r\n    loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  const Save_ExpenseData = () => {\r\n    expensesdata.forEach((data) => {\r\n      const { id } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updateExpense({ id, ...fields });\r\n      }\r\n    });\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  const Approve_ExpenseData = () => {\r\n    expensesdata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updateExpense({ id: rec.id, status: \"Approved\" });\r\n        //update leavesdata\r\n        if (!update_expense_error) {\r\n          const recdata = expensesdata.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Approved\";\r\n        }\r\n      }\r\n    });\r\n    expensesdata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  const Reject_ExpenseData = () => {\r\n    expensesdata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updateExpense({ id: rec.id, status: \"Rejected\" });\r\n        //update leavesdata\r\n        if (!update_expense_error) {\r\n          const recdata = expensesdata.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Rejected\";\r\n        }\r\n      }\r\n    });\r\n    expensesdata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  if (!expensesdata) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Expenses</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={expensesdata}\r\n          title=\"Expenses Claims Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         const dataUpdate = [...expensesdata];\r\n          //         const index = oldData.tableData.id;\r\n          //         dataUpdate[index] = newData;\r\n          //         setExpensesdata([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          options={{\r\n            filtering: true,\r\n            selection: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Approve_ExpenseData}\r\n                  >\r\n                    Approve <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Reject_ExpenseData}\r\n                  >\r\n                    Reject <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                  {/* <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_ExpenseData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button> */}\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleExpenseFormDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n        >\r\n          <ExpenseForm handleDialogClose={handleExpenseFormDialogClose} />\r\n        </CustomDialog>\r\n\r\n        <AlertDialogBox\r\n          onClose={handleExpenseFormAlertClose}\r\n          onConfirm={handleExpenseFormOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseTableView.js",["3356","3357","3358","3359","3360","3361","3362","3363","3364","3365","3366","3367","3368","3369","3370","3371","3372","3373","3374"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialogBox\";\r\nimport { useExpenses } from \"./expenses/useExpenses\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n\r\n  { title: \"Description\", field: \"description\" },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function ExpenseTableView() {\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const { loadEmployees } = useEmployeesContext();\r\n  const { expenses} = useExpenses()\r\n  // const {\r\n  //   //expenses,\r\n  //   addExpense,\r\n  //   expenses_loading,\r\n  //   updateExpense,\r\n  //   deleteExpense,\r\n  //   loadPendingExpenses,\r\n  //   getSingleExpense,\r\n  //   setEditExpenseID,\r\n  //   setIsExpenseEditingOn,\r\n  //   setIsExpenseEditingOff,\r\n  //   resetSingleExpense,\r\n  // } = useExpensesContext();\r\n\r\n  // useEffect(() => {\r\n  //   loadPendingExpenses(FILTERSTRING);\r\n  // }, []);\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    //loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={expenses\r\n            .filter((r) => r.status === \"Pending\")\r\n            .map((rec) => { return { ...rec } })\r\n          }\r\n            \r\n          title=\"Leave Application\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipTableView.js",["3375","3376","3377","3378","3379","3380","3381","3382","3383","3384","3385","3386","3387","3388"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipTableAdmin.js",["3389","3390","3391","3392","3393","3394","3395"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Button, MenuItem, Icon } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport { payPeriodEmpIdState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Batch\",\r\n    field: \"payrun\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Period\", field: \"period\", editable: \"never\" },\r\n  {\r\n    title: \"Pay Date\",\r\n    field: \"pay_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Wages\",\r\n    field: \"totalwages\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"TAP Amount\",\r\n    field: \"totaltap\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"SCP Amount\",\r\n    field: \"totalscp\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Site Allowances\",\r\n    field: \"totalsitesallows\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Expenses Claims\",\r\n    field: \"totalexpensesclaims\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Allowances\",\r\n    field: \"totalallows\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Deductions\",\r\n    field: \"totaldeducts\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Total Payroll\",\r\n    field: \"totalpayroll\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  // { title: \"Bank Name\", field: \"bank_name\" },\r\n  // { title: \"Bank AC No\", field: \"bank_accno\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      width: 50,\r\n      maxWidth: 50,\r\n    },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function PayslipTableAdmin({\r\n  payslipsdata,\r\n  setPayslipsdata,\r\n  handleDialogClose,\r\n}) {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\r\n  const { updatePayrun, batchpayrun, update_payrun_loading, update_payrun_error } = usePayslipsContext();\r\n\r\n  const Save_PayslipData = () => {\r\n    payslipsdata.forEach((data) => {\r\n      const { id } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updatePayrun({ id, ...fields });\r\n      }\r\n    });\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  const Approve_PayslipData = () => {\r\n    batchpayrun.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updatePayrun({ id: rec.id, status: \"Approved\" });\r\n\r\n        if (!update_payrun_error) {\r\n          const recdata = batchpayrun.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Approved\";\r\n        }\r\n      }\r\n    });\r\n    batchpayrun.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  const Reject_PayslipData = () => {\r\n    batchpayrun.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updatePayrun({ id: rec.id, status: \"Rejected\" });\r\n        //update leavesdata\r\n        if (!update_payrun_error) {\r\n          const recdata = batchpayrun.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Rejected\";\r\n        }\r\n      }\r\n    });\r\n    batchpayrun.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={batchpayrun}\r\n          title=\"Payslips\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n            Build: (props) => <BuildOutlinedIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         const dataUpdate = [...payslipsdata];\r\n          //         const index = oldData.tableData.id;\r\n          //         dataUpdate[index] = newData;\r\n          //         setPayslipsdata([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          options={{\r\n            filtering: true,\r\n            selection: true,\r\n            exportButton: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Approve_PayslipData}\r\n                  >\r\n                    Approve <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Reject_PayslipData}\r\n                  >\r\n                    Reject <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                  {/* <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_PayslipData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button> */}\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesTableAdmin.js",["3396","3397","3398","3399","3400","3401","3402","3403","3404","3405","3406","3407","3408","3409","3410","3411","3412","3413","3414","3415","3416","3417","3418"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Icon, Button, MenuItem } from \"@material-ui/core\";\r\nimport {\r\n  useSetRecoilState,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  useRecoilValueLoadable,\r\n} from \"recoil\";\r\nimport {\r\n  allowsPeriodState,\r\n  allowsDataState,\r\n  empidState,\r\n} from \"./data/atomdata\";\r\nimport { fetchDailyAllowancesSelector } from \"./data/selectordata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\nimport DailyAllowsDetlsTable from \"./DailyAllowsDetlsTable\";\r\n\r\nconst FILTERSTRING = \"Submitted\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Period\", field: \"period\", editable: \"never\" },\r\n  { title: \"Location\", field: \"location\", editable: \"never\" },\r\n  { title: \"Manager Name\", field: \"manager\", editable: \"never\" },\r\n  {\r\n    title: \"No Of Days\",\r\n    field: \"no_of_days\",\r\n    type: \"numeric\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\", editable: \"never\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approved\">Approved</MenuItem>\r\n        <MenuItem value=\"Rejected\">Rejected</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function DailyAllowancesTable({\r\n  dailyallowancesdata,\r\n  setDailyAllowancesdata,\r\n  update_dailyallowance_error,\r\n  handleDialogClose,\r\n}) {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [tmpallowsdata, setTmpallowsdata] = useState([]);\r\n  const allows_period = useRecoilValue(allowsPeriodState);\r\n  const allows_empid = useRecoilValue(empidState);\r\n  const [allowsdata, setAllowsdata] = useRecoilState(allowsDataState);\r\n  const setEmpID = useSetRecoilState(empidState);\r\n  const title = `Site Allowances (${allows_period})`;\r\n  const {\r\n    dailyallowances_loading,\r\n    singlebatch_dailyallowance,\r\n    singlebatch_dailyallowance_loading,\r\n    deleteDailyAllowance,\r\n    updateDailyAllowance,\r\n    setEditDailyAllowanceID,\r\n    setIsDailyAllowanceEditingOn,\r\n    setIsDailyAllowanceEditingOff,\r\n    resetSingleDailyAllowance,\r\n    dailyallowance_period,\r\n    getSingleBatchDailyAllowance,\r\n  } = useDailyAllowancesContext();\r\n\r\n  const Save_DailyAllowancesData = () => {\r\n    dailyallowancesdata.forEach((data) => {\r\n      const { id } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updateDailyAllowance({ id, ...fields });\r\n      }\r\n    });\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  const Approve_DailyAllowancesData = () => {\r\n    dailyallowancesdata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updateDailyAllowance({ id: rec.id, status: \"Approved\" });\r\n        //update leavesdata\r\n        if (!update_dailyallowance_error) {\r\n          const recdata = dailyallowancesdata.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Approved\";\r\n        }\r\n      }\r\n    });\r\n    dailyallowancesdata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  const Reject_DailyAllowancesData = () => {\r\n    dailyallowancesdata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updateDailyAllowance({ id: rec.id, status: \"Rejected\" });\r\n        //update leavesdata\r\n        if (!update_dailyallowance_error) {\r\n          const recdata = dailyallowancesdata.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Rejected\";\r\n        }\r\n      }\r\n    });\r\n    dailyallowancesdata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  if (dailyallowances_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... daily allowances</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={dailyallowancesdata}\r\n          title={title}\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         const dataUpdate = [...dailyallowancesdata];\r\n          //         const index = oldData.tableData.id;\r\n          //         dataUpdate[index] = newData;\r\n          //         setDailyAllowancesdata([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          options={{\r\n            filtering: true,\r\n            selection: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Approve_DailyAllowancesData}\r\n                  >\r\n                    Approve\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Reject_DailyAllowancesData}\r\n                  >\r\n                    Reject\r\n                  </Button>\r\n                  {/* <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_DailyAllowancesData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button> */}\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <div className={classes.dialog}>\r\n          <CustomDialog\r\n            isOpen={isDialogOpen}\r\n            handleClose={handleDialogClose}\r\n            title=\"\"\r\n            showButton={true}\r\n            isFullscreen={true}\r\n            isFullwidth={true}\r\n          >\r\n            <DailyAllowsDetlsTable\r\n              setAllowsdata={setAllowsdata}\r\n              allowsdata={allowsdata}\r\n              handleDialogClose={handleDialogClose}\r\n            />\r\n          </CustomDialog>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  dialog: {\r\n    width: 1000,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesTableView.js",["3419","3420","3421","3422","3423","3424","3425","3426","3427","3428","3429","3430","3431","3432","3433","3434","3435","3436","3437","3438","3439","3440","3441","3442","3443","3444","3445","3446","3447","3448","3449","3450","3451"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  useSetRecoilState,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  useRecoilValueLoadable,\r\n} from \"recoil\";\r\nimport {\r\n  allowsPeriodState,\r\n  allowsDataState,\r\n  empidState,\r\n} from \"./data/atomdata\";\r\nimport { fetchDailyAllowancesSelector } from \"./data/selectordata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\nimport DailyAllowsDetlsTable from \"./DailyAllowsDetlsTable\";\r\nimport { useDailyAllowsStatus } from \"./dailyallows/useDailyAllowsStatus\";\r\n\r\nconst FILTERSTRING = \"Verified\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  { title: \"Period\", field: \"period\" },\r\n  { title: \"Location\", field: \"location\" },\r\n  { title: \"Manager\", field: \"manager_name\" },\r\n  { title: \"Days\", field: \"no_of_days\", type: \"numeric\" },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function DailyAllowancesTable() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [tmpallowsdata, setTmpallowsdata] = useState([]);\r\n  const allows_period = useRecoilValue(allowsPeriodState);\r\n  const allows_empid = useRecoilValue(empidState);\r\n  const [allowsdata, setAllowsdata] = useRecoilState(allowsDataState);\r\n  const { dailyallowsstatus, setDailyAllowsStatusId } = useDailyAllowsStatus();\r\n  const setEmpID = useSetRecoilState(empidState);\r\n  const title = `Site Allowances (${allows_period})`;\r\n  const {\r\n    dailyallowances,\r\n    loadPendingDailyAllowances,\r\n    singlebatch_dailyallowance,\r\n    singlebatch_dailyallowance_loading,\r\n    deleteDailyAllowance,\r\n    setEditDailyAllowanceID,\r\n    setIsDailyAllowanceEditingOn,\r\n    setIsDailyAllowanceEditingOff,\r\n    resetSingleDailyAllowance,\r\n    dailyallowance_period,\r\n    getSingleBatchDailyAllowance,\r\n  } = useDailyAllowancesContext();\r\n\r\n  useEffect(() => {\r\n   setDailyAllowsStatusId(FILTERSTRING);\r\n  }, []);\r\n\r\n  const handleDialogOpen = () => {\r\n    //console.log(\"allowsdetls\", allowsdata, allowsdataRef, singlebatch_dailyallowsdetl);\r\n    //setAllowsdata({ singlebatch_dailyallowsdetl });\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    //getSingleBatchDailyAllowance(dailyallowance_period);\r\n  };\r\n\r\n  if (singlebatch_dailyallowance_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... daily allowances</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={dailyallowsstatus}\r\n          title={title}\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"black\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  dialog: {\r\n    width: 1000,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\OnLeavesView.js",["3452","3453","3454","3455","3456","3457","3458","3459","3460","3461"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { List, ListItem, ListItemText, Grid } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\n\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { onleaves_url } from \"../utils/constants\";\r\n//\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From Data\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Data\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n];\r\n\r\n// export const onleavesdatastate = atom({\r\n//   key: \"onleavesdatastate\",\r\n//   default: [],\r\n// });\r\n\r\n// const fetchOnLeavesDetails = selector({\r\n//   key: \"onLeaveDetailsSelector\",\r\n//   get: async ({ get }) => {\r\n//     try {\r\n//       const { data } = await axios.get(onleaves_url);\r\n//       const onleavesdata = data;\r\n\r\n//       return data;\r\n//     } catch (error) {\r\n//       throw error;\r\n//     }\r\n//   },\r\n// });\r\n\r\nconst loadUsers = async () => {\r\n  const { data } = await axios.get(onleaves_url);\r\n  return data;\r\n};\r\n//   await fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n//     .then((res) => (res.ok ? res : Promise.reject(res)))\r\n//     .then((res) => res.json());\r\n\r\nconst OnLeavesView = () => {\r\n  const classes = useStyles();\r\n  //const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [setUserdata] = useState([]);\r\n\r\n  //const [userdata, setUserdata] = useRecoilState(userdatastate);\r\n  //const onLeavesDetails = useRecoilValueLoadable(fetchOnLeavesDetails);\r\n  \r\n  \r\n  return (\r\n    <List className={classes.roow}>\r\n      <Grid container direction=\"row\">\r\n        {/* {data.map((row) => {\r\n          return (\r\n            <ListItem key={row.id}>\r\n              <Grid item sm={4} align=\"center\">\r\n                <ListItemText>{row.name}</ListItemText>\r\n              </Grid>\r\n              <Grid item sm={4} align=\"center\">\r\n                <ListItemText>{row.from_date}</ListItemText>\r\n              </Grid>\r\n              <Grid item sm={4} align=\"center\">\r\n                <ListItemText>{row.to_date}</ListItemText>\r\n              </Grid>\r\n            </ListItem>\r\n          );\r\n        })} */}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"2\",\r\n  },\r\n\r\n  paper: {\r\n    padding: theme.spacing(1), //grid padding\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default OnLeavesView;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\WPExpiryView.js",["3462","3463","3464","3465","3466","3467","3468","3469","3470"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid, List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { atom, selector, useRecoilValueLoadable } from \"recoil\";\r\n// import { useRecoilValue, useSetRecoilState, useRecoilState } from \"recoil\";\r\n// import { departmentsSelector } from \"../helpers/Recoilhelpers\";\r\nimport { wpexpiry_url } from \"../utils/constants\";\r\nimport { fetchDepartmentsSelector } from \"./data/selectordata\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Work Permit No\",\r\n    field: \"workpermitno\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Work Permit Expiry\",\r\n    field: \"workpermit_expirydate\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n];\r\n\r\nexport const onleavesdatastate = atom({\r\n  key: \"onleavesdatastate\",\r\n  default: [],\r\n});\r\n\r\nconst fetchWPExpiryDetails = selector({\r\n  key: \"wpExpiryDetailsSelector\",\r\n  get: async ({ get }) => {\r\n    try {\r\n      const { data } = await axios.get(wpexpiry_url);\r\n      const wpexpirydata = data;\r\n\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n});\r\n\r\nconst WPExpiryView = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [userdata, setUserdata] = useState([]);\r\n  //const [userdata, setUserdata] = useRecoilState(userdatastate);\r\n  const wpExpiryDetails = useRecoilValueLoadable(fetchWPExpiryDetails);\r\n  const { state, contents } = wpExpiryDetails;\r\n\r\n  console.log(wpExpiryDetails);\r\n  if (wpExpiryDetails.state === \"hasError\") {\r\n    return (\r\n      <div>\r\n        <h2>Internet connections problem!</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (state === \"loading\") {\r\n    return (\r\n      <div>\r\n        <h2>Loading....WP Expiry</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (state === \"hasValue\") {\r\n    const editable = contents.map((r) => {\r\n      return { ...r };\r\n    });\r\n    return (\r\n      <List className={classes.root}>\r\n        <Grid container direction=\"row\">\r\n          {editable.map((row) => {\r\n            return (\r\n              <ListItem key={row.id}>\r\n                <Grid item sm={4} align=\"center\">\r\n                  <ListItemText>{row.name}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={4} align=\"center\">\r\n                  <ListItemText>{row.workpermitno}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={4} align=\"center\">\r\n                  <ListItemText>{row.workpermit_expirydate}</ListItemText>\r\n                </Grid>\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </List>\r\n    );\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default WPExpiryView;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\Example6.js",["3471","3472","3473","3474","3475","3476","3477","3478","3479"],"import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useTable } from \"react-table\";\r\nimport ReactWhatsapp from \"react-whatsapp\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\nimport Table from \"../helpers/TableContainer\";\r\nimport { Box, Image } from \"@chakra-ui/react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Cloudinary, Transformation } from \"@cloudinary/base\";\r\nimport {\r\n  //Image,\r\n  AdvancedImage,\r\n  accessibility,\r\n  responsive,\r\n} from \"@cloudinary/react\";\r\n// Import required actions.\r\nimport { thumbnail, scale } from \"@cloudinary/base/actions/resize\";\r\nimport { byRadius } from \"@cloudinary/base/actions/roundCorners\";\r\nimport { sepia } from \"@cloudinary/base/actions/effect\";\r\nimport { source } from \"@cloudinary/base/actions/overlay\";\r\nimport { opacity, brightness } from \"@cloudinary/base/actions/adjust\";\r\nimport { byAngle } from \"@cloudinary/base/actions/rotate\";\r\nimport { format } from \"@cloudinary/base/actions/delivery\";\r\n// Import required qualifiers.\r\nimport { face } from \"@cloudinary/base/qualifiers/focusOn\";\r\nimport { focusOn } from \"@cloudinary/base/qualifiers/gravity\";\r\nimport { image } from \"@cloudinary/base/qualifiers/source\";\r\nimport { Position } from \"@cloudinary/base/qualifiers/position\";\r\nimport { southEast } from \"@cloudinary/base/qualifiers/compass\";\r\nimport { compass } from \"@cloudinary/base/qualifiers/gravity\";\r\nimport { png } from \"@cloudinary/base/qualifiers/format\";\r\n\r\nconst drawerWidth = 240;\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\nconst Example = () => {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [data, setData] = useState([]);\r\n  const myCld = new Cloudinary({ cloudName: \"dlmzwvakr\" });\r\n  const myImage = myCld.image(\"sample\");\r\n  const [emailstatus, setEmailStatus] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios(\"http://api.tvmaze.com/search/shows?q=girls\")\r\n      .then((res) => {\r\n        setData(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  // Apply the transformation.\r\n  myImage\r\n    .resize(thumbnail().width(150).height(150).gravity(focusOn(face()))) // Crop the image.\r\n    .roundCorners(byRadius(20)) // Round the corners.\r\n    .effect(sepia()) // Apply a sepia effect.\r\n    .overlay(\r\n      // Overlay the Cloudinary logo.\r\n      source(\r\n        image(\"cloudinary_icon_blue\").transformation(\r\n          new Transformation()\r\n            .resize(scale(50)) // Resize the logo.\r\n            .adjust(opacity(60)) // Adjust the opacity of the logo.\r\n            .adjust(brightness(200))\r\n        ) // Adjust the brightness of the logo.\r\n      ).position(\r\n        new Position().gravity(compass(southEast())).offsetX(5).offsetY(5)\r\n      ) // Position the logo.\r\n    )\r\n    .rotate(byAngle(10)) // Rotate the result.\r\n    .delivery(format(png())); // Deliver as PNG. */\r\n\r\n  const columns = useMemo(() => [\r\n    {\r\n      Header: \"TV Show\",\r\n      columns: [\r\n        {\r\n          Header: \"Name\",\r\n          accessor: \"show.name\",\r\n        },\r\n        {\r\n          Header: \"Language\",\r\n          accessor: \"show.language\",\r\n        },\r\n        {\r\n          Header: \"Official Site\",\r\n          accessor: \"show.officialSite\",\r\n          Cell: ({ cell: { value } }) =>\r\n            value ? <a href={value}>{value}</a> : \"-\",\r\n        },\r\n        {\r\n          Header: \"Status\",\r\n          accessor: \"show.status\",\r\n        },\r\n        {\r\n          Header: \"Premiered\",\r\n          accessor: \"show.premiered\",\r\n          Cell: ({ cell: { value } }) => value || \"-\",\r\n        },\r\n        {\r\n          Header: \"Time\",\r\n          accessor: \"show.schedule.time\",\r\n          Cell: ({ cell: { value } }) => value || \"-\",\r\n        },\r\n      ],\r\n    },\r\n  ]);\r\n\r\n  const handleButtonClick = () => {\r\n    var data = {\r\n      to_name: \"pvchin\",\r\n      to_email: \"pvchinbn@gmail.com\",\r\n      message: \"This is a reminder!!\",\r\n      cc_to: \"pvchinbn@yahoo.com\",\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, data, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        setEmailStatus(\"success\");\r\n        \r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        setEmailStatus(\"failure\");\r\n      }\r\n    );\r\n    console.log(\"email\", emailstatus)\r\n    if (emailstatus === \"success\") {\r\n       toast({\r\n         title: \"Invalid email or password!\",\r\n         status: \"warning\",\r\n       });\r\n    } \r\n  };\r\n\r\n  return (\r\n    <paper className={fixedHeightPaper} style={{ backgroundColor: \"white\" }}>\r\n      <section className={classes.section}>\r\n        {/* <Image\r\n          cloudName=\"dlmzwvakr\"\r\n          secure=\"true\"\r\n          upload_preset=\"advtrade\"\r\n          publicId=\"smartsecurity-ss3_d21ecw.jpg\"\r\n        >\r\n          <Transformation\r\n            width=\"400\"\r\n            height=\"250\"\r\n            gravity=\"face\"\r\n            crop=\"thumb\"\r\n          />\r\n        </Image> */}\r\n        {/* <div>\r\n          <AdvancedImage cldImg={myImage} />\r\n        </div>{\" \"} */}\r\n\r\n        <Image\r\n          boxSize=\"200px\"\r\n          src=\"https://res.cloudinary.com/dlmzwvakr/image/upload/v1626538637/advtrade/smartsecurity-ss3_d21ecw.jpg\"\r\n          alt=\"Dan Abramov\"\r\n        />\r\n        <div className=\"App\">\r\n          <h1>\r\n            <center>React Table Demo</center>\r\n          </h1>\r\n          <Table columns={columns} data={data} />\r\n          <button onClick={handleButtonClick}>Send Email</button>\r\n        </div>\r\n      </section>\r\n    </paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"90vw\",\r\n    margin: \"5rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n}));\r\n\r\nexport default Example;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\Payrun.js",["3480","3481","3482","3483","3484","3485","3486","3487","3488","3489","3490","3491","3492","3493","3494","3495","3496","3497","3498","3499","3500","3501","3502","3503","3504","3505","3506","3507"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Text } from \"@chakra-ui/react\";\r\nimport clsx from \"clsx\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n  Icon,\r\n  Divider,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Box,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Select,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  Input,\r\n  InputGroup,\r\n  InputLeftAddon,\r\n  NumberInput,\r\n  NumberInputField,\r\n  NumberInputStepper,\r\n  NumberIncrementStepper,\r\n  NumberDecrementStepper,\r\n  Stack,\r\n} from \"@chakra-ui/react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport { payrunState, payrunIdState } from \"./data/atomdata\";\r\nimport { usePayrun } from \"./payrun/usePayrun\";\r\nimport { useCurrency } from \"./currency/useCurrency\";\r\nimport { useExpenses } from \"./expenses/useExpenses\";\r\nimport UpdateCurrency from \"./CurrencyTable\";\r\nimport { usePayslipsBatch } from \"./payslips/usePayslipsBatch\";\r\n\r\n//const drawerWidth = 240;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"NAME\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      width: 280,\r\n      maxWidth: 280,\r\n    },\r\n  },\r\n];\r\n\r\nconst selectmonths = [\r\n  { mth: \"January\" },\r\n  { mth: \"February\" },\r\n  { mth: \"March\" },\r\n  { mth: \"April\" },\r\n  { mth: \"May\" },\r\n  { mth: \"June\" },\r\n  { mth: \"July\" },\r\n  { mth: \"August\" },\r\n  { mth: \"September\" },\r\n  { mth: \"October\" },\r\n  { mth: \"November\" },\r\n  { mth: \"December\" },\r\n];\r\n\r\nconst Payrun = () => {\r\n  let history = useHistory();\r\n  let date = new Date();\r\n  let longMonth = date.toLocaleString(\"en-us\", { month: \"long\" });\r\n\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  //const { payrun } = usePayrun();\r\n  const { payslipsbatch, psbpayrunId, setPSBPayrunId } = usePayslipsBatch();\r\n  const { currency } = useCurrency();\r\n  //const { expenses, setPayrunId } = useExpensesPayrun();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [loadPaybatch, setLoadPaybatch] = useState(false);\r\n  const { loadEmployees, employees } = useEmployeesContext();\r\n  const { loadUnpaidExpenses, expenses, unpaidexpenses, updateExpense } =\r\n    useExpensesContext();\r\n  const { unpaiddailyallows, loadUnpaidDailyAllows, updateDailyAllowance } =\r\n    useDailyAllowancesContext();\r\n  const {\r\n    addPayrun,\r\n    getPayrun,\r\n    payrun,\r\n    payrun_loading,\r\n    addPayslip,\r\n    resetPayslipsData,\r\n    singlebatch_payslip_loading,\r\n    setPayslipPeriod,\r\n  } = usePayslipsContext();\r\n  const [input, setInput] = useRecoilState(payrunState);\r\n  const [payrunId, setPayrunId] = useRecoilState(payrunIdState);\r\n  const [alert, setAlert] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [errornoselect, setErrornoselect] = useState(false);\r\n  const [isPayrunExist, setIsPayrunExist] = useState(false);\r\n  const [isSubmit, setIsSubmit] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!payrun_loading) {\r\n      setLoadPaybatch(false);\r\n    }\r\n  }, [loadPaybatch]);\r\n\r\n  function formatDate(string) {\r\n    var options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\r\n    return new Date(string).toLocaleDateString(\"en-GB\", options);\r\n  }\r\n\r\n  function formatPayrun() {\r\n    const yy =\r\n      input.fromdate.substring(0, 4) + \"-\" + input.fromdate.substring(5, 7);\r\n    const mm = input.fromdate.substring(5, 7);\r\n    const d = input.fromdate;\r\n  }\r\n\r\n  const payrunExists = (data) => {\r\n    return payrun.some(function (el) {\r\n      return el.payrun === data;\r\n    });\r\n  };\r\n  const handleChange = (e) => {\r\n    setInput({ ...input, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handlePayrunSubmit = (e) => {\r\n    e.preventDefault();\r\n    setPayrunId(\"\");\r\n    var count = employees.reduce((acc, r) => {\r\n      if (r.tableData.checked) {\r\n        return acc + 1;\r\n      } else {\r\n        return acc;\r\n      }\r\n    }, 0);\r\n    //console.log(\"count\", count);\r\n    if (count === 0) {\r\n      setErrornoselect(true);\r\n      setTimeout(() => {\r\n        setErrornoselect(false);\r\n      }, 3000);\r\n      return null;\r\n    }\r\n\r\n    const period =\r\n      formatDate(input.fromdate) + \" - \" + formatDate(input.todate);\r\n    const payrundata =\r\n      input.fromdate.substring(0, 4) + \"-\" + input.fromdate.substring(5, 7);\r\n    setInput({\r\n      ...input,\r\n      period: period,\r\n      payrun: payrundata,\r\n      status: \"New\",\r\n    });\r\n    formatPayrun();\r\n    setPayslipPeriod(payrundata);\r\n    const isExist = payrunExists(payrundata);\r\n\r\n    if (isExist) {\r\n      //console.log(\"exist\");\r\n      setIsPayrunExist(true);\r\n      setIsSubmit(false);\r\n      setAlert(true);\r\n    } else {\r\n      //console.log(\"add\");\r\n      checkSelectedEmployees(period, payrundata);\r\n      add_Payrun(period, payrundata);\r\n      setIsPayrunExist(false);\r\n      setAlert(true);\r\n      setIsSubmit(true);\r\n      setLoadPaybatch(true);\r\n    }\r\n  };\r\n\r\n  const checkSelectedEmployees = (period, payrun) => {\r\n    //console.log(\"payrun\", payrun, period);\r\n    var exp = 0,\r\n      allows = 0,\r\n      tmpbasicsalary = 0,\r\n      tmptotalallows = 0,\r\n      tmptotalTAP = 0,\r\n      tmptotalSCP = 0,\r\n      tmpsiteallows = 0,\r\n      tmpexpsclaims = 0,\r\n      tmpnettpay = 0,\r\n      tmpcurrrate = 0,\r\n      tmpbasicsalarybnd = 0,\r\n      tmptotalallowsbnd = 0,\r\n      tmptotalTAPbnd = 0,\r\n      tmptotalSCPbnd = 0,\r\n      tmpsiteallowsbnd = 0,\r\n      tmpexpsclaimsbnd = 0,\r\n      tmpnettpaybnd = 0;\r\n\r\n    resetPayslipsData();\r\n    employees &&\r\n      employees.forEach((emp, index) => {\r\n        exp = 0;\r\n        allows = 0;\r\n        tmpbasicsalary = 0;\r\n        tmptotalallows = 0;\r\n        tmptotalTAP = 0;\r\n        tmptotalSCP = 0;\r\n        tmpnettpay = 0;\r\n        tmpcurrrate = 0;\r\n        tmpbasicsalarybnd = 0;\r\n        tmptotalallowsbnd = 0;\r\n        tmptotalTAPbnd = 0;\r\n        tmpsiteallowsbnd = 0;\r\n        tmpexpsclaimsbnd = 0;\r\n        tmptotalSCPbnd = 0;\r\n        tmpnettpaybnd = 0;\r\n\r\n        if (emp.tableData.checked) {\r\n          exp = 0;\r\n          if (unpaidexpenses) {\r\n            unpaidexpenses\r\n              .filter((r) => r.empid === emp.id)\r\n              .map((i) => {\r\n                updateExpense({ id: i.id, payrun: payrun });\r\n                return (exp = exp + i.amount);\r\n              });\r\n          }\r\n          allows = 0;\r\n          if (unpaiddailyallows) {\r\n            unpaiddailyallows\r\n              .filter((r) => r.empid === emp.id)\r\n              .map((i) => {\r\n                updateDailyAllowance({ id: i.id, payrun: payrun });\r\n                return (allows = allows + i.amount);\r\n              });\r\n          }\r\n\r\n          const {\r\n            id,\r\n            name,\r\n            bank_name,\r\n            bank_acno,\r\n            basic_salary,\r\n            salary_currency,\r\n            tap_acno,\r\n            scp_acno,\r\n            tap_checkbox,\r\n          } = emp;\r\n\r\n          tmpbasicsalary = basic_salary;\r\n\r\n          if (salary_currency && salary_currency !== \"BND\") {\r\n            const table = currency\r\n              .filter((r) => r.currency === salary_currency)\r\n              .map((rec) => {\r\n                return { ...rec };\r\n              });\r\n            tmpcurrrate = table[0].rate;\r\n          } else {\r\n            tmpcurrrate = 1;\r\n          }\r\n\r\n          //console.log(\"USD\", table, basic_salary, tmpbasicsalary);\r\n          //tmptotalallows = allows + exp;\r\n          tmptotalTAP = tap_checkbox ? Math.ceil(tmpbasicsalary * 0.05) : 0;\r\n          tmptotalSCP = tap_checkbox\r\n            ? Math.round((tmpbasicsalary + Number.EPSILON) * 0.035 * 100) / 100\r\n            : 0;\r\n          if (tmptotalSCP > 98) {\r\n            tmptotalSCP = 98;\r\n          }\r\n          tmpnettpay =\r\n            tmpbasicsalary +\r\n            allows +\r\n            exp +\r\n            tmptotalallows -\r\n            tmptotalTAP -\r\n            tmptotalSCP;\r\n\r\n          tmpbasicsalarybnd =\r\n            Math.round((basic_salary + Number.EPSILON) * tmpcurrrate * 100) /\r\n            100;\r\n\r\n          tmptotalTAPbnd =\r\n            Math.round((tmptotalTAP + Number.EPSILON) * tmpcurrrate * 100) /\r\n            100;\r\n          tmptotalSCPbnd =\r\n            Math.round((tmptotalSCP + Number.EPSILON) * tmpcurrrate * 100) /\r\n            100;\r\n          tmpnettpaybnd =\r\n            Math.round((tmpnettpay + Number.EPSILON) * tmpcurrrate * 100) / 100;\r\n          tmpsiteallowsbnd =\r\n            Math.round((allows + Number.EPSILON) * tmpcurrrate * 100) / 100;\r\n          tmpexpsclaimsbnd =\r\n            Math.round((exp + Number.EPSILON) * tmpcurrrate * 100) / 100;\r\n\r\n          tmpnettpaybnd =\r\n            tmpbasicsalarybnd +\r\n            tmpsiteallowsbnd +\r\n            tmpexpsclaimsbnd -\r\n            tmptotalTAPbnd -\r\n            tmptotalSCPbnd;\r\n\r\n          const data = {\r\n            name: name,\r\n            period: period,\r\n            pay_date: input.pay_date,\r\n            payrun: payrun,\r\n            bank_name: bank_name,\r\n            bank_acno: bank_acno,\r\n            salary_currency: salary_currency ? salary_currency : \"BND\",\r\n            currency_rate: tmpcurrrate,\r\n            tap_acno: tap_acno,\r\n            scp_acno: scp_acno,\r\n            tap_checkbox: tap_checkbox,\r\n            empid: id,\r\n            status: \"Pending\",\r\n            allows_type1: \"Site Allowances\",\r\n            allows_type1amt: allows,\r\n            allows_type2: \"Expenses Claims\",\r\n            allows_type2amt: exp,\r\n            allows_type3: \" \",\r\n            allows_type3amt: 0,\r\n            allows_type4: \" \",\r\n            allows_type4amt: 0,\r\n            allows_type5: \" \",\r\n            allows_type5amt: 0,\r\n            allows_type6: \" \",\r\n            allows_type6amt: 0,\r\n            allows_type7: \" \",\r\n            allows_type7amt: 0,\r\n            allows_type8: \" \",\r\n            allows_type8amt: 0,\r\n            deducts_type1: \" \",\r\n            deducts_type1amt: 0,\r\n            deducts_type2: \" \",\r\n            deducts_type2amt: 0,\r\n            deducts_type3: \" \",\r\n            deducts_type3amt: 0,\r\n            deducts_type4: \" \",\r\n            deducts_type4amt: 0,\r\n            deducts_type5: \" \",\r\n            deducts_type5amt: 0,\r\n            deducts_type6: \" \",\r\n            deducts_type6amt: 0,\r\n            deducts_type7: \" \",\r\n            deducts_type7amt: 0,\r\n            deducts_type8: \" \",\r\n            deducts_type8amt: 0,\r\n\r\n            wages: tmpbasicsalary,\r\n            tap_amount: tmptotalTAP,\r\n            scp_amount: tmptotalSCP,\r\n            total_allowances: tmptotalallows,\r\n            total_deductions: 0,\r\n            site_allows: allows,\r\n            expenses_claims: exp,\r\n            nett_pay: tmpnettpay,\r\n\r\n            wages_bnd: tmpbasicsalarybnd,\r\n            site_allows_bnd: tmpsiteallowsbnd,\r\n            expenses_claims_bnd: tmpexpsclaimsbnd,\r\n            total_allowances_bnd: tmptotalallowsbnd,\r\n            total_deductions_bnd: 0,\r\n            tap_amount_bnd: tmptotalTAPbnd,\r\n            scp_amount_bnd: tmptotalSCPbnd,\r\n            nett_pay_bnd: tmpnettpaybnd,\r\n          };\r\n          addPayslip({ ...data });\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleNext = () => {\r\n    history.push(\"/payrunbatch\");\r\n  };\r\n\r\n  const add_Payrun = (period, payrun) => {\r\n    //update payrun\r\n    addPayrun({\r\n      pay_freq: input.payfreq,\r\n      from_date: input.fromdate,\r\n      to_date: input.todate,\r\n      pay_date: input.paydate,\r\n      period: period,\r\n      payrun: payrun,\r\n      status: \"Pending\",\r\n    });\r\n    getPayrun();\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployees();\r\n    loadUnpaidExpenses();\r\n    loadUnpaidDailyAllows();\r\n    getPayrun();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   loadUnpaidDailyAllows();\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"useEffect here\", input.payrun);\r\n\r\n  //   // getSingleBatchPayslip(input.payrun);\r\n  //   if (singlebatchpayslip) {\r\n  //     checkSelectedEmployees(input.period, input.payrun);\r\n  //     setLoadPaybatch(false);\r\n  //   }\r\n  // }, [loadPaybatch]);\r\n\r\n  //   useEffect(() => {\r\n  //     if (input.period && input.payrun) {\r\n  //       //add_Payrun();\r\n\r\n  //       setAlert(true);\r\n  //     }\r\n  //   }, [input]);\r\n\r\n  return (\r\n    <Paper className={fixedHeightPaper} style={{ backgroundColor: \"659dbd\" }}>\r\n      <section className={classes.section}>\r\n        <Grid\r\n          direction=\"row\"\r\n          container\r\n          spacing={1}\r\n          // style={{ border: \"1px solid white\" }}\r\n        >\r\n          <Grid\r\n            container\r\n            item\r\n            sm={3}\r\n            style={{ border: \"1px solid black\" }}\r\n            direction=\"column\"\r\n            align=\"left\"\r\n          >\r\n            <article className={classes.jobinfo}>\r\n              <h2>Pay Run</h2>\r\n              <form onSubmit={handlePayrunSubmit}>\r\n                <div>\r\n                  {/* <InputLabel\r\n                    htmlFor=\"deduct-customized-native-simple\"\r\n                    className={classes.formLabel}\r\n                  >\r\n                    Copy From\r\n                  </InputLabel>\r\n                  <NativeSelect\r\n                    name=\"copyfrom\"\r\n                    value={\"New\"}\r\n                    style={{\r\n                      padding: 4,\r\n                      marginLeft: 5,\r\n                      width: \"100%\",\r\n                      textAlign: \"left\",\r\n                    }}\r\n                    onChange={(e) => handleChange(e)}\r\n                  >\r\n                    <option value=\"\">New</option>\r\n                    {payrun.map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.payrun}>\r\n                          {row.payrun}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </NativeSelect> */}\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    label=\"Pay Frequency\"\r\n                    variant=\"filled\"\r\n                    required\r\n                    defaultValue=\"Monthly\"\r\n                    style={{ width: \"100%\" }}\r\n                    name=\"payfreq\"\r\n                    value={input.payfreq}\r\n                    onChange={(e) => handleChange(e)}\r\n                    Select\r\n                  >\r\n                    {/* <MenuItem value=\"Weekly\">Weekly</MenuItem> */}\r\n                    <option value=\"Monthly\">Monthly</option>\r\n                  </TextField>\r\n                </div>\r\n                {/* <div>\r\n                  <InputLabel\r\n                    htmlFor=\"deduct-customized-native-simple\"\r\n                    className={classes.formLabel}\r\n                  >\r\n                    Month\r\n                  </InputLabel>\r\n                  <NativeSelect\r\n                    name=\"selectmonth\"\r\n                    defaultValue={longMonth}\r\n                    // value={input.selectmonth}\r\n                    style={{\r\n                      padding: 4,\r\n                      marginLeft: 5,\r\n                      width: \"100%\",\r\n                      textAlign: \"left\",\r\n                    }}\r\n                    onChange={(e) => handleChange(e)}\r\n                  >\r\n                    {selectmonths.map((row, i) => {\r\n                      return (\r\n                        <option key={i} value={row.mth}>\r\n                          {row.mth}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </NativeSelect>\r\n                </div> */}\r\n                <div>\r\n                  <TextField\r\n                    label=\"From Date\"\r\n                    variant=\"filled\"\r\n                    name=\"fromdate\"\r\n                    type=\"date\"\r\n                    value={input.fromdate}\r\n                    required\r\n                    style={{ width: \"100%\" }}\r\n                    onChange={(e) => handleChange(e)}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    label=\"To Date\"\r\n                    variant=\"filled\"\r\n                    type=\"date\"\r\n                    name=\"todate\"\r\n                    value={input.todate}\r\n                    required\r\n                    onChange={(e) => handleChange(e)}\r\n                    style={{ width: \"100%\" }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    label=\"Payment Date\"\r\n                    variant=\"filled\"\r\n                    type=\"date\"\r\n                    name=\"paydate\"\r\n                    value={input.paydate}\r\n                    required\r\n                    style={{ width: \"100%\" }}\r\n                    onChange={(e) => handleChange(e)}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <div>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      onClick={onOpen}\r\n                      disabled={isSubmit}\r\n                    >\r\n                      Currency Exchange Table\r\n                    </Button>\r\n                  </div>\r\n                  <div>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                    >\r\n                      Submit <Icon className={classes.rightIcon}>send</Icon>\r\n                    </Button>\r\n\r\n                    {alert && !isPayrunExist && (\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        onClick={handleNext}\r\n                      >\r\n                        Next <Icon className={classes.rightIcon}>send</Icon>\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  {alert && !isPayrunExist && !singlebatch_payslip_loading && (\r\n                    <h3>New Payrun being added!</h3>\r\n                  )}\r\n                  {alert && isPayrunExist && (\r\n                    <h3>This payrun already existed!</h3>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  {error && <h3>This Payrun period already existed!</h3>}\r\n                  {errornoselect && <h3>You must select employees!</h3>}\r\n                </div>\r\n              </form>\r\n            </article>\r\n          </Grid>\r\n          <Divider\r\n            orientation=\"vertical\"\r\n            flexItem\r\n            style={{ background: \"white\" }}\r\n          />\r\n          <Grid\r\n            container\r\n            item\r\n            sm={3}\r\n            style={{ border: \"1px solid black\" }}\r\n            align=\"right\"\r\n          >\r\n            <Box h=\"500\" w=\"full\" overflow=\"scroll\">\r\n              <MaterialTable\r\n                columns={columns}\r\n                data={employees}\r\n                title=\"Employee Listing\"\r\n                options={{\r\n                  filtering: false,\r\n                  search: false,\r\n                  toolbar: true,\r\n                  selection: true,\r\n                  paging: false,\r\n                  pageSize: 10,\r\n                  headerStyle: {\r\n                    backgroundColor: \"#90CDF4\",\r\n                    color: \"primary\",\r\n                  },\r\n                  showTitle: true,\r\n                  // selectionProps: rowData => {\r\n                  //   rowData.tableData.checked = true\r\n                  // }\r\n                }}\r\n              />\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n        <Modal isOpen={isOpen} onClose={onClose}>\r\n          <ModalOverlay />\r\n          <ModalContent>\r\n            <ModalHeader>Currency Table</ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody>\r\n              <Box>\r\n                <UpdateCurrency />\r\n                {/* <Stack spacing={4}>\r\n                  <InputGroup>\r\n                    <InputLeftAddon children=\"USD\" />\r\n                    <Input type=\"text\" placeholder=\"USD Rate\" />\r\n                  </InputGroup>\r\n                  <InputGroup>\r\n                    <InputLeftAddon children=\"MYR\" />\r\n                    <Input type=\"text\" placeholder=\"MYR Rate\" />\r\n                  </InputGroup>\r\n                </Stack> */}\r\n              </Box>\r\n            </ModalBody>\r\n\r\n            <ModalFooter>\r\n              <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n                Close\r\n              </Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </Modal>\r\n      </section>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"95vw\",\r\n    margin: \"5rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  formLabel: {\r\n    fontSize: 12,\r\n    textAlign: \"left\",\r\n    marginLeft: 8,\r\n    marginTop: 5,\r\n  },\r\n}));\r\n\r\nexport default Payrun;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\Payrunbatch.js",["3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport dayjs from \"dayjs\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { FiSave, FiCheckCircle, FiMail } from \"react-icons/fi\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\n//import { Button} from \"@material-ui/core\"\r\nimport {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  GridItem,\r\n  Flex,\r\n  Heading,\r\n  Stack,\r\n  Spacer,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tfoot,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption,\r\n  Text,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Wrap,\r\n  WrapItem,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport PayForm from \"./PayForm\";\r\nimport PaySummary from \"./PaySummary\";\r\nimport PrintPaySummary from \"./PrintPaySummary\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { usePayrun } from \"./payrun/usePayrun\";\r\nimport { useUpdatePayrun } from \"./payrun/useUpdatePayrun\";\r\nimport { usePayslipsBatch } from \"./payslips/usePayslipsBatch\";\r\nimport { useUpdatePayslips } from \"./payslips/useUpdatePayslips\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\r\nimport {\r\n  payrunState,\r\n  paydataState,\r\n  payrunIdState,\r\n  payrunStatusState,\r\n} from \"./data/atomdata\";\r\nimport { useRecoilValue } from \"recoil\";\r\n\r\nconst drawerWidth = 240;\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\nconst initial_formdata = {\r\n  name: \"\",\r\n  period: \"\",\r\n  pay_date: null,\r\n  payrun: \"\",\r\n  bank_name: \"\",\r\n  bank_acno: \"\",\r\n  salary_currency: \"BND\",\r\n  currency_rate: 1,\r\n  tap_acno: \"\",\r\n  scp_acno: \"\",\r\n  tap_checkbox: false,\r\n  empid: \"\",\r\n  status: \"\",\r\n  allows_type1: \"\",\r\n  allows_type1amt: \"\",\r\n  allows_type2: \"\",\r\n  allows_type2amt: \"\",\r\n  allows_type3: \" \",\r\n  allows_type3amt: 0,\r\n  allows_type4: \"\",\r\n  allows_type4amt: 0,\r\n  allows_type5: \" \",\r\n  allows_type5amt: 0,\r\n  allows_type6: \" \",\r\n  allows_type6amt: 0,\r\n  allows_type7: \" \",\r\n  allows_type7amt: 0,\r\n  allows_type8: \" \",\r\n  allows_type8amt: 0,\r\n  deducts_type1: \" \",\r\n  deducts_type1amt: 0,\r\n  deducts_type2: \" \",\r\n  deducts_type2amt: 0,\r\n  deducts_type3: \" \",\r\n  deducts_type3amt: 0,\r\n  deducts_type4: \" \",\r\n  deducts_type4amt: 0,\r\n  deducts_type5: \" \",\r\n  deducts_type5amt: 0,\r\n  deducts_type6: \" \",\r\n  deducts_type6amt: 0,\r\n  deducts_type7: \" \",\r\n  deducts_type7amt: 0,\r\n  deducts_type8: \" \",\r\n  deducts_type8amt: 0,\r\n\r\n  wages: 0,\r\n  tap_amount: 0,\r\n  scp_amount: 0,\r\n  total_allowances: 0,\r\n  total_deductions: 0,\r\n  site_allows: 0,\r\n  expenses_claims: 0,\r\n  nett_pay: 0,\r\n\r\n  wages_bnd: 0,\r\n  site_allows_bnd: 0,\r\n  expenses_claims_bnd: 0,\r\n  total_allowances_bnd: 0,\r\n  total_deductions_bnd: 0,\r\n  tap_amount_bnd: 0,\r\n  scp_amount_bnd: 0,\r\n  nett_pay_bnd: 0,\r\n};\r\n\r\nconst months = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      width: 280,\r\n      maxWidth: 280,\r\n    },\r\n  },\r\n];\r\n\r\nconst Payrunbatch = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const componentRef = useRef();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  //const { register, handleSubmit, control, setValue, reset, watch } = useForm();\r\n\r\n  const {\r\n    //payrun,\r\n    getSingleBatchPayslip,\r\n    //singlebatchpayslip,\r\n    payslip_period,\r\n    //updatePayslip,\r\n    //updatePayrun,\r\n    singlebatch_payslip_loading,\r\n    singlebatch_payslip_error,\r\n  } = usePayslipsContext();\r\n  const { payslipsbatch, psbpayrunId, setPSBPayrunId } = usePayslipsBatch();\r\n  const { employees } = useEmployees();\r\n  const { payrun } = usePayrun();\r\n  const updatePayslip = useUpdatePayslips();\r\n  const updatePayrun = useUpdatePayrun();\r\n  const { loadPayitems, payitems } = useTablesContext();\r\n  const [payrundata, setPayrundata] = useRecoilState(payrunState);\r\n  const [payrunId, setPayrunId] = useRecoilState(payrunIdState);\r\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\r\n  const [loadFormdata, setLoadFormdata] = useState(false);\r\n  const [loadUpdatedata, setLoadUpdatedata] = useState(false);\r\n  const [formdata, setFormdata] = useState(initial_formdata);\r\n  const [rowindex, setRowIndex] = useState(0);\r\n  const [emponclick, setEmponclick] = useState(false);\r\n  const [showSumm, setShowSumm] = useState(false);\r\n  const [isCalc, setIsCalc] = useState(false);\r\n  const [isStart, setIsStart] = useState(true);\r\n  const [isShow, setIsShow] = useState(false);\r\n  const [tabno, setTabno] = useState(0);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const singlebatchpayslip = payslipsbatch;\r\n\r\n  useEffect(() => {\r\n    loadPayitems();\r\n    setEmponclick(true);\r\n    // getSingleBatchPayslip(payslip_period);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setRowIndex(0);\r\n    // handleEmpButtonClick(0);\r\n    setEmponclick(false);\r\n  }, [emponclick]);\r\n\r\n  useEffect(() => {\r\n    setLoadFormdata(false);\r\n  }, [loadUpdatedata]);\r\n\r\n  useEffect(() => {\r\n    setPSBPayrunId(payslip_period);\r\n    //setIsCalc(true);\r\n  }, [psbpayrunId]);\r\n\r\n  useEffect(() => {\r\n    calcPayrunTotals();\r\n    setIsCalc(false);\r\n  }, [isCalc]);\r\n\r\n  // useEffect(() => {\r\n  //   handleEmpButtonClick(0);\r\n  //   setIsLoad(false);\r\n  // }, [isLoad]);\r\n\r\n  const handleShowSumm = (e) => {\r\n    e.preventDefault();\r\n    setShowSumm(!showSumm);\r\n  };\r\n\r\n  const handlePrintSummary = (e) => {\r\n    e.preventDefault();\r\n    if (payrundata.status === \"Verified\" || payrundata.status === \"Approved\") {\r\n      exportPdfTable(singlebatchpayslip);\r\n    } else {\r\n      // save individual payslips\r\n      saveIndividualPayslips();\r\n      // save payrun\r\n      updatePayrun({\r\n        id: payrunId,\r\n        totalpayroll: payrundata.totalpayroll,\r\n        totalwages: payrundata.totalwages,\r\n        totaltap: payrundata.totaltap,\r\n        totalscp: payrundata.totalscp,\r\n        totalallows: payrundata.totalallows,\r\n        totaldeducts: payrundata.totaldeducts,\r\n        totalsitesallows: payrundata.totalsiteallows,\r\n        totalexpensesclaims: payrundata.totalexpensesclaims,\r\n      });\r\n      exportPdfTable(singlebatchpayslip);\r\n    }\r\n  };\r\n\r\n  const exportPdfTable = (singlebatchpayslip) => {\r\n    PrintPaySummary((singlebatchpayslip = { singlebatchpayslip }));\r\n  };\r\n\r\n  const handleSavePayslips = (e) => {\r\n    e.preventDefault();\r\n\r\n    //calcPayrunTotals();\r\n    // eslint-disable-next-line no-lone-blocks\r\n    // {\r\n    //   singlebatchpayslip.forEach((rec) => {\r\n    //     const { id, rec_id, tableData, ...fields } = rec;\r\n    //     updatePayslip({ id, ...fields });\r\n    //   });\r\n    // }\r\n    // save individual payslips\r\n    saveIndividualPayslips();\r\n\r\n    //update payrun\r\n    handleSavePayrun();\r\n    toast({\r\n      title: \"Changes have been saved!\",\r\n      status: \"success\",\r\n    });\r\n    history.push(\"/payslip\");\r\n  };\r\n\r\n  const saveIndividualPayslips = () => {\r\n    singlebatchpayslip.forEach((rec) => {\r\n      const { id, rec_id, tableData, ...fields } = rec;\r\n      updatePayslip({ id, ...fields });\r\n    });\r\n  };\r\n\r\n  const calcPayrunTotals = () => {\r\n    // if (!psbpayrunId) {\r\n    //   return null;\r\n    // }\r\n    const tmpbatch = singlebatchpayslip\r\n      .filter((r) => r.payrun === payslip_period)\r\n      .map((rec) => {\r\n        return { ...rec };\r\n      });\r\n    //console.log(\"recalc\", tmpbatch);\r\n\r\n    const totalpayroll = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.nett_pay_bnd) ? 0 : item.nett_pay_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n    const totalwages = tmpbatch.reduce((acc, item, index) => {\r\n      const value = isNaN(item.wages_bnd) ? 0 : item.wages_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n    const totaltap = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.tap_amount_bnd) ? 0 : item.tap_amount_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalscp = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.scp_amount_bnd) ? 0 : item.scp_amount_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalallows = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.total_allowances_bnd)\r\n        ? 0\r\n        : item.total_allowances_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totaldeducts = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.total_deductions_bnd)\r\n        ? 0\r\n        : item.total_deductions_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalsiteallows = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.site_allows_bnd) ? 0 : item.site_allows_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalexpensesclaims = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.expenses_claims_bnd)\r\n        ? 0\r\n        : item.expenses_claims_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    setPayrundata({\r\n      ...payrundata,\r\n      totalpayroll: totalpayroll,\r\n      totalwages: totalwages,\r\n      totaltap: totaltap,\r\n      totalscp: totalscp,\r\n      totalallows: totalallows,\r\n      totaldeducts: totaldeducts,\r\n      totalsiteallows: totalsiteallows,\r\n      totalexpensesclaims: totalexpensesclaims,\r\n    });\r\n  };\r\n\r\n  const handleSavePayrun = () => {\r\n    if (payrundata.status === \"Verified\" || payrundata.status === \"Approved\") {\r\n      toast({\r\n        title: `This payroll batch has been ${payrundata.status}! No changes can be made!`,\r\n        status: \"warning\",\r\n      });\r\n      return <div></div>;\r\n    }\r\n\r\n    const tmppayrun = payrun.filter((r) => r.payrun === payslip_period);\r\n    //console.log(\"paysave\", tmppayrun[0].id);\r\n    // eslint-disable-next-line no-lone-blocks\r\n    console.log(\"paybatch\", payslip_period, payrundata);\r\n    updatePayrun({\r\n      id: tmppayrun[0].id,\r\n      totalpayroll: payrundata.totalpayroll,\r\n      totalwages: payrundata.totalwages,\r\n      totaltap: payrundata.totaltap,\r\n      totalscp: payrundata.totalscp,\r\n      totalallows: payrundata.totalallows,\r\n      totaldeducts: payrundata.totaldeducts,\r\n      totalsitesallows: payrundata.totalsiteallows,\r\n      totalexpensesclaims: payrundata.totalexpensesclaims,\r\n    });\r\n    history.push(\"/payslip\");\r\n  };\r\n\r\n  const handleVerifyPayslips = (e) => {\r\n    e.preventDefault();\r\n    setPayrundata({ ...payrundata, status: \"Verified\" });\r\n    setPayrunStatus(\"Verified\");\r\n    // save individual payslips\r\n    saveIndividualPayslips();\r\n    // save payrun\r\n    updatePayrun({\r\n      id: payrunId,\r\n      status: \"Verified\",\r\n      totalpayroll: payrundata.totalpayroll,\r\n      totalwages: payrundata.totalwages,\r\n      totaltap: payrundata.totaltap,\r\n      totalscp: payrundata.totalscp,\r\n      totalallows: payrundata.totalallows,\r\n      totaldeducts: payrundata.totaldeducts,\r\n      totalsitesallows: payrundata.totalsiteallows,\r\n      totalexpensesclaims: payrundata.totalexpensesclaims,\r\n    });\r\n    toast({\r\n      title: \"Batch has been verified!\",\r\n      status: \"success\",\r\n    });\r\n  };\r\n\r\n  const handleEmpButtonClick = (index) => {\r\n    const paydata = singlebatchpayslip[index];\r\n    setFormdata(initial_formdata);\r\n    setFormdata({ ...initial_formdata, ...paydata });\r\n    setFormdata({ ...initial_formdata, ...paydata });\r\n    setLoadFormdata(true);\r\n  };\r\n\r\n  const handleTabChange = (index) => {\r\n    setTabno(index);\r\n    if (index === 1) {\r\n      calcPayrunTotals();\r\n    }\r\n    setIsShow(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tabno === 1) {\r\n      setIsShow(true);\r\n    } else {\r\n      setIsShow(false);\r\n    }\r\n  }, [tabno]);\r\n\r\n  const SentEmailModal = () => {\r\n    return (\r\n      <Box>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payslipsbatch}\r\n          title=\"Employees\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: true,\r\n            selection: true,\r\n            pageSize: 10,\r\n            headerStyle: {\r\n              backgroundColor: \"#daad86\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    colorScheme=\"blue\"\r\n                    isDisabled={payrundata.status !== \"Approve\" ? true : false}\r\n                    onClick={() => handleSentEmail()}\r\n                    leftIcon={<FiMail color=\"white\" fontSize=\"1.5em\" />}\r\n                  >\r\n                    Email\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const handleSentEmail = (data) => {\r\n    const mth = months[payslip_period.substring(6, 7)];\r\n    const yr = payslip_period.substring(0, 4);\r\n\r\n    payslipsbatch.forEach((pay) => {\r\n      if (pay.tableData.checked) {\r\n        const { name, empid } = pay;\r\n        const emp = employees\r\n          .filter((r) => r.id === empid)\r\n          .map((rec) => {\r\n            return { ...rec };\r\n          });\r\n\r\n        var emaildata = {\r\n          to_name: name,\r\n          to_email: emp[0].email,\r\n          message: `Your payroll for the month of ${mth} ${yr} has been transfered. Please login in to view your payslip!`,\r\n        };\r\n\r\n        emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n          function (response) {\r\n            console.log(response.status, response.text);\r\n            toast({\r\n              title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n              status: \"success\",\r\n            });\r\n          },\r\n          function (err) {\r\n            console.log(err);\r\n            toast({\r\n              title: `Email has fail to send to ${emaildata.to_email}!`,\r\n              status: \"warning\",\r\n            });\r\n          }\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      marginLeft={4}\r\n      marginTop={70}\r\n      w=\"98%\"\r\n      h=\"100%\"\r\n      style={{ backgroundColor: \"lightcyan\" }}\r\n    >\r\n      <Grid templateRows=\"repeat(10,1fr)\" templateColumns=\"repeat(1,1fr)\">\r\n        <GridItem rowSpan={1} colSpan={1}>\r\n          <Grid templateRows=\"repeat(1,1fr)\" templateColumns=\"repeat(10,1fr)\">\r\n            <GridItem rowSpan={1} colSpan={2}></GridItem>\r\n            <GridItem rowSpan={1} colSpan={4}>\r\n              <Box textAlign=\"center\" alignItems=\"center\">\r\n                <Heading pl=\"10\" pt={2}>\r\n                  Payroll\r\n                </Heading>\r\n              </Box>\r\n            </GridItem>\r\n            <GridItem rowSpan={1} colSpan={4} pt={0}>\r\n              <Box pt=\"2\" pr={5} alignItems=\"right\" align=\"right\">\r\n                <Stack spacing={4} direction=\"row\" align=\"center\" pl={150}>\r\n                  <Button\r\n                    width=\"800px\"\r\n                    colorScheme=\"blue\"\r\n                    isDisabled={\r\n                      payrundata.status === \"Verified\" ||\r\n                      payrundata.status === \"Approved\" ||\r\n                      !isShow\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    onClick={(e) => handleSavePayslips(e)}\r\n                    leftIcon={<FiSave color=\"white\" fontSize=\"1.5em\" />}\r\n                  >\r\n                    Save/Exit\r\n                  </Button>\r\n                  <Button\r\n                    isDisabled={!isShow}\r\n                    width=\"500px\"\r\n                    colorScheme=\"blue\"\r\n                    onClick={(e) => handlePrintSummary(e)}\r\n                    leftIcon={<FiSave color=\"white\" fontSize=\"1.5em\" />}\r\n                  >\r\n                    Print\r\n                  </Button>\r\n\r\n                  <Button\r\n                    width=\"500px\"\r\n                    colorScheme=\"blue\"\r\n                    isDisabled={\r\n                      payrundata.status === \"Verified\" ||\r\n                      payrundata.status === \"Approved\" ||\r\n                      payrundata.status === \"New\" ||\r\n                      !isShow\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    onClick={(e) => handleVerifyPayslips(e)}\r\n                    leftIcon={<FiCheckCircle color=\"white\" fontSize=\"1.5em\" />}\r\n                  >\r\n                    Verify\r\n                  </Button>\r\n                  <Button\r\n                    width=\"500px\"\r\n                    colorScheme=\"blue\"\r\n                    isDisabled={payrundata.status !== \"Approved\" ? true : false}\r\n                    onClick={onOpen}\r\n                    leftIcon={<FiMail color=\"white\" fontSize=\"1.5em\" />}\r\n                  >\r\n                    Email\r\n                  </Button>\r\n                </Stack>\r\n              </Box>\r\n            </GridItem>\r\n          </Grid>\r\n          <Divider\r\n            style={{ border: \"1px solid lightgrey\" }}\r\n            orientation=\"horizontal\"\r\n            colorScheme=\"red\"\r\n            variant=\"solid\"\r\n          />\r\n        </GridItem>\r\n\r\n        <Tabs defaultIndex={0} onChange={(index) => handleTabChange(index)}>\r\n          <TabList marginLeft={4}>\r\n            <Tab>\r\n              <Box>\r\n                <Heading size=\"sm\">Details</Heading>\r\n              </Box>\r\n            </Tab>\r\n            <Tab>\r\n              <Box>\r\n                <Heading size=\"sm\">Summary</Heading>\r\n              </Box>\r\n            </Tab>\r\n          </TabList>\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <Grid\r\n                templateRows=\"repeat(1,1fr)\"\r\n                templateColumns=\"repeat(10,1fr)\"\r\n              >\r\n                <GridItem colSpan={2}>\r\n                  <Box textAlign=\"center\" p={4}>\r\n                    <Heading size=\"sm\" alignItems=\"center\">\r\n                      Employees\r\n                    </Heading>\r\n                  </Box>\r\n                  <Divider backgroundColor=\"white\" />\r\n                  <Box h=\"550\" border=\"2px solid white\" backgroundColor=\"cyan.100\" overflow=\"scroll\">\r\n                    {/* {payslipsbatch &&\r\n                      payslipsbatch.map((item, index) => {\r\n                        return (\r\n                          <div>\r\n                            <Button\r\n                              className={classes.empbtn}\r\n                              variant=\"outlined\"\r\n                              // ${index === value && \"activebtn\"}\r\n                              onClick={(e) => {\r\n                                setRowIndex(index);\r\n                                handleEmpButtonClick(index);\r\n                              }}\r\n                            >\r\n                              <div key={item.id}> {item.name}</div>\r\n                            </Button>\r\n                            <Divider\r\n                              variant=\"fullWidth\"\r\n                              className={classes.divider}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      })} */}\r\n                    <Table variant=\"simple\">\r\n                      {/* <Thead>\r\n                        <Tr>\r\n                          <Th>Employees</Th>\r\n                        </Tr>\r\n                      </Thead> */}\r\n                      <Tbody>\r\n                        {payslipsbatch.map((item, index) => {\r\n                          return (\r\n                            <div>\r\n                              <Button\r\n                                //className={classes.empbtn}\r\n                                fontSize={{\r\n                                  base: \"10px\",\r\n                                  md: \"10px\",\r\n                                  lg: \"12px\",\r\n                                  xl: \"16px\",\r\n                                }}\r\n                                variant=\"outlined\"\r\n                                height={[\r\n                                  `${item.name.length > 30 ? \"60px\" : \"40px\"}`,\r\n                                  \"40px\",\r\n                                ]}\r\n                                style={{\r\n                                  whiteSpace: \"normal\",\r\n                                  wordWrap: \"break-word\",\r\n                                }}\r\n                                // ${index === value && \"activebtn\"}\r\n                                onClick={(e) => {\r\n                                  setRowIndex(index);\r\n                                  setIsStart(false);\r\n                                  handleEmpButtonClick(index);\r\n                                }}\r\n                              >\r\n                                <Text align=\"left\">{item.name}</Text>\r\n                              </Button>\r\n                              <Divider backgroundColor=\"white\" />\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </Tbody>\r\n                    </Table>\r\n                  </Box>\r\n                </GridItem>\r\n                <GridItem colSpan={8}>\r\n                  <PayForm\r\n                    formdata={formdata}\r\n                    setFormdata={setFormdata}\r\n                    loadFormdata={loadFormdata}\r\n                    setLoadFormdata={setLoadFormdata}\r\n                    payitems={payitems}\r\n                    setLoadUpdatedata={setLoadUpdatedata}\r\n                    singlebatchpayslip={singlebatchpayslip}\r\n                    rowindex={rowindex}\r\n                    isCalc={isCalc}\r\n                    isStart={isStart}\r\n                    setIsStart={setIsStart}\r\n                    setIsCalc={setIsCalc}\r\n                  />\r\n                </GridItem>\r\n              </Grid>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <PaySummary\r\n                payrundata={payrundata}\r\n                singlebatchpayslip={singlebatchpayslip}\r\n              />\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Grid>\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          {/* <ModalHeader>Sending EMail Notifications</ModalHeader> */}\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <SentEmailModal />\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    paddingTop: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"white\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"white\",\r\n  },\r\n  section: {\r\n    width: \"80vw\",\r\n    margin: \"1rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  empscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  empcontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  empbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  empinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  divider: {\r\n    // Theme Color, or use css color in quote\r\n    background: \"white\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n}));\r\n\r\nexport default Payrunbatch;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayForm.js",["3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Grid,\r\n  GridItem,\r\n  Icon,\r\n  Input,\r\n  TextField,\r\n  FormControlLabel,\r\n  Divider,\r\n  ListSubheader,\r\n  MenuItem,\r\n  Select,\r\n  NativeSelect,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport { Box, Checkbox, Heading, Text } from \"@chakra-ui/react\";\r\nimport currency from \"currency.js\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { usePayslipsBatch } from \"./payslips/usePayslipsBatch\";\r\nimport { useUpdatePayslips } from \"./payslips/useUpdatePayslips\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useAllowances } from \"./allowances/useAllowances\";\r\n\r\nconst initial_state = [\r\n  {\r\n    name: \"\",\r\n    period: \"\",\r\n    date: \"\",\r\n    payrun: \"\",\r\n    bank_name: \"\",\r\n    bank_acno: \"\",\r\n    tap_acno: \"\",\r\n    scp_acno: \"\",\r\n    empid: \"\",\r\n    status: \"\",\r\n    allows_type1: \" \",\r\n    allows_type1amt: 0,\r\n    allows_type2: \" \",\r\n    allows_type2amt: 0,\r\n    allows_type3: \" \",\r\n    allows_type3amt: 0,\r\n    allows_type4: \" \",\r\n    allows_type4amt: 0,\r\n    allows_type5: \" \",\r\n    allows_type5amt: 0,\r\n    allows_type6: \" \",\r\n    allows_type6amt: 0,\r\n    allows_type7: \" \",\r\n    allows_type7amt: 0,\r\n    allows_type8: \" \",\r\n    allows_type8amt: 0,\r\n    deducts_type1: \" \",\r\n    deducts_type1amt: 0,\r\n    deducts_type2: \" \",\r\n    deducts_type2amt: 0,\r\n    deducts_type3: \" \",\r\n    deducts_type3amt: 0,\r\n    deducts_type4: \" \",\r\n    deducts_type4amt: 0,\r\n    deducts_type5: \" \",\r\n    deducts_type5amt: 0,\r\n    deducts_type6: \" \",\r\n    deducts_type6amt: 0,\r\n    deducts_type7: \" \",\r\n    deducts_type7amt: 0,\r\n    deducts_type8: \" \",\r\n    deducts_type8amt: 0,\r\n    tap_checkbox: false,\r\n    salary_currency: \" \",\r\n    currency_rate: 1,\r\n\r\n    wages: 0,\r\n    nett_pay: 0,\r\n    tap_amount: 0,\r\n    scp_amount: 0,\r\n    total_allowances: 0,\r\n    total_deductions: 0,\r\n    site_allows: 0,\r\n    expenses_claims: 0,\r\n\r\n    nett_pay_bnd: 0,\r\n    wages_bnd: 0,\r\n    site_allows_bnd: 0,\r\n    expenses_claims_bnd: 0,\r\n    tap_amount_bnd: 0,\r\n    scp_amount_bnd: 0,\r\n    total_allowances_bnd: 0,\r\n    total_deductions_bnd: 0,\r\n  },\r\n];\r\n\r\nconst PayForm = ({\r\n  formdata,\r\n  setFormdata,\r\n  loadFormdata,\r\n  setLoadFormdata,\r\n  payitems,\r\n  setLoadUpdatedata,\r\n  rowindex,\r\n  isCalc,\r\n  isStart,\r\n  setIsStart,\r\n  setIsCalc,\r\n  singlebatchpayslip,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState(initial_state);\r\n  const { allowances } = useAllowances();\r\n  //const { payslipsbatch, psbpayrunId, setPSBPayrunId } = usePayslipsBatch();\r\n  //const updatePayslips = useUpdatePayslips();\r\n  //const { singlebatchpayslip } = usePayslipsContext();\r\n  const [isLoad, setIsLoad] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setState(initial_state);\r\n    setState({ ...formdata });\r\n    setLoadFormdata(false);\r\n  }, [loadFormdata]);\r\n\r\n  useEffect(() => {\r\n    if (state) {\r\n      handleCalc();\r\n      setIsLoad(false);\r\n    }\r\n  }, [isLoad]);\r\n\r\n  const Update_Empdata = ({ name, value }) => {\r\n    let data = singlebatchpayslip[rowindex];\r\n    data[name] = value;\r\n\r\n    //console.log(\"update data\", data);\r\n    //console.log(\"update payslip\", singlebatchpayslip[rowindex]);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, type, value } = e.target;\r\n    let val =\r\n      type === \"number\"\r\n        ? isNaN(value) || value === undefined\r\n          ? 0\r\n          : parseFloat(value)\r\n        : value;\r\n\r\n    //setFormInput({ [name]: val });\r\n    setState({ ...state, [name]: val });\r\n    Update_Empdata({ name: name, value: val });\r\n    setIsLoad(true);\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleCalc();\r\n  };\r\n\r\n  const handleCalc = (e) => {\r\n    //console.log(\"start\", isStart)\r\n    if (isStart) {\r\n      return;\r\n    }\r\n    if (!usePayslipsBatch) {\r\n      return;\r\n    }\r\n    if (!singlebatchpayslip) {\r\n      return;\r\n    }\r\n    if (!state) {\r\n      return;\r\n    }\r\n    var wages = 0,\r\n      totalTAP = 0,\r\n      totalSCP = 0,\r\n      nettPay = 0.0,\r\n      allows = 0,\r\n      deducts = 0,\r\n      siteallows = 0,\r\n      expsclaims = 0,\r\n      wagesbnd = 0,\r\n      totalTAPbnd = 0,\r\n      totalSCPbnd = 0,\r\n      nettPaybnd = 0,\r\n      allowsbnd = 0,\r\n      deductsbnd = 0,\r\n      siteallowsbnd = 0,\r\n      expsclaimsbnd = 0;\r\n    let data = singlebatchpayslip[rowindex];\r\n    if (!data) {\r\n      return false;\r\n    }\r\n    wages = isNaN(state.wages) || state.wages === undefined ? 0 : state.wages;\r\n    totalTAP = state.tap_checkbox ? Math.ceil(wages * 0.05) : 0;\r\n    totalSCP = state.tap_checkbox\r\n    ? Math.round((wages + Number.EPSILON) * 0.035 * 100) / 100\r\n    : 0;\r\n    if (totalSCP > 98) {\r\n      totalSCP = 98;\r\n    }\r\n    console.log(\"scp\", totalSCP);\r\n    siteallows = parseFloat(isNaN(state.site_allows) ? 0 : state.site_allows);\r\n    expsclaims = parseFloat(\r\n      isNaN(state.expenses_claims) ? 0 : state.expenses_claims\r\n    );\r\n\r\n    allows =\r\n      parseFloat(isNaN(state.allows_type3amt) ? 0 : state.allows_type3amt) +\r\n      parseFloat(isNaN(state.allows_type4amt) ? 0 : state.allows_type4amt) +\r\n      parseFloat(isNaN(state.allows_type5amt) ? 0 : state.allows_type5amt) +\r\n      parseFloat(isNaN(state.allows_type6amt) ? 0 : state.allows_type6amt) +\r\n      parseFloat(isNaN(state.allows_type7amt) ? 0 : state.allows_type7amt) +\r\n      parseFloat(isNaN(state.allows_type8amt) ? 0 : state.allows_type8amt);\r\n\r\n    deducts =\r\n      parseFloat(isNaN(state.deducts_type1amt) ? 0 : state.deducts_type1amt) +\r\n      parseFloat(isNaN(state.deducts_type2amt) ? 0 : state.deducts_type2amt) +\r\n      parseFloat(isNaN(state.deducts_type3amt) ? 0 : state.deducts_type3amt) +\r\n      parseFloat(isNaN(state.deducts_type4amt) ? 0 : state.deducts_type4amt) +\r\n      parseFloat(isNaN(state.deducts_type5amt) ? 0 : state.deducts_type5amt) +\r\n      parseFloat(isNaN(state.deducts_type6amt) ? 0 : state.deducts_type6amt) +\r\n      parseFloat(isNaN(state.deducts_type7amt) ? 0 : state.deducts_type7amt) +\r\n      parseFloat(isNaN(state.deducts_type8amt) ? 0 : state.deducts_type8amt);\r\n\r\n    allows = isNaN(allows) ? 0 : allows;\r\n    deducts = isNaN(deducts) ? 0 : deducts;\r\n\r\n    nettPay =\r\n      wages + siteallows + expsclaims - totalTAP - totalSCP + allows - deducts;\r\n\r\n    wagesbnd =\r\n      Math.round((wages + Number.EPSILON) * state.currency_rate * 100) / 100;\r\n    allowsbnd =\r\n      Math.round((allows + Number.EPSILON) * state.currency_rate * 100) / 100;\r\n    deductsbnd =\r\n      Math.round((deducts + Number.EPSILON) * state.currency_rate * 100) / 100;\r\n    totalTAPbnd =\r\n      Math.round((totalTAP + Number.EPSILON) * state.currency_rate * 100) / 100;\r\n    totalSCPbnd =\r\n      Math.round((totalSCP + Number.EPSILON) * state.currency_rate * 100) / 100;\r\n    siteallowsbnd =\r\n      Math.round((siteallows + Number.EPSILON) * state.currency_rate * 100) /\r\n      100;\r\n    expsclaimsbnd =\r\n      Math.round((expsclaims + Number.EPSILON) * state.currency_rate * 100) /\r\n      100;\r\n    nettPaybnd =\r\n      Math.round((nettPay + Number.EPSILON) * state.currency_rate * 100) / 100;\r\n\r\n    setState({\r\n      ...state,\r\n      wages: wages,\r\n      total_allowances: allows,\r\n      total_deductions: deducts,\r\n      tap_amount: totalTAP,\r\n      scp_amount: totalSCP,\r\n      site_allows: siteallows,\r\n      expenses_claims: expsclaims,\r\n      nett_pay: nettPay,\r\n      wages_bnd: wagesbnd,\r\n      total_allowances_bnd: allowsbnd,\r\n      total_deductions_bnd: deductsbnd,\r\n      tap_amount_bnd: totalTAPbnd,\r\n      scp_amount_bnd: totalSCPbnd,\r\n      site_allows_bnd: siteallowsbnd,\r\n      expenses_claims_bnd: expsclaimsbnd,\r\n      nett_pay_bnd: nettPaybnd,\r\n    });\r\n\r\n    //update employee data\r\n    //data.wages = state.wages;\r\n    data.tap_amount = totalTAP;\r\n    data.scp_amount = totalSCP;\r\n    data.total_allowances = allows;\r\n    data.total_deductions = deducts;\r\n    data.site_allows = siteallows;\r\n    data.expenses_claims = expsclaims;\r\n    data.nett_pay = nettPay;\r\n    data.wages_bnd = wagesbnd;\r\n    data.tap_amount_bnd = totalTAPbnd;\r\n    data.scp_amount_bnd = totalSCPbnd;\r\n    data.site_allows_bnd = siteallowsbnd;\r\n    data.expenses_claims_bnd = expsclaimsbnd;\r\n    data.total_allowances_bnd = allowsbnd;\r\n    data.total_deductions_bnd = deductsbnd;\r\n    data.nett_pay_bnd = nettPaybnd;\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit}>\r\n      <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n        <Grid item sm={4} align=\"center\" style={{ border: \"1px solid white\" }}>\r\n          <Text as=\"u\" fontSize=\"md\">\r\n            <Heading size=\"sm\">Allowances</Heading>\r\n          </Text>\r\n        </Grid>\r\n\r\n        <Grid item sm={4} align=\"center\" style={{ border: \"1px solid white\" }}>\r\n          <Text as=\"u\" fontSize=\"md\">\r\n            <Heading size=\"sm\">Deductions</Heading>\r\n          </Text>\r\n        </Grid>\r\n        <Grid item sm={4} align=\"center\" style={{ border: \"1px solid white\" }}>\r\n          <Text as=\"u\" fontSize=\"md\">\r\n            <Heading size=\"sm\">Summary</Heading>\r\n            <Heading size=\"sm\">({state.name})</Heading>\r\n          </Text>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n        <Grid item sm={4} align=\"center\" style={{ border: \"1px solid white\" }}>\r\n          <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n            <Grid\r\n              item\r\n              sm={8}\r\n              align=\"center\"\r\n              style={{ border: \"1px solid white\" }}\r\n            >\r\n              <Box>\r\n                <Text fontSize=\"sm\">Description</Text>\r\n              </Box>\r\n              <div>\r\n                <TextField\r\n                  label=\"Allowance\"\r\n                  name=\"allows_type1\"\r\n                  variant=\"filled\"\r\n                  type=\"text\"\r\n                  value={state.allows_type1}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"100%\" }}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Allowance\"\r\n                  name=\"allows_type2\"\r\n                  variant=\"filled\"\r\n                  type=\"text\"\r\n                  displayEmpty\r\n                  defaultValue=\"\"\r\n                  value={state.allows_type2}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"100%\" }}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Allowance\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"allows_type3\"\r\n                  value={state.allows_type3}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Allowances\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Allowance\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"allows_type4\"\r\n                  value={state.allows_type4}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Allowances\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Allowance\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"allows_type5\"\r\n                  value={state.allows_type5}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Allowances\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Allowance\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"allows_type6\"\r\n                  value={state.allows_type6}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Allowances\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Allowance\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"allows_type7\"\r\n                  value={state.allows_type7}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Allowances\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Allowance\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"allows_type8\"\r\n                  value={state.allows_type8}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Allowances\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              <Box p={2}>\r\n                <Checkbox\r\n                  isInvalid={!state.tap_checkbox}\r\n                  isChecked={state.tap_checkbox}\r\n                  colorScheme=\"red\"\r\n                  size=\"md\"\r\n                >\r\n                  <Heading size=\"sm\">TAP/SCP Contribution</Heading>\r\n                </Checkbox>\r\n              </Box>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              sm={4}\r\n              align=\"center\"\r\n              style={{ border: \"1px solid white\" }}\r\n            >\r\n              <Box>\r\n                <Text fontSize=\"sm\">\r\n                  {state.salary_currency ? state.salary_currency : \"BND\"}\r\n                </Text>\r\n              </Box>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"site_allows\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  value={state.site_allows}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"100%\" }}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"expenses_claims\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  value={state.expenses_claims}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"allows_type3amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  max=\"9999\"\r\n                  step=\"any\"\r\n                  value={state.allows_type3amt}\r\n                  onChange={(e) => {\r\n                    handleChange(e);\r\n                  }}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  errorText={\"\"}\r\n                ></TextField>\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"allows_type4amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  value={state.allows_type4amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"allows_type5amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  value={state.allows_type5amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"allows_type6amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  value={state.allows_type6amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"allows_type7amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  value={state.allows_type7amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"allows_type8amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  value={state.allows_type8amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item sm={4} align=\"center\" style={{ border: \"1px solid white\" }}>\r\n          <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n            <Grid\r\n              item\r\n              sm={8}\r\n              align=\"center\"\r\n              style={{ border: \"1px solid white\" }}\r\n            >\r\n              <Box>\r\n                <Text fontSize=\"sm\">Description</Text>\r\n              </Box>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Deduction\r\n                </InputLabel>\r\n\r\n                <NativeSelect\r\n                  name=\"deducts_type1\"\r\n                  value={state.deducts_type1}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Deductions\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Deduction\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"deducts_type2\"\r\n                  value={state.deducts_type2}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Deductions\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Deduction\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"deducts_type3\"\r\n                  value={state.deducts_type3}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Deductions\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Deduction\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"deducts_type4\"\r\n                  value={state.deducts_type4}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Deductions\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Deduction\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"deducts_type5\"\r\n                  value={state.deducts_type5}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Deductions\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Deduction\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"deducts_type6\"\r\n                  value={state.deducts_type6}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Deductions\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Deduction\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"deducts_type7\"\r\n                  value={state.deducts_type7}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Deductions\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              <div>\r\n                <InputLabel\r\n                  htmlFor=\"deduct-customized-native-simple\"\r\n                  className={classes.formLabel}\r\n                >\r\n                  Deduction\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  name=\"deducts_type8\"\r\n                  value={state.deducts_type8}\r\n                  style={{\r\n                    padding: 4,\r\n                    marginLeft: 5,\r\n                    width: \"100%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  {payitems\r\n                    .filter(function (item) {\r\n                      return item.pay_type === \"Deductions\";\r\n                    })\r\n                    .map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.name}>\r\n                          {row.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </NativeSelect>\r\n              </div>\r\n              {state.salary_currency !== \"BND\" && (\r\n                <Box p={2}>\r\n                  <Text fontSize=\"md\">\r\n                    <Heading size=\"sm\">\r\n                      Exchange Rate: {state.currency_rate}\r\n                    </Heading>\r\n                  </Text>\r\n                </Box>\r\n              )}\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              sm={4}\r\n              align=\"center\"\r\n              style={{ border: \"1px solid white\" }}\r\n            >\r\n              <Box>\r\n                <Text fontSize=\"sm\">\r\n                  {state.salary_currency ? state.salary_currency : \"BND\"}\r\n                </Text>\r\n              </Box>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"deducts_type1amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  inputProps={{ minLength: 0 }}\r\n                  value={state.deducts_type1amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"deducts_type2amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  value={state.deducts_type2amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"deducts_type3amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  value={state.deducts_type3amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"deducts_type4amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  value={state.deducts_type4amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"deducts_type5amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  value={state.deducts_type5amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"deducts_type6amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  value={state.deducts_type6amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"deducts_type7amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  value={state.deducts_type7amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Amount\"\r\n                  name=\"deducts_type8amt\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  value={state.deducts_type8amt}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item sm={4} align=\"center\" style={{ border: \"1px solid white\" }}>\r\n          <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n            {/* <div>\r\n            <h3>{state.name}</h3>\r\n          </div> */}\r\n            <Grid\r\n              item\r\n              sm={\r\n                !state.salary_currency || state.salary_currency === \"BND\"\r\n                  ? 12\r\n                  : 6\r\n              }\r\n              align=\"center\"\r\n              style={{ border: \"1px solid white\" }}\r\n            >\r\n              <Box>\r\n                <Text fontSize=\"sm\">\r\n                  {state.salary_currency ? state.salary_currency : \"BND\"}\r\n                </Text>\r\n              </Box>\r\n              <Divider variant=\"fullWidth\" className={classes.divider} />\r\n              <div>\r\n                <TextField\r\n                  label=\"Wages\"\r\n                  name=\"wages\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  value={state.wages}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"100%\" }}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  // InputProps={{\r\n                  //   readOnly: true,\r\n                  //   min: 0,\r\n                  // }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"TAP Amount\"\r\n                  name=\"tap_amount\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  value={currency(state.tap_amount)}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"100%\" }}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"SCP Amount\"\r\n                  name=\"scp_amount\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  value={currency(state.scp_amount)}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"100%\" }}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Site Allowances\"\r\n                  name=\"siteallows\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  value={currency(state.site_allows)}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"100%\" }}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Expenses Claims\"\r\n                  name=\"expclaims\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  value={currency(state.expenses_claims)}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"100%\" }}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Total Allowances\"\r\n                  name=\"total_allowances\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  value={currency(state.total_allowances)}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"100%\" }}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Total Deductions\"\r\n                  name=\"total_deductions\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  value={currency(state.total_deductions)}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"100%\" }}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Nett Pay\"\r\n                  name=\"nett_pay\"\r\n                  variant=\"filled\"\r\n                  type=\"number\"\r\n                  value={currency(state.nett_pay)}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"100%\" }}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              {/* <div>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={state.tap_checkbox}\r\n                  onChange={handleChange}\r\n                  name=\"tap_checkbox\"\r\n                />\r\n              }\r\n              label=\"TAP/SCP Contribution\"\r\n            />\r\n          </div> */}\r\n              <div>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ marginLeft: 10 }}\r\n                  onClick={handleCalc}\r\n                >\r\n                  Calc <Icon className={classes.rightIcon}>send</Icon>\r\n                </Button>\r\n              </div>\r\n            </Grid>\r\n            \r\n            {state.salary_currency && state.salary_currency !== \"BND\" && (\r\n              <Grid\r\n                item\r\n                sm={6}\r\n                align=\"center\"\r\n                style={{ border: \"1px solid white\" }}\r\n              >\r\n                <Divider variant=\"fullWidth\" className={classes.divider} />\r\n                <Box>\r\n                  <Text fontSize=\"sm\">\r\n                    {\" \"}\r\n                    {state.salary_currency ? \"BND\" : \"BND\"}\r\n                  </Text>\r\n                </Box>\r\n                <div>\r\n                  <TextField\r\n                    label=\"Wages\"\r\n                    name=\"wages\"\r\n                    variant=\"filled\"\r\n                    type=\"number\"\r\n                    value={currency(state.wages_bnd)}\r\n                    onChange={handleChange}\r\n                    style={{ width: \"100%\" }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <TextField\r\n                    label=\"TAP Amount\"\r\n                    name=\"tap_amount\"\r\n                    variant=\"filled\"\r\n                    type=\"number\"\r\n                    value={currency(state.tap_amount_bnd)}\r\n                    onChange={handleChange}\r\n                    style={{ width: \"100%\" }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    label=\"SCP Amount\"\r\n                    name=\"scp_amount\"\r\n                    variant=\"filled\"\r\n                    type=\"number\"\r\n                    value={currency(state.scp_amount_bnd)}\r\n                    onChange={handleChange}\r\n                    style={{ width: \"100%\" }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    label=\"Site Allowances\"\r\n                    name=\"siteallows\"\r\n                    variant=\"filled\"\r\n                    type=\"number\"\r\n                    value={currency(state.site_allows_bnd)}\r\n                    onChange={handleChange}\r\n                    style={{ width: \"100%\" }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    label=\"Expenses Claims\"\r\n                    name=\"expclaims\"\r\n                    variant=\"filled\"\r\n                    type=\"number\"\r\n                    value={currency(state.expenses_claims_bnd)}\r\n                    onChange={handleChange}\r\n                    style={{ width: \"100%\" }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    label=\"Total Allowances\"\r\n                    name=\"total_allowances\"\r\n                    variant=\"filled\"\r\n                    type=\"number\"\r\n                    value={currency(state.total_allowances_bnd)}\r\n                    onChange={handleChange}\r\n                    style={{ width: \"100%\" }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    label=\"Total Deductions\"\r\n                    name=\"total_deductions\"\r\n                    variant=\"filled\"\r\n                    type=\"number\"\r\n                    value={currency(state.total_deductions_bnd)}\r\n                    onChange={handleChange}\r\n                    style={{ width: \"100%\" }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    label=\"Nett Pay\"\r\n                    name=\"nett_pay\"\r\n                    variant=\"filled\"\r\n                    type=\"number\"\r\n                    value={currency(state.nett_pay_bnd)}\r\n                    onChange={handleChange}\r\n                    style={{ width: \"100%\" }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        {/* <button>Submit</button> */}\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"80vw\",\r\n    margin: \"1rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  divider: {\r\n    // Theme Color, or use css color in quote\r\n    background: \"white\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n  divContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  formLabel: {\r\n    fontSize: 12,\r\n    textAlign: \"left\",\r\n    marginLeft: 8,\r\n    marginTop: 5,\r\n  },\r\n}));\r\n\r\nexport default PayForm;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\PaySummary.js",["3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579"],"import React, { useState, useEffect, useRef, useMemo } from \"react\";\r\nimport ReactToPrint, { useReactToPrint } from \"react-to-print\";\r\nimport currency from \"currency.js\";\r\nimport PrintPaySummary from \"./PrintPaySummary\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  chakra,\r\n} from \"@chakra-ui/react\";\r\nimport { TriangleDownIcon, TriangleUpIcon } from \"@chakra-ui/icons\";\r\nimport { useTable, useSortBy } from \"react-table\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Button, Icon, Grid, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { formatPriceZero } from \"../helpers/Utils\";\r\nimport { payrunState, payrunStatusState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { ComponentToPrint } from \"./ComponentToPrint\";\r\nimport PaySummaryTable from \"./PaySummaryTable\";\r\n\r\nconst initial_state = [\r\n  {\r\n    totalwages: 0,\r\n    totaltap: 0,\r\n    totalscp: 0,\r\n    totalallows: 0,\r\n    totaldeducts: 0,\r\n    totalpayroll: 0,\r\n  },\r\n];\r\n\r\nconst PaySummary = ({ singlebatchpayslip }) => {\r\n  const classes = useStyles();\r\n  const componentRef = useRef();\r\n  const [state, setState] = useState(initial_state);\r\n  const [payrundata, setPayrundata] = useRecoilState(payrunState);\r\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\r\n  const [isCalc, setIsCalc] = useState(true);\r\n  const { payrun, updatePayrun, payslip_period } = usePayslipsContext();\r\n\r\n  const columns = [\r\n    {\r\n      Header: \"Name\",\r\n      accessor: \"name\",\r\n    },\r\n    {\r\n      Header: \"Wages\",\r\n      accessor: \"wages_bnd\",\r\n      isNumeric: true,\r\n      Cell: (props) => formatPriceZero(props.value),\r\n    },\r\n\r\n    {\r\n      Header: \"TAP Amount\",\r\n      accessor: \"tap_amount_bnd\",\r\n      isNumeric: true,\r\n      Cell: (props) => formatPriceZero(props.value),\r\n    },\r\n    {\r\n      Header: \"SCP Amount\",\r\n      accessor: \"scp_amount_bnd\",\r\n      isNumeric: true,\r\n      Cell: (props) => formatPriceZero(props.value),\r\n    },\r\n    {\r\n      Header: \"Site Allows\",\r\n      accessor: \"site_allows_bnd\",\r\n      isNumeric: true,\r\n      Cell: (props) => formatPriceZero(props.value),\r\n    },\r\n    {\r\n      Header: \"Exps Claims\",\r\n      accessor: \"expenses_claims_bnd\",\r\n      isNumeric: true,\r\n      Cell: (props) => formatPriceZero(props.value),\r\n    },\r\n    {\r\n      Header: \"Allowances\",\r\n      accessor: \"total_allowances_bnd\",\r\n      isNumeric: true,\r\n      Cell: (props) => formatPriceZero(props.value),\r\n    },\r\n    {\r\n      Header: \"Deductions\",\r\n      accessor: \"total_deductions_bnd\",\r\n      isNumeric: true,\r\n      Cell: (props) => formatPriceZero(props.value),\r\n    },\r\n    {\r\n      Header: \"Nett Pay\",\r\n      accessor: \"nett_pay_bnd\",\r\n      isNumeric: true,\r\n      Cell: (props) => formatPriceZero(props.value),\r\n    },\r\n  ];\r\n\r\n  const handlePrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n  });\r\n\r\n  const exportPdfTable = () => {\r\n    PrintPaySummary((singlebatchpayslip = { singlebatchpayslip }));\r\n  };\r\n\r\n  const handleCalcTotals = () => {\r\n    const data = singlebatchpayslip;\r\n    const totalwages = data.reduce((acc, item) => {\r\n      return acc + item.wages_bnd;\r\n    }, 0);\r\n    const totalsitesallows = data.reduce((acc, item) => {\r\n      return acc + item.site_allows_bnd;\r\n    }, 0);\r\n    const totalexpclaims = data.reduce((acc, item) => {\r\n      return acc + item.expenses_claims_bnd;\r\n    }, 0);\r\n    const totalallows = data.reduce((acc, item) => {\r\n      return acc + item.total_allowances_bnd;\r\n    }, 0);\r\n    const totaldeducts = data.reduce((acc, item) => {\r\n      return acc + item.total_deductions_bnd;\r\n    }, 0);\r\n    const totaltap = data.reduce((acc, item) => {\r\n      return acc + item.tap_amount_bnd;\r\n    }, 0);\r\n    const totalscp = data.reduce((acc, item) => {\r\n      return acc + item.scp_amount_bnd;\r\n    }, 0);\r\n    const totalpayroll = data.reduce((acc, item) => {\r\n      return acc + item.nett_pay_bnd;\r\n    }, 0);\r\n\r\n    setPayrundata({\r\n      ...payrundata,\r\n      totalpayroll: totalpayroll,\r\n      totalwages: totalwages,\r\n      totaltap: totaltap,\r\n      totalscp: totalscp,\r\n      totalallows: totalallows,\r\n      totaldeducts: totaldeducts,\r\n      totalsitesallows: totalsitesallows,\r\n      totalexpensesclaims: totalexpclaims,\r\n    });\r\n    // payrun\r\n    //   .filter((r) => r.payrun === payslip_period)\r\n    //   .map((rec) => {\r\n    //     //update payrun\r\n    //     return updatePayrun({\r\n    //       id: rec.id,\r\n    //       totalpayroll: totalpayroll,\r\n    //       totalwages: totalwages,\r\n    //       totaltap: totaltap,\r\n    //       totalscp: totalscp,\r\n    //       totalallows: totalallows,\r\n    //       totaldeducts: totaldeducts,\r\n    //       totalsitesallows: totalsitesallows,\r\n    //       totalexpensesclaims: totalexpclaims,\r\n    //     });\r\n    //   });\r\n    // console.log(\"payrundata\", payrundata);\r\n    // console.log(\r\n    //   \"totals\",\r\n    //   totalpayroll,\r\n    //   totalwages,\r\n    //   totaltap,\r\n    //   totalscp,\r\n    //   totalallows,\r\n    //   totaldeducts\r\n    // );\r\n  };\r\n\r\n  const handleSaveCalcTotals = (e) => {\r\n    e.preventDefault();\r\n    handleCalcTotals();\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleCalcTotals();\r\n    setIsCalc(false);\r\n  }, [isCalc]);\r\n\r\n  return (\r\n    <div>\r\n      {/* <div style={{ display: \"none\" }}> */}\r\n      <div>\r\n        {/* <div style={{ border: \"1px solid black\" }} align=\"center\">\r\n          <button onClick={() => exportPdfTable()}>\r\n            <Heading size=\"sm\">Print Payroll Summary Report!</Heading>\r\n          </button>\r\n        </div> */}\r\n        {/* <div>\r\n          <div style={{ display: \"none\" }}>\r\n            <ComponentToPrint ref={componentRef} />\r\n          </div>\r\n          <button onClick={handlePrint}>Print this out!</button>\r\n        </div> */}\r\n      </div>\r\n      <form>\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid black\" }}>\r\n          <Grid\r\n          // item\r\n          // sm={12}\r\n          // align=\"center\"\r\n          // style={{ border: \"1px solid black\" }}\r\n          >\r\n            <div>\r\n              {/* <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              style={{ marginLeft: 5 }}\r\n              onClick={(e) => handleSaveCalcTotals(e)}\r\n            >\r\n              Save <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button> */}\r\n              {/* <Heading size=\"sm\">Summary</Heading> */}\r\n              {/* <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                style={{ marginLeft: 5 }}\r\n                onClick={(e) => handle_Print(e)}\r\n              >\r\n                Print <Icon className={classes.rightIcon}>send</Icon>\r\n              </Button> */}\r\n              {/* <div>\r\n                <ReactToPrint\r\n                  trigger={(e) => {\r\n                    handle_Print(e);\r\n                  }}\r\n                  content={() => this.componentRef}\r\n                />\r\n                <ComponentToPrint ref={(el) => (this.componentRef = el)} />\r\n              </div> */}\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Period\"\r\n                name=\"period\"\r\n                variant=\"filled\"\r\n                type=\"text\"\r\n                value={payrundata.period}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Pay Run Batch\"\r\n                name=\"payrun\"\r\n                variant=\"filled\"\r\n                type=\"text\"\r\n                value={payrundata.payrun}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Status\"\r\n                name=\"status\"\r\n                variant=\"filled\"\r\n                value={payrundata.status}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Payroll Total\"\r\n                name=\"paytotal\"\r\n                variant=\"filled\"\r\n                type=\"number\"\r\n                value={currency(payrundata.totalpayroll)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n          <Grid\r\n            item\r\n            sm={12}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <Box h=\"400\" overflow=\"scroll\">\r\n              <PaySummaryTable columns={columns} data={singlebatchpayslip} />\r\n            </Box>\r\n            {/* <MaterialTable\r\n              columns={columns}\r\n              data={singlebatchpayslip}\r\n              title=\"Payroll\"\r\n              options={{\r\n                filtering: false,\r\n                search: false,\r\n                toolbar: false,\r\n\r\n                headerStyle: {\r\n                  backgroundColor: \"lightblue\",\r\n                  color: \"primary\",\r\n                },\r\n                showTitle: false,\r\n              }}\r\n            /> */}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Wages\"\r\n                name=\"totalwages\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalwages)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total TAP\"\r\n                name=\"totaltap\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totaltap)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total SCP\"\r\n                name=\"totalscp\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalscp)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Sites Allows\"\r\n                name=\"totalsitesallows\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalsiteallows)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Expenses Claims\"\r\n                name=\"totalsitesallows\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalexpensesclaims)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Allowances\"\r\n                name=\"totalallows\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalallows)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Deductions\"\r\n                name=\"totaldeducts\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totaldeducts)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Payroll\"\r\n                name=\"totalpayroll\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalpayroll)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"80vw\",\r\n    margin: \"1rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  divider: {\r\n    // Theme Color, or use css color in quote\r\n    background: \"white\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n  divContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n}));\r\n\r\nexport default PaySummary;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\Main.js",["3580","3581","3582","3583","3584","3585","3586","3587"],"import React, { useState } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport DashboardMain from \"./DashboardMain\";\r\nimport DashboardStaff from \"./DashboardStaff\";\r\nimport DashboardAdmin from \"./DashboardAdmin\";\r\nimport DashboardOpsSpvr from \"./DashboardOpsSpvr\";\r\nimport DashboardAdminManager from \"./DashboardAdminManager\";\r\nimport DashboardManager from \"./DashboardManager\";\r\nimport DashboardDirector from \"./DashboardDirector\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useAuthContext } from \"../context/auth_context\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\n\r\nconst Main = () => {\r\n  const history = useHistory();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { currentUser } = useAuthContext();\r\n  const [role, setRole] = useState(\"\");\r\n  const SwitchCase = () => {\r\n    console.log(loginLevel);\r\n    switch (loginLevel.loginLevel) {\r\n      case \"Staff\":\r\n        return <DashboardStaff />;\r\n      case \"Admin\":\r\n        return <DashboardAdmin />;\r\n      case \"OpsSpvr\":\r\n        return <DashboardOpsSpvr />;\r\n      case \"AdminManager\":\r\n        return <DashboardAdminManager />;\r\n      case \"Manager\":\r\n        return <DashboardManager />;\r\n      case \"Director\":\r\n        return <DashboardDirector />;\r\n      default:\r\n        return `You are not an authorised user!`;\r\n    }\r\n  };\r\n\r\n  if (!loginLevel.login) {\r\n    return <LoginForm />;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <SwitchCase />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Main;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\LoginForm.js",["3588","3589","3590","3591","3592","3593","3594","3595","3596","3597","3598","3599","3600","3601","3602","3603"],"import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardActions,\r\n  CardActionArea,\r\n  CardMedia,\r\n  Divider,\r\n  Typography,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport img from \"../assets/AppSutLogo.jpg\";\r\nimport SigninForm from \"./SigninForm\";\r\nimport DashboardAdmin from \"./DashboardAdmin\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\n\r\nconst LoginForm = () => {\r\n  const classes = useStyles();\r\n  const [openDialog, setOpenDialog] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n    setIsLoading(true);\r\n    return <DashboardAdmin />;\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      <SigninForm />\r\n      {/* <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\r\n        Signin\r\n      </Button> */}\r\n      {/* <Paper variant=\"outlined\">\r\n        <img src={img} alt=\"logo\"/>\r\n      </Paper> */}\r\n      {/* <Card className={classes.card}> */}\r\n      {/* <CardHeader\r\n          //  avatar={\r\n          //    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n          //      L\r\n          //    </Avatar>\r\n          //  }\r\n          className={classes.cardHeader}\r\n          title=\"AppSmiths\"\r\n          titleTypographyProps={{ variant: \"h3\" }}\r\n          subheader=\"Sutera Sdn Bhd\"\r\n          subheaderTypographyProps={{ variant: \"h4\" }}\r\n          style={{\r\n            textAlign: \"center\",\r\n            fontSize: 60,\r\n            // backgroundColor: \"background\",\r\n          }}\r\n        /> */}\r\n      {/* <CardActionArea> */}\r\n      {/* <CardMedia\r\n            style={{ height: 0, paddingTop: \"56.25%\" }}\r\n            // className={classes.media}\r\n            image={img}\r\n            title=\"Contemplative Reptile\"\r\n          /> */}\r\n      {/* <Divider className={classes.divider} /> */}\r\n      {/* <CardContent> */}\r\n      {/* <Typography\r\n              gutterBottom\r\n              variant=\"h4\"\r\n              component=\"h3\"\r\n              className={classes.typography}\r\n              style={{ textAlign: \"center\" }}\r\n            >\r\n              Login\r\n            </Typography> */}\r\n      {/* <Typography\r\n              variant=\"h6\"\r\n              color=\"textSecondary\"\r\n              component=\"h3\"\r\n              style={{ textAlign: \"center\" }}\r\n            > */}\r\n      {/* Access to Admin dashboard */}\r\n      {/* </Typography> */}\r\n\r\n      {/* </CardContent> */}\r\n      {/* </CardActionArea> */}\r\n      {/* </Card> */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  app: {\r\n    height: \"100vh\",\r\n    width: \"500\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(2),\r\n\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"300px\",\r\n    },\r\n    \"& .MuiButtonBase-root\": {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n  card2: {\r\n    position: \"relative\",\r\n    width: \"400px\",\r\n    color: \"primary\",\r\n    //borderStyle: \"solid\",\r\n    //borderColor: \"blue\",\r\n    boxShadow:\r\n      \"rgba(255, 0, 0, 0.117647) 0px 1px 6px, rgba(255, 0, 0, 0.117647) 0px 1px 4px\",\r\n  },\r\n  cardHeader: {\r\n    display: \"flex\",\r\n    paddingBottom: \"10px\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  typography: {\r\n    flexGrow: 1,\r\n    align: \"center\",\r\n  },\r\n  media2: {\r\n    margin: \"-70px auto 0\",\r\n    width: \"80%\",\r\n    height: 300,\r\n    borderRadius: \"4px\",\r\n    boxShadow: \"0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23)\",\r\n    position: \"relative\",\r\n    zIndex: 1000,\r\n    paddingTop: \"56.25%\",\r\n  },\r\n  card: {\r\n    width: 650,\r\n    margin: \"auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  media: {\r\n    height: \"800\",\r\n    width: \"100%\",\r\n    objectFit: \"cover\",\r\n    // marginLeft: '33%'\r\n    // paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  divider: {\r\n    // Theme Color, or use css color in quote\r\n    background: theme.palette.divider,\r\n    padding: 4,\r\n  },\r\n  img: {\r\n    maxWidth: \"100%\",\r\n    height: \"auto\",\r\n  },\r\n}));\r\n\r\nexport default LoginForm;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\MenuListItemsStaff.js",["3604","3605","3606","3607","3608","3609","3610","3611","3612","3613"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { HStack, Button, Text } from \"@chakra-ui/react\"\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport FlightIcon from \"@material-ui/icons/Flight\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n//import LayersIcon from \"@material-ui/icons/Layers\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport MoneyIcon from \"@material-ui/icons/Money\";\r\nimport {\r\n  FaFileInvoiceDollar,\r\n  FaPeopleCarry,\r\n  FaCommentsDollar,\r\n} from \"react-icons/fa\";\r\n// import Collapse from \"@material-ui/core/Collapse\";\r\n// import ExpandLess from \"@material-ui/icons/ExpandLess\";\r\n// import ExpandMore from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst drawerWidth = 0;\r\n\r\nconst MenuListItemsStaff = () => {\r\n  const classes = useStyles();\r\n  const [openPay, setOpenPay] = useState(false);\r\n  const [openTable, setOpenTable] = useState(false);\r\n\r\n  const handleClickPay = () => {\r\n    setOpenPay(!openPay);\r\n  };\r\n\r\n  const handleClickTable = () => {\r\n    setOpenTable(!openTable);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <ListSubheader align=\"center\" className={classes.itemIcon}>\r\n        <Text color=\"blue\" fontSize=\"21\" fontWeight=\"bold\">\r\n          Staff\r\n        </Text>\r\n      </ListSubheader>\r\n\r\n      <Link to=\"/\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <DashboardIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Dashboard\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/singleemployee\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <PeopleIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Profile\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/leave\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FlightIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Leave\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/expenses\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FaFileInvoiceDollar size=\"20\" />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Expenses\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/hoc\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FaFileInvoiceDollar size=\"20\" />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"HOC\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/trainings\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FaPeopleCarry size=\"20\" />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Trainings\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/dailyallowances\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FaCommentsDollar size=\"20\" />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Site Allowances\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/payslips\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MonetizationOnIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Payslips\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainHeader: {\r\n    fontSize: 24,\r\n    color: \"primary\",\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: \"primary\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: \"primary\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: \"rgba(255, 255, 255, 0.08)\",\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: \"#232f3e\",\r\n    boxShadow: \"0 -1px 0 #404854 inset\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.orange,\r\n  },\r\n  itemActiveItem: {\r\n    color: \"primary\",\r\n  },\r\n  itemPrimary: {\r\n    fontSize: \"inherit\",\r\n  },\r\n  itemIcon: {\r\n    minWidth: \"auto\",\r\n    marginRight: theme.spacing(2),\r\n    color: \"primary\",\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default MenuListItemsStaff;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\HomeStaff.js",["3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Box, Stack } from \"@chakra-ui/react\";\r\nimport { TextField, Grid, Paper, Container } from \"@material-ui/core\";\r\nimport CardLayout from \"../helpers/CardLayout\";\r\nimport CardLayout2 from \"../helpers/CardLayout2\";\r\nimport CardLayout3 from \"../helpers/CardLayout3\";\r\nimport Copyright from \"./Copyright\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\n\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport LeaveTableViewStaff from \"./LeaveTableViewStaff\";\r\nimport TrainingsTableViewStaff from \"./TrainingsTableViewStaff\";\r\nimport LeaveTableAdmin from \"./LeaveTableManager\";\r\nimport ExpenseTableViewStaff from \"./ExpenseTableViewStaff\";\r\nimport ExpenseTableAdmin from \"./ExpenseTableAdmin\";\r\nimport PayslipTableViewStaff from \"./PayslipTableViewStaff\";\r\nimport PayslipTableAdmin from \"./PayslipTableAdmin\";\r\nimport DailyAllowancesTableViewStaff from \"./DailyAllowancesTableViewStaff\";\r\nimport DailyAllowancesTableAdmin from \"./DailyAllowancesTableAdmin\";\r\nimport OnLeavesViewStaff from \"./OnLeavesViewStaff\";\r\nimport WPExpiryViewStaff from \"./WPExpiryViewStaff\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useSingleEmployee } from \"./employees/useSingleEmployee\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst HomeStaff = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { employees, setFilter, setEmployeeId } = useEmployees();\r\n  const { singleemployee, setSingleEmployeeId } = useSingleEmployee();\r\n  const [leavesdata, setLeavesdata] = useState([]);\r\n  const [isLeaveDialogOpen, setIsLeaveDialogOpen] = useState(false);\r\n  const [expensesdata, setExpensesdata] = useState([]);\r\n  const [isExpenseDialogOpen, setIsExpenseDialogOpen] = useState(false);\r\n  const [payslipsdata, setPayslipsdata] = useState([]);\r\n  const [isPayslipDialogOpen, setIsPayslipDialogOpen] = useState(false);\r\n  const [dailyallowancesdata, setDailyAllowancesdata] = useState([]);\r\n  const [isDailyAllowancesDialogOpen, setIsDailyAllowancesDialogOpen] =\r\n    useState(false);\r\n\r\n  const { leaves, loadPendingLeaves } = useLeavesContext();\r\n  const { expenses, loadPendingExpenses } = useExpensesContext();\r\n  const { payslips, loadPendingPayslips } = usePayslipsContext();\r\n  const { dailyallowances, loadPendingDailyAllowances } =\r\n    useDailyAllowancesContext();\r\n  const { isEditing, setEditEmployeeID, setIsEditingOn } =\r\n    useEmployeesContext();\r\n\r\n  const handleLeaveDialogOpen = () => {\r\n    setLeavesdata([]);\r\n    setLeavesdata([...leaves]);\r\n    setIsLeaveDialogOpen(true);\r\n  };\r\n\r\n  const handleLeaveDialogClose = () => {\r\n    setIsLeaveDialogOpen(false);\r\n    //loadPendingLeaves(FILTERSTRING);\r\n  };\r\n\r\n  const handleExpenseDialogOpen = () => {\r\n    setExpensesdata([]);\r\n    setExpensesdata([...expenses]);\r\n    setIsExpenseDialogOpen(true);\r\n  };\r\n\r\n  const handleExpenseDialogClose = () => {\r\n    setIsExpenseDialogOpen(false);\r\n    //loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  const handlePayslipDialogOpen = () => {\r\n    setPayslipsdata([]);\r\n    setPayslipsdata([...payslips]);\r\n    setIsPayslipDialogOpen(true);\r\n  };\r\n\r\n  const handlePayslipDialogClose = () => {\r\n    setIsPayslipDialogOpen(false);\r\n    //loadPendingPayslips(FILTERSTRING);\r\n  };\r\n\r\n  const handleDailyAllowancesDialogOpen = () => {\r\n    setDailyAllowancesdata([]);\r\n    setDailyAllowancesdata([...dailyallowances]);\r\n    setIsDailyAllowancesDialogOpen(true);\r\n  };\r\n\r\n  const handleDailyAllowancesDialogClose = () => {\r\n    setIsDailyAllowancesDialogOpen(false);\r\n    loadPendingDailyAllowances(FILTERSTRING);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setEditEmployeeID(loginLevel.loginUserId);\r\n    setIsEditingOn();\r\n  },[]);\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.appBarSpacer} />\r\n      <div style={{ paddingLeft: 50 }}>\r\n        {/* <h2>Welcome Staff {loginLevel.loginUser}!</h2>\r\n        <h3>Dashboard</h3> */}\r\n      </div>\r\n      <Container maxWidth=\"xl\" className={classes.container}>\r\n        <Stack direction=\"column\">\r\n          <Box>\r\n            <CardLayout2>\r\n              <LeaveTableViewStaff />\r\n            </CardLayout2>\r\n          </Box>\r\n          <Box>\r\n            <CardLayout2>\r\n              <ExpenseTableViewStaff />\r\n            </CardLayout2>\r\n          </Box>\r\n          <Box>\r\n            <CardLayout2>\r\n              <TrainingsTableViewStaff />\r\n            </CardLayout2>\r\n          </Box>\r\n\r\n          <Box>\r\n            <CardLayout2>\r\n              <WPExpiryViewStaff />\r\n            </CardLayout2>\r\n          </Box>\r\n       \r\n        </Stack>\r\n        <Box pt={4}>\r\n          <Copyright />\r\n        </Box>\r\n        <CustomDialog\r\n          isOpen={isLeaveDialogOpen}\r\n          handleClose={handleLeaveDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <LeaveTableAdmin\r\n            setLeavesdata={setLeavesdata}\r\n            leavesdata={leavesdata}\r\n            handleDialogClose={handleLeaveDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isExpenseDialogOpen}\r\n          handleClose={handleExpenseDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <ExpenseTableAdmin\r\n            setExpensesdata={setExpensesdata}\r\n            expensesdata={expensesdata}\r\n            handleDialogClose={handleExpenseDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isPayslipDialogOpen}\r\n          handleClose={handlePayslipDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={false}\r\n        >\r\n          <PayslipTableAdmin\r\n            setPayslipsdata={setPayslipsdata}\r\n            payslipsdata={payslipsdata}\r\n            handleDialogClose={handlePayslipDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isDailyAllowancesDialogOpen}\r\n          handleClose={handleDailyAllowancesDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={false}\r\n        >\r\n          <DailyAllowancesTableAdmin\r\n            setDailyAllowancesdata={setDailyAllowancesdata}\r\n            dailyallowancesdata={dailyallowancesdata}\r\n            handleDialogClose={handleDailyAllowancesDialogClose}\r\n          />\r\n        </CustomDialog>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default HomeStaff;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\OnLeavesViewStaff.js",["3639","3640","3641","3642","3643","3644","3645","3646"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { List, ListItem, ListItemText, Grid } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\n//import { useAsync } from \"react-async\";\r\nimport { selector, useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { leaves_url } from \"../utils/constants\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From Data\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Data\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editable: \"never\",\r\n  },\r\n];\r\n\r\n// export const onleavesdatastate = atom({\r\n//   key: \"onleavesdatastate\",\r\n//   default: [],\r\n// });\r\n\r\n// const fetchOnLeavesDetails = selector({\r\n//   key: \"onLeaveDetailsSelector\",\r\n//   get: async ({ get }) => {\r\n//     try {\r\n//       const { data } = await axios.get(leaves_url);\r\n//       const onleavesdata = data;\r\n\r\n//       return data;\r\n//     } catch (error) {\r\n//       throw error;\r\n//     }\r\n//   },\r\n// });\r\n\r\n\r\nconst OnLeavesViewStaff = () => {\r\n  const classes = useStyles();\r\n  //const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  //const [userdata, setUserdata] = useState([]);\r\n  const [loginLevel] = useRecoilState(loginLevelState);\r\n\r\n  const {\r\n    \r\n    loadEmpLeaves,\r\n    singlebatch_leave_loading,\r\n    singlebatch_leave_error,\r\n    singlebatch_leave,\r\n  } = useLeavesContext();\r\n\r\n  useEffect(() => {\r\n    loadEmpLeaves(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  //const [userdata, setUserdata] = useRecoilState(userdatastate);\r\n  //const onLeavesDetails = useRecoilValueLoadable(fetchOnLeavesDetails);\r\n\r\n  if (singlebatch_leave_loading) return \"Loading...\";\r\n  if (singlebatch_leave_error) return `Internet connections problem!`;\r\n  if (singlebatch_leave)\r\n    return (\r\n      <List className={classes.roow}>\r\n        <Grid container direction=\"row\">\r\n          {singlebatch_leave.map((row) => {\r\n            return (\r\n              <ListItem key={row.id}>\r\n                <Grid item sm={4} align=\"center\">\r\n                  <ListItemText>{row.from_date}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={4} align=\"center\">\r\n                  <ListItemText>{row.to_date}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={4} align=\"center\">\r\n                  <ListItemText>{row.status}</ListItemText>\r\n                </Grid>\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </List>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"2\",\r\n  },\r\n\r\n  paper: {\r\n    padding: theme.spacing(1), //grid padding\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default OnLeavesViewStaff;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\WPExpiryViewStaff.js",["3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  GridItem,\r\n  Icon,\r\n  Heading,\r\n  IconButton,\r\n  Spacer,\r\n  Stack,\r\n} from \"@chakra-ui/react\";\r\nimport { EditIcon, EmailIcon, ViewIcon } from \"@chakra-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { differenceInDays, addDays } from \"date-fns\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useUser } from \"./user/useUser\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Work Permit No\",\r\n    field: \"workpermitno\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Work Permit Expiry\",\r\n    field: \"workpermit_expirydate\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n];\r\n\r\nconst WPExpiryViewStaff = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { employees, setFilter } = useEmployees();\r\n  const { user } = useUser();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [userdata, setUserdata] = useState([]);\r\n  const today = Date().toLocaleString();\r\n\r\n  // useEffect(() => {\r\n  //   setFilter(user.id);\r\n  // }, []);\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <Grid direction=\"row\">\r\n        <Stack direction=\"row\">\r\n          <Heading as=\"h4\" size=\"md\">\r\n            Work Permit Expiry Within 90 days\r\n          </Heading>\r\n          <Spacer />\r\n          <IconButton\r\n            // variant=\"outline\"\r\n            size=\"md\"\r\n            aria-label=\"Edit\"\r\n            icon={<EditIcon />}\r\n            onClick={() => history.push(\"/singleemployee\")}\r\n          />\r\n        </Stack>\r\n        {employees\r\n          .filter(\r\n            (i) =>\r\n              differenceInDays(\r\n                new Date(i.workpermit_expirydate),\r\n                new Date(today)\r\n              ) < 90 && i.id === loginLevel.loginUserId\r\n          )\r\n          .map((row) => {\r\n            return (\r\n              <Grid key={row.id} templateColumns=\"repeat(6, 1fr)\" gap={3} p={1}>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.workpermitno}</Box>\r\n                </GridItem>\r\n\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.workpermit_expirydate}</Box>\r\n                </GridItem>\r\n              </Grid>\r\n              // <ListItem key={row.id}>\r\n              //   <Grid item sm={4} align=\"center\">\r\n              //     <ListItemText>{row.workpermitno}</ListItemText>\r\n              //   </Grid>\r\n              //   <Grid item sm={4} align=\"center\">\r\n              //     <ListItemText>{row.workpermit_expirydate}</ListItemText>\r\n              //   </Grid>\r\n              // </ListItem>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default WPExpiryViewStaff;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseTableViewStaff.js",["3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Heading,\r\n  GridItem,\r\n  Icon,\r\n  IconButton,\r\n  Stack,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\nimport { EditIcon, ViewIcon } from \"@chakra-ui/icons\";\r\nimport MaterialTable from \"material-table\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { selector, useRecoilState, useRecoilValueLoadable } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { expenses_url } from \"../utils/constants\";\r\nimport { useExpenses } from \"./expenses/useExpenses\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n\r\n  { title: \"Description\", field: \"description\" },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\n// const fetchExpensesDetails = selector({\r\n//   key: \"fetchExpensesDetailsSelector\",\r\n//   get: async ({ get }) => {\r\n//     try {\r\n//       const { data } = await axios.get(expenses_url);\r\n\r\n//       return data;\r\n//     } catch (error) {\r\n//       throw error;\r\n//     }\r\n//   },\r\n// });\r\n\r\nconst ExpenseTableViewStaff = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { expenses, filter, setFilter, setExpenseId } = useExpenses();\r\n  const [userdata, setUserdata] = useState([]);\r\n  //const [userdata, setUserdata] = useRecoilState(userdatastate);\r\n  // const ExpensesDetails = useRecoilValueLoadable(fetchExpensesDetails);\r\n  // const { state, contents } = ExpensesDetails;\r\n  const { expenses_loading, expenses_error, loadEmpExpenses } =\r\n    useExpensesContext();\r\n\r\n  useEffect(() => {\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <Grid direction=\"row\">\r\n        <Stack direction=\"row\">\r\n          <Heading as=\"h4\" size=\"md\">\r\n            Expenses Claims (Pending)\r\n          </Heading>\r\n          <Spacer />\r\n          <IconButton\r\n            // variant=\"outline\"\r\n            size=\"md\"\r\n            aria-label=\"Edit\"\r\n            icon={<EditIcon />}\r\n            onClick={() => history.push(\"/expenses\")}\r\n          />\r\n        </Stack>\r\n        {/* <Heading as=\"h4\" size=\"md\">\r\n          Expenses Claims (Pending)\r\n        </Heading> */}\r\n        {expenses\r\n          .filter((i) => i.status === \"Pending\")\r\n          .map((row) => {\r\n            return (\r\n              <Grid\r\n                key={row.id}\r\n                templateColumns=\"repeat(15, 1fr)\"\r\n                gap={3}\r\n                p={1}\r\n              >\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.name}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.date}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.description}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.amount}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.status}</Box>\r\n                </GridItem>\r\n              </Grid>\r\n              // <ListItem key={row.id}>\r\n              //   {/* <Grid item sm={2} align=\"center\">\r\n              //     <ListItemText>{row.name}</ListItemText>\r\n              //   </Grid> */}\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.date}</ListItemText>\r\n              //   </Grid>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.description}</ListItemText>\r\n              //   </Grid>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.amount}</ListItemText>\r\n              //   </Grid>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.status}</ListItemText>\r\n              //   </Grid>\r\n              // </ListItem>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default ExpenseTableViewStaff;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipTableViewStaff.js",["3684","3685","3686","3687","3688","3689","3690","3691","3692"],"import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { Grid, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\r\nimport { payPeriodEmpIdState, loginLevelState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Period\", field: \"period\", editable: \"never\" },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n\r\n  { title: \"Nett Pay\", field: \"nett_pay\", type: \"currency\", editable: \"never\" },\r\n  // { title: \"Bank Name\", field: \"bank_name\" },\r\n  // { title: \"Bank AC No\", field: \"bank_accno\" },\r\n  { title: \"Status\", field: \"status\", editable: \"never\" },\r\n];\r\n\r\nexport default function PayslipTableVIewStaff() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { payslips, payslips_loading, payslips_error, loadEmpPayslips } =\r\n    usePayslipsContext();\r\n\r\n  useEffect(() => {\r\n    loadEmpPayslips(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  if (payslips_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading.....Payslips</h2>\r\n      </div>\r\n    );\r\n  }\r\n  if (payslips_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Internet connections problem!</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container direction=\"row\">\r\n        {payslips\r\n          // .filter((i) => i.empid === loginLevel.loginUserId && i.status === \"Approve\")\r\n          .map((row) => {\r\n            return (\r\n              <ListItem key={row.id}>\r\n                {/* <Grid item sm={2} align=\"center\">\r\n                  <ListItemText>{row.name}</ListItemText>\r\n                </Grid> */}\r\n                <Grid item sm={2} align=\"center\">\r\n                  <ListItemText>{row.payrun}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={2} align=\"center\">\r\n                  <ListItemText>{row.pay_date}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={5} align=\"center\">\r\n                  <ListItemText>{row.period}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={2} align=\"center\">\r\n                  <ListItemText>{row.nett_pay}</ListItemText>\r\n                </Grid>\r\n                {/* <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.status}</ListItemText>\r\n                </Grid> */}\r\n              </ListItem>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesTableViewStaff.js",["3693","3694","3695","3696","3697","3698","3699","3700","3701","3702","3703","3704","3705","3706","3707","3708","3709","3710","3711","3712","3713","3714","3715","3716","3717","3718"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { Grid, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  useSetRecoilState,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  useRecoilValueLoadable,\r\n} from \"recoil\";\r\nimport {\r\n  allowsPeriodState,\r\n  allowsDataState,\r\n  empidState,\r\n  loginLevelState,\r\n} from \"./data/atomdata\";\r\nimport { fetchDailyAllowancesSelector } from \"./data/selectordata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\nimport DailyAllowsDetlsTable from \"./DailyAllowsDetlsTable\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  { title: \"Period\", field: \"period\" },\r\n  { title: \"Location\", field: \"location\" },\r\n  { title: \"Manager\", field: \"manager_name\" },\r\n  { title: \"Days\", field: \"no_of_days\", type: \"numeric\" },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function DailyAllowancesTableViewStaff() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [tmpallowsdata, setTmpallowsdata] = useState([]);\r\n  const allows_period = useRecoilValue(allowsPeriodState);\r\n  const allows_empid = useRecoilValue(empidState);\r\n  const [allowsdata, setAllowsdata] = useRecoilState(allowsDataState);\r\n  const setEmpID = useSetRecoilState(empidState);\r\n  const title = `Site Allowances (${allows_period})`;\r\n  const {\r\n    dailyallowances,\r\n    loadEmpDailyAllowances,\r\n    dailyallowances_loading,\r\n    dailyallowances_error,\r\n  } = useDailyAllowancesContext();\r\n\r\n  useEffect(() => {\r\n    loadEmpDailyAllowances(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  const handleDialogOpen = () => {\r\n    //console.log(\"allowsdetls\", allowsdata, allowsdataRef, singlebatch_dailyallowsdetl);\r\n    //setAllowsdata({ singlebatch_dailyallowsdetl });\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    //getSingleBatchDailyAllowance(dailyallowance_period);\r\n  };\r\n\r\n  if (dailyallowances_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... daily allowances</h2>\r\n      </div>\r\n    );\r\n  }\r\n  if (dailyallowances_error) {\r\n    return (\r\n      <div>\r\n        <h2>Internet connections problem!</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container direction=\"row\">\r\n        {dailyallowances\r\n          .filter((i) => i.empid === loginLevel.loginUserId)\r\n          .map((row) => {\r\n            return (\r\n              <ListItem key={row.id}>\r\n                {/* <Grid item sm={2} align=\"center\">\r\n                  <ListItemText>{row.name}</ListItemText>\r\n                </Grid> */}\r\n                <Grid item sm={2} align=\"center\">\r\n                  <ListItemText>{row.period}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={5} align=\"center\">\r\n                  <ListItemText>{row.no_of_days}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={2} align=\"center\">\r\n                  <ListItemText>{row.amount}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.status}</ListItemText>\r\n                </Grid>\r\n              </ListItem>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  dialog: {\r\n    width: 1000,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\SingleEmployeeStaff.js",["3719","3720","3721","3722","3723","3724"],"import React,{useEffect} from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EmployeeFormStaff from \"./EmployeeFormStaff\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ToolbarHeader = ({ title }) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst SingleEmployee = ({ title }) => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { isEditing, setEditEmployeeID, setIsEditingOn } =\r\n    useEmployeesContext();\r\n   \r\n  \r\n  if (isEditing) {\r\n    return (\r\n      <div>\r\n        <CssBaseline />\r\n\r\n        <div className={classes.appBarSpacer}>\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid container spacing={3}>\r\n              {/* <Grid item xs={12} md={8} lg={9}> */}\r\n              <Grid item xs={12}>\r\n                <Paper className={fixedHeightPaper}>\r\n                  {/* <Link to=\"/allemployees\">\r\n                    <div>\r\n                      <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                    </div>\r\n                  </Link> */}\r\n                  <div>\r\n                    {/* <ToolbarHeader title={title} /> */}\r\n\r\n                    <EmployeeFormStaff />\r\n                  </div>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <CssBaseline />\r\n\r\n        <div className={classes.appBarSpacer}>\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid container spacing={3}>\r\n              {/* <Grid item xs={12} md={8} lg={9}> */}\r\n              <Grid item xs={12}>\r\n                <Paper className={fixedHeightPaper}>\r\n                  {/* <Link to=\"/allemployees\">\r\n                    <div>\r\n                      <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                    </div>\r\n                  </Link> */}\r\n                  <div>\r\n                    {/* <ToolbarHeader title={title} /> */}\r\n\r\n                    <EmployeeFormStaff />\r\n                  </div>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nexport default SingleEmployee;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmployeeFormStaff.js",["3725","3726","3727","3728","3729","3730","3731","3732","3733"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n//import { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { selector, useRecoilState, useRecoilValueLoadable } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\n\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useSingleEmployee } from \"./employees/useSingleEmployee\";\r\nimport { useUpdateEmployees } from \"./employees/useUpdateEmployees\";\r\n// import EmpFamilyStaff from \"./EmpFamilyStaff\";\r\n// import EmpEducationsStaff from \"./EmpEducationsStaff\";\r\n// import EmpExperiencesStaff from \"./EmpExperiencesStaff\";\r\nimport EmpFamily from \"./EmpFamily\";\r\nimport EmpEducations from \"./EmpEducations\";\r\nimport EmpExperiences from \"./EmpExperiences\";\r\nimport EmpTrainings from \"./EmpTrainings\";\r\nimport App from \"../utils/firebase\";\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  birthdate: null,\r\n  empno: \"\",\r\n  gender: \"\",\r\n  ic_no: \"\",\r\n  email: \"\",\r\n  age: 0,\r\n  basic_salary: 0,\r\n  salary_currency: \"BND\",\r\n  bank_name: \"\",\r\n  bank_acno: \"\",\r\n  nationality: \"\",\r\n  address: \"\",\r\n  leave_bal: 0,\r\n  leave_bf: 0,\r\n  leave_entitled: 0,\r\n  tap_acno: \"\",\r\n  scp_acno: \"\",\r\n  date_of_join: null,\r\n  date_of_resign: null,\r\n  designation: \"\",\r\n  department: \"\",\r\n  passportno: \"\",\r\n  passport_expirydate: null,\r\n  workpermitno: \"\",\r\n  workpermit_expirydate: null,\r\n  siteallows_fee: 0,\r\n  perdiem_fee: 0,\r\n  reporting_to: \"\",\r\n  reporting_email: \"\",\r\n};\r\n\r\nconst EmployeeForm = () => {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const { employees, setFilter } = useEmployees();\r\n  const { singleemployee, setSingleEmployeeId } = useSingleEmployee();\r\n  const updateEmployees = useUpdateEmployees();\r\n  const [empage, setEmpage] = useState(0);\r\n  const [reportemail, setReportEmail] = useState(\"\");\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const {\r\n    isEditing,\r\n    //single_employee,\r\n    editEmployeeID,\r\n    getSingleEmployee,\r\n    single_employee_loading,\r\n  } = useEmployeesContext();\r\n\r\n  const {\r\n    name,\r\n    empno,\r\n    birthdate,\r\n    ic_no,\r\n    gender,\r\n    age,\r\n    email,\r\n    nationality,\r\n    address,\r\n    basic_salary,\r\n    salary_currency,\r\n    bank_name,\r\n    bank_acno,\r\n    tap_acno,\r\n    scp_acno,\r\n    leave_bf,\r\n    leave_entitled,\r\n    date_of_join,\r\n    date_of_resign,\r\n    designation,\r\n    department,\r\n    passportno,\r\n    passport_expirydate,\r\n    workpermitno,\r\n    workpermit_expirydate,\r\n    siteallows_fee,\r\n    perdiem_fee,\r\n    reporting_to,\r\n    reporting_email,\r\n  } = singleemployee || initial_values;\r\n  const { handleSubmit, control } = useForm({\r\n    defaultValues: {\r\n      singleemployee,\r\n    },\r\n  });\r\n  console.log(\"single employee\", singleemployee);\r\n  const handleReportingTo = (name) => {\r\n    const emp = employees\r\n      .filter((f) => f.name === name)\r\n      .map((r) => {\r\n        return { ...r };\r\n      });\r\n    setReportEmail(emp[0].email);\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    updateEmployees({ id: editEmployeeID, ...data });\r\n  };\r\n\r\n  const Reset_PW = () => {\r\n    try {\r\n      App.auth().sendPasswordResetEmail(email);\r\n      toast({\r\n        title: `Reset Password sent to ${email}!`,\r\n        status: \"success\",\r\n      });\r\n    } catch (error) {\r\n      toast({\r\n        title: `Fail to reset password on ${email}!`,\r\n        status: \"warning\",\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const calculateAge = (dob) => {\r\n    var today = new Date();\r\n    var birthDate = new Date(dob);\r\n    var age = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age--;\r\n    }\r\n    return age;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSingleEmployeeId(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let age = calculateAge(birthdate);\r\n    setEmpage(age);\r\n    setReportEmail(reporting_email);\r\n  }, []);\r\n\r\n  if (single_employee_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... </h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Paper className={classes.root}>\r\n          <Grid container className={classes.root} spacing={15}>\r\n            <div>\r\n              <Typography variant=\"h5\" component=\"h3\">\r\n                EMPLOYEE FORM\r\n              </Typography>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n              >\r\n                Submit <Icon className={classes.rightIcon}>send</Icon>\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={Reset_PW}\r\n              >\r\n                Reset PW <Icon className={classes.rightIcon}>send</Icon>\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n          <Divider className={classes.divider} />\r\n          <Grid item xs={12}>\r\n            <div>\r\n              <div>\r\n                <Controller\r\n                  name=\"name\"\r\n                  control={control}\r\n                  defaultValue={name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Name\"\r\n                        id=\"standard-name\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"empno\"\r\n                  control={control}\r\n                  defaultValue={empno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Emp No\"\r\n                        id=\"standard-empno\"\r\n                        name=\"empno\"\r\n                        value={empno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"email\"\r\n                  control={control}\r\n                  defaultValue={email}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Email\"\r\n                        id=\"standard-email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: \"Email is required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"ic_no\"\r\n                  control={control}\r\n                  defaultValue={ic_no}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"IC No\"\r\n                        id=\"standard-icno\"\r\n                        name=\"ic_no\"\r\n                        value={ic_no}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"birthdate\"\r\n                  control={control}\r\n                  defaultValue={birthdate}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Birth Date\"\r\n                        id=\"standard-birthdate\"\r\n                        name=\"birthdate\"\r\n                        type=\"date\"\r\n                        value={birthdate}\r\n                        className={classes.textField}\r\n                        onChange={(e) => {\r\n                          onChange(e.target.value);\r\n                          let age = calculateAge(e.target.value);\r\n                          console.log(\"emp\", birthdate, age);\r\n                          setEmpage(age);\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"age\"\r\n                  control={control}\r\n                  //defaultValue={age}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Age\"\r\n                        type=\"number\"\r\n                        id=\"standard-age\"\r\n                        name=\"age\"\r\n                        value={empage}\r\n                        className={classes.textField}\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          onChange(parseInt(e.target.value, 10));\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        inputProps={{ readOnly: true }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"passportno\"\r\n                  control={control}\r\n                  defaultValue={passportno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Passport No\"\r\n                        id=\"stanrad-ppno\"\r\n                        name=\"passportno\"\r\n                        value={passportno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"passport_expirydate\"\r\n                  control={control}\r\n                  defaultValue={passport_expirydate}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Passport Expiry Date\"\r\n                        id=\"standard-ppexpiry\"\r\n                        name=\"passport_expirydate\"\r\n                        type=\"date\"\r\n                        value={passport_expirydate}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"nationality\"\r\n                  control={control}\r\n                  defaultValue={nationality}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Nationality\"\r\n                        id=\"standard-nationality\"\r\n                        name=\"nationality\"\r\n                        value={nationality}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"gender\"\r\n                  control={control}\r\n                  defaultValue={gender}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Gender\"\r\n                        id=\"standard-gender\"\r\n                        name=\"gender\"\r\n                        value={gender}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        select\r\n                      >\r\n                        <MenuItem value=\"Male\">Male</MenuItem>\r\n                        <MenuItem value=\"Female\">Female</MenuItem>\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"address\"\r\n                  control={control}\r\n                  defaultValue={address}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Address\"\r\n                        id=\"standard-address\"\r\n                        name=\"address\"\r\n                        value={address}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <Divider className={classes.divider} />\r\n            <div>\r\n              <div>\r\n                <Controller\r\n                  name=\"basic_salary\"\r\n                  control={control}\r\n                  defaultValue={basic_salary}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <CurrencyTextField\r\n                        label=\"Basic Salary\"\r\n                        variant=\"standard\"\r\n                        value={basic_salary}\r\n                        currencySymbol=\"$\"\r\n                        outputFormat=\"number\"\r\n                        decimalCharacter=\".\"\r\n                        digitGroupSeparator=\",\"\r\n                        decimalPlaces=\"2\"\r\n                        className={classes.textField}\r\n                        id=\"standard-basicsalary\"\r\n                        name=\"basic_pay\"\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          onChange(parseFloat(e.target.value, 10));\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        inputProps={{ readOnly: true }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"salary_currency\"\r\n                  control={control}\r\n                  defaultValue={salary_currency}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Currency\"\r\n                        id=\"standard-currency\"\r\n                        name=\"salary_currency\"\r\n                        value={salary_currency}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        inputProps={{ readOnly: true }}\r\n                        select\r\n                      >\r\n                        <MenuItem value=\"BND\">BND</MenuItem>\r\n                        <MenuItem value=\"MYR\">MYR</MenuItem>\r\n                        <MenuItem value=\"USD\">USD</MenuItem>\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"siteallows_fee\"\r\n                  control={control}\r\n                  defaultValue={siteallows_fee}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <CurrencyTextField\r\n                        label=\"Site Allowances Fee\"\r\n                        variant=\"standard\"\r\n                        value={siteallows_fee}\r\n                        currencySymbol=\"$\"\r\n                        outputFormat=\"number\"\r\n                        decimalCharacter=\".\"\r\n                        digitGroupSeparator=\",\"\r\n                        decimalPlaces=\"2\"\r\n                        className={classes.textField}\r\n                        id=\"standard-siteallowances\"\r\n                        name=\"siteallows_fee\"\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          onChange(parseFloat(e.target.value, 10));\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        inputProps={{ readOnly: true }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"perdiem_fee\"\r\n                  control={control}\r\n                  defaultValue={perdiem_fee}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <CurrencyTextField\r\n                        label=\"Per Diem Fee\"\r\n                        variant=\"standard\"\r\n                        value={perdiem_fee}\r\n                        currencySymbol=\"$\"\r\n                        outputFormat=\"number\"\r\n                        decimalCharacter=\".\"\r\n                        digitGroupSeparator=\",\"\r\n                        decimalPlaces=\"2\"\r\n                        className={classes.textField}\r\n                        id=\"standard-perdiem\"\r\n                        name=\"perdiem_fee\"\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          onChange(parseFloat(e.target.value, 10));\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        inputProps={{ readOnly: true }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"bank_name\"\r\n                  control={control}\r\n                  defaultValue={bank_name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Bank Name\"\r\n                        id=\"standard-bankname\"\r\n                        name=\"bank_name\"\r\n                        value={bank_name}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"bank_acno\"\r\n                  control={control}\r\n                  defaultValue={bank_acno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Bank Ac No\"\r\n                        id=\"standard-bankacno\"\r\n                        name=\"bank_acno\"\r\n                        value={bank_acno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  // rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"tap_acno\"\r\n                  control={control}\r\n                  defaultValue={tap_acno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"TAP Ac No\"\r\n                        id=\"standard-tapacno\"\r\n                        name=\"tap_acno\"\r\n                        value={tap_acno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"scp_acno\"\r\n                  control={control}\r\n                  defaultValue={scp_acno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"SCP Ac No\"\r\n                        id=\"standard-scpacno\"\r\n                        name=\"scp_acno\"\r\n                        value={scp_acno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"workpermitno\"\r\n                  control={control}\r\n                  defaultValue={workpermitno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Work Permit No\"\r\n                        id=\"standard-wpno\"\r\n                        name=\"workpermitno\"\r\n                        value={workpermitno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"workpermit_expirydate\"\r\n                  control={control}\r\n                  defaultValue={workpermit_expirydate}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Work Permit Expiry Date\"\r\n                        id=\"standard-wpexpiry\"\r\n                        name=\"workpermit_expirydate\"\r\n                        type=\"date\"\r\n                        value={workpermit_expirydate}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <Divider className={classes.divider} />\r\n              <div>\r\n                <Controller\r\n                  name=\"date_of_join\"\r\n                  control={control}\r\n                  defaultValue={date_of_join}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Joining Date\"\r\n                        id=\"standard-joindate\"\r\n                        name=\"date_of_join\"\r\n                        type=\"date\"\r\n                        value={date_of_join}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"date_of_resign\"\r\n                  control={control}\r\n                  defaultValue={date_of_resign}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Resign Date\"\r\n                        id=\"standard-resigndate\"\r\n                        name=\"date_of_resign\"\r\n                        type=\"date\"\r\n                        value={date_of_resign}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"leave_entitled\"\r\n                  control={control}\r\n                  defaultValue={leave_entitled}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Annual Leaves Entitled\"\r\n                        id=\"standard-annualleave\"\r\n                        name=\"leave_entitled\"\r\n                        type=\"numeric\"\r\n                        value={leave_entitled}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        inputProps={{ readOnly: true }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"leave_bf\"\r\n                  control={control}\r\n                  defaultValue={leave_bf}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Leaves B/F\"\r\n                        id=\"standard-leavebal\"\r\n                        name=\"leave_bf\"\r\n                        type=\"numeric\"\r\n                        value={leave_bf}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        inputProps={{ readOnly: true }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"designation\"\r\n                  control={control}\r\n                  defaultValue={designation}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Designation\"\r\n                        id=\"standard-designation\"\r\n                        name=\"designation\"\r\n                        value={designation}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"department\"\r\n                  control={control}\r\n                  defaultValue={department}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Department\"\r\n                        id=\"standard-department\"\r\n                        name=\"department\"\r\n                        value={department}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"reporting_to\"\r\n                  control={control}\r\n                  defaultValue={reporting_to}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Reporting To\"\r\n                        id=\"standard-reportingto\"\r\n                        name=\"reporting_to\"\r\n                        value={reporting_to}\r\n                        className={classes.textField}\r\n                        onChange={(e) => {\r\n                          onChange(e.target.value);\r\n                          handleReportingTo(e.target.value);\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        select\r\n                      >\r\n                        <MenuItem value=\"\">None</MenuItem>\r\n                        {employees &&\r\n                          employees.map((r) => {\r\n                            return <MenuItem value={r.name}>{r.name}</MenuItem>;\r\n                          })}\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"reporting_email\"\r\n                  control={control}\r\n                  defaultValue={reportemail}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Reporting Email\"\r\n                        id=\"standard-reportingemail\"\r\n                        name=\"reporting_email\"\r\n                        value={reportemail}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <Divider className={classes.divider} />\r\n            </div>\r\n          </Grid>\r\n          <Divider />\r\n        </Paper>\r\n      </form>\r\n\r\n      <Grid xs={12}>\r\n        <EmpFamily />\r\n      </Grid>\r\n      <Grid xs={12}>\r\n        <EmpEducations />\r\n      </Grid>\r\n      <Grid xs={12}>\r\n        <EmpExperiences />\r\n      </Grid>\r\n      <Grid xs={12}>\r\n        <EmpTrainings />\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  divider: {\r\n    padding: 4,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n}));\r\n\r\nexport default EmployeeForm;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpFamilyStaff.js",["3734"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Icon, TextField, MenuItem } from \"@material-ui/core\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Relationship\",\r\n    field: \"relationship\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Father\">Father</MenuItem>\r\n        <MenuItem value=\"Mother\">Mother</MenuItem>\r\n        <MenuItem value=\"Daughter\">Daughter</MenuItem>\r\n        <MenuItem value=\"Son\">Son</MenuItem>\r\n        <MenuItem value=\"Son-in-law\">Son-in-law</MenuItem>\r\n        <MenuItem value=\"Daughter-in-law\">Daughter-in-law</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n  {\r\n    title: \"BIrth Date\",\r\n    field: \"birth_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"Phone\",\r\n    field: \"phone\",\r\n  },\r\n  { title: \"Age\", field: \"age\", type: \"numeric\" },\r\n];\r\n\r\n\r\n\r\nexport default function Emp_Family({\r\n  familydata,\r\n  setFamilydata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    singlebatchfamily,\r\n    addFamily,\r\n    deleteFamily,\r\n    updateFamily,\r\n    singlebatch_family_loading,\r\n  } = useTablesContext();\r\n\r\n  useEffect(() => {}, [familydata]);\r\n\r\n  const Save_FamilyData = () => {\r\n    // delete unwanted data\r\n    singlebatchfamily.forEach((row) => {\r\n      const { id, rec_id } = row;\r\n      const res = familydata.find((r) => r.rec_id === rec_id);\r\n      if (!res) {\r\n        deleteFamily(id);\r\n      }\r\n    });\r\n    //add or update new data\r\n\r\n    familydata.forEach((data) => {\r\n      const { id, name, relationship, birth_date, phone, age } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updateFamily({ id, ...fields });\r\n      } else {\r\n        addFamily({\r\n          name,\r\n          relationship,\r\n          birth_date,\r\n          phone,\r\n          age,\r\n          empid: editEmployeeID,\r\n        });\r\n      }\r\n    });\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  // const update_Family = (data) => {\r\n  //   const { id, rec_id, tableData, ...fields } = data;\r\n  //   setTimeout(() => {}, 1000);\r\n\r\n  //   updateFamily({ id, ...fields });\r\n  //   //loadSingleBatchFamily(editEmployeeID);\r\n  //   //loadSingleBatchFamily(editEmployeeID);\r\n  // };\r\n\r\n  // const add_Family = (data) => {\r\n  //   addFamily({ ...data, empid: editEmployeeID });\r\n  //   //loadSingleBatchFamily(editEmployeeID);\r\n  // };\r\n\r\n  // const delete_Family = (data) => {\r\n  //   const { id } = data;\r\n  //   deleteFamily(id);\r\n  //   //loadSingleBatchFamily(editEmployeeID);\r\n  // };\r\n\r\n  if (singlebatch_family_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Family</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={familydata}\r\n          title=\"Family\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  setFamilydata([...familydata, newData]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...familydata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setFamilydata([...dataUpdate]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...familydata];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setFamilydata([...dataDelete]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_FamilyData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n          // localization={{\r\n          //   body: {\r\n          //     dateTimePickerLocalization: enGB,\r\n          //   },\r\n          // }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n",["3735","3736"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpEducationsStaff.js",["3737"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { Button, Icon, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Institution\",\r\n    field: \"institution\",\r\n  },\r\n  {\r\n    title: \"Course\",\r\n    field: \"course\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField onChange={(e) => props.onChange(e.target.value)} type=\"date\" />\r\n    ),\r\n  },\r\n  {\r\n    title: \"Archievement\",\r\n    field: \"archievement\",\r\n  },\r\n\r\n  { title: \"Grade\", field: \"grade\" },\r\n  {\r\n    title: \"Remark\",\r\n    field: \"remark\",\r\n  },\r\n];\r\n\r\nexport default function EmpEducationsStaff({\r\n  educationdata,\r\n  setEducationdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n\r\n  const {\r\n    singlebatcheducation,\r\n    addEducation,\r\n    deleteEducation,\r\n    updateEducation,\r\n    singlebatch_education_loading,\r\n  } = useTablesContext();\r\n\r\n  //useEffect(() => {}, [educationdata]);\r\n\r\n  const Save_EducationData = () => {\r\n    //console.log(educationdata);\r\n    // delete unwanted data\r\n    singlebatcheducation.forEach((row) => {\r\n      const { id, rec_id } = row;\r\n      const res = educationdata.find((r) => r.rec_id === rec_id);\r\n      if (!res) {\r\n        deleteEducation(id);\r\n      }\r\n    });\r\n\r\n    //add or update new data\r\n\r\n    educationdata.forEach((data) => {\r\n      const { id, institution, course, from_date, to_date, grade, remark } =\r\n        data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updateEducation({ id, ...fields });\r\n      } else {\r\n        addEducation({\r\n          institution,\r\n          course,\r\n          from_date,\r\n          to_date,\r\n          grade,\r\n          remark,\r\n          empid: editEmployeeID,\r\n        });\r\n      }\r\n    });\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  // const update_Education = (data) => {\r\n  //   updateEducation({ id: data.id, ...data });\r\n  //   loadSingleBatchEducation(editEmployeeID);\r\n  // };\r\n\r\n  // const add_Education = (data) => {\r\n  //   addEducation({ ...data, empid: editEmployeeID });\r\n  //   loadSingleBatchEducation(editEmployeeID);\r\n  // };\r\n\r\n  // const delete_Education = (data) => {\r\n  //   const { id } = data;\r\n  //   deleteEducation(id);\r\n  //   loadSingleBatchEducation(editEmployeeID);\r\n  // };\r\n\r\n  if (singlebatch_education_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Education</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={educationdata}\r\n          title=\"Education\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  setEducationdata([...educationdata, newData]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...educationdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setEducationdata([...dataUpdate]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...educationdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setEducationdata([...dataDelete]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_EducationData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpExperiencesStaff.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\EmployeeViewStaff.js",["3738","3739","3740"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport CardLayout from \"../helpers/CardLayout\";\r\nimport CardLayout2 from \"../helpers/CardLayout2\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useRecoilState} from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useTrainingsContext } from \"../context/trainings_context\";\r\nimport EmpViewFamily from \"./EmpViewFamily\";\r\nimport EmpViewEducations from \"./EmpViewEducations\";\r\nimport EmpViewExperiences from \"./EmpViewExperiences\";\r\nimport EmpViewLeaves from \"./EmpViewLeaves\";\r\nimport EmpViewTrainings from \"./EmpViewTrainings\";\r\nimport EmpPersonal from \"./EmpPersonal\";\r\nimport EmpFamily from \"./EmpFamily\";\r\nimport EmpEducations from \"./EmpEducations\";\r\nimport EmpExperiences from \"./EmpExperiences\";\r\nimport EmpTrainings from \"./EmpTrainings\";\r\n\r\n// const drawerWidth = 240;\r\n\r\n// const CardLayout = ({ title, children }) => {\r\n//   const classes = useStyles();\r\n//   return (\r\n//     <div>\r\n//       <CardLayout title=\"Personal Information\">\r\n//         <h2>details</h2>\r\n//       </CardLayout>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst EmployeeViewStaff = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [familydata, setFamilydata] = useState([]);\r\n  const [educationdata, setEducationdata] = useState([]);\r\n  const [experiencedata, setExperiencedata] = useState([]);\r\n  const [trainingdata, setTrainingdata] = useState([]);\r\n  const [isPersonalDialogOpen, setIsPersonalDialogOpen] = useState(false);\r\n  const [isFamilyDialogOpen, setIsFamilyDialogOpen] = useState(false);\r\n  const [isEducationDialogOpen, setIsEducationDialogOpen] = useState(false);\r\n  const [isExperienceDialogOpen, setIsExperienceDialogOpen] = useState(false);\r\n  const [isTrainingDialogOpen, setIsTrainingDialogOpen] = useState(false);\r\n\r\n  const {\r\n    editEmployeeID,\r\n    getSingleEmployee,\r\n    single_employee,\r\n    single_employee_loading,\r\n    setEditEmployeeID,\r\n    setIsEditingOn,\r\n  } = useEmployeesContext();\r\n  const { singlebatch_training } = useTrainingsContext();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const {\r\n    loadDepartments,\r\n    loadDesignations,\r\n    loadSingleBatchFamily,\r\n    loadSingleBatchEducation,\r\n    singlebatchfamily,\r\n    singlebatcheducation,\r\n    singlebatchexperience,\r\n  } = useTablesContext();\r\n\r\n  useEffect(() => {\r\n    getSingleEmployee(loginLevel.loginUserId);\r\n     setEditEmployeeID(loginLevel.loginUserId);\r\n    loadDepartments();\r\n    loadDesignations();\r\n  }, []);\r\n\r\n  //useEffect(() => {}, [singlebatchfamily]);\r\n\r\n  \r\n  const handlePersonalDialogOpen = () => {\r\n    //setFamilydata([...singlebatchfamily]);\r\n    setIsEditingOn();\r\n    setIsPersonalDialogOpen(true);\r\n  };\r\n\r\n  const handlePersonalDialogClose = () => {\r\n    setIsPersonalDialogOpen(false);\r\n    //loadEmployees();\r\n  };\r\n\r\n  const handleFamilyDialogOpen = () => {\r\n    setFamilydata([]);\r\n    setFamilydata([...singlebatchfamily]);\r\n    setIsFamilyDialogOpen(true);\r\n  };\r\n\r\n  const handleFamilyDialogClose = () => {\r\n    setIsFamilyDialogOpen(false);\r\n    loadSingleBatchFamily(editEmployeeID);\r\n  };\r\n\r\n  const handleEducationDialogOpen = () => {\r\n    setEducationdata([]);\r\n    setEducationdata([...singlebatcheducation]);\r\n    setIsEducationDialogOpen(true);\r\n  };\r\n\r\n  const handleEducationDialogClose = () => {\r\n    setIsEducationDialogOpen(false);\r\n    loadSingleBatchEducation(editEmployeeID);\r\n  };\r\n\r\n  const handleExperienceDialogOpen = () => {\r\n    setExperiencedata([...singlebatchexperience]);\r\n    setIsExperienceDialogOpen(true);\r\n  };\r\n\r\n  const handleExperienceDialogClose = () => {\r\n    setIsExperienceDialogOpen(false);\r\n    //loadEmployees();\r\n  };\r\n\r\n  const handleTrainingDialogOpen = () => {\r\n    setTrainingdata([...singlebatch_training]);\r\n    setIsTrainingDialogOpen(true);\r\n    //loadEmployees();\r\n  };\r\n\r\n  const handleTrainingDialogClose = () => {\r\n    setIsTrainingDialogOpen(false);\r\n    //loadEmployees();\r\n  };\r\n\r\nif (single_employee_loading) {\r\n  return (\r\n    <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n      <div>\r\n        <h2>Loading...Employee</h2>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n\r\n\r\n  return (\r\n    <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={8} lg={12}>\r\n            <CardLayout2 title=\"Employee Profile\">\r\n              <div>\r\n                <form className={classes.form}>\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={single_employee.name}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    value={single_employee.phone}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    value={single_employee.email}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    label=\"Birth Date\"\r\n                    name=\"birthdate\"\r\n                    value={single_employee.birhdate}\r\n                    type=\"date\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    label=\"Gender\"\r\n                    name=\"gender\"\r\n                    value={single_employee.gender}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n\r\n                  <TextField\r\n                    label=\"Leave Balance\"\r\n                    name=\"leave_bal\"\r\n                    value={single_employee.leave_bal}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    label=\"Reporting To\"\r\n                    name=\"reporting_to\"\r\n                    value={single_employee.reporting_to}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </form>\r\n              </div>\r\n            </CardLayout2>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <div>\r\n              <CardLayout\r\n                title=\"Personal Information\"\r\n                handleClick={handlePersonalDialogOpen}\r\n              >\r\n                <div>\r\n                  <form className={classes.form}>\r\n                    <TextField\r\n                      label=\"I/C No\"\r\n                      name=\"icno\"\r\n                      value={single_employee.ic_no}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    />\r\n\r\n                    <TextField\r\n                      label=\"I/C Expiry Date\"\r\n                      name=\"ic_expirydate\"\r\n                      value={single_employee.ic_expirydate}\r\n                      type=\"date\"\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                    />\r\n\r\n                    <TextField\r\n                      label=\"Passport No\"\r\n                      name=\"passportno\"\r\n                      value={single_employee.passportno}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    />\r\n                    <TextField\r\n                      label=\"Passport Expiry Date\"\r\n                      name=\"passport_expirydate\"\r\n                      value={single_employee.passport_expirydate}\r\n                      type=\"date\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    />\r\n\r\n                    <TextField\r\n                      label=\"Work Permit No\"\r\n                      name=\"workpermitno\"\r\n                      value={single_employee.workpermitno}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    />\r\n                    <TextField\r\n                      label=\"W/P Expiry Date\"\r\n                      name=\"workpermit_expirydate\"\r\n                      value={single_employee.workpermit_expirydate}\r\n                      type=\"date\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    />\r\n\r\n                    <div>\r\n                      <TextField\r\n                        label=\"Nationality\"\r\n                        name=\"nationality\"\r\n                        value={single_employee.nationality}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <TextField\r\n                        label=\"Marital Status\"\r\n                        name=\"marital_status\"\r\n                        value={single_employee.marital_status}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </CardLayout>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <div>\r\n              <CardLayout2 title=\"Leaves\">\r\n                <div>\r\n                  <EmpViewLeaves />\r\n                </div>\r\n              </CardLayout2>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <div>\r\n              <CardLayout\r\n                title=\"Training\"\r\n                handleClick={handleTrainingDialogOpen}\r\n              >\r\n                <EmpViewTrainings />\r\n              </CardLayout>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <div>\r\n              <CardLayout\r\n                title=\"Experiences\"\r\n                handleClick={handleExperienceDialogOpen}\r\n              >\r\n                <div>\r\n                  <EmpViewExperiences />\r\n                </div>\r\n              </CardLayout>\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <div>\r\n              <CardLayout\r\n                title=\"Education\"\r\n                handleClick={handleEducationDialogOpen}\r\n              >\r\n                <div>\r\n                  <EmpViewEducations />\r\n                </div>\r\n              </CardLayout>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <div>\r\n              <CardLayout title=\"Family\" handleClick={handleFamilyDialogOpen}>\r\n                <EmpViewFamily />\r\n              </CardLayout>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <CustomDialog\r\n        isOpen={isPersonalDialogOpen}\r\n        handleClose={handlePersonalDialogClose}\r\n        title=\"\"\r\n        showButton={true}\r\n        isFullscreen={false}\r\n        isFullwidth={false}\r\n      >\r\n        <EmpPersonal\r\n          //setPersonaldata={setFamilydata}\r\n          //familydata={familydata}\r\n          handleDialogClose={handlePersonalDialogClose}\r\n        />\r\n      </CustomDialog>\r\n      <CustomDialog\r\n        isOpen={isFamilyDialogOpen}\r\n        handleClose={handleFamilyDialogClose}\r\n        title=\"\"\r\n        showButton={true}\r\n        isFullscreen={false}\r\n        isFullwidth={false}\r\n      >\r\n        <EmpFamily\r\n          setFamilydata={setFamilydata}\r\n          familydata={familydata}\r\n          handleDialogClose={handleFamilyDialogClose}\r\n        />\r\n      </CustomDialog>\r\n      <CustomDialog\r\n        isOpen={isEducationDialogOpen}\r\n        handleClose={handleEducationDialogClose}\r\n        title=\"\"\r\n        showButton={true}\r\n        isFullscreen={false}\r\n        isFullwidth={false}\r\n      >\r\n        <EmpEducations\r\n          setEducationdata={setEducationdata}\r\n          educationdata={educationdata}\r\n          handleDialogClose={handleEducationDialogClose}\r\n        />\r\n      </CustomDialog>\r\n      <CustomDialog\r\n        isOpen={isExperienceDialogOpen}\r\n        handleClose={handleExperienceDialogClose}\r\n        title=\"\"\r\n        showButton={true}\r\n        isFullscreen={false}\r\n        isFullwidth={false}\r\n      >\r\n        <EmpExperiences\r\n          setExperiencedata={setExperiencedata}\r\n          experiencedata={experiencedata}\r\n          handleDialogClose={handleExperienceDialogClose}\r\n        />\r\n      </CustomDialog>\r\n      <CustomDialog\r\n        isOpen={isTrainingDialogOpen}\r\n        handleClose={handleTrainingDialogClose}\r\n        title=\"\"\r\n        showButton={true}\r\n        isFullscreen={false}\r\n        isFullwidth={false}\r\n      >\r\n        <EmpTrainings\r\n          setTrainingdata={setTrainingdata}\r\n          trainingdata={trainingdata}\r\n          handleDialogClose={handleTrainingDialogClose}\r\n        />\r\n      </CustomDialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  form: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nexport default EmployeeViewStaff;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\pages\\ExpensesStaffPage.js",["3741","3742"],"import React, { useEffect } from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n//import { headExpenseTableCells } from \"../utils/constants\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport ExpenseTableStaff from \"../components/ExpenseTableStaff\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ExpensesStaffPage = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n    \r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <div>\r\n                  <ExpenseTableStaff title=\"Expenses Claims\" />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    // height: 240,\r\n    height: \"85vh\",\r\n  },\r\n}));\r\nexport default ExpensesStaffPage;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseTableStaff.js",["3743","3744","3745","3746","3747","3748","3749","3750","3751","3752","3753","3754","3755","3756","3757","3758","3759","3760","3761","3762","3763"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { useExpenses } from \"./expenses/useExpenses\";\r\nimport { useAddExpenses } from \"./expenses/useAddExpenses\";\r\nimport { useDeleteExpenses } from \"./expenses/useDeleteExpenses\";\r\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\r\n\r\nconst initial_form = {\r\n  name: \"\",\r\n  date: \"\",\r\n  purchased_from: \"\",\r\n  description: \"\",\r\n  status: \"Pending\",\r\n  amount: 0,\r\n};\r\n\r\nconst columns = [\r\n  { title: \"Name\", field: \"name\", editable: \"never\" },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n\r\n  {\r\n    title: \"Description\",\r\n    field: \"description\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\", editable: \"never\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function ExpenseTable() {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const [isLoad, setIsLoad] = useState(false);\r\n  const { expenses, filter, setFilter, setExpenseId } = useExpenses();\r\n  const updateExpenses = useUpdateExpenses();\r\n  const addExpenses = useAddExpenses();\r\n  const deleteExpenses = useDeleteExpenses();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [expensesdata, setExpensesdata] = useState([]);\r\n  const [alertSuccess, setAlertSuccess] = useState(false);\r\n  const [formdata, setFormdata] = useState(initial_form);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    //expenses,\r\n    editExpenseID,\r\n    updateExpense,\r\n    addExpense,\r\n    deleteExpense,\r\n    setEditExpenseID,\r\n    setIsExpenseEditingOn,\r\n    setIsExpenseEditingOff,\r\n  } = useExpensesContext();\r\n\r\n  useEffect(() => {\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  const add_Expense = async (data) => {\r\n    // const { id } = data;\r\n    setFormdata(initial_form);\r\n    setFormdata(initial_form);\r\n    setIsExpenseEditingOff();\r\n    handleDialogOpen();\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const update_Expense = async (data) => {\r\n    const { id } = data;\r\n    setFormdata({ ...data });\r\n    setFormdata({ ...data });\r\n    setEditExpenseID(id);\r\n    setIsExpenseEditingOn();\r\n    handleDialogOpen();\r\n\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const delete_Expense = (data) => {\r\n    const { id } = data;\r\n    setEditExpenseID(id);\r\n    handleAlertOpen();\r\n\r\n    // deleteExpense(id);\r\n    // loadExpenses();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editExpenseID;\r\n    deleteExpenses(id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={expenses}\r\n          title=\"Expenses Claims Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         const dataUpdate = [...expensesdata];\r\n          //         const index = oldData.tableData.id;\r\n          //         dataUpdate[index] = newData;\r\n          //         setExpensesdata([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          actions={[\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Expense(rowData);\r\n              },\r\n            }),\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Expense(rowData);\r\n              },\r\n            }),\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Expense(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <ExpenseForm\r\n            formdata={formdata}\r\n            setFormdata={setFormdata}\r\n            handleDialogClose={handleDialogClose}\r\n          />\r\n        </CustomDialog>\r\n\r\n        <AlertDialogBox\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\pages\\LeaveStaffPage.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveTableStaff.js",["3764","3765","3766","3767","3768","3769","3770","3771","3772","3773","3774","3775","3776","3777","3778","3779","3780","3781","3782","3783","3784","3785"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Grid,\r\n  GridItem,\r\n  HStack,\r\n  Select,\r\n  SimpleGrid,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport CustomAlertDialog from \"../helpers/CustomAlertDialog\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeaves } from \"./leaves/useLeaves\";\r\nimport { useAddLeaves } from \"./leaves/useAddLeaves\";\r\nimport { useDeleteLeaves } from \"./leaves/useDeleteLeaves\";\r\nimport { useUpdateLeaves } from \"./leaves/useUpdateLeaves\";\r\nimport { useSingleEmployee } from \"./employees/useSingleEmployee\";\r\n\r\nconst initial_form = {\r\n  name: \"\",\r\n  to_date: \"\",\r\n  from_date: \"\",\r\n  reason: \"\",\r\n  status: \"Pending\",\r\n  no_of_days: 0,\r\n  leave_bal: 0,\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Leave Balance\",\r\n    field: \"leave_bal\",\r\n    type: \"numeric\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"No of Days\",\r\n    field: \"no_of_days\",\r\n    type: \"numeric\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Reason\",\r\n    field: \"reason\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approved\">Approved</MenuItem>\r\n        <MenuItem value=\"Rejected\">Rejected</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\n// const AlertBox = ({ isOpen, onClose, cancelRef, heading, children }) => {\r\n//   return (\r\n//     <AlertDialog\r\n//       isOpen={isOpen}\r\n//       leastDestructiveRef={cancelRef}\r\n//       onClose={onClose}\r\n//     >\r\n//       <AlertDialogOverlay>\r\n//         <AlertDialogContent>\r\n//           <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n//             {heading}\r\n//           </AlertDialogHeader>\r\n\r\n//           <AlertDialogBody>{children}</AlertDialogBody>\r\n\r\n//           <AlertDialogFooter>\r\n//             <Button ref={cancelRef} onClick={onClose}>\r\n//               Cancel\r\n//             </Button>\r\n//             <Button colorScheme=\"red\" onClick={onClose} ml={3}>\r\n//               Delete\r\n//             </Button>\r\n//           </AlertDialogFooter>\r\n//         </AlertDialogContent>\r\n//       </AlertDialogOverlay>\r\n//     </AlertDialog>\r\n//   );\r\n// };\r\n\r\nexport default function LeaveTableStaff() {\r\n  const classes = useStyles();\r\n  const { singleemployee, setSingleEmployeeId } = useSingleEmployee();\r\n  const { leaves, setLeaveYr, setLeaveId } = useLeaves();\r\n  const updateLeaves = useUpdateLeaves();\r\n  const addLeaves = useAddLeaves();\r\n  const deleteLeaves = useDeleteLeaves();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [alertSuccess, setAlertSuccess] = useState(false);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [formdata, setFormdata] = useState(initial_form);\r\n  const [leavestate, setLeaveState] = useState({});\r\n  const [isLoad, setIsLoad] = useState(true);\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    editLeaveID,\r\n    setEditLeaveID,\r\n    setIsLeaveEditingOn,\r\n    setIsLeaveEditingOff,\r\n  } = useLeavesContext();\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [isLeaveYear, setLeaveYear] = useState(true);\r\n  const onClose = () => setIsOpen(false);\r\n  const cancelRef = React.useRef();\r\n  const [selectleaveyear, setSelectLeaveYear] = useState(\"\");\r\n  const currentyear = new Date().getFullYear();\r\n  //const YEAR = new Date().getFullYear();\r\n\r\n  useEffect(() => {\r\n    setSelectLeaveYear(currentyear);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLeaveId(loginLevel.loginUserId);\r\n    setLeaveYr(selectleaveyear ? selectleaveyear : currentyear);\r\n    setIsLoad(false);\r\n  }, [isLoad]);\r\n\r\n  useEffect(() => {\r\n    if (leaves) {\r\n      Calc_Leave();\r\n    }\r\n  }, [JSON.stringify(leaves)]);\r\n\r\n  const Calc_Leave = () => {\r\n    const { leave_bf, leave_entitled, leave_cd } = loginLevel;\r\n    const leaveTaken = leaves.reduce((acc, item) => {\r\n      if (item.status === \"Approved\") {\r\n        return acc + item.no_of_days;\r\n      } else {\r\n        return acc;\r\n      }\r\n    }, 0);\r\n    const leavePending = leaves.reduce((acc, item) => {\r\n      if (item.status === \"Pending\") {\r\n        return acc + item.no_of_days;\r\n      } else {\r\n        return acc;\r\n      }\r\n    }, 0);\r\n    const leaveEntitled = isNaN(leave_entitled) ? 0 : leave_entitled;\r\n    const leaveBf = isNaN(leave_bf) ? 0 : leave_bf;\r\n    const leaveCd = isNaN(leave_cd) ? 0 : leave_cd;\r\n    const leaveTotal = leaveBf + leaveEntitled;\r\n    const bal = leaveBf + leaveEntitled - leaveCd - leaveTaken;\r\n    const rec = {\r\n      leave_bf: leaveBf,\r\n      leave_entitled: leaveEntitled,\r\n      leave_total: leaveTotal,\r\n      leave_cd: leaveCd,\r\n      leave_taken: leaveTaken + leaveCd,\r\n      leave_pending: leavePending,\r\n      leave_bal: bal,\r\n    };\r\n    setLeaveState(rec);\r\n  };\r\n\r\n  const update_Leave = async (data) => {\r\n    const { id } = data;\r\n    setFormdata({ ...data });\r\n    setFormdata({ ...data });\r\n    setEditLeaveID(id);\r\n    setIsLeaveEditingOn();\r\n    handleDialogOpen();\r\n    //history.push(\"/singleleave\");\r\n  };\r\n\r\n  const add_Leave = async (data) => {\r\n    // const { id } = data;\r\n    setEditLeaveID(\"\");\r\n    setFormdata(initial_form);\r\n    setIsLeaveEditingOff();\r\n    handleDialogOpen();\r\n    //history.push(\"/singleleave\");\r\n  };\r\n\r\n  const delete_Leave = (data) => {\r\n    const { id } = data;\r\n    console.log(\"delete leave\", id);\r\n    setEditLeaveID(id);\r\n    setIsAlertOpen(true);\r\n    //handleAlertOpen();\r\n    //deleteLeave(id);\r\n    //loadLeaves();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n\r\n    // if (isLeaveEditing) {\r\n    //   loadEmpLeaves(editEmployeeID);\r\n    // }\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editLeaveID;\r\n    deleteLeaves(id);\r\n  };\r\n\r\n  const UpdateLeaveYear = (e) => {\r\n    setSelectLeaveYear((prev) => (prev = e.target.value));\r\n    setIsLoad(true);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n      <Box>\r\n        <HStack mb={2}>\r\n          <Box>\r\n            <Heading size=\"md\">YEAR: </Heading>\r\n          </Box>\r\n          <Select\r\n            value={selectleaveyear}\r\n            fontSize={20}\r\n            maxWidth={100}\r\n            onChange={(e) => UpdateLeaveYear(e)}\r\n          >\r\n            <option value=\"2021\">2021</option>\r\n            <option value=\"2022\">2022</option>\r\n          </Select>\r\n        </HStack>\r\n      </Box>\r\n      <Box>\r\n        <Grid\r\n          p={1}\r\n          h=\"100px\"\r\n          templateRows=\"repeat(2, 1fr)\"\r\n          templateColumns=\"repeat(12, 1fr)\"\r\n          gap={6}\r\n          border=\"1px solid blue\"\r\n          bg=\"gray.200\"\r\n        >\r\n          <GridItem colSpan={2} align=\"center\">\r\n            <Heading pt={3} size=\"xs\">\r\n              Leave Entitlement\r\n            </Heading>\r\n          </GridItem>\r\n          <GridItem colSpan={2} align=\"center\">\r\n            <Heading pt={3} size=\"xs\">\r\n              Leave Carried Forward\r\n            </Heading>\r\n          </GridItem>\r\n          <GridItem colSpan={2} align=\"center\">\r\n            <Heading pt={3} size=\"xs\">\r\n              Total Leaves Days\r\n            </Heading>\r\n          </GridItem>\r\n          <GridItem colSpan={2} align=\"center\">\r\n            <Heading pt={3} size=\"xs\">\r\n              Leave Taken\r\n            </Heading>\r\n          </GridItem>\r\n          <GridItem colSpan={2} align=\"center\">\r\n            <Heading pt={3} size=\"xs\">\r\n              Leave Pending\r\n            </Heading>\r\n          </GridItem>\r\n          <GridItem colSpan={2} align=\"center\">\r\n            <Heading pt={3} size=\"xs\">\r\n              Balance Leave Days\r\n            </Heading>\r\n          </GridItem>\r\n\r\n          <GridItem colSpan={2} bg=\"white\" align=\"center\">\r\n            <Text fontSize=\"20\">{leavestate.leave_entitled} </Text>\r\n          </GridItem>\r\n          <GridItem colSpan={2} bg=\"white\" align=\"center\">\r\n            <Text fontSize=\"20\">{leavestate.leave_bf}</Text>\r\n          </GridItem>\r\n          <GridItem colSpan={2} bg=\"white\" align=\"center\">\r\n            <Text fontSize=\"20\">{leavestate.leave_total} </Text>\r\n          </GridItem>\r\n          <GridItem colSpan={2} bg=\"white\" align=\"center\">\r\n            <Text fontSize=\"20\">{leavestate.leave_taken}</Text>\r\n          </GridItem>\r\n          <GridItem colSpan={2} bg=\"white\" align=\"center\">\r\n            <Text fontSize=\"20\">{leavestate.leave_pending}</Text>\r\n          </GridItem>\r\n          <GridItem colSpan={2} bg=\"white\" align=\"center\">\r\n            <Text fontSize=\"20\">{leavestate.leave_bal}</Text>\r\n          </GridItem>\r\n        </Grid>\r\n      </Box>\r\n      <Box maxW=\"100%\" pt={5} h={600} overflow=\"scroll\">\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={leaves}\r\n          title=\"Leave Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   isEditable: (rowData) => rowData.status === \"Pending\",\r\n          //   isDeletable: (rowData) => rowData.status === \"Pending\",\r\n          //   onRowAdd: (newData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         add_Leave(newData);\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         update_Leave(newData);\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          //   onRowDelete: (oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         delete_Leave(oldData);\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          actions={[\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Leave(rowData);\r\n              },\r\n            }),\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Leave(rowData);\r\n              },\r\n            }),\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Leave(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            paging: false,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n        >\r\n          <LeaveForm\r\n            formdata={formdata}\r\n            leavestate={leavestate}\r\n            setFormdata={setFormdata}\r\n            handleDialogClose={handleDialogClose}\r\n          />\r\n        </CustomDialog>\r\n\r\n        {/* <CustomAlertDialog\r\n          isOpen={isAlertOpen}\r\n          cancelRef={cancelRef}\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          title=\"DELETE\"\r\n        >\r\n          <Heading size=\"sm\">Are you sure you want to delete ?</Heading>\r\n        </CustomAlertDialog> */}\r\n        <AlertDialogBox\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Leave\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n        {/* <AlertBox\r\n          isOpen={isOpen}\r\n          leastDestructiveRef={cancelRef}\r\n          onClose={() => onClose()}\r\n          heading=\"DELETE\"\r\n        >\r\n          <h2>Are you sure you want to delete?</h2>\r\n        </AlertBox> */}\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\MenuListItemsAdmin.js",["3786","3787","3788","3789","3790"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Text} from \"@chakra-ui/react\"\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport FlightIcon from \"@material-ui/icons/Flight\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport MoneyIcon from \"@material-ui/icons/Money\";\r\n// import Collapse from \"@material-ui/core/Collapse\";\r\n// import ExpandLess from \"@material-ui/icons/ExpandLess\";\r\n// import ExpandMore from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst MenuListItems = () => {\r\n  const classes = useStyles();\r\n  const [openPay, setOpenPay] = useState(false);\r\n  const [openTable, setOpenTable] = useState(false);\r\n\r\n  const handleClickPay = () => {\r\n    setOpenPay(!openPay);\r\n  };\r\n\r\n  const handleClickTable = () => {\r\n    setOpenTable(!openTable);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <ListSubheader align=\"center\" className={classes.itemIcon}>\r\n        <Text color=\"blue\" fontSize=\"21\" fontWeight=\"bold\">\r\n          Admin\r\n        </Text>\r\n      </ListSubheader>\r\n\r\n      <Link to=\"/\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <DashboardIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Dashboard\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/allemployees\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <PeopleIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"All Employees\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/leave\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FlightIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Leave\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <Link to=\"/expenses\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <ShoppingCartIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Expenses\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      <Link to=\"/tables\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <LayersIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Tables\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <Link to=\"/example\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <LayersIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Example\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <ListItem button onClick={handleClickTable}>\r\n        <ListItemIcon className={classes.itemIcon}>\r\n          <LayersIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Tables\" className={classes.item} />\r\n        {openTable ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={openTable} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/clients\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Clients\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/departments\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Departments\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/designation\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Designation\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/allowances\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Allowances\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainHeader: {\r\n    fontSize: 24,\r\n    color: \"primary\",\r\n  },\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: \"primary\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: \"primary\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: \"rgba(255, 255, 255, 0.08)\",\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: \"#232f3e\",\r\n    boxShadow: \"0 -1px 0 #404854 inset\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.orange,\r\n  },\r\n  itemActiveItem: {\r\n    color: \"primary\",\r\n  },\r\n  itemPrimary: {\r\n    fontSize: \"inherit\",\r\n  },\r\n  itemIcon: {\r\n    minWidth: \"auto\",\r\n    marginRight: theme.spacing(2),\r\n    color: \"primary\",\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default MenuListItems;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\HomeAdminManager.js",["3791","3792","3793","3794","3795","3796","3797","3798","3799","3800","3801","3802","3803","3804","3805","3806","3807","3808","3809","3810","3811","3812","3813","3814","3815","3816","3817","3818","3819","3820","3821","3822","3823","3824","3825"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport dayjs from \"dayjs\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Heading,\r\n  HStack,\r\n  Select,\r\n  SimpleGrid,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport CardLayout from \"../helpers/CardLayout\";\r\nimport CardLayout2 from \"../helpers/CardLayout2\";\r\nimport CardLayout4 from \"../helpers/CardLayout4\";\r\nimport Copyright from \"./Copyright\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport BarChart from \"../helpers/BarChart\";\r\nimport BarChartStack from \"../helpers/BarChartStack\";\r\nimport EmployeeTableLeaveView from \"./EmployeeTableLeaveView\";\r\nimport ExpensesTableViewSummary from \"./ExpenseTableViewSummary\";\r\nimport ExpenseSummaryTableView from \"./ExpensesSummaryTableView\";\r\nimport LeavesTableViewSummary from \"./LeavesTableViewSummary\";\r\nimport HocTableViewSummary from \"./HocTableViewSummary\";\r\nimport SummaryTableView from \"../helpers/SummaryTableView\";\r\nimport DailyAllowanceTableViewSummary from \"./DailyAllowancesTableViewSummary\";\r\nimport PayslipTableViewSummary from \"./PayslipTableViewSummary\";\r\nimport PayslipSummaryTableView from \"./PayslipSummaryTableView\";\r\nimport { useExpensesPeriod } from \"./expenses/useExpensesPeriod\";\r\nimport LeavesTableApproval from \"./LeaveTableApproval\";\r\nimport ExportLeave2Excel from \"./ExportLeave2Excel\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst months = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\",\r\n  \"May\",\r\n  \"Jun\",\r\n  \"Jul\",\r\n  \"Aug\",\r\n  \"Sep\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Dec\",\r\n];\r\nconst monthsname = [\r\n  \"jan\",\r\n  \"feb\",\r\n  \"mar\",\r\n  \"apr\",\r\n  \"may\",\r\n  \"jun\",\r\n  \"jul\",\r\n  \"aug\",\r\n  \"sep\",\r\n  \"oct\",\r\n  \"nov\",\r\n  \"dec\",\r\n];\r\n\r\nconst expchartdata = {\r\n  labels: [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ],\r\n  datasets: [\r\n    {\r\n      label: \"Expenses\",\r\n      backgroundColor: \"rgba(75,192,192,1)\",\r\n      borderColor: \"rgba(0,0,0,1)\",\r\n      borderWidth: 2,\r\n      data: [65, 59, 80, 81, 56, 50, 60, 40, 70, 60, 50, 60],\r\n    },\r\n  ],\r\n};\r\n\r\nconst sitechartdata = {\r\n  labels: [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ],\r\n  datasets: [\r\n    {\r\n      label: \"Expenses\",\r\n      backgroundColor: \"rgba(75,192,192,1)\",\r\n      borderColor: \"rgba(0,0,0,1)\",\r\n      borderWidth: 2,\r\n      data: [\r\n        25000, 39000, 20000, 21000, 26000, 20000, 20000, 20000, 22000, 20000,\r\n        25000, 20000,\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nconst paychartdata = {\r\n  labels: [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ],\r\n  datasets: [\r\n    {\r\n      label: \"Expenses\",\r\n      backgroundColor: \"rgba(75,192,192,1)\",\r\n      borderColor: \"rgba(0,0,0,1)\",\r\n      borderWidth: 2,\r\n      data: [\r\n        65000, 59000, 80000, 81000, 56000, 50000, 60000, 70000, 72000, 60000,\r\n        55000, 60000,\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    title: \"January\",\r\n    field: \"jan\",\r\n  },\r\n  {\r\n    title: \"February\",\r\n    field: \"feb\",\r\n  },\r\n  {\r\n    title: \"March\",\r\n    field: \"mar\",\r\n  },\r\n  {\r\n    title: \"April\",\r\n    field: \"apr\",\r\n  },\r\n  {\r\n    title: \"May\",\r\n    field: \"may\",\r\n  },\r\n  {\r\n    title: \"June\",\r\n    field: \"jun\",\r\n  },\r\n  {\r\n    title: \"July\",\r\n    field: \"jul\",\r\n  },\r\n  {\r\n    title: \"August\",\r\n    field: \"aug\",\r\n  },\r\n  {\r\n    title: \"September\",\r\n    field: \"sep\",\r\n  },\r\n  {\r\n    title: \"October\",\r\n    field: \"oct\",\r\n  },\r\n  {\r\n    title: \"November\",\r\n    field: \"nov\",\r\n  },\r\n  {\r\n    title: \"December\",\r\n    field: \"dec\",\r\n  },\r\n];\r\n\r\nconst data = [\r\n  {\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n];\r\n\r\nconst paysummcolumns = [\r\n  {\r\n    title: \"Category\",\r\n    field: \"category\",\r\n  },\r\n  {\r\n    title: \"Jan\",\r\n    field: \"jan\",\r\n  },\r\n  {\r\n    title: \"Feb\",\r\n    field: \"feb\",\r\n  },\r\n  {\r\n    title: \"Mar\",\r\n    field: \"mar\",\r\n  },\r\n  {\r\n    title: \"Apr\",\r\n    field: \"apr\",\r\n  },\r\n  {\r\n    title: \"May\",\r\n    field: \"may\",\r\n  },\r\n  {\r\n    title: \"Jun\",\r\n    field: \"jun\",\r\n  },\r\n  {\r\n    title: \"Jul\",\r\n    field: \"jul\",\r\n  },\r\n  {\r\n    title: \"Aug\",\r\n    field: \"aug\",\r\n  },\r\n  {\r\n    title: \"Sep\",\r\n    field: \"sep\",\r\n  },\r\n  {\r\n    title: \"Oct\",\r\n    field: \"oct\",\r\n  },\r\n  {\r\n    title: \"Nov\",\r\n    field: \"nov\",\r\n  },\r\n  {\r\n    title: \"Dec\",\r\n    field: \"dec\",\r\n  },\r\n];\r\n\r\nconst paysummdata = [\r\n  {\r\n    category: \"Basic Salary\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n  {\r\n    category: \"TAP/SCP\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n  {\r\n    category: \"Site Allowances\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n  {\r\n    category: \"Expenses Claims\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n  {\r\n    category: \"Allowances\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n  {\r\n    category: \"Deductions\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n  {\r\n    category: \"Totals\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n];\r\n\r\nconst initial_expdata = [\r\n  {\r\n    jan: 0,\r\n    feb: 0,\r\n    mar: 0,\r\n    apr: 0,\r\n    may: 0,\r\n    jun: 0,\r\n    jul: 0,\r\n    aug: 0,\r\n    sep: 0,\r\n    oct: 0,\r\n    nov: 0,\r\n    dec: 0,\r\n  },\r\n];\r\n\r\nconst dataset = [\r\n  {\r\n    name: \"Johson\",\r\n    from_date: \"2021-12-01\",\r\n    to_date: \"2021-12-04\",\r\n    no_of_days: 3,\r\n    reason: \"Holiday leave\",\r\n    status: \"Approved\",\r\n  },\r\n  {\r\n    name: \"David\",\r\n    from_date: \"2021-12-15\",\r\n    to_date: \"2021-12-16\",\r\n    no_of_days: 2,\r\n    reason: \"Annual leave\",\r\n    status: \"Approved\",\r\n  },\r\n];\r\n\r\nconst HomeAdminManager = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { expensesperiod, setExpPeriodId } = useExpensesPeriod();\r\n  const [expdata, setExpData] = useState(initial_expdata);\r\n  const [selectleaveyear, setSelectLeaveYear] = useState(\"\");\r\n  const [selectexpenseyear, setSelectExpenseYear] = useState(\"\");\r\n  const [selectsiteallowsyear, setSelectSiteAllowsYear] = useState(\"\");\r\n  const [selectpayrollyear, setSelectPayrollYear] = useState(\"\");\r\n  const [selecthocyear, setSelectHocYear] = useState(\"\");\r\n  const currentyear = new Date().getFullYear();\r\n  const currentmonth = new Date().getMonth();\r\n\r\n  // const Build_ExpData = () => {\r\n  //   const currentmonth = new Date().getMonth();\r\n\r\n  //   for (var i = 1; i <= currentmonth; i++) {\r\n  //     expdata[i] = i;\r\n  //   }\r\n  //   console.log(\"date\", currentyear, currentmonth, expdata);\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   Build_ExpData();\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    setSelectLeaveYear(currentyear);\r\n    setSelectExpenseYear(currentyear);\r\n    setSelectSiteAllowsYear(currentyear);\r\n    setSelectPayrollYear(currentyear);\r\n    setSelectHocYear(currentyear);\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxW=\"full\" mt=\"100\">\r\n      <Box\r\n        //minW=\"100%\"\r\n        padding=\"4\"\r\n        width=\"full\"\r\n        height=\"800\"\r\n        borderColor=\"blue.500\"\r\n        borderWidth=\"1px\"\r\n        borderRadius=\"lg\"\r\n        //overflow=\"scroll\"\r\n      >\r\n        <Tabs>\r\n          <TabList>\r\n            <Tab>Employees</Tab>\r\n            <Tab>Leaves</Tab>\r\n            <Tab>Expenses</Tab>\r\n            <Tab>Site Allowances</Tab>\r\n            <Tab>Payroll</Tab>\r\n            <Tab>HOC History</Tab>\r\n            <Tab>Leaves Approval</Tab>\r\n          </TabList>\r\n\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"full\"\r\n                padding=\"4\"\r\n                width=\"100%\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <SimpleGrid>\r\n                  <Box>\r\n                    <Heading as=\"h2\" size=\"lg\">\r\n                      Employees\r\n                    </Heading>\r\n                  </Box>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Tabs isLazy>\r\n                      {/* <TabList>\r\n                        <Tab>Details</Tab>\r\n                      </TabList> */}\r\n                      <TabPanels>\r\n                        <TabPanel>\r\n                          <EmployeeTableLeaveView />\r\n                        </TabPanel>\r\n                      </TabPanels>\r\n                    </Tabs>\r\n                  </Box>\r\n                  <Divider />\r\n                </SimpleGrid>\r\n              </Box>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"100%\"\r\n                padding=\"4\"\r\n                width=\"full\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <SimpleGrid w=\"168vh\">\r\n                  <HStack>\r\n                    <Box>\r\n                      <Heading as=\"h2\" size=\"lg\">\r\n                        Leaves\r\n                      </Heading>\r\n                    </Box>\r\n                    <Box alignSelf=\"flex-end\">\r\n                      <HStack>\r\n                        <Select\r\n                          value={selectleaveyear}\r\n                          fontSize={20}\r\n                          onChange={(e) => setSelectLeaveYear(e.target.value)}\r\n                        >\r\n                          <option value=\"2021\">2021</option>\r\n                          <option value=\"2022\">2022</option>\r\n                        </Select>\r\n                        {/* <Box size=\"xl\" py={2}>\r\n                          <Text fontSize=\"lg\">\r\n                            <ExportLeave2Excel\r\n                              filename=\"leave\"\r\n                              dataset={dataset}\r\n                              title=\"Leave\"\r\n                            />\r\n                          </Text>\r\n                        </Box> */}\r\n                      </HStack>\r\n                    </Box>\r\n                  </HStack>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Tabs defaultIndex={currentmonth} isLazy>\r\n                      <TabList>\r\n                        {/* <Tab>Chart</Tab>\r\n                          <Tab>Summary</Tab> */}\r\n                        <Tab>January</Tab>\r\n                        <Tab>February</Tab>\r\n                        <Tab>March</Tab>\r\n                        <Tab>April</Tab>\r\n                        <Tab>May</Tab>\r\n                        <Tab>June</Tab>\r\n                        <Tab>July</Tab>\r\n                        <Tab>August</Tab>\r\n                        <Tab>September</Tab>\r\n                        <Tab>October</Tab>\r\n                        <Tab>November</Tab>\r\n                        <Tab>December</Tab>\r\n                      </TabList>\r\n                      <TabPanels>\r\n                        {/* <TabPanel>\r\n                  <BarChart\r\n                    heading=\"Expenses for the Month\"\r\n                    barchartdata={expchartdata}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <SummaryTableView columns={columns} data={data} />\r\n                </TabPanel> */}\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={1}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={2}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={3}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={4}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={5}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={6}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={7}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={8}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={9}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={10}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={11}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={12}\r\n                          />\r\n                        </TabPanel>\r\n                      </TabPanels>\r\n                    </Tabs>\r\n                  </Box>\r\n                  <Divider />\r\n                </SimpleGrid>\r\n              </Box>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"x3\"\r\n                padding=\"4\"\r\n                width=\"100%\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <SimpleGrid w=\"168vh\">\r\n                  <HStack>\r\n                    <Box>\r\n                      <Heading as=\"h2\" size=\"lg\">\r\n                        Expenses Claims\r\n                      </Heading>\r\n                    </Box>\r\n                    <Box alignSelf=\"flex-end\">\r\n                      <HStack>\r\n                        <Select\r\n                          value={selectexpenseyear}\r\n                          fontSize={20}\r\n                          onChange={(e) => setSelectExpenseYear(e.target.value)}\r\n                        >\r\n                          <option value=\"2021\">2021</option>\r\n                          <option value=\"2022\">2022</option>\r\n                        </Select>\r\n                        {/* <Box size=\"xl\" py={2}>\r\n                          <Text fontSize=\"lg\">\r\n                            <ExportLeave2Excel\r\n                              filename=\"leave\"\r\n                              dataset={dataset}\r\n                              title=\"Leave\"\r\n                            />\r\n                          </Text>\r\n                        </Box> */}\r\n                      </HStack>\r\n                    </Box>\r\n                  </HStack>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Tabs defaultIndex={currentmonth} isLazy>\r\n                      <TabList>\r\n                        {/* <Tab>Chart</Tab>\r\n                          <Tab>Summary</Tab> */}\r\n                        <Tab>January</Tab>\r\n                        <Tab>February</Tab>\r\n                        <Tab>March</Tab>\r\n                        <Tab>April</Tab>\r\n                        <Tab>May</Tab>\r\n                        <Tab>June</Tab>\r\n                        <Tab>July</Tab>\r\n                        <Tab>August</Tab>\r\n                        <Tab>September</Tab>\r\n                        <Tab>October</Tab>\r\n                        <Tab>November</Tab>\r\n                        <Tab>December</Tab>\r\n                      </TabList>\r\n                      <TabPanels>\r\n                        {/* <TabPanel>\r\n                  <BarChart\r\n                    heading=\"Expenses for the Month\"\r\n                    barchartdata={expchartdata}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <ExpenseSummaryTableView year={currentyear} />\r\n                </TabPanel> */}\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={1}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={2}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={3}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={4}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={5}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={6}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={7}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={8}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={9}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={10}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={11}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={12}\r\n                          />\r\n                        </TabPanel>\r\n                      </TabPanels>\r\n                    </Tabs>\r\n                  </Box>\r\n                  <Divider />\r\n                </SimpleGrid>\r\n              </Box>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"x3\"\r\n                padding=\"4\"\r\n                width=\"100%\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <SimpleGrid w=\"168vh\">\r\n                  <HStack>\r\n                    <Box>\r\n                      <Heading as=\"h2\" size=\"lg\">\r\n                        Site Allowances\r\n                      </Heading>\r\n                    </Box>\r\n                    <Box alignSelf=\"flex-end\">\r\n                      <HStack>\r\n                        <Select\r\n                          value={selectsiteallowsyear}\r\n                          fontSize={20}\r\n                          onChange={(e) =>\r\n                            setSelectSiteAllowsYear(e.target.value)\r\n                          }\r\n                        >\r\n                          <option value=\"2021\">2021</option>\r\n                          <option value=\"2022\">2022</option>\r\n                        </Select>\r\n                        {/* <Box size=\"xl\" py={2}>\r\n                          <Text fontSize=\"lg\">\r\n                            <ExportLeave2Excel\r\n                              filename=\"leave\"\r\n                              dataset={dataset}\r\n                              title=\"Leave\"\r\n                            />\r\n                          </Text>\r\n                        </Box> */}\r\n                      </HStack>\r\n                    </Box>\r\n                  </HStack>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Tabs defaultIndex={currentmonth} isLazy>\r\n                      <TabList>\r\n                        {/* <Tab>Chart</Tab>\r\n                <Tab>Summary</Tab> */}\r\n                        <Tab>January</Tab>\r\n                        <Tab>February</Tab>\r\n                        <Tab>March</Tab>\r\n                        <Tab>April</Tab>\r\n                        <Tab>May</Tab>\r\n                        <Tab>June</Tab>\r\n                        <Tab>July</Tab>\r\n                        <Tab>August</Tab>\r\n                        <Tab>September</Tab>\r\n                        <Tab>October</Tab>\r\n                        <Tab>November</Tab>\r\n                        <Tab>December</Tab>\r\n                      </TabList>\r\n                      <TabPanels>\r\n                        {/* <TabPanel>\r\n                  <BarChart\r\n                    heading=\"Site Allowances for the Month\"\r\n                    barchartdata={paychartdata}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <SummaryTableView columns={columns} data={data} />\r\n                </TabPanel> */}\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"01\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"02\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"03\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"04\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"05\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"06\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"07\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"08\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"09\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"10\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"11\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"12\"\r\n                          />\r\n                        </TabPanel>\r\n                      </TabPanels>\r\n                    </Tabs>\r\n                  </Box>\r\n                  <Divider />\r\n                </SimpleGrid>\r\n              </Box>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"x3\"\r\n                padding=\"4\"\r\n                width=\"100%\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <SimpleGrid>\r\n                  <Box>\r\n                    <Heading as=\"h2\" size=\"lg\">\r\n                      Payroll\r\n                    </Heading>\r\n                  </Box>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Tabs isLazy>\r\n                      <TabList>\r\n                        {/* <Tab>Chart</Tab>\r\n                <Tab>Summary</Tab> */}\r\n                        <Tab>Approved</Tab>\r\n                        <Tab>Verified</Tab>\r\n                        <Tab>Pending</Tab>\r\n                        <Tab>Rejected</Tab>\r\n                      </TabList>\r\n                      <TabPanels>\r\n                        {/* <TabPanel>\r\n                  <BarChart\r\n                    heading=\"Payroll for the Month\"\r\n                    barchartdata={paychartdata}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <PayslipSummaryTableView year={currentyear} status=\"Approved\" />\r\n                </TabPanel> */}\r\n                        <TabPanel>\r\n                          <PayslipTableViewSummary status=\"Approved\" />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <PayslipTableViewSummary status=\"Verified\" />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <PayslipTableViewSummary status=\"Pending\" />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <PayslipTableViewSummary status=\"Rejected\" />\r\n                        </TabPanel>\r\n                      </TabPanels>\r\n                    </Tabs>\r\n                  </Box>\r\n                  <Divider />\r\n                </SimpleGrid>\r\n              </Box>\r\n            </TabPanel>\r\n\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"100%\"\r\n                padding=\"4\"\r\n                width=\"full\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <SimpleGrid w=\"168vh\">\r\n                  <HStack>\r\n                    <Box>\r\n                      <Heading as=\"h2\" size=\"lg\">\r\n                        HOC History\r\n                      </Heading>\r\n                    </Box>\r\n                    <Box alignSelf=\"flex-end\">\r\n                      <HStack>\r\n                        <Select\r\n                          value={selecthocyear}\r\n                          fontSize={20}\r\n                          onChange={(e) => setSelectHocYear(e.target.value)}\r\n                        >\r\n                          <option value=\"2021\">2021</option>\r\n                          <option value=\"2022\">2022</option>\r\n                        </Select>\r\n                        {/* <Box size=\"xl\" py={2}>\r\n                          <Text fontSize=\"lg\">\r\n                            <ExportLeave2Excel\r\n                              filename=\"leave\"\r\n                              dataset={dataset}\r\n                              title=\"Leave\"\r\n                            />\r\n                          </Text>\r\n                        </Box> */}\r\n                      </HStack>\r\n                    </Box>\r\n                  </HStack>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Tabs defaultIndex={currentmonth} isLazy>\r\n                      <TabList>\r\n                        {/* <Tab>Chart</Tab>\r\n                          <Tab>Summary</Tab> */}\r\n                        <Tab>January</Tab>\r\n                        <Tab>February</Tab>\r\n                        <Tab>March</Tab>\r\n                        <Tab>April</Tab>\r\n                        <Tab>May</Tab>\r\n                        <Tab>June</Tab>\r\n                        <Tab>July</Tab>\r\n                        <Tab>August</Tab>\r\n                        <Tab>September</Tab>\r\n                        <Tab>October</Tab>\r\n                        <Tab>November</Tab>\r\n                        <Tab>December</Tab>\r\n                      </TabList>\r\n                      <TabPanels>\r\n                        {/* <TabPanel>\r\n                  <BarChart\r\n                    heading=\"Expenses for the Month\"\r\n                    barchartdata={expchartdata}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <SummaryTableView columns={columns} data={data} />\r\n                </TabPanel> */}\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={1}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={2}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={3}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={4}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={5}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary year={currentyear} month={6} />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={7}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={8}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={9}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={10}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={11}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={12}\r\n                          />\r\n                        </TabPanel>\r\n                      </TabPanels>\r\n                    </Tabs>\r\n                  </Box>\r\n                  <Divider />\r\n                </SimpleGrid>\r\n              </Box>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"full\"\r\n                padding=\"4\"\r\n                width=\"100%\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <LeavesTableApproval />\r\n              </Box>\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default HomeAdminManager;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\HomeManager.js",["3826","3827","3828","3829","3830","3831","3832","3833","3834","3835","3836","3837","3838","3839","3840","3841","3842","3843","3844","3845","3846","3847","3848","3849","3850","3851","3852","3853","3854","3855","3856","3857","3858"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport dayjs from \"dayjs\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Divider,\r\n  Flex,\r\n  Grid,\r\n  Heading,\r\n  HStack,\r\n  SimpleGrid,\r\n  Select,\r\n  Stack,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n} from \"@chakra-ui/react\";\r\nimport CardLayout from \"../helpers/CardLayout\";\r\nimport CardLayout2 from \"../helpers/CardLayout2\";\r\nimport CardLayout4 from \"../helpers/CardLayout4\";\r\nimport Copyright from \"./Copyright\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport BarChart from \"../helpers/BarChart\";\r\nimport BarChartStack from \"../helpers/BarChartStack\";\r\n\r\nimport EmployeeTableLeaveView from \"./EmployeeTableLeaveView\";\r\nimport ExpensesTableViewSummary from \"./ExpenseTableViewSummary\";\r\nimport ExpenseSummaryTableView from \"./ExpensesSummaryTableView\";\r\nimport LeavesTableViewSummary from \"./LeavesTableViewSummary\";\r\nimport HocTableViewSummary from \"./HocTableViewSummary\";\r\nimport SummaryTableView from \"../helpers/SummaryTableView\";\r\nimport DailyAllowanceTableViewSummary from \"./DailyAllowancesTableViewSummary\";\r\nimport PayslipTableViewSummary from \"./PayslipTableViewSummary\";\r\nimport PayslipSummaryTableView from \"./PayslipSummaryTableView\";\r\nimport { useExpensesPeriod } from \"./expenses/useExpensesPeriod\";\r\n\r\n// const LeavesTableViewSummary = React.lazy(() =>\r\n//   import(\"./LeavesTableViewSummary\")\r\n// );\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst months = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\",\r\n  \"May\",\r\n  \"Jun\",\r\n  \"Jul\",\r\n  \"Aug\",\r\n  \"Sep\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Dec\",\r\n];\r\nconst monthsname = [\r\n  \"jan\",\r\n  \"feb\",\r\n  \"mar\",\r\n  \"apr\",\r\n  \"may\",\r\n  \"jun\",\r\n  \"jul\",\r\n  \"aug\",\r\n  \"sep\",\r\n  \"oct\",\r\n  \"nov\",\r\n  \"dec\",\r\n];\r\n\r\nconst expchartdata = {\r\n  labels: [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ],\r\n  datasets: [\r\n    {\r\n      label: \"Expenses\",\r\n      backgroundColor: \"rgba(75,192,192,1)\",\r\n      borderColor: \"rgba(0,0,0,1)\",\r\n      borderWidth: 2,\r\n      data: [65, 59, 80, 81, 56, 50, 60, 40, 70, 60, 50, 60],\r\n    },\r\n  ],\r\n};\r\n\r\nconst sitechartdata = {\r\n  labels: [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ],\r\n  datasets: [\r\n    {\r\n      label: \"Expenses\",\r\n      backgroundColor: \"rgba(75,192,192,1)\",\r\n      borderColor: \"rgba(0,0,0,1)\",\r\n      borderWidth: 2,\r\n      data: [\r\n        25000, 39000, 20000, 21000, 26000, 20000, 20000, 20000, 22000, 20000,\r\n        25000, 20000,\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nconst paychartdata = {\r\n  labels: [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ],\r\n  datasets: [\r\n    {\r\n      label: \"Expenses\",\r\n      backgroundColor: \"rgba(75,192,192,1)\",\r\n      borderColor: \"rgba(0,0,0,1)\",\r\n      borderWidth: 2,\r\n      data: [\r\n        65000, 59000, 80000, 81000, 56000, 50000, 60000, 70000, 72000, 60000,\r\n        55000, 60000,\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    title: \"January\",\r\n    field: \"jan\",\r\n  },\r\n  {\r\n    title: \"February\",\r\n    field: \"feb\",\r\n  },\r\n  {\r\n    title: \"March\",\r\n    field: \"mar\",\r\n  },\r\n  {\r\n    title: \"April\",\r\n    field: \"apr\",\r\n  },\r\n  {\r\n    title: \"May\",\r\n    field: \"may\",\r\n  },\r\n  {\r\n    title: \"June\",\r\n    field: \"jun\",\r\n  },\r\n  {\r\n    title: \"July\",\r\n    field: \"jul\",\r\n  },\r\n  {\r\n    title: \"August\",\r\n    field: \"aug\",\r\n  },\r\n  {\r\n    title: \"September\",\r\n    field: \"sep\",\r\n  },\r\n  {\r\n    title: \"October\",\r\n    field: \"oct\",\r\n  },\r\n  {\r\n    title: \"November\",\r\n    field: \"nov\",\r\n  },\r\n  {\r\n    title: \"December\",\r\n    field: \"dec\",\r\n  },\r\n];\r\n\r\nconst data = [\r\n  {\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n];\r\n\r\nconst paysummcolumns = [\r\n  {\r\n    title: \"Category\",\r\n    field: \"category\",\r\n  },\r\n  {\r\n    title: \"Jan\",\r\n    field: \"jan\",\r\n  },\r\n  {\r\n    title: \"Feb\",\r\n    field: \"feb\",\r\n  },\r\n  {\r\n    title: \"Mar\",\r\n    field: \"mar\",\r\n  },\r\n  {\r\n    title: \"Apr\",\r\n    field: \"apr\",\r\n  },\r\n  {\r\n    title: \"May\",\r\n    field: \"may\",\r\n  },\r\n  {\r\n    title: \"Jun\",\r\n    field: \"jun\",\r\n  },\r\n  {\r\n    title: \"Jul\",\r\n    field: \"jul\",\r\n  },\r\n  {\r\n    title: \"Aug\",\r\n    field: \"aug\",\r\n  },\r\n  {\r\n    title: \"Sep\",\r\n    field: \"sep\",\r\n  },\r\n  {\r\n    title: \"Oct\",\r\n    field: \"oct\",\r\n  },\r\n  {\r\n    title: \"Nov\",\r\n    field: \"nov\",\r\n  },\r\n  {\r\n    title: \"Dec\",\r\n    field: \"dec\",\r\n  },\r\n];\r\n\r\nconst paysummdata = [\r\n  {\r\n    category: \"Basic Salary\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n  {\r\n    category: \"TAP/SCP\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n  {\r\n    category: \"Site Allowances\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n  {\r\n    category: \"Expenses Claims\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n  {\r\n    category: \"Allowances\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n  {\r\n    category: \"Deductions\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n  {\r\n    category: \"Totals\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n];\r\n\r\nconst initial_expdata = [\r\n  {\r\n    jan: 0,\r\n    feb: 0,\r\n    mar: 0,\r\n    apr: 0,\r\n    may: 0,\r\n    jun: 0,\r\n    jul: 0,\r\n    aug: 0,\r\n    sep: 0,\r\n    oct: 0,\r\n    nov: 0,\r\n    dec: 0,\r\n  },\r\n];\r\n\r\nconst HomeManager = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { expensesperiod, setExpPeriodId } = useExpensesPeriod();\r\n  const [expdata, setExpData] = useState(initial_expdata);\r\n   const [selectleaveyear, setSelectLeaveYear] = useState(\"\");\r\n   const [selectexpenseyear, setSelectExpenseYear] = useState(\"\");\r\n   const [selectsiteallowsyear, setSelectSiteAllowsYear] = useState(\"\");\r\n   const [selectpayrollyear, setSelectPayrollYear] = useState(\"\");\r\n   const [selecthocyear, setSelectHocYear] = useState(\"\");\r\n  const currentyear = new Date().getFullYear();\r\n  const currentmonth = new Date().getMonth();\r\n\r\n  // const Build_ExpData = () => {\r\n  //   const currentmonth = new Date().getMonth();\r\n\r\n  //   for (var i = 1; i <= currentmonth; i++) {\r\n  //     expdata[i] = i;\r\n  //   }\r\n  //   console.log(\"date\", currentyear, currentmonth, expdata);\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   Build_ExpData();\r\n  // }, []);\r\n\r\n   useEffect(() => {\r\n     setSelectLeaveYear(currentyear);\r\n     setSelectExpenseYear(currentyear);\r\n     setSelectSiteAllowsYear(currentyear);\r\n     setSelectPayrollYear(currentyear);\r\n     setSelectHocYear(currentyear);\r\n   }, []);\r\n  \r\n  return (\r\n    // <div>\r\n    //   <div className={classes.appBarSpacer} />\r\n    //   <div style={{ paddingLeft: 50 }}>\r\n    //     <h2>Welcome {loginLevel.loginUser}!</h2>\r\n    //     <h3>Dashboard</h3>\r\n    //   </div>\r\n    <Container maxW=\"full\" mt=\"100\">\r\n      <Box\r\n        //minW=\"100%\"\r\n        padding=\"4\"\r\n        width=\"full\"\r\n        height=\"800\"\r\n        borderColor=\"blue.500\"\r\n        borderWidth=\"1px\"\r\n        borderRadius=\"lg\"\r\n        //overflow=\"scroll\"\r\n      >\r\n        <Tabs>\r\n          <TabList>\r\n            <Tab>Employees</Tab>\r\n            <Tab>Leaves</Tab>\r\n            <Tab>Expenses</Tab>\r\n            <Tab>Site Allowances</Tab>\r\n            <Tab>Payroll</Tab>\r\n            <Tab>HOC History</Tab>\r\n          </TabList>\r\n\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"full\"\r\n                padding=\"4\"\r\n                width=\"100%\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <SimpleGrid>\r\n                  <Box>\r\n                    <Heading as=\"h2\" size=\"lg\">\r\n                      Employees\r\n                    </Heading>\r\n                  </Box>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Tabs isLazy>\r\n                      {/* <TabList>\r\n                        <Tab>Details</Tab>\r\n                      </TabList> */}\r\n                      <TabPanels>\r\n                        <TabPanel>\r\n                          <EmployeeTableLeaveView />\r\n                        </TabPanel>\r\n                      </TabPanels>\r\n                    </Tabs>\r\n                  </Box>\r\n                  <Divider />\r\n                </SimpleGrid>\r\n              </Box>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"100%\"\r\n                padding=\"4\"\r\n                width=\"full\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <SimpleGrid w=\"168vh\">\r\n                  <HStack>\r\n                    <Box>\r\n                      <Heading as=\"h2\" size=\"lg\">\r\n                        Leaves\r\n                      </Heading>\r\n                    </Box>\r\n                    <Box alignSelf=\"flex-end\">\r\n                      <HStack>\r\n                        <Select\r\n                          value={selectleaveyear}\r\n                          fontSize={20}\r\n                          onChange={(e) => setSelectLeaveYear(e.target.value)}\r\n                        >\r\n                          <option value=\"2021\">2021</option>\r\n                          <option value=\"2022\">2022</option>\r\n                        </Select>\r\n                        {/* <Box size=\"xl\" py={2}>\r\n                          <Text fontSize=\"lg\">\r\n                            <ExportLeave2Excel\r\n                              filename=\"leave\"\r\n                              dataset={dataset}\r\n                              title=\"Leave\"\r\n                            />\r\n                          </Text>\r\n                        </Box> */}\r\n                      </HStack>\r\n                    </Box>\r\n                  </HStack>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Tabs defaultIndex={currentmonth} isLazy>\r\n                      <TabList>\r\n                        {/* <Tab>Chart</Tab>\r\n                          <Tab>Summary</Tab> */}\r\n                        <Tab>January</Tab>\r\n                        <Tab>February</Tab>\r\n                        <Tab>March</Tab>\r\n                        <Tab>April</Tab>\r\n                        <Tab>May</Tab>\r\n                        <Tab>June</Tab>\r\n                        <Tab>July</Tab>\r\n                        <Tab>August</Tab>\r\n                        <Tab>September</Tab>\r\n                        <Tab>October</Tab>\r\n                        <Tab>November</Tab>\r\n                        <Tab>December</Tab>\r\n                      </TabList>\r\n                      <TabPanels>\r\n                        {/* <TabPanel>\r\n                  <BarChart\r\n                    heading=\"Expenses for the Month\"\r\n                    barchartdata={expchartdata}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <SummaryTableView columns={columns} data={data} />\r\n                </TabPanel> */}\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={1}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={2}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={3}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={4}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={5}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={6}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={7}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={8}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={9}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={10}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={11}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={12}\r\n                          />\r\n                        </TabPanel>\r\n                      </TabPanels>\r\n                    </Tabs>\r\n                  </Box>\r\n                  <Divider />\r\n                </SimpleGrid>\r\n              </Box>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"x3\"\r\n                padding=\"4\"\r\n                width=\"100%\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <SimpleGrid w=\"168vh\">\r\n                  <HStack>\r\n                    <Box>\r\n                      <Heading as=\"h2\" size=\"lg\">\r\n                        Expenses Claims\r\n                      </Heading>\r\n                    </Box>\r\n                    <Box alignSelf=\"flex-end\">\r\n                      <HStack>\r\n                        <Select\r\n                          value={selectexpenseyear}\r\n                          fontSize={20}\r\n                          onChange={(e) => setSelectExpenseYear(e.target.value)}\r\n                        >\r\n                          <option value=\"2021\">2021</option>\r\n                          <option value=\"2022\">2022</option>\r\n                        </Select>\r\n                        {/* <Box size=\"xl\" py={2}>\r\n                          <Text fontSize=\"lg\">\r\n                            <ExportLeave2Excel\r\n                              filename=\"leave\"\r\n                              dataset={dataset}\r\n                              title=\"Leave\"\r\n                            />\r\n                          </Text>\r\n                        </Box> */}\r\n                      </HStack>\r\n                    </Box>\r\n                  </HStack>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Tabs defaultIndex={currentmonth} isLazy>\r\n                      <TabList>\r\n                        {/* <Tab>Chart</Tab>\r\n                          <Tab>Summary</Tab> */}\r\n                        <Tab>January</Tab>\r\n                        <Tab>February</Tab>\r\n                        <Tab>March</Tab>\r\n                        <Tab>April</Tab>\r\n                        <Tab>May</Tab>\r\n                        <Tab>June</Tab>\r\n                        <Tab>July</Tab>\r\n                        <Tab>August</Tab>\r\n                        <Tab>September</Tab>\r\n                        <Tab>October</Tab>\r\n                        <Tab>November</Tab>\r\n                        <Tab>December</Tab>\r\n                      </TabList>\r\n                      <TabPanels>\r\n                        {/* <TabPanel>\r\n                  <BarChart\r\n                    heading=\"Expenses for the Month\"\r\n                    barchartdata={expchartdata}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <ExpenseSummaryTableView year={currentyear} />\r\n                </TabPanel> */}\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={1}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={2}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={3}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={4}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={5}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={6}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={7}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={8}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={9}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={10}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={11}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={12}\r\n                          />\r\n                        </TabPanel>\r\n                      </TabPanels>\r\n                    </Tabs>\r\n                  </Box>\r\n                  <Divider />\r\n                </SimpleGrid>\r\n              </Box>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"x3\"\r\n                padding=\"4\"\r\n                width=\"100%\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <SimpleGrid w=\"168vh\">\r\n                  <HStack>\r\n                    <Box>\r\n                      <Heading as=\"h2\" size=\"lg\">\r\n                        Site Allowances\r\n                      </Heading>\r\n                    </Box>\r\n                    <Box alignSelf=\"flex-end\">\r\n                      <HStack>\r\n                        <Select\r\n                          value={selectsiteallowsyear}\r\n                          fontSize={20}\r\n                          onChange={(e) =>\r\n                            setSelectSiteAllowsYear(e.target.value)\r\n                          }\r\n                        >\r\n                          <option value=\"2021\">2021</option>\r\n                          <option value=\"2022\">2022</option>\r\n                        </Select>\r\n                        {/* <Box size=\"xl\" py={2}>\r\n                          <Text fontSize=\"lg\">\r\n                            <ExportLeave2Excel\r\n                              filename=\"leave\"\r\n                              dataset={dataset}\r\n                              title=\"Leave\"\r\n                            />\r\n                          </Text>\r\n                        </Box> */}\r\n                      </HStack>\r\n                    </Box>\r\n                  </HStack>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Tabs defaultIndex={currentmonth} isLazy>\r\n                      <TabList>\r\n                        {/* <Tab>Chart</Tab>\r\n                <Tab>Summary</Tab> */}\r\n                        <Tab>January</Tab>\r\n                        <Tab>February</Tab>\r\n                        <Tab>March</Tab>\r\n                        <Tab>April</Tab>\r\n                        <Tab>May</Tab>\r\n                        <Tab>June</Tab>\r\n                        <Tab>July</Tab>\r\n                        <Tab>August</Tab>\r\n                        <Tab>September</Tab>\r\n                        <Tab>October</Tab>\r\n                        <Tab>November</Tab>\r\n                        <Tab>December</Tab>\r\n                      </TabList>\r\n                      <TabPanels>\r\n                        {/* <TabPanel>\r\n                  <BarChart\r\n                    heading=\"Site Allowances for the Month\"\r\n                    barchartdata={paychartdata}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <SummaryTableView columns={columns} data={data} />\r\n                </TabPanel> */}\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"01\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"02\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"03\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"04\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"05\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"06\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"07\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"08\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"09\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"10\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"11\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"12\"\r\n                          />\r\n                        </TabPanel>\r\n                      </TabPanels>\r\n                    </Tabs>\r\n                  </Box>\r\n                  <Divider />\r\n                </SimpleGrid>\r\n              </Box>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"x3\"\r\n                padding=\"4\"\r\n                width=\"100%\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <SimpleGrid>\r\n                  <Box>\r\n                    <Heading as=\"h2\" size=\"lg\">\r\n                      Payroll\r\n                    </Heading>\r\n                  </Box>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Tabs isLazy>\r\n                      <TabList>\r\n                        {/* <Tab>Chart</Tab>\r\n                <Tab>Summary</Tab> */}\r\n                        <Tab>Approved</Tab>\r\n                        <Tab>Verified</Tab>\r\n                        <Tab>Pending</Tab>\r\n                        <Tab>Rejected</Tab>\r\n                      </TabList>\r\n                      <TabPanels>\r\n                        {/* <TabPanel>\r\n                  <BarChart\r\n                    heading=\"Payroll for the Month\"\r\n                    barchartdata={paychartdata}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <PayslipSummaryTableView year={currentyear} status=\"Approved\" />\r\n                </TabPanel> */}\r\n                        <TabPanel>\r\n                          <PayslipTableViewSummary status=\"Approved\" />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <PayslipTableViewSummary status=\"Verified\" />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <PayslipTableViewSummary status=\"Pending\" />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <PayslipTableViewSummary status=\"Rejected\" />\r\n                        </TabPanel>\r\n                      </TabPanels>\r\n                    </Tabs>\r\n                  </Box>\r\n                  <Divider />\r\n                </SimpleGrid>\r\n              </Box>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"100%\"\r\n                padding=\"4\"\r\n                width=\"full\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <SimpleGrid w=\"168vh\">\r\n                  <HStack>\r\n                    <Box>\r\n                      <Heading as=\"h2\" size=\"lg\">\r\n                        HOC History\r\n                      </Heading>\r\n                    </Box>\r\n                    <Box alignSelf=\"flex-end\">\r\n                      <HStack>\r\n                        <Select\r\n                          value={selecthocyear}\r\n                          fontSize={20}\r\n                          onChange={(e) => setSelectHocYear(e.target.value)}\r\n                        >\r\n                          <option value=\"2021\">2021</option>\r\n                          <option value=\"2022\">2022</option>\r\n                        </Select>\r\n                        {/* <Box size=\"xl\" py={2}>\r\n                          <Text fontSize=\"lg\">\r\n                            <ExportLeave2Excel\r\n                              filename=\"leave\"\r\n                              dataset={dataset}\r\n                              title=\"Leave\"\r\n                            />\r\n                          </Text>\r\n                        </Box> */}\r\n                      </HStack>\r\n                    </Box>\r\n                  </HStack>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Tabs defaultIndex={currentmonth} isLazy>\r\n                      <TabList>\r\n                        {/* <Tab>Chart</Tab>\r\n                          <Tab>Summary</Tab> */}\r\n                        <Tab>January</Tab>\r\n                        <Tab>February</Tab>\r\n                        <Tab>March</Tab>\r\n                        <Tab>April</Tab>\r\n                        <Tab>May</Tab>\r\n                        <Tab>June</Tab>\r\n                        <Tab>July</Tab>\r\n                        <Tab>August</Tab>\r\n                        <Tab>September</Tab>\r\n                        <Tab>October</Tab>\r\n                        <Tab>November</Tab>\r\n                        <Tab>December</Tab>\r\n                      </TabList>\r\n                      <TabPanels>\r\n                        {/* <TabPanel>\r\n                  <BarChart\r\n                    heading=\"Expenses for the Month\"\r\n                    barchartdata={expchartdata}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <SummaryTableView columns={columns} data={data} />\r\n                </TabPanel> */}\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={1}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={2}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={3}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={4}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={5}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={6}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={7}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={8}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={9}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={10}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={11}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={12}\r\n                          />\r\n                        </TabPanel>\r\n                      </TabPanels>\r\n                    </Tabs>\r\n                  </Box>\r\n                  <Divider />\r\n                </SimpleGrid>\r\n              </Box>\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n    </Container>\r\n    // </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default HomeManager;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\MenuListItemsAdminManager.js",["3859","3860","3861","3862","3863","3864"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListSubheader,\r\n  Collapse,\r\n} from \"@material-ui/core\";\r\nimport { Box, HStack, Text } from \"@chakra-ui/react\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport FlightIcon from \"@material-ui/icons/Flight\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport MoneyIcon from \"@material-ui/icons/Money\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst MenuListItems = () => {\r\n  const classes = useStyles();\r\n  const [openPay, setOpenPay] = useState(false);\r\n  const [openTable, setOpenTable] = useState(false);\r\n\r\n  const handleClickPay = () => {\r\n    setOpenPay(!openPay);\r\n  };\r\n\r\n  const handleClickTable = () => {\r\n    setOpenTable(!openTable);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <ListSubheader align=\"center\" className={classes.itemIcon}>\r\n        <Text color=\"blue\" fontSize=\"21\" fontWeight=\"bold\">\r\n          Admin Manager\r\n        </Text>\r\n      </ListSubheader>\r\n\r\n      <Link to=\"/\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <DashboardIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Dashboard\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/allemployees\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <PeopleIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"All Employees\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <Link to=\"/leave\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FlightIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Leave\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n      {/* <Link to=\"/payrun\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MonetizationOnIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Payrun\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      <ListItem button onClick={handleClickPay}>\r\n        <ListItemIcon className={classes.itemIcon}>\r\n          <MonetizationOnIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Payroll\" className={classes.item} />\r\n        {openPay ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n\r\n      <Collapse in={openPay} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/payrun\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Payroll Run\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/payslip\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Payslip\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse>\r\n\r\n      {/* <Link to=\"/expenses\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <ShoppingCartIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Expenses\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <Link to=\"/dailyallowances\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MoneyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Site Allowances\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n      <Link to=\"/tables\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <LayersIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Tables\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <ListItem button onClick={handleClickTable}>\r\n        <ListItemIcon className={classes.itemIcon}>\r\n          <LayersIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Tables\" className={classes.item} />\r\n        {openTable ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={openTable} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/clients\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Clients\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/departments\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Departments\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/designation\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Designation\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/allowances\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Allowances\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainHeader: {\r\n    fontSize: 20,\r\n    color: \"primary\",\r\n    //alignItems: \"left\",\r\n    //alignContent: \"left\",\r\n  },\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: \"primary\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: \"primary\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: \"rgba(255, 255, 255, 0.08)\",\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: \"#232f3e\",\r\n    boxShadow: \"0 -1px 0 #404854 inset\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.orange,\r\n  },\r\n  itemActiveItem: {\r\n    color: \"primary\",\r\n  },\r\n  itemPrimary: {\r\n    fontSize: \"inherit\",\r\n  },\r\n  itemIcon: {\r\n    minWidth: \"auto\",\r\n    marginRight: theme.spacing(2),\r\n    color: \"primary\",\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default MenuListItems;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\MenuListItemsManager.js",["3865","3866","3867","3868"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListSubheader,\r\n  Collapse,\r\n} from \"@material-ui/core\";\r\nimport { Text} from \"@chakra-ui/react\"\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport FlightIcon from \"@material-ui/icons/Flight\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport MoneyIcon from \"@material-ui/icons/Money\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport { MdCheckCircle } from \"react-icons/md\";\r\nimport { AiFillSetting} from \"react-icons/ai\"\r\n\r\nconst MenuListItems = () => {\r\n  const classes = useStyles();\r\n  const [openPay, setOpenPay] = useState(false);\r\n  const [openTable, setOpenTable] = useState(false);\r\n\r\n  const handleClickPay = () => {\r\n    setOpenPay(!openPay);\r\n  };\r\n\r\n  const handleClickTable = () => {\r\n    setOpenTable(!openTable);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <ListSubheader align=\"center\" className={classes.itemIcon}>\r\n        <Text color=\"blue\" fontSize=\"21\" fontWeight=\"bold\">\r\n          Manager\r\n        </Text>\r\n      </ListSubheader>\r\n\r\n      <Link to=\"/\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <DashboardIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Dashboard\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/allemployees\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <PeopleIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"All Employees\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/approval\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MdCheckCircle size=\"20\" />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Approval\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <Link to=\"/example\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FlightIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Example\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <Link to=\"/expenses\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <ShoppingCartIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Expenses\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <Link to=\"/payrun\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MonetizationOnIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Payrun\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n      <ListItem button onClick={handleClickPay}>\r\n        <ListItemIcon className={classes.itemIcon}>\r\n          <MonetizationOnIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Payroll\" className={classes.item} />\r\n        {openPay ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n\r\n      <Collapse in={openPay} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/payrun\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Payroll Run\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/payslip\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Payslip\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse>\r\n\r\n      <Link to=\"/useraccess\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <AiFillSetting size=\"20\" />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"User Access Settings\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <Link to=\"/dailyallowances\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MoneyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Site Allowances\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n      <Link to=\"/tables\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <LayersIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Tables\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <ListItem button onClick={handleClickTable}>\r\n        <ListItemIcon className={classes.itemIcon}>\r\n          <LayersIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Tables\" className={classes.item} />\r\n        {openTable ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={openTable} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/clients\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Clients\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/departments\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Departments\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/designation\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Designation\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/allowances\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Allowances\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainHeader: {\r\n    fontSize: 24,\r\n    color: \"primary\",\r\n  },\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: \"primary\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: \"primary\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: \"rgba(255, 255, 255, 0.08)\",\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: \"#232f3e\",\r\n    boxShadow: \"0 -1px 0 #404854 inset\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.orange,\r\n  },\r\n  itemActiveItem: {\r\n    color: \"primary\",\r\n  },\r\n  itemPrimary: {\r\n    fontSize: \"inherit\",\r\n  },\r\n  itemIcon: {\r\n    minWidth: \"auto\",\r\n    marginRight: theme.spacing(2),\r\n    color: \"primary\",\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default MenuListItems;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\pages\\DailyAllowancesStaffPage.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesTableStaff.js",["3869","3870","3871","3872","3873","3874","3875","3876","3877","3878","3879","3880","3881","3882","3883","3884","3885","3886","3887","3888","3889","3890","3891","3892","3893"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Icon, Button, MenuItem } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useSetRecoilState, useRecoilValue, useRecoilState } from \"recoil\";\r\nimport {\r\n  allowsPeriodState,\r\n  allowsDataState,\r\n  allowsDataDetlsState,\r\n  allowsDataIdState,\r\n  empidState,\r\n  loginLevelState,\r\n} from \"./data/atomdata\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport DailyAllowancesAddPeriod from \"./DailyAllowancesAddPeriod\";\r\nimport DailyAllowsDetlsTableStaff from \"./DailyAllowsDetlsTableStaff\";\r\nimport { useDailyAllows } from \"./dailyallows/useDailyAllows\";\r\nimport { useAddDailyAllows } from \"./dailyallows/useAddDailyAllows\";\r\nimport { useUpdateDailyAllows } from \"./dailyallows/useUpdateDailyAllows\";\r\nimport { useDeleteDailyAllows } from \"./dailyallows/useDeleteDailyAllows\";\r\nimport { useDeleteDailyAllowsDetls } from \"./dailyallowsdetls/useDeleteDailyAllowsDetls\";\r\nimport { useDailyAllowsDetlsBatch } from \"./dailyallowsdetls/useDailyAllowsDetlsBatch\";\r\n\r\nexport default function DailyAllowancesTableStaff() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const { dailyallows, dailyAllowsId, setDailyAllowsId } = useDailyAllows();\r\n  const { dailyallowsdetls, setDailyAllowsDetlsId, setDailyAllowsDetlsPeriod } =\r\n    useDailyAllowsDetlsBatch();\r\n  const addDailyAllows = useAddDailyAllows();\r\n  const updateDailyAllows = useUpdateDailyAllows();\r\n  const deleteDailyAllows = useDeleteDailyAllows();\r\n  const deleteDailyAllowsDetls = useDeleteDailyAllowsDetls();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [isAddPeriodDialogOpen, setIsAddPeriodDialogOpen] = useState(false);\r\n  const [tmpallowsdata, setTmpallowsdata] = useState([]);\r\n  const [allowsdata, setAllowsdata] = useRecoilState(allowsDataState);\r\n  const [isDeleteAlertOpen, setIsDeleteAlertOpen] = useState(false);\r\n  const [allowsDetlsdata, setAllowsDetlsdata] =\r\n    useRecoilState(allowsDataDetlsState);\r\n  const [allows_period, setAllows_period] = useRecoilState(allowsPeriodState);\r\n  const [allows_empid, setAllows_empid] = useRecoilState(empidState);\r\n  const [allowsdataId, setAllowsdataId] = useState(allowsDataIdState);\r\n  const [toLoadDetls, setToLoadDetls] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [deletestate, setDeletestate] = useState({\r\n    id: \"\",\r\n    period: \"\",\r\n    empid: \"\",\r\n  });\r\n  const [isAllowsDetlDialogOpen, setIsAllowsDetlDialogOpen] = useState(false);\r\n  const title = `Site Allowances`;\r\n  const {\r\n    loadEmpDailyAllowances,\r\n    loadEmpDailyAllowsDetls,\r\n    dailyallowances_loading,\r\n    dailyallowances_error,\r\n    updateDailyAllowance,\r\n    getSingleBatchDailyAllowsDetl,\r\n  } = useDailyAllowancesContext();\r\n\r\n  useEffect(() => {\r\n    setDailyAllowsId(loginLevel.loginUserId);\r\n  }, [dailyAllowsId]);\r\n\r\n  // useEffect(() => {\r\n  //   loadEmpDailyAllowances(loginLevel.loginUserId);\r\n  // }, [toLoad]);\r\n\r\n  // const myCustomSortingAlgorithm = {\r\n  //   ascending: (a, b) => a.period.length - b.period.length,\r\n  //   descending: (a, b) => b.period.length - a.period.length,\r\n  // };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      field: \"name\",\r\n      editable: \"never\",\r\n    },\r\n    {\r\n      title: \"Period\",\r\n      field: \"period\",\r\n      editable: \"never\",\r\n    },\r\n    { title: \"Location\", field: \"location\", editable: \"never\" },\r\n    { title: \"Manager Name\", field: \"manager\", editable: \"never\" },\r\n    {\r\n      title: \"No Of Days\",\r\n      field: \"no_of_days\",\r\n      type: \"numeric\",\r\n      editable: \"never\",\r\n    },\r\n    {\r\n      title: \"Job Bonus\",\r\n      field: \"totaljobbonus\",\r\n      type: \"currency\",\r\n      editable: \"never\",\r\n    },\r\n    {\r\n      title: \"Per Diem\",\r\n      field: \"totalperdiem\",\r\n      type: \"currency\",\r\n      editable: \"never\",\r\n    },\r\n    { title: \"Amount\", field: \"amount\", type: \"currency\", editable: \"never\" },\r\n    { title: \"Status\", field: \"status\", editable: \"never\" },\r\n    // {\r\n    //   title: \"Status\",\r\n    //   field: \"status\",\r\n    //   editComponent: (props) => (\r\n    //     <TextField\r\n    //       //defaultValue={props.value || null}\r\n    //       onChange={(e) => props.onChange(e.target.value)}\r\n    //       style={{ width: 100 }}\r\n    //       value={props.value}\r\n    //       select\r\n    //     >\r\n    //       <MenuItem value=\"Pending\">Pending</MenuItem>\r\n    //       {/* <MenuItem value=\"Approve\">Approve</MenuItem>\r\n    //     <MenuItem value=\"Reject\">Reject</MenuItem>\r\n    //     <MenuItem value=\"Cancel\">Cancel</MenuItem> */}\r\n    //     </TextField>\r\n    //   ),\r\n    // },\r\n  ];\r\n\r\n  const Save_DailyAllowancesData = () => {\r\n    dailyallows.forEach((data) => {\r\n      const { id } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updateDailyAllowance({ id, ...fields });\r\n      }\r\n    });\r\n    //handleDialogClose();\r\n  };\r\n\r\n  const update_SiteAllowsDetl = (data) => {\r\n    const {\r\n      id,\r\n      empid,\r\n      period,\r\n      no_of_days,\r\n      amount,\r\n      totaljobbonus,\r\n      totalperdiem,\r\n    } = data;\r\n\r\n    loadEmpDailyAllowsDetls(empid, period);\r\n\r\n    setAllows_period(period);\r\n    setAllows_empid(empid);\r\n    setAllowsdataId(id);\r\n    setAllows_period(period);\r\n    setAllows_empid(empid);\r\n    setAllowsdataId(id);\r\n    setAllowsdata({\r\n      ...allowsdata,\r\n      id: id,\r\n      no_of_days: no_of_days,\r\n      totaljobbonus: totaljobbonus,\r\n      totalperdiem: totalperdiem,\r\n      amount: amount,\r\n      period: period,\r\n      empid: empid,\r\n    });\r\n\r\n    //setIsAllowsDetlDialogOpen(true);\r\n    history.push(\"/singledailyallowsdetlstable\");\r\n  };\r\n\r\n  const delete_SiteAllows = (data) => {\r\n    const { id, period, empid } = data;\r\n    setDeletestate((prev) => (prev = { id: id, period: period, empid: empid }));\r\n    setDailyAllowsDetlsId(empid);\r\n    setDailyAllowsDetlsPeriod(period);\r\n    handleDeleteAlertOpen();\r\n  };\r\n\r\n  const handleDeleteAlertOpen = () => {\r\n    setIsDeleteAlertOpen(true);\r\n  };\r\n\r\n  const handleDeleteAlertClose = () => {\r\n    setIsDeleteAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = (data) => {\r\n    const { id, period, empid } = deletestate;\r\n\r\n    //delete allows detls\r\n    //console.log(\"allowsdetls\", dailyallowsdetls);\r\n    dailyallowsdetls\r\n      .filter((f) => f.empid === empid)\r\n      .forEach((rec) => {\r\n        if (rec.period === period && rec.empid === empid) {\r\n          //console.log(\"del id\", rec.id);\r\n          deleteDailyAllowsDetls(rec.id);\r\n        }\r\n      });\r\n    //delete daily allows\r\n    deleteDailyAllows(id);\r\n    // toast({\r\n    //   title: `Site Allowances has been successfully deleted!`,\r\n    //   status: \"warning\",\r\n    // });\r\n  };\r\n\r\n  const add_SiteAllowsPeriod = () => {\r\n    handleAddPeriodDialogOpen();\r\n  };\r\n\r\n  const handleAddPeriodDialogOpen = () => {\r\n    setIsAddPeriodDialogOpen(true);\r\n  };\r\n\r\n  const handleAddPeriodDialogClose = () => {\r\n    setIsAddPeriodDialogOpen(false);\r\n  };\r\n\r\n  const handleAllowsDetlDialogOpen = () => {\r\n    setIsAllowsDetlDialogOpen(true);\r\n  };\r\n\r\n  const handleAllowsDetlDialogClose = () => {\r\n    //settoLoad(true);\r\n    setIsAllowsDetlDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={dailyallows}\r\n          title={title}\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         // const dataUpdate = [...dailyallowances];\r\n          //         // const index = oldData.tableData.id;\r\n          //         // dataUpdate[index] = newData;\r\n          //         //setDailyAllowances([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n          //         update_AllowsDetl();\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          actions={[\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_SiteAllowsPeriod();\r\n              },\r\n            },\r\n            (rowData) => ({\r\n              disabled:\r\n                rowData.status === \"Approved\" || rowData.status === \"Submitted\",\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_SiteAllowsDetl(rowData);\r\n              },\r\n            }),\r\n            (rowData) => ({\r\n              disabled:\r\n                rowData.status === \"Approved\" || rowData.status === \"Submitted\",\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_SiteAllows(rowData);\r\n              },\r\n            }),\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            sorting: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  {error && (\r\n                    <Alert severity=\"error\" onClose={() => setError(false)}>\r\n                      Period already existed!\r\n                    </Alert>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <div className={classes.dialog}>\r\n          <CustomDialog\r\n            isOpen={isAddPeriodDialogOpen}\r\n            handleClose={handleAddPeriodDialogClose}\r\n            title=\"\"\r\n            showButton={true}\r\n            isFullscreen={false}\r\n            isFullwidth={false}\r\n          >\r\n            <DailyAllowancesAddPeriod\r\n              handleDialogClose={handleAddPeriodDialogClose}\r\n            />\r\n          </CustomDialog>\r\n        </div>\r\n        <div>\r\n          <CustomDialog\r\n            isOpen={isAllowsDetlDialogOpen}\r\n            handleClose={handleAllowsDetlDialogClose}\r\n            title=\"\"\r\n            showButton={true}\r\n            isFullscreen={false}\r\n            isFullwidth={false}\r\n          >\r\n            <DailyAllowsDetlsTableStaff\r\n              allowsdata={allowsdata}\r\n              allowsdataId={allowsdataId}\r\n              handleDialogClose={handleAllowsDetlDialogClose}\r\n            />\r\n          </CustomDialog>\r\n        </div>\r\n        <div>\r\n          <AlertDialogBox\r\n            onClose={handleDeleteAlertClose}\r\n            onConfirm={handleOnDeleteConfirm}\r\n            isOpen={isDeleteAlertOpen}\r\n            title=\"Delete Site Allowances Batch\"\r\n          >\r\n            <h2>Are you sure you want to delete ?</h2>\r\n          </AlertDialogBox>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  dialog: {\r\n    width: 1000,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesAddPeriod.js",["3894","3895","3896","3897","3898","3899","3900","3901","3902","3903","3904"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { differenceInDays, addDays } from \"date-fns\";\r\nimport { Heading } from \"@chakra-ui/react\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport clsx from \"clsx\";\r\nimport { Button, Paper, Grid, Icon, TextField } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { siteallowsState, loginLevelState } from \"./data/atomdata\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport { useDailyAllows } from \"./dailyallows/useDailyAllows\";\r\nimport { useAddDailyAllows } from \"./dailyallows/useAddDailyAllows\";\r\nimport { useDailyAllowsDetls } from \"./dailyallowsdetls/useDailyAllowsDetls\";\r\nimport { useAddDailyAllowsDetls } from \"./dailyallowsdetls/useAddDailyAllowsDetls\";\r\n\r\n//const drawerWidth = 240;\r\nconst selectYear = [{ name: \"2021\" }, { name: \"2022\" }];\r\nconst selectMonth = [\r\n  { name: \"January\" },\r\n  { name: \"February\" },\r\n  { name: \"March\" },\r\n  { name: \"April\" },\r\n  { name: \"May\" },\r\n  { name: \"June\" },\r\n];\r\n\r\nconst DailyAllowancesAddPeriod = ({ handleDialogClose }) => {\r\n  let date = new Date();\r\n  let longMonth = date.toLocaleString(\"en-us\", { month: \"long\" });\r\n  //console.log(\"date\", date, longMonth);\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const toast = useCustomToast();\r\n  const { dailyallows } = useDailyAllows();\r\n  const { dailyallowsdetls } = useDailyAllowsDetls();\r\n  const addDailyAllows = useAddDailyAllows();\r\n  const addDailyAllowsDetls = useAddDailyAllowsDetls();\r\n  const [input, setInput] = useRecoilState(siteallowsState);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [allowsPeriod, setAllowsPeriod] = useState(\"\");\r\n  const [alert, setAlert] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  // const { dailyallowances, addDailyAllowance, addDailyAllowsDetl } =\r\n  //   useDailyAllowancesContext();\r\n  // function daysInMonth(month, year) {\r\n  //   return new Date(year, month, 0).getDate();\r\n  // }\r\n\r\n  useEffect(() => {\r\n    setInput({\r\n      ...input,\r\n      empid: loginLevel.loginUserId,\r\n      name: loginLevel.loginUser,\r\n      jobbonus: loginLevel.siteallows_fee,\r\n      perdiem: loginLevel.perdiem_fee,\r\n      manager: loginLevel.reporting_to,\r\n      client: \"\",\r\n    });\r\n  }, []);\r\n\r\n  const periodExists = (data) => {\r\n    return dailyallows.some(function (el) {\r\n      return el.period === data && el.empid === loginLevel.loginUserId;\r\n    });\r\n  };\r\n\r\n  const buildSiteAllows = () => {\r\n    const period =\r\n      input.fromdate.substring(0, 4) + \"-\" + input.fromdate.substring(5, 7);\r\n\r\n    const isExist = periodExists(period);\r\n    if (isExist) {\r\n      toast({\r\n        title: \"Site Allowance period is existed!\",\r\n        status: \"warning\",\r\n      });\r\n      // setError(true);\r\n      return null;\r\n    }\r\n\r\n    // build siteallowsbatch\r\n\r\n    const diffInDays = differenceInDays(\r\n      new Date(input.todate),\r\n      new Date(input.fromdate)\r\n    );\r\n\r\n    let amount = 0, jobbonus=0, perdiem=0;\r\n    for (let i = 0; i <= diffInDays; i++) {\r\n      jobbonus = jobbonus + Number(input.jobbonus);\r\n      perdiem = perdiem + Number(input.perdiem);\r\n      amount = amount + Number(input.jobbonus) + Number(input.perdiem);\r\n      const data = addDays(new Date(input.fromdate), i);\r\n      addDailyAllowsDetls({\r\n        empid: loginLevel.loginUserId,\r\n        name: loginLevel.loginUser,\r\n        period: period,\r\n        date: data,\r\n        district: input.district,\r\n        typeoperation: input.typeoperation,\r\n        client: input.client,\r\n        location: input.location,\r\n        jobno: input.jobno,\r\n        crewoperation: input.crewoperation,\r\n        jobbonus: input.jobbonus,\r\n        perdiem: input.perdiem,\r\n        status: \"Pending\",\r\n      });\r\n    }\r\n    //add daily allowances batch\r\n    addDailyAllows({\r\n      period: period,\r\n      location: input.location,\r\n      manager: input.manager,\r\n      name: loginLevel.loginUser,\r\n      empid: loginLevel.loginUserId,\r\n      status: \"Pending\",\r\n      no_of_days: diffInDays+1,\r\n      amount: amount,\r\n      totaljobbonus: jobbonus,\r\n      totalperdiem: perdiem,\r\n    });\r\n\r\n    // dailyallowances.push({\r\n    //   period: period,\r\n    //   location: input.location,\r\n    //   manager: input.manager,\r\n    //   name: loginLevel.loginUser,\r\n    //   empid: loginLevel.loginUserId,\r\n    //   status: \"Pending\",\r\n    //   no_of_days: diffInDays,\r\n    //   amount: amount,\r\n    // });\r\n    handleDialogClose();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, type, value } = e.target;\r\n    const val = type === \"number\" ? parseFloat(value) : value;\r\n    setInput({ ...input, [name]: val });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const period =\r\n      input.fromdate.substring(0, 4) + \"-\" + input.fromdate.substring(5, 7);\r\n    setInput({\r\n      ...input,\r\n      period: period,\r\n    });\r\n\r\n    buildSiteAllows();\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      className={fixedHeightPaper}\r\n      style={{ backgroundColor: \"secondary\" }}\r\n    >\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ border: \"1px solid white\" }}\r\n        >\r\n          <Heading as=\"h2\" size=\"lg\" color=\"blue\" p={5}>\r\n            Build Site Allowances\r\n          </Heading>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ border: \"1px solid white\" }}\r\n        >\r\n          <div>\r\n            <Grid\r\n              item\r\n              sm={12}\r\n              style={{ border: \"1px solid white\" }}\r\n              align=\"left\"\r\n            >\r\n              {/* <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <TextField\r\n                  label=\"Year\"\r\n                  id=\"margin-normal\"\r\n                  name=\"year\"\r\n                  required\r\n                  defaultValue={input.year}\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                  style={{ width: \"100%\", marginTop: 10, marginLeft: 10 }}\r\n                  error={!!error}\r\n                  helperText={error ? error.message : null}\r\n                  select\r\n                >\r\n                  {selectYear.map((item) => {\r\n                    return <MenuItem value={item.name}>{item.name}</MenuItem>;\r\n                  })}\r\n                </TextField>\r\n                <TextField\r\n                  label=\"Month\"\r\n                  id=\"margin-normal\"\r\n                  name=\"month\"\r\n                  required\r\n                  defaultValue={input.month}\r\n                  style={{ width: \"100%\", marginTop: 10, marginLeft: 0 }}\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                  error={!!error}\r\n                  helperText={error ? error.message : null}\r\n                  select\r\n                >\r\n                  {selectMonth.map((item) => {\r\n                    return <MenuItem value={item.name}>{item.name}</MenuItem>;\r\n                  })}\r\n                </TextField>\r\n              </div> */}\r\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <TextField\r\n                  label=\"From Date\"\r\n                  variant=\"filled\"\r\n                  required\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"fromdate\"\r\n                  value={input.fromdate}\r\n                  type=\"date\"\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <TextField\r\n                  label=\"To Date\"\r\n                  variant=\"filled\"\r\n                  required\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"todate\"\r\n                  value={input.todate}\r\n                  type=\"date\"\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                {/* <TextField\r\n                  label=\"Period\"\r\n                  variant=\"filled\"\r\n                  required\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"period\"\r\n                  value={input.period}\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                ></TextField> */}\r\n                {/* <Divider className={classes.divider} /> */}\r\n                <TextField\r\n                  label=\"Manager\"\r\n                  variant=\"filled\"\r\n                  required\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"manager\"\r\n                  value={input.manager}\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                ></TextField>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                {/* <TextField\r\n                  label=\"District\"\r\n                  variant=\"filled\"\r\n                  //required\r\n                  value={input.district}\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"district\"\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                ></TextField> */}\r\n                <TextField\r\n                  label=\"Location/Rig\"\r\n                  variant=\"filled\"\r\n                  required\r\n                  value={input.location}\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"location\"\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                ></TextField>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <TextField\r\n                  label=\"Operation Type\"\r\n                  variant=\"filled\"\r\n                  required\r\n                  value={input.typeoperation}\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"typeoperation\"\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                ></TextField>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <TextField\r\n                  label=\"Client\"\r\n                  variant=\"filled\"\r\n                  required\r\n                  value={input.client}\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"client\"\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                ></TextField>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <TextField\r\n                  label=\"Ticket No/Job No\"\r\n                  variant=\"filled\"\r\n                  required\r\n                  value={input.jobno}\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"jobno\"\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                ></TextField>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <TextField\r\n                  label=\"Operation Role\"\r\n                  variant=\"filled\"\r\n                  required\r\n                  value={input.creqoperation}\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"crewoperation\"\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                ></TextField>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <TextField\r\n                  label=\"Job Bonus\"\r\n                  variant=\"filled\"\r\n                  required\r\n                  value={input.jobbonus}\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"jobbonus\"\r\n                  type=\"number\"\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                ></TextField>\r\n                <TextField\r\n                  label=\"Per Diem\"\r\n                  variant=\"filled\"\r\n                  required\r\n                  value={input.perdiem}\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"perdiem\"\r\n                  type=\"number\"\r\n                  className={classes.textField}\r\n                  onChange={(e) => handleChange(e)}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ border: \"1px solid white\" }}\r\n        >\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n            >\r\n              Build <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div>\r\n          <div>\r\n            {error && (\r\n              <Alert severity=\"error\" onClose={() => setError(false)}>\r\n                Period already existed!\r\n              </Alert>\r\n            )}\r\n          </div>\r\n        </Grid>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(0),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"95vw\",\r\n    margin: \"5rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  formLabel: {\r\n    fontSize: 12,\r\n    textAlign: \"left\",\r\n    marginLeft: 8,\r\n    marginTop: 8,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nexport default DailyAllowancesAddPeriod;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowsDetlsTableStaff.js",["3905","3906","3907","3908","3909","3910","3911","3912","3913","3914","3915","3916","3917","3918","3919","3920","3921","3922","3923","3924","3925","3926","3927","3928","3929","3930","3931","3932","3933","3934","3935","3936"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useIsFetching } from \"react-query\";\r\nimport { TextField, Icon, Grid, Button } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { useDisclosure } from \"@chakra-ui/react\";\r\nimport { useRecoilValue, useRecoilState } from \"recoil\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport {\r\n  loginLevelState,\r\n  allowsDataState,\r\n  allowsDataDetlsState,\r\n  empidState,\r\n  allowsPeriodState,\r\n  allowsDataIdState,\r\n  siteallowsTotalsState,\r\n} from \"./data/atomdata\";\r\n//import { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport { useAddDailyAllowsDetls } from \"./dailyallowsdetls/useAddDailyAllowsDetls\";\r\nimport { useUpdateDailyAllowsDetls } from \"./dailyallowsdetls/useUpdateDailyAllowsDetls\";\r\nimport { useDeleteDailyAllowsDetls } from \"./dailyallowsdetls/useDeleteDailyAllowsDetls\";\r\nimport { useDailyAllowsDetlsBatch } from \"./dailyallowsdetls/useDailyAllowsDetlsBatch\";\r\nimport { useDailyAllows } from \"./dailyallows/useDailyAllows\";\r\n//import { useDailyAllowsDetls } from \"./dailyallowsdetls/useDailyAllowsDetls\";\r\nimport { useUpdateDailyAllows } from \"./dailyallows/useUpdateDailyAllows\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\n\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\nconst initial_totals = [\r\n  {\r\n    totalamount: 0,\r\n    totalbonus: 0,\r\n    totaldiem: 0,\r\n    totaldays: 0,\r\n  },\r\n];\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    // editable: \"never\",\r\n    cellStyle: {\r\n      width: 120,\r\n      maxWidth: 120,\r\n    },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  // { title: \"District\", field: \"district\" },\r\n  { title: \"Operation Type\", field: \"typeoperation\" },\r\n  { title: \"Client\", field: \"client\" },\r\n  { title: \"Location/Rig\", field: \"location\" },\r\n  { title: \"Ticket No/Job No\", field: \"jobno\" },\r\n  { title: \"Operation Role\", field: \"crewoperation\" },\r\n  {\r\n    title: \"Job Bonus\",\r\n    field: \"jobbonus\",\r\n    type: \"currency\",\r\n    cellStyle: {\r\n      width: 8,\r\n      maxWidth: 8,\r\n    },\r\n    headerStyle: {\r\n      width: 8,\r\n      maxWidth: 8,\r\n    },\r\n  },\r\n  {\r\n    title: \"Per Diem\",\r\n    field: \"perdiem\",\r\n    type: \"currency\",\r\n    cellStyle: {\r\n      width: 8,\r\n      maxWidth: 8,\r\n    },\r\n    headerStyle: {\r\n      width: 8,\r\n      maxWidth: 8,\r\n    },\r\n  },\r\n  // { title: \"Delete\", field: \"isdelete\", type: \"boolean\" },\r\n];\r\n\r\nexport default function DailyAllowsDetlsTableStaff() {\r\n  let history = useHistory();\r\n  const toast = useCustomToast();\r\n  const classes = useStyles();\r\n  const isFetching = useIsFetching();\r\n  //const { dailyallowsdetls } = useDailyAllowsDetls()\r\n  const { dailyallows, dailyAllowsId, setDailyAllowsId } = useDailyAllows();\r\n  const {\r\n    dailyallowsdetls,\r\n    setDailyAllowsDetlsId,\r\n    setDailyAllowsDetlsPeriod,\r\n    isLoading,\r\n  } = useDailyAllowsDetlsBatch();\r\n  const addDailyAllowsDetls = useAddDailyAllowsDetls();\r\n  const updateDailyAllowsDetls = useUpdateDailyAllowsDetls();\r\n  const deleteDailyAllowsDetls = useDeleteDailyAllowsDetls();\r\n  const updateDailyAllows = useUpdateDailyAllows();\r\n\r\n  // const [allowsDetlsTable, setAllowsDetlsTable] =\r\n  // useRecoilState(allowsDataDetlsState);\r\n  //console.log(\"detlstable\", );\r\n  //const [allowsDetlsdata, setAllowsDetilsdata] = useRecoilStateLoadable(fetchDailyAllowsDetlsSelector);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [allowsDetlsdata, setAllowsDetlsdata] =\r\n    useRecoilState(allowsDataDetlsState);\r\n  const allows_period = useRecoilValue(allowsPeriodState);\r\n  const allows_empid = useRecoilValue(empidState);\r\n  const [siteallowsTotals, setSiteAllowsTotals] = useRecoilState(\r\n    siteallowsTotalsState\r\n  );\r\n  const [allowsdata, setAllowsdata] = useRecoilState(allowsDataState);\r\n  const [allowsdataId, setAllowsdataId] = useState(allowsDataIdState);\r\n  const [tabledeldata, setTableDelData] = useState({});\r\n  const [isCalc, setIsCalc] = useState(false);\r\n  const [isBuild, setIsBuild] = useState(false);\r\n  const [totals, setTotals] = useState({ initial_totals });\r\n  const [isSubmitAlertOpen, setIsSubmitAlertOpen] = useState(false);\r\n  const [isExitAlertOpen, setIsExitAlertOpen] = useState(false);\r\n  const [dailyallowsdata, setDailyAllowsData] = useState({});\r\n  const totalsValues = Object.values(totals).join(\"\");\r\n  const [isRowIndex, setIsRowIndex] = useState(\"\");\r\n\r\n  // const {\r\n  //   //dailyallowances,\r\n  //   //dailyallowsdetls,\r\n  //   loadEmpDailyAllowsDetls,\r\n  //   updateDailyAllowance,\r\n  //   //updateDailyAllowsDetl,\r\n  //   //deleteDailyAllowsDetl,\r\n  //   dailyallowsdetl_loading,\r\n  //   dailyallowsdetl_error,\r\n  // } = useDailyAllowancesContext();\r\n\r\n  useEffect(() => {\r\n    setDailyAllowsId(allows_empid);\r\n    setDailyAllowsDetlsId(allows_empid);\r\n    setDailyAllowsDetlsPeriod(allows_period);\r\n    // setTimeout(() => {\r\n    //   setTotals((prevState) => ({\r\n    //     totalamount: dailyallows.amount,\r\n    //     totalbonus: dailyallows.totaljobbonus,\r\n    //     totaldiem: dailyallows.totalperdiem,\r\n    //     totaldays: dailyallows.no_of_days,\r\n    //   }));\r\n    // }, 3000);\r\n  }, [allows_empid, allows_period]);\r\n\r\n  // useEffect(() => {\r\n  //  if (allowsdata) {\r\n  //     handle_tempcalc();\r\n  //     setIsCalc(false);\r\n  //   }\r\n  // }, [isCalc]);\r\n\r\n  const handleSentEmail = (data) => {\r\n    const { period } = data;\r\n    //console.log(\"expense form\", loginLevel);\r\n    var emaildata = {\r\n      to_name: loginLevel.loginUser,\r\n      to_email: loginLevel.loginEmail,\r\n      message: `Your site allowances for the period ${period} has been successfully submitted for approval`,\r\n      cc_to: loginLevel.reporting_email,\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const build_dailyallowsdata = () => {\r\n    const { id, jobbonus, perdiem } = dailyallowsdetls;\r\n    const data = dailyallowsdetls\r\n      .filter((r) => r.period === allows_period && r.empid === allows_empid)\r\n      .map((rec) => {\r\n        return rec.id, rec.jobbonus, rec.perdiem;\r\n      });\r\n    setDailyAllowsData(data);\r\n    console.log(\"dailydata\", dailyallowsdata);\r\n  };\r\n\r\n  const update_AllowsDetls = (data, index) => {\r\n    const allowsdata = dailyallowsdetls;\r\n    const { id, rec_id, tableData, ...fields } = data;\r\n    updateDailyAllowsDetls({ id, ...fields });\r\n\r\n    //recalc\r\n    allowsdata[index].jobbonus = data.jobbonus;\r\n    allowsdata[index].perdiem = data.perdiem;\r\n    handle_tempcalc(allowsdata);\r\n    //save_siteallows();\r\n  };\r\n\r\n  const save_siteallows = () => {\r\n    const { id } = allowsdata;\r\n\r\n    updateDailyAllows({\r\n      id: id,\r\n      ...allowsdata,\r\n      no_of_days: totals.totaldays,\r\n      amount: totals.totalamount,\r\n      totaljobbonus: totals.totalbonus,\r\n      totalperdiem: totals.totaldiem,\r\n    });\r\n  };\r\n\r\n  const save_AllowsDetls = (e) => {\r\n    e.preventDefault();\r\n    // handle calc\r\n    //handle_calc();\r\n\r\n    //save allows data details\r\n    const { id } = allowsdata;\r\n\r\n    updateDailyAllows({\r\n      id: id,\r\n      ...allowsdata,\r\n      no_of_days: totals.totaldays,\r\n      amount: totals.totalamount,\r\n      totaljobbonus: totals.totalbonus,\r\n      totalperdiem: totals.totaldiem,\r\n    });\r\n    toast({\r\n      title: \"Site Allowances table being saved!\",\r\n      status: \"success\",\r\n    });\r\n  };\r\n\r\n  const submit_AllowsDetls = (e) => {\r\n    e.preventDefault();\r\n    handleSubmitAlertOpen();\r\n  };\r\n\r\n  const exit_AllowsDetls = (e) => {\r\n    e.preventDefault();\r\n    handleExitAlertOpen();\r\n  };\r\n\r\n  const handleOnSubmitConfirm = () => {\r\n    //save allows data details\r\n    const { id } = allowsdata;\r\n    updateDailyAllows({\r\n      id: id,\r\n      ...allowsdata,\r\n      no_of_days: totals.totaldays,\r\n      amount: totals.totalamount,\r\n      totaljobbonus: totals.totalbonus,\r\n      totalperdiem: totals.totaldiem,\r\n      status: \"Submitted\",\r\n    });\r\n    handleSentEmail(allowsdata);\r\n    history.push(\"/dailyallowances\");\r\n    toast({\r\n      title: \"Site Allowances table being submitted!\",\r\n      status: \"success\",\r\n    });\r\n  };\r\n\r\n  const handleOnExitConfirm = () => {\r\n    //save allows data details\r\n    // const { id } = allowsdata;\r\n    // updateDailyAllows({\r\n    //   id: id,\r\n    //   ...allowsdata,\r\n    //   no_of_days: totals.totaldays,\r\n    //   amount: totals.totalamount,\r\n    //   totaljobbonus: totals.totalbonus,\r\n    //   totalperdiem: totals.totaldiem,\r\n    // });\r\n    history.push(\"/dailyallowances\");\r\n    // toast({\r\n    //   title: \"Site Allowances table being submitted!\",\r\n    //   status: \"success\",\r\n    // });\r\n  };\r\n\r\n  const handleSubmitAlertOpen = () => {\r\n    setIsSubmitAlertOpen(true);\r\n  };\r\n\r\n  const handleSubmitAlertClose = () => {\r\n    setIsSubmitAlertOpen(false);\r\n  };\r\n\r\n  const handleExitAlertOpen = () => {\r\n    setIsExitAlertOpen(true);\r\n  };\r\n\r\n  const handleExitAlertClose = () => {\r\n    setIsExitAlertOpen(false);\r\n  };\r\n\r\n  const handle_calc = () => {\r\n    if (dailyallowsdetls) {\r\n      const totbonus = dailyallowsdetls\r\n        .filter((r) => r.period === allows_period && r.empid === allows_empid)\r\n        .reduce((acc, item) => {\r\n          if (isNaN(item.jobbonus)) {\r\n            return acc;\r\n          } else {\r\n            return acc + item.jobbonus;\r\n          }\r\n        }, 0);\r\n      const totdiem = dailyallowsdetls\r\n        .filter((r) => r.period === allows_period && r.empid === allows_empid)\r\n        .reduce((acc, item) => {\r\n          if (isNaN(item.perdiem)) {\r\n            return acc;\r\n          } else {\r\n            return acc + item.perdiem;\r\n          }\r\n        }, 0);\r\n      const totdays = dailyallowsdetls\r\n        .filter((r) => r.period === allows_period && r.empid === allows_empid)\r\n        .reduce((acc, item) => {\r\n          let val = 0;\r\n          if (item.jobbonus > 0 || item.perdiem > 0) {\r\n            val = 1;\r\n          } else {\r\n            val = 0;\r\n          }\r\n          return acc + val;\r\n        }, 0);\r\n      const total = totbonus + totdiem;\r\n\r\n      setTimeout(() => {\r\n        setTotals({\r\n          totalamount: total,\r\n          totalbonus: totbonus,\r\n          totaldiem: totdiem,\r\n          totaldays: totdays,\r\n        });\r\n      }, 3000);\r\n      console.log(\"calc\", totdays, totals);\r\n    }\r\n  };\r\n\r\n  const handle_tempcalc = (allowsdata) => {\r\n    if (allowsdata) {\r\n      const totbonus = allowsdata\r\n        .filter((r) => r.period === allows_period && r.empid === allows_empid)\r\n        .reduce((acc, item) => {\r\n          if (isNaN(item.jobbonus)) {\r\n            return acc;\r\n          } else {\r\n            return acc + item.jobbonus;\r\n          }\r\n        }, 0);\r\n      const totdiem = allowsdata\r\n        .filter((r) => r.period === allows_period && r.empid === allows_empid)\r\n        .reduce((acc, item) => {\r\n          if (isNaN(item.perdiem)) {\r\n            return acc;\r\n          } else {\r\n            return acc + item.perdiem;\r\n          }\r\n        }, 0);\r\n      const totdays = allowsdata\r\n        .filter((r) => r.period === allows_period && r.empid === allows_empid)\r\n        .reduce((acc, item) => {\r\n          let val = 0;\r\n          if (item.jobbonus > 0 || item.perdiem > 0) {\r\n            val = 1;\r\n          } else {\r\n            val = 0;\r\n          }\r\n          return acc + val;\r\n        }, 0);\r\n      const total = totbonus + totdiem;\r\n\r\n      const data = dailyallows\r\n        .filter((r) => r.period === allows_period && r.empid === allows_empid)\r\n        .map((rec) => {\r\n          return { ...rec };\r\n        });\r\n\r\n      updateDailyAllows({\r\n        id: data[0].id,\r\n        no_of_days: totdays,\r\n        amount: total,\r\n        totaljobbonus: totbonus,\r\n        totalperdiem: totdiem,\r\n      });\r\n      // setTimeout(() => {\r\n      //   setTotals({\r\n      //     totalamount: total,\r\n      //     totalbonus: totbonus,\r\n      //     totaldiem: totdiem,\r\n      //     totaldays: totdays,\r\n      //   });\r\n      // }, 3000);\r\n      // console.log(\"tempcalc\", totdays, totals);\r\n    }\r\n  };\r\n\r\n  const update_SiteAllowsTotals = () => {\r\n    setSiteAllowsTotals({\r\n      totalamount: totals.totalamount,\r\n      totalbonus: dailyallowsdetls.reduce((acc, item) => {\r\n        if (isNaN(item.jobbonus)) {\r\n          return acc;\r\n        } else {\r\n          return acc + item.jobbonus;\r\n        }\r\n      }, 0),\r\n      totaldiem: totals.totaldiem,\r\n      totaldays: dailyallowsdetls.reduce((acc, item) => {\r\n        let val = 0;\r\n        if (item.jobbonus > 0 || item.perdiem > 0) {\r\n          val = 1;\r\n        } else {\r\n          val = 0;\r\n        }\r\n        return acc + val;\r\n      }, 0),\r\n    });\r\n    console.log(\"update\", siteallowsTotals);\r\n  };\r\n\r\n  // const add_DailyAllowsDetl = async (data) => {\r\n  //   console.log(\"add\", data);\r\n  //   const { description, amount } = data;\r\n  //   addDailyAllowsDetl({\r\n  //     description: description,\r\n  //     amount: amount,\r\n  //     name: single_dailyallowance.name,\r\n  //     empid: single_dailyallowance.empid,\r\n  //     period: dailyallowance_period,\r\n  //   });\r\n  // };\r\n\r\n  const delete_AllowsDetl = (data, index) => {\r\n    const allowsdata = dailyallowsdetls;\r\n    const { id } = data;\r\n    deleteDailyAllowsDetls(id);\r\n    // toast({\r\n    //   title: \"Site Allowances details record being deleted!\",\r\n    //   status: \"warning\",\r\n    // });\r\n    //recalc\r\n    allowsdata.splice(index, 1);\r\n    handle_tempcalc(allowsdata);\r\n  };\r\n\r\n  //  setAllowsDetlsdata(dailyallowsdetls);\r\n\r\n  // console.log(\"load allows detls\", allowsDetlsdata);\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"75%\", paddingTop: \"5px\" }}>\r\n        {/* <h2>Site Allows Detils Table</h2> */}\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={dailyallowsdetls}\r\n          title=\"Daily Allowances Details\"\r\n          editable={{\r\n            // onRowAdd: (newData) =>\r\n            //   new Promise((resolve, reject) => {\r\n            //     // setTimeout(() => {\r\n            //     //   setAllowsdata([...allowsdata, newData]);\r\n            //     //   resolve();\r\n            //     // }, 1000);\r\n            //   }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...dailyallowsdetls];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  //setDailyAllowsData([...dataUpdate]);\r\n\r\n                  update_AllowsDetls(newData, index);\r\n                  //handle_calc();\r\n                  //setAllowsDetlsTable([...dataUpdate]);\r\n                  //editable = dataUpdate;\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  //const dataDelete = [...allowsDetlsTable];\r\n                  const index = oldData.tableData.id;\r\n                  delete_AllowsDetl(oldData, index);\r\n                  //dataDelete.splice(index, 1);\r\n                  //setAllowsDetlsTable([...dataDelete]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            selection: false,\r\n            pageSize: 10,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  {/* <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      className={classes.button}\r\n                      onClick={(e) => delete_AllowsDetls(e)}\r\n                    >\r\n                      delete\r\n                    </Button> */}\r\n                  {/* <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={(e) => handle_refresh(e)}\r\n                  >\r\n                    re-fresh\r\n                  </Button> */}\r\n                  {/* <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={(e) => handle_calc(e)}\r\n                  >\r\n                    re-calc\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={(e) => save_AllowsDetls(e)}\r\n                  >\r\n                    Update all\r\n                  </Button> */}\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={(e) => submit_AllowsDetls(e)}\r\n                  >\r\n                    Submit <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={(e) => exit_AllowsDetls(e)}\r\n                  >\r\n                    Exit\r\n                  </Button>\r\n\r\n                  <div>\r\n                    <Grid\r\n                      container\r\n                      spacing={0}\r\n                      direction=\"row\"\r\n                      style={{ border: \"1px solid white\" }}\r\n                    >\r\n                      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                        <TextField\r\n                          label=\"Total Job Bonus\"\r\n                          variant=\"filled\"\r\n                          style={{ width: \"100%\" }}\r\n                          name=\"totalbonus\"\r\n                          value={\r\n                            dailyallows &&\r\n                            dailyallows\r\n                              .filter(\r\n                                (r) =>\r\n                                  r.period === allows_period &&\r\n                                  r.empid === allows_empid\r\n                              )\r\n                              .map((rec) => {\r\n                                return rec.totaljobbonus;\r\n                              })\r\n                          }\r\n                          type=\"currency\"\r\n                          className={classes.textField}\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                        ></TextField>\r\n                        <TextField\r\n                          label=\"Total Diem\"\r\n                          variant=\"filled\"\r\n                          style={{ width: \"100%\" }}\r\n                          name=\"totaldiem\"\r\n                          value={\r\n                            dailyallows &&\r\n                            dailyallows\r\n                              .filter(\r\n                                (r) =>\r\n                                  r.period === allows_period &&\r\n                                  r.empid === allows_empid\r\n                              )\r\n                              .map((rec) => {\r\n                                return rec.totalperdiem;\r\n                              })\r\n                          }\r\n                          type=\"currency\"\r\n                          className={classes.textField}\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                        ></TextField>\r\n\r\n                        <TextField\r\n                          label=\"No of Days\"\r\n                          variant=\"filled\"\r\n                          style={{ width: \"100%\" }}\r\n                          name=\"totaldays\"\r\n                          value={\r\n                            dailyallows &&\r\n                            dailyallows\r\n                              .filter(\r\n                                (r) =>\r\n                                  r.period === allows_period &&\r\n                                  r.empid === allows_empid\r\n                              )\r\n                              .map((rec) => {\r\n                                return rec.no_of_days;\r\n                              })\r\n                          }\r\n                          type=\"numeric\"\r\n                          className={classes.textField}\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                        ></TextField>\r\n                        <TextField\r\n                          label=\"Total Amount\"\r\n                          variant=\"filled\"\r\n                          style={{ width: \"100%\" }}\r\n                          name=\"totalamount\"\r\n                          value={\r\n                            dailyallows &&\r\n                            dailyallows\r\n                              .filter(\r\n                                (r) =>\r\n                                  r.period === allows_period &&\r\n                                  r.empid === allows_empid\r\n                              )\r\n                              .map((rec) => {\r\n                                return rec.amount;\r\n                              })\r\n                          }\r\n                          type=\"currency\"\r\n                          className={classes.textField}\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                        ></TextField>\r\n                      </div>\r\n                    </Grid>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <AlertDialogBox\r\n          onClose={handleSubmitAlertClose}\r\n          onConfirm={handleOnSubmitConfirm}\r\n          isOpen={isSubmitAlertOpen}\r\n          title=\"Site Allowances Batch\"\r\n        >\r\n          <h2>After submition for approval, no changes can be made.</h2>\r\n          <h2>Are you sure you want to submit ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n      <div>\r\n        <AlertDialogBox\r\n          onClose={handleExitAlertClose}\r\n          onConfirm={handleOnExitConfirm}\r\n          isOpen={isExitAlertOpen}\r\n          title=\"Site Allowances Batch\"\r\n        >\r\n          <h2>Are you sure you want to exit ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n      {/* <div>\r\n        <AlertDialogBox\r\n          onClose={onAlertDeleteClose}\r\n          onConfirm={handleOnAlertDeleteConfirm}\r\n          isOpen={isAlertDeleteOpen}\r\n          title=\"Site Allowances Batch\"\r\n        >\r\n          <h2>Are you sure you want to delete {isRowIndex} ?</h2>\r\n        </AlertDialogBox>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n    width: 1500,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\SingleDailyAllowsDetlsStaff.js",["3937","3938","3939"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DailyAllowsDetlsTableStaff from \"./DailyAllowsDetlsTableStaff\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ToolbarHeader = ({ title }) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SingleDailyAllowsDetlsStaff = ({ title }) => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                {/* <Link to=\"/batchdailyallowances\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link> */}\r\n                <div>\r\n                  {/* <ToolbarHeader title={title} /> */}\r\n                 \r\n                  <DailyAllowsDetlsTableStaff />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nexport default SingleDailyAllowsDetlsStaff;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveTableViewStaff.js",["3940","3941","3942","3943","3944","3945","3946","3947","3948","3949","3950","3951","3952","3953","3954","3955","3956","3957","3958","3959","3960"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MaterialTable from \"material-table\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Heading,\r\n  GridItem,\r\n  Icon,\r\n  IconButton,\r\n  Stack,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\nimport { EditIcon, ViewIcon } from \"@chakra-ui/icons\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { selector, useRecoilState, useRecoilValueLoadable } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { leaves_url } from \"../utils/constants\";\r\nimport { useLeaves } from \"./leaves/useLeaves\";\r\n\r\nconst drawerWidth = 240;\r\n\r\n// const fetchExpensesDetails = selector({\r\n//   key: \"fetchExpensesDetailsSelector\",\r\n//   get: async ({ get }) => {\r\n//     try {\r\n//       const { data } = await axios.get(expenses_url);\r\n//       const wpexpirydata = data;\r\n\r\n//       return data;\r\n//     } catch (error) {\r\n//       throw error;\r\n//     }\r\n//   },\r\n// });\r\n\r\nconst LeaveTableViewStaff = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { leaves, filter, setFilter, setLeaveId } = useLeaves();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [userdata, setUserdata] = useState([]);\r\n  //const [userdata, setUserdata] = useRecoilState(userdatastate);\r\n  //const ExpensesDetails = useRecoilValueLoadable(fetchExpensesDetails);\r\n  //const { state, contents } = ExpensesDetails;\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const { leaves_loading, leaves_error, loadEmpLeaves } = useLeavesContext();\r\n\r\n  useEffect(() => {\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <Grid direction=\"row\">\r\n        <Stack direction=\"row\">\r\n          <Heading as=\"h4\" size=\"md\">\r\n            Leaves Schedule\r\n          </Heading>\r\n          <Spacer />\r\n          <IconButton\r\n            // variant=\"outline\"\r\n            size=\"md\"\r\n            aria-label=\"Edit\"\r\n            icon={<EditIcon />}\r\n            onClick={() => history.push(\"/leave\")}\r\n          />\r\n        </Stack>\r\n\r\n        {leaves\r\n          .filter((i) => i.status === \"Pending\")\r\n          .map((row) => {\r\n            return (\r\n              <Grid\r\n                key={row.id}\r\n                templateColumns=\"repeat(12, 1fr)\"\r\n                gap={3}\r\n                p={1}\r\n              >\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.from_date}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.to_date}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.reason}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.status}</Box>\r\n                </GridItem>\r\n              </Grid>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default LeaveTableViewStaff;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipTableViewAdmin.js",["3961","3962","3963","3964","3965","3966","3967","3968","3969","3970","3971"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { usePayrun } from \"./payrun/usePayrun\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Batch\",\r\n    field: \"payrun\",\r\n    editable: \"never\",\r\n  },\r\n  // { title: \"Period\", field: \"period\", editable: \"never\" },\r\n  // {\r\n  //   title: \"PayDate\",\r\n  //   field: \"pay_date\",\r\n  //   type: \"date\",\r\n  //   dateSetting: { locale: \"en-GB\" },\r\n  //   editable: \"never\",\r\n  // },\r\n  {\r\n    title: \"Wages\",\r\n    field: \"totalwages\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"TAP Amount\",\r\n    field: \"totaltap\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"SCP Amount\",\r\n    field: \"totalscp\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Site Allowances\",\r\n    field: \"totalsitesallows\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Expenses Claims\",\r\n    field: \"totalexpensesclaims\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Allowances\",\r\n    field: \"totalallows\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Deductions\",\r\n    field: \"totaldeducts\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Payroll\",\r\n    field: \"totalpayroll\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  // { title: \"Bank Name\", field: \"bank_name\" },\r\n  // { title: \"Bank AC No\", field: \"bank_accno\" },\r\n  { title: \"Status\", field: \"status\", editable: \"never\" },\r\n];\r\n\r\nexport default function PayslipTableVIewAdmin() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const { payrun } = usePayrun();\r\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\r\n  // const { getPayrun, payrun_loading, loadPendingPayslips } =\r\n  //   usePayslipsContext();\r\n  //const { loadEmployees, employees } = useEmployeesContext();\r\n\r\n  // useEffect(() => {\r\n  //   getPayrun();\r\n  // }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payrun}\r\n          title=\"Payslips\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n",["3972","3973"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\PrintPDFTest.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\utils\\firebase.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\helpers\\storageHelper.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\helpers\\AlertShutDownDialog.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\context\\auth_context.js",["3974","3975"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport App from \"../utils/firebase\"\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/expenses_reducer\";\r\n\r\n\r\nimport {} from \"../actions\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null)\r\n\r\n  useEffect(() => {\r\n    App.auth().onAuthStateChanged(setCurrentUser)  \r\n  },[])\r\n\r\n  return <AuthContext.Provider value={{currentUser}}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport const useAuthContext = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\SigninForm.js",["3976","3977","3978","3979","3980","3981","3982","3983","3984"],"import React, { useState } from \"react\";\r\n//import { useHistory } from \"react-router-dom\";\r\n//import { Button, TextField } from \"@material-ui/core\";\r\nimport {\r\n  AspectRatio,\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Flex,\r\n  FormControl,\r\n  Heading,\r\n  Image,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftAddon,\r\n  Stack,\r\n  HStack,\r\n  VStack,\r\n  Wrap,\r\n} from \"@chakra-ui/react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n//import { setStoredUser } from \"./user-storage\";\r\n//import { useAuthContext } from \"../context/auth_context\";\r\nimport img from \"../assets/AppSutLogo.jpg\";\r\nimport App from \"../utils/firebase\";\r\n\r\nconst initial_values = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst SigninForm = () => {\r\n  //let history = useHistory();\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const field_width = \"40\";\r\n  //const { currentUser } = useAuthContext();\r\n  const { employees } = useEmployees();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [state, setState] = useState(initial_values);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { setEditEmployeeID } = useEmployeesContext();\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    register,\r\n    reset,\r\n    formState: { errors, isSubmitting },\r\n  } = useForm({ defaultValues: state });\r\n\r\n  const handleLogin = async (values) => {\r\n    //event.preventDefault();\r\n    //console.log(\"sigin\", values);\r\n    const { email, password } = values;\r\n    try {\r\n      await App.auth().signInWithEmailAndPassword(email, password);\r\n      //history.pushState(\"/\");\r\n      update_login();\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Invalid email or password!\",\r\n        status: \"warning\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const update_login = () => {\r\n   \r\n    const emp = employees\r\n      .filter((item) => item.email === email)\r\n      .map((row) => {\r\n        return {\r\n          id: row.id,\r\n          name: row.name,\r\n          email: row.email,\r\n          password: row.password,\r\n          role: role,\r\n          level: row.role,\r\n          leave_bal: row.leave_bal,\r\n          leave_entitled: row.leave_entitled,\r\n          leave_bf: row.leave_bf,\r\n          leave_cd: row.leave_cd,\r\n          siteallows_fee: row.siteallows_fee,\r\n          perdiem_fee: row.perdiem_fee,\r\n          reporting_to: row.reporting_to,\r\n          reporting_email: row.reporting_email,\r\n        };\r\n      });\r\n    if (email === \"admin@abc.com\") {\r\n      //setRole(role);\r\n      setRole(\"Staff\");\r\n      setLoginLevel({\r\n        ...loginLevel,\r\n        loginUser: \"Admin\",\r\n        loginUserId: \"admin\",\r\n        loginLevel: \"Staff\",\r\n        loginEmail: \"admin@abc.com\",\r\n        loginRole: 5,\r\n        login: true,\r\n        leave_bal: 0,\r\n        leave_entitled: 0,\r\n        leave_bf: 0,\r\n        leave_cd: 0,\r\n        siteallows_fee: 0,\r\n        perdiem_fee: 0,\r\n        reporting_to: \"\",\r\n        reporting_email: \"\",\r\n      });\r\n      setEditEmployeeID(\"111\");\r\n      return null;\r\n    }\r\n\r\n    // if (!emp.length) {\r\n    //   toast({\r\n    //     title: \"This email is not existed!\",\r\n    //     status: \"warning\",\r\n    //   });\r\n    //   return null;\r\n    // }\r\n\r\n    // if (role === \"Admin\" && emp[0].level < 2) {\r\n    //   toast({\r\n    //     title: \"You have no authorisation to access!\",\r\n    //     status: \"warning\",\r\n    //   });\r\n    //   return null;\r\n    // }\r\n    // if (role === \"Admin\" && emp[0].level < 2) {\r\n    //   toast({\r\n    //     title: \"You have no authorisation to access!\",\r\n    //     status: \"warning\",\r\n    //   });\r\n    //   return null;\r\n    // }\r\n    // if (role === \"AdminManager\" && emp[0].level < 3) {\r\n    //   toast({\r\n    //     title: \"You have no authorisation to access!\",\r\n    //     status: \"warning\",\r\n    //   });\r\n    //   return null;\r\n    // }\r\n    // if (role === \"Manager\" && emp[0].level < 4) {\r\n    //   toast({\r\n    //     title: \"You have no authorisation to access!\",\r\n    //     status: \"warning\",\r\n    //   });\r\n    //   return null;\r\n    // }\r\n    setRole(\"Staff\");\r\n    setLoginLevel({\r\n      ...loginLevel,\r\n      loginUser: emp[0].name,\r\n      loginUserId: emp[0].id,\r\n      loginLevel: \"Staff\",\r\n      loginEmail: email,\r\n      loginRole: emp[0].level,\r\n      login: true,\r\n      leave_entitled: emp[0].leave_entitled,\r\n      leave_bf: emp[0].leave_bf,\r\n      leave_bal: emp[0].leave_bal,\r\n      leave_cd: emp[0].leave_cd,\r\n      siteallows_fee: emp[0].siteallows_fee,\r\n      perdiem_fee: emp[0].perdiem_fee,\r\n      reporting_to: emp[0].reporting_to,\r\n      reporting_email: emp[0].reporting_email,\r\n    });\r\n    setEditEmployeeID(emp[0].id);\r\n    setPassword(\"\");\r\n    //setStoredUser(emp[0]);\r\n  };\r\n\r\n  // const handleStaffClick = (e) => {\r\n  //   console.log(\"Staff\");\r\n  //   e.preventDefault();\r\n  //   setRole(\"Staff\");\r\n  //   handleSubmit(e);\r\n  // };\r\n  // const handleAdminClick = (e) => {\r\n  //   e.preventDefault();\r\n  //   setRole(\"Admin\");\r\n  //   handleSubmit(e);\r\n  // };\r\n  // const handleAdminManagerClick = (e) => {\r\n  //   e.preventDefault();\r\n  //   setRole(\"AdminManager\");\r\n  //   handleSubmit(e);\r\n  // };\r\n  // const handleManagerClick = (e) => {\r\n  //   e.preventDefault();\r\n  //   setRole(\"Manager\");\r\n  //   // handleSubmit(e);\r\n  // };\r\n\r\n  return (\r\n    <Container minH=\"84vh\" align=\"center\" justify=\"center\">\r\n      <Stack spacing={8} mx=\"auto\" w=\"xl\" py={12} px={6}>\r\n        <Box bgColor=\"white\">\r\n          <Box>\r\n            <AspectRatio w=\"400px\" h=\"200px\" ratio={1}>\r\n              <Wrap w=\"300px\" h=\"200px\" px=\"1rem\" spacing={4} justify=\"center\">\r\n                <Image\r\n                  src={img}\r\n                  alt=\"Logo\"\r\n                  width=\"100%\"\r\n                  display=\"block\"\r\n                  fit=\"cover\"\r\n                />\r\n              </Wrap>\r\n            </AspectRatio>\r\n          </Box>\r\n          <Stack align=\"center\" py={3}>\r\n            <Heading size=\"md\">Log In to Appsmiths Sutera HRMS</Heading>\r\n          </Stack>\r\n          <form onSubmit={handleSubmit(handleLogin)}>\r\n            <VStack\r\n              alignItems=\"flex-start\"\r\n              px={5}\r\n              py={5}\r\n              m={5}\r\n              borderRadius=\"20\"\r\n              border=\"1px solid black\"\r\n            >\r\n              <FormControl>\r\n                <Controller\r\n                  control={control}\r\n                  name=\"email\"\r\n                  fontSize=\"20\"\r\n                  //defaultValue={email}\r\n\r\n                  render={({ field: { onChange, value, ref } }) => (\r\n                    <InputGroup>\r\n                      <HStack w=\"100%\" py={1}>\r\n                        {/* <InputLeftAddon\r\n                          children=\"Email\"\r\n                          minWidth={field_width}\r\n                          bgColor=\"gray.300\"\r\n                        /> */}\r\n                        <Input\r\n                          name=\"email\"\r\n                          value={value}\r\n                          fontSize=\"20\"\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            onChange(e);\r\n                            setEmail(e.target.value);\r\n                          }}\r\n                          bgColor=\"white\"\r\n                          //textTransform=\"capitalize\"\r\n                          ref={ref}\r\n                          placeholder=\"email\"\r\n                        />\r\n                      </HStack>\r\n                    </InputGroup>\r\n                  )}\r\n                />\r\n              </FormControl>\r\n              <Divider />\r\n              <FormControl>\r\n                <Controller\r\n                  control={control}\r\n                  name=\"password\"\r\n                  fontSize=\"20\"\r\n                  //defaultValue={name}\r\n                  render={({ field: { onChange, value, ref } }) => (\r\n                    <InputGroup>\r\n                      <HStack w=\"100%\" py={1}>\r\n                        {/* <InputLeftAddon\r\n                          children=\"Password\"\r\n                          minWidth={field_width}\r\n                          bgColor=\"gray.300\"\r\n                        /> */}\r\n                        <Input\r\n                          name=\"password\"\r\n                          type=\"password\"\r\n                          value={value}\r\n                          fontSize=\"20\"\r\n                          onChange={(e) => {\r\n                            onChange(e);\r\n                            setPassword(e.target.value);\r\n                          }}\r\n                          bgColor=\"white\"\r\n                          //textTransform=\"capitalize\"\r\n                          ref={ref}\r\n                          placeholder=\"password\"\r\n                        />\r\n                      </HStack>\r\n                    </InputGroup>\r\n                  )}\r\n                />\r\n              </FormControl>\r\n            </VStack>\r\n            <HStack align=\"center\" justify=\"center\">\r\n              <Button\r\n                mt={1}\r\n                mx={5}\r\n                mb={5}\r\n                variant=\"solid\"\r\n                isFullWidth\r\n                colorScheme=\"teal\"\r\n                isLoading={isSubmitting}\r\n                type=\"submit\"\r\n              >\r\n                Login\r\n              </Button>\r\n            </HStack>\r\n          </form>\r\n        </Box>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(2),\r\n\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"600px\",\r\n    },\r\n    \"& .MuiButtonBase-root\": {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default SigninForm;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\app\\Loading.tsx",[],["3985","3986"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\user\\useUser.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\theme\\index.js",["3987"],"import { extendTheme, withDefaultColorScheme } from \"@chakra-ui/react\";\r\n\r\n// const config = {\r\n//   initialColorMode: \"light\",\r\n//   useSystemColorMode: false,\r\n// };\r\n\r\n//export const theme = extendTheme({ config });\r\n\r\nexport const theme = extendTheme({\r\n  styles: {\r\n    global: {\r\n      body: {\r\n        color: \"olive.800\",\r\n        backgroundColor: \"olive.100\",\r\n        lightbackgroundColor: \"olive.50\"\r\n      },\r\n    },\r\n  },\r\n  fonts: {\r\n    body: \"Lato, sans-serif\",\r\n    heading: \"Forum, sans-serif\",\r\n    mono: \"Menlo, monospace\",\r\n  },\r\n  colors: {\r\n    olive: {\r\n      50: \"#ebf8ff\",\r\n      100: \"#bee3f8\",\r\n      200: \"#90cdf4\",\r\n      300: \"#63b3ed\",\r\n      400: \"#4299e1\",\r\n      500: \"#3182ce\",\r\n      600: \"#2b6cb0\",\r\n      700: \"#2c5282\",\r\n      800: \"#2a4365\",\r\n      900: \"#1a365d\",\r\n    },\r\n  },\r\n  //withDefaultColorScheme({ colorScheme: \"brand\" }),\r\n});\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmployeeFormNew.js",["3988","3989","3990","3991","3992","3993","3994","3995","3996","3997","3998"],"import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  Divider,\r\n  Checkbox,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { Controller, useForm, setValue } from \"react-hook-form\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useAddEmployees } from \"./employees/useAddEmployees\";\r\nimport { useUpdateEmployees } from \"./employees/useUpdateEmployees\";\r\nimport { useDepartments } from \"./departments/useDepartments\";\r\nimport { useDesignations } from \"./designations/useDesignations\";\r\nimport App from \"../utils/firebase\";\r\n\r\n// import EmpFamily from \"./EmpFamily\";\r\n// import EmpEducations from \"./EmpEducations\";\r\n// import EmpExperiences from \"./EmpExperiences\";\r\n// import EmpTrainings from \"./EmpTrainings\";\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  gender: \"\",\r\n  ic_no: \"\",\r\n  email: \"\",\r\n  age: 0,\r\n  birthdate: null,\r\n  address: \"\",\r\n  nationality: \"\",\r\n  basic_salary: 0,\r\n  salary_currency: \"BND\",\r\n  bank_name: \"\",\r\n  bank_acno: \"\",\r\n  tap_checkbox: true,\r\n  tap_acno: \"\",\r\n  scp_acno: \"\",\r\n  date_of_join: null,\r\n  date_of_resign: null,\r\n  leave_bal: 0,\r\n  leave_bf: 0,\r\n  leave_entitled: 0,\r\n  leave_cd: 0,\r\n  designation: \"\",\r\n  department: \"\",\r\n  passportno: \"\",\r\n  passport_expirydate: null,\r\n  workpermitno: \"\",\r\n  workpermit_expirydate: null,\r\n  siteallows_fee: 0,\r\n  perdiem_fee: 0,\r\n  role: 1,\r\n  password: \"abc123*\",\r\n  empno: \"\",\r\n  reporting_to: \"\",\r\n  reporting_email: \"\",\r\n};\r\n\r\nconst EmployeeFormNew = () => {\r\n  const classes = useStyles();\r\n  const {\r\n    isEditing,\r\n    single_employee,\r\n    updateEmployee,\r\n    //addEmployee,\r\n    editEmployeeID,\r\n    single_employee_loading,\r\n  } = useEmployeesContext();\r\n  const {\r\n    name,\r\n    ic_no,\r\n    gender,\r\n    age,\r\n    birthdate,\r\n    email,\r\n    address,\r\n    nationality,\r\n    basic_salary,\r\n    salary_currency,\r\n    bank_name,\r\n    bank_acno,\r\n    tap_checkbox,\r\n    tap_acno,\r\n    scp_acno,\r\n    leave_bal,\r\n    leave_bf,\r\n    leave_cd,\r\n    leave_entitled,\r\n    password,\r\n    date_of_join,\r\n    date_of_resign,\r\n    designation,\r\n    department,\r\n    passportno,\r\n    passport_expirydate,\r\n    workpermitno,\r\n    workpermit_expirydate,\r\n    siteallows_fee,\r\n    perdiem_fee,\r\n    reporting_to,\r\n    reporting_email,\r\n  } = single_employee || initial_values;\r\n  const addEmployees = useAddEmployees();\r\n  const updateEmployees = useUpdateEmployees();\r\n  const { employees } = useEmployees();\r\n  const { designations } = useDesignations();\r\n  const { departments } = useDepartments();\r\n  const [empage, setEmpage] = useState(0);\r\n  const [reportemail, setReportEmail] = useState(\"\");\r\n  const [checktap, setCheckTap] = useState(false);\r\n  //const [alert, setAlert] = useState(false);\r\n  const { handleSubmit, control } = useForm();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  console.log(\"emplevel\", loginLevel);\r\n\r\n  const calculateAge = (dob) => {\r\n    var today = new Date();\r\n    var birthDate = new Date(dob);\r\n    var age = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age--;\r\n    }\r\n    return age;\r\n  };\r\n\r\n  const handleReportingTo = (name) => {\r\n    const emp = employees\r\n      .filter((f) => f.name === name)\r\n      .map((r) => {\r\n        return { ...r };\r\n      });\r\n    setReportEmail(emp[0].email);\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    if (isEditing) {\r\n      updateEmployees({ id: editEmployeeID, ...data });\r\n    } else {\r\n      addEmployees({ password: \"abc123*\", role: 1, ...data });\r\n      try {\r\n        App.auth().createUserWithEmailAndPassword(email, \"abc123*\");\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    // setAlert(true);\r\n    // setTimeout(() => {\r\n    //   setAlert(false);\r\n    // }, 3000);\r\n    //loadEmployees();\r\n    // <Alert severity=\"success\">\r\n    //   <AlertTitle>Success</AlertTitle>\r\n    //   This is a success alert — <strong>check it out!</strong>\r\n    // </Alert>;\r\n    //history.push(\"/allemployees\");\r\n  };\r\n\r\n  if (single_employee_loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Paper className={classes.root}>\r\n          <Grid container className={classes.root} spacing={15}>\r\n            <div>\r\n              <Typography variant=\"h5\" component=\"h3\">\r\n                EMPLOYEE FORM\r\n              </Typography>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n              >\r\n                Submit <Icon className={classes.rightIcon}>send</Icon>\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n          <Divider className={classes.divider} />\r\n          <Grid item xs={12}>\r\n            <div>\r\n              <div>\r\n                <Controller\r\n                  name=\"name\"\r\n                  control={control}\r\n                  defaultValue={name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Name\"\r\n                        id=\"margin-normal\"\r\n                        name=\"name\"\r\n                        defaultValue={name}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"email\"\r\n                  control={control}\r\n                  defaultValue={email}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Email\"\r\n                        id=\"margin-normal\"\r\n                        name=\"email\"\r\n                        defaultValue={email}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: \"Email is required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"ic_no\"\r\n                  control={control}\r\n                  defaultValue={ic_no}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"IC No\"\r\n                        id=\"margin-normal\"\r\n                        name=\"ic_no\"\r\n                        defaultValue={ic_no}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"birthdate\"\r\n                  control={control}\r\n                  defaultValue={birthdate}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Birth Date\"\r\n                        id=\"margin-birthdate\"\r\n                        name=\"birthdate\"\r\n                        type=\"date\"\r\n                        defaultValue={birthdate}\r\n                        className={classes.textField}\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          onChange(parseInt(e.target.value, 10));\r\n                          let age = calculateAge(e.target.value);\r\n                          console.log(\"emp\", birthdate, age);\r\n                          setEmpage(age);\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"age\"\r\n                  control={control}\r\n                  defaultValue={empage}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Age\"\r\n                        type=\"number\"\r\n                        id=\"standard-number-age\"\r\n                        name=\"empage\"\r\n                        value={empage}\r\n                        className={classes.textField}\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          onChange(parseInt(e.target.value, 10));\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"passportno\"\r\n                  control={control}\r\n                  defaultValue={passportno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Passport No\"\r\n                        id=\"margin-normal\"\r\n                        name=\"passportno\"\r\n                        defaultValue={passportno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"passport_expirydate\"\r\n                  control={control}\r\n                  defaultValue={passport_expirydate}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Passport Expiry Date\"\r\n                        id=\"margin-normal\"\r\n                        name=\"passport_expirydate\"\r\n                        type=\"date\"\r\n                        defaultValue={passport_expirydate}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"nationality\"\r\n                  control={control}\r\n                  defaultValue={nationality}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Nationality\"\r\n                        id=\"standard-nationality\"\r\n                        name=\"nationality\"\r\n                        defaultValue={nationality}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"gender\"\r\n                  control={control}\r\n                  defaultValue={gender}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Gender\"\r\n                        id=\"margin-normal\"\r\n                        name=\"gender\"\r\n                        defaultValue={gender}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        select\r\n                      >\r\n                        <MenuItem value=\"Male\">Male</MenuItem>\r\n                        <MenuItem value=\"Female\">Female</MenuItem>\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"address\"\r\n                  control={control}\r\n                  defaultValue={address}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Address\"\r\n                        id=\"standard-address\"\r\n                        name=\"address\"\r\n                        defaultValue={address}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <Divider className={classes.divider} />\r\n            <div>\r\n              <div>\r\n                {loginLevel.loginLevel !== \"Admin\" && (\r\n                  <Controller\r\n                    name=\"basic_salary\"\r\n                    control={control}\r\n                    defaultValue={basic_salary}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Basic Salary\"\r\n                          type=\"number\"\r\n                          id=\"standard-number\"\r\n                          name=\"basic_pay\"\r\n                          defaultValue={basic_salary}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            onChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                        />\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"IC No required\" }}\r\n                  />\r\n                )}\r\n                {loginLevel.loginLevel !== \"Admin\" && (\r\n                  <Controller\r\n                    name=\"salary_currency\"\r\n                    control={control}\r\n                    defaultValue={salary_currency}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Currency\"\r\n                          id=\"standard-currency\"\r\n                          name=\"salary_currency\"\r\n                          defaultValue={salary_currency}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            onChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                          select\r\n                        >\r\n                          <MenuItem value=\"BND\">BND</MenuItem>\r\n                          <MenuItem value=\"USD\">USD</MenuItem>\r\n                          <MenuItem value=\"MYR\">MYR</MenuItem>\r\n                        </TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"IC No required\" }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div>\r\n                {loginLevel.loginLevel !== \"Admin\" && (\r\n                  <Controller\r\n                    name=\"siteallows_fee\"\r\n                    control={control}\r\n                    defaultValue={siteallows_fee}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Site Allowances Fee\"\r\n                          type=\"number\"\r\n                          id=\"standard-number\"\r\n                          name=\"siteallows_fee\"\r\n                          defaultValue={siteallows_fee}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            onChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                        />\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"IC No required\" }}\r\n                  />\r\n                )}\r\n                {loginLevel.loginLevel !== \"Admin\" && (\r\n                  <Controller\r\n                    name=\"perdiem_fee\"\r\n                    control={control}\r\n                    defaultValue={perdiem_fee}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Per Diem Fee\"\r\n                          type=\"number\"\r\n                          id=\"standard-number\"\r\n                          name=\"perdiem_fee\"\r\n                          defaultValue={perdiem_fee}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            onChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                        />\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"IC No required\" }}\r\n                  />\r\n                )}\r\n              </div>\r\n\r\n              <div>\r\n                <Controller\r\n                  name=\"tap_checkbox\"\r\n                  control={control}\r\n                  defaultValue={tap_checkbox}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            checked={tap_checkbox}\r\n                            onChange={onChange}\r\n                            name=\"tap_checkbox\"\r\n                          />\r\n                        }\r\n                        label=\"TAP/SCP Contribution\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"tap_acno\"\r\n                  control={control}\r\n                  defaultValue={tap_acno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"TAP Ac No\"\r\n                        id=\"margin-normal\"\r\n                        name=\"tap_acno\"\r\n                        defaultValue={tap_acno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"scp_acno\"\r\n                  control={control}\r\n                  defaultValue={scp_acno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"SCP Ac No\"\r\n                        id=\"margin-normal\"\r\n                        name=\"scp_acno\"\r\n                        defaultValue={scp_acno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"bank_name\"\r\n                  control={control}\r\n                  defaultValue={bank_name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Bank Name\"\r\n                        id=\"margin-normal\"\r\n                        name=\"bank_name\"\r\n                        defaultValue={bank_name}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"bank_acno\"\r\n                  control={control}\r\n                  defaultValue={bank_acno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Bank Ac No\"\r\n                        id=\"margin-normal\"\r\n                        name=\"bank_acno\"\r\n                        defaultValue={bank_acno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  // rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"workpermitno\"\r\n                  control={control}\r\n                  defaultValue={workpermitno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Work Permit No\"\r\n                        id=\"margin-normal\"\r\n                        name=\"workpermitno\"\r\n                        defaultValue={workpermitno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"workpermit_expirydate\"\r\n                  control={control}\r\n                  defaultValue={workpermit_expirydate}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Work Permit Expiry Date\"\r\n                        id=\"margin-normal\"\r\n                        name=\"workpermit_expirydate\"\r\n                        type=\"date\"\r\n                        defaultValue={workpermit_expirydate}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <Divider className={classes.divider} />\r\n              <div>\r\n                <Controller\r\n                  name=\"date_of_join\"\r\n                  control={control}\r\n                  defaultValue={date_of_join}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Joining Date\"\r\n                        id=\"margin-normal\"\r\n                        name=\"date_of_join\"\r\n                        type=\"date\"\r\n                        defaultValue={date_of_join}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"date_of_resign\"\r\n                  control={control}\r\n                  defaultValue={date_of_resign}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Resign Date\"\r\n                        id=\"margin-normal\"\r\n                        name=\"date_of_resign\"\r\n                        type=\"date\"\r\n                        defaultValue={date_of_resign}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"leave_entitled\"\r\n                  control={control}\r\n                  defaultValue={leave_entitled}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Annual Leaves Entitled\"\r\n                        id=\"standard-annualleave\"\r\n                        name=\"leave_entitled\"\r\n                        type=\"numeric\"\r\n                        defaultValue={leave_entitled}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"leave_bal\"\r\n                  control={control}\r\n                  defaultValue={leave_bal}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Leaves Balance\"\r\n                        id=\"standard-leavebal\"\r\n                        name=\"leave_bal\"\r\n                        type=\"numeric\"\r\n                        defaultValue={leave_bal}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"designation\"\r\n                  control={control}\r\n                  defaultValue={designation}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Designation\"\r\n                        id=\"margin-normal\"\r\n                        name=\"designation\"\r\n                        defaultValue={designation}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        select\r\n                      >\r\n                        {designations &&\r\n                          designations.map((r) => {\r\n                            return <MenuItem value={r.name}>{r.name}</MenuItem>;\r\n                          })}\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"department\"\r\n                  control={control}\r\n                  defaultValue={department}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Department\"\r\n                        id=\"margin-normal\"\r\n                        name=\"department\"\r\n                        defaultValue={department}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        select\r\n                      >\r\n                        {departments &&\r\n                          departments.map((r) => {\r\n                            return <MenuItem value={r.name}>{r.name}</MenuItem>;\r\n                          })}\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"reporting_to\"\r\n                  control={control}\r\n                  defaultValue={reporting_to}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Reporting To\"\r\n                        id=\"standard-reportingto\"\r\n                        name=\"reporting_to\"\r\n                        defaultValue={reporting_to}\r\n                        className={classes.textField}\r\n                        onChange={(e) => {\r\n                          onChange(e.target.value);\r\n                          handleReportingTo(e.target.value);\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        select\r\n                      >\r\n                        <MenuItem value=\"\">None</MenuItem>\r\n                        {employees &&\r\n                          employees.map((r) => {\r\n                            return <MenuItem value={r.name}>{r.name}</MenuItem>;\r\n                          })}\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"reporting_email\"\r\n                  control={control}\r\n                  defaultValue={reportemail}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Reporting Email\"\r\n                        id=\"standard-reportingemail\"\r\n                        name=\"reporting_email\"\r\n                        value={reportemail}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <Divider className={classes.divider} />\r\n            </div>\r\n          </Grid>\r\n          <Divider />\r\n        </Paper>\r\n      </form>\r\n\r\n      {/* <div>\r\n        <Grid xs={12}>\r\n          <EmpFamily />\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <EmpEducations />\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <EmpExperiences />\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <EmpTrainings />\r\n        </Grid>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  divider: {\r\n    padding: 4,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n}));\r\n\r\nexport default EmployeeFormNew;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\react-query\\constants.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\leaves\\useUpdateLeaves.js",["3999"],"import { useMutation, useQueryClient } from \"react-query\";\r\nimport { leaves_url } from \"../../utils/constants\";\r\nimport { useCustomToast } from \"../../helpers/useCustomToast\";\r\n\r\nasync function updateLeaves(data) {\r\n  const { id, ...fields } = data;\r\n\r\n  await fetch(leaves_url, {\r\n    method: \"PUT\",\r\n    body: JSON.stringify({ id, ...fields }),\r\n  });\r\n}\r\n\r\nexport function useUpdateLeaves(data) {\r\n  const queryClient = useQueryClient();\r\n  const toast = useCustomToast();\r\n\r\n  const { mutate } = useMutation((data) => updateLeaves(data), {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"leaves\");\r\n      // toast({\r\n      //   title: \"Leave record being updated!\",\r\n      //   status: \"success\",\r\n      // });\r\n    },\r\n  });\r\n\r\n  return mutate;\r\n}\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\expenses\\useUpdateExpenses.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallows\\useDeleteDailyAllows.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallows\\useUpdateDailyAllows.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\ComponentToPrint.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\designations\\useDesignations.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\user-storage\\index.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\trainings\\useDeleteTrainings.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\trainings\\useAddTrainings.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\trainings\\useUpdateTrainings.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\employees\\useEmployees.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\employees\\useUpdateEmployees.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\helpers\\useCustomToast.ts",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\experiences\\useDeleteExperiences.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\experiences\\useAddExperiences.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\experiences\\useExperiences.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\experiences\\useUpdateExperiences.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\educations\\useDeleteEducations.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\educations\\useAddEducations.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\educations\\useUpdateEducations.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\educations\\useEducations.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\family\\useAddFamily.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\family\\useDeleteFamily.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\family\\useUpdateFamily.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\family\\useFamily.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\experiences\\utils.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\employees\\utils.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\educations\\utils.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\family\\utils.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\trainings\\useTrainings.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\trainings\\utils.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\pages\\PayslipStaffPage.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\pages\\TrainingsStaffPage.js",["4000"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport { headLeaveTableCells } from \"../utils/constants\";\r\nimport TrainingsTableStaff from \"../components/LeaveTableStaff\";\r\nimport EmpTrainings from \"../components/EmpTrainings\"\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst TrainingsStaffPage = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <div>\r\n                  <EmpTrainings title=\"Trainings\" headCells={headLeaveTableCells} />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    // height: 300,\r\n    height: \"80vh\",\r\n  },\r\n}));\r\n\r\nexport default TrainingsStaffPage;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\pages\\UserAccessPage.js",["4001"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport { headLeaveTableCells } from \"../utils/constants\";\r\nimport UserAccessTable from \"../components/UserAccessTable\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst LeavePage = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <div>\r\n                  <UserAccessTable  />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    // height: 300,\r\n    height: \"80vh\",\r\n  },\r\n}));\r\n\r\nexport default LeavePage;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\employees\\useAddEmployees.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\PrintPaySummary.js",["4002","4003","4004","4005","4006"],"import pdfMake from \"pdfmake/build/pdfmake\";\r\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\r\nimport { formatPriceZero } from \"../helpers/Utils\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { payrunState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\n\r\nconst PrintPDFTest = ({ singlebatchpayslip }) => {\r\n  const period = singlebatchpayslip[0].period;\r\n  const subtitle = `Payroll Summary for the period  ${period}`;\r\n  const items = singlebatchpayslip.map((r) => {\r\n    return { name: r.name, wages: r.wages_bnd };\r\n  });\r\n  const names = singlebatchpayslip.map((r) => {\r\n    return r.name;\r\n  });\r\n  const wages = singlebatchpayslip.map((r) => {\r\n    const amount = formatPriceZero(r.wages_bnd);\r\n    return amount;\r\n  });\r\n  const tapamount = singlebatchpayslip.map((r) => {\r\n    const amount = formatPriceZero(r.tap_amount_bnd);\r\n    return amount;\r\n  });\r\n  const scpamount = singlebatchpayslip.map((r) => {\r\n    const amount = formatPriceZero(r.scp_amount_bnd);\r\n    return amount;\r\n  });\r\n  const sitesallowsamt = singlebatchpayslip.map((r) => {\r\n    const amount = formatPriceZero(r.site_allows_bnd);\r\n    return amount;\r\n  });\r\n  const expclaimsamt = singlebatchpayslip.map((r) => {\r\n    const amount = formatPriceZero(r.expenses_claims_bnd);\r\n    return amount;\r\n  });\r\n  const allowsamt = singlebatchpayslip.map((r) => {\r\n    const amount = formatPriceZero(r.total_allowances_bnd);\r\n    return amount;\r\n  });\r\n  const deductsamt = singlebatchpayslip.map((r) => {\r\n    const amount = formatPriceZero(r.total_deductions_bnd);\r\n    return amount;\r\n  });\r\n  const nettpay = singlebatchpayslip.map((r) => {\r\n    const amount = formatPriceZero(r.nett_pay_bnd);\r\n    return amount;\r\n  });\r\n  const totalwages = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.wages_bnd;\r\n  }, 0);\r\n  const totaltap = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.tap_amount_bnd;\r\n  }, 0);\r\n  const totalscp = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.scp_amount_bnd;\r\n  }, 0);\r\n  const totalsitesallows = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.site_allows_bnd;\r\n  }, 0);\r\n  const totalexpclaims = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.expenses_claims_bnd;\r\n  }, 0);\r\n  const totalallows = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.total_allowances_bnd;\r\n  }, 0);\r\n  const totaldeducts = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.total_deductions_bnd;\r\n  }, 0);\r\n  const totalnettpay = singlebatchpayslip.reduce((acc, item) => {\r\n    return acc + item.nett_pay_bnd;\r\n  }, 0);\r\n  const { vfs } = vfsFonts.pdfMake;\r\n  pdfMake.vfs = vfs;\r\n\r\n  const documentDefinition = {\r\n    pageSize: \"A4\",\r\n    pageOrientation: \"landscape\",\r\n    content: [\r\n      { text: \"AppSmith Sutera Sdn Bhd\", style: \"header\" },\r\n      { text: subtitle, style: \"subheader\" },\r\n\r\n      {\r\n        style: \"tableExample\",\r\n        table: {\r\n          widths: [200, 50, 50, 50, 50, 50, 50, 50, 50],\r\n          body: [\r\n            [\r\n              {\r\n                alignment: \"center\",\r\n                text: \"Employee Name\",\r\n                style: \"subheader\",\r\n              },\r\n              { alignment: \"right\", text: \"Wages\", style: \"subheader\" },\r\n              { alignment: \"right\", text: \"TAP Amount\", style: \"subheader\" },\r\n              { alignment: \"right\", text: \"SCP Amount\", style: \"subheader\" },\r\n              {\r\n                alignment: \"right\",\r\n                text: \"Site Allowances\",\r\n                style: \"subheader\",\r\n              },\r\n              {\r\n                alignment: \"right\",\r\n                text: \"Expenses Claims\",\r\n                style: \"subheader\",\r\n              },\r\n              { alignment: \"right\", text: \"Allowances\", style: \"subheader\" },\r\n              { alignment: \"right\", text: \"Deductions\", style: \"subheader\" },\r\n              { alignment: \"right\", text: \"Nett Pay\", style: \"subheader\" },\r\n            ],\r\n            [\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 8,\r\n                    ul: names,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 8,\r\n                    alignment: \"right\",\r\n                    ul: wages,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 8,\r\n                    alignment: \"right\",\r\n                    ul: tapamount,\r\n                  },\r\n                ],\r\n              },\r\n\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 8,\r\n                    alignment: \"right\",\r\n                    ul: scpamount,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 8,\r\n                    alignment: \"right\",\r\n                    ul: sitesallowsamt,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 8,\r\n                    alignment: \"right\",\r\n                    ul: expclaimsamt,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 8,\r\n                    alignment: \"right\",\r\n                    ul: allowsamt,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 8,\r\n                    alignment: \"right\",\r\n                    ul: deductsamt,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 8,\r\n                    alignment: \"right\",\r\n                    ul: nettpay,\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n            [\r\n              \"\",\r\n              {\r\n                alignment: \"right\",\r\n                text: formatPriceZero(totalwages),\r\n                style: \"footer\",\r\n              },\r\n              {\r\n                alignment: \"right\",\r\n                text: formatPriceZero(totaltap),\r\n                style: \"footer\",\r\n              },\r\n              {\r\n                alignment: \"right\",\r\n                text: formatPriceZero(totalscp),\r\n                style: \"footer\",\r\n              },\r\n              {\r\n                alignment: \"right\",\r\n                text: formatPriceZero(totalsitesallows),\r\n                style: \"footer\",\r\n              },\r\n              {\r\n                alignment: \"right\",\r\n                text: formatPriceZero(totalexpclaims),\r\n                style: \"footer\",\r\n              },\r\n              {\r\n                alignment: \"right\",\r\n                text: formatPriceZero(totalallows),\r\n                style: \"footer\",\r\n              },\r\n              {\r\n                alignment: \"right\",\r\n                text: formatPriceZero(totaldeducts),\r\n                style: \"footer\",\r\n              },\r\n              {\r\n                alignment: \"right\",\r\n                text: formatPriceZero(totalnettpay),\r\n                style: \"footer\",\r\n              },\r\n            ],\r\n          ],\r\n        },\r\n      },\r\n    ],\r\n    styles: {\r\n      header: {\r\n        fontSize: 12,\r\n        bold: true,\r\n        margin: [0, 0, 0, 10],\r\n      },\r\n      subheader: {\r\n        fontSize: 9,\r\n        bold: true,\r\n        margin: [0, 10, 0, 5],\r\n      },\r\n      footer: {\r\n        fontSize: 8,\r\n        bold: true,\r\n        margin: [0, 10, 0, 5],\r\n      },\r\n      tableExample: {\r\n        margin: [0, 5, 0, 15],\r\n      },\r\n      tableOpacityExample: {\r\n        margin: [0, 5, 0, 15],\r\n        fillColor: \"blue\",\r\n        fillOpacity: 0.3,\r\n      },\r\n      tableHeader: {\r\n        bold: true,\r\n        fontSize: 13,\r\n        color: \"black\",\r\n      },\r\n    },\r\n    defaultStyle: {\r\n      // alignment: 'justify'\r\n    },\r\n  };\r\n\r\n  pdfMake.createPdf(documentDefinition).open();\r\n};\r\n\r\nexport default PrintPDFTest;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\departments\\useDepartments.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallows\\useAddDailyAllows.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallows\\useDailyAllows.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipTableStaff.js",["4007","4008","4009","4010","4011","4012","4013","4014","4015","4016","4017","4018","4019","4020","4021","4022"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useRecoilState, useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n  loginLevelState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { usePayslips } from \"./payslips/usePayslips\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport PrintPayslip from \"./PrintPayslip\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  { title: \"Period\", field: \"payrun\" },\r\n  // {\r\n  //   title: \"Date\",\r\n  //   field: \"date\",\r\n  //   type: \"date\",\r\n  //   dateSetting: { locale: \"en-GB\" },\r\n  // },\r\n  { title: \"Basic Pay\", field: \"wages_bnd\", type: \"currency\" },\r\n  { title: \"TAP Amount\", field: \"tap_amount_bnd\", type: \"currency\" },\r\n  { title: \"SCP Amount\", field: \"scp_amount_bnd\", type: \"currency\" },\r\n  { title: \"Site Allowances\", field: \"site_allows_bnd\", type: \"currency\" },\r\n  { title: \"Expenses Claims\", field: \"expenses_claims_bnd\", type: \"currency\" },\r\n  { title: \"Allowances\", field: \"total_allowances_bnd\", type: \"currency\" },\r\n  { title: \"Deductions\", field: \"total_deductions_bnd\", type: \"currency\" },\r\n  { title: \"Nett Pay\", field: \"nett_pay_bnd\", type: \"currency\" },\r\n  // { title: \"Bank Name\", field: \"bank_name\" },\r\n  // { title: \"Bank AC No\", field: \"bank_accno\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function PayslipTable() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { employees } = useEmployees();\r\n  const [emp, setEmp] = useState();\r\n  const { payslips, setFilter } = usePayslips();\r\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\r\n  const {\r\n    deletePayslip,\r\n    loadPayslips,\r\n    getSinglePayslip,\r\n    setEditPayslipID,\r\n    setIsPayslipEditingOn,\r\n    setIsPayslipEditingOff,\r\n    resetSinglePayslip,\r\n    payslip_period,\r\n    payslip_endmonthdate,\r\n  } = usePayslipsContext();\r\n  console.log(\"payslipstable\", payslips)\r\n  const exportPdfTable = ({ data, emp }) => {\r\n    PrintPayslip({ data, emp });\r\n  };\r\n\r\n  const print_Payslip = async (data) => {\r\n    const { empid } = data.rowData;\r\n    const emp = employees\r\n      .filter((f) => f.id === empid)\r\n      .map((r) => {\r\n        return { ...r };\r\n      });\r\n    exportPdfTable({ data, emp });\r\n  };\r\n\r\n  const update_Payslip = async (data) => {\r\n    const { id } = data;\r\n    setPayPeriodEmpId(id); //save to recoil\r\n    setEditPayslipID(id);\r\n    setIsPayslipEditingOn();\r\n    getSinglePayslip(id);\r\n    history.push(\"/singlepayslip\");\r\n  };\r\n\r\n  const add_Payslip = async (data) => {\r\n    const { id } = data;\r\n    resetSinglePayslip();\r\n    setEditPayslipID(\"\");\r\n    setIsPayslipEditingOff();\r\n    history.push(\"/singlepayslip\");\r\n  };\r\n\r\n  const delete_Payslip = (data) => {\r\n    const { id } = data;\r\n    setEditPayslipID(id);\r\n    deletePayslip(id);\r\n    loadPayslips();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          //data={payslips}\r\n          data={payslips.sort((a, b) =>\r\n            a.payrun > b.payrun ? -1 : b.payrun > a.payrun ? 1 : 0\r\n          )}\r\n          title=\"Payslips\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n            Build: (props) => <BuildOutlinedIcon />,\r\n            Print: (props) => <PrintIcon />,\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"print\",\r\n              tooltip: \"Print Payslip\",\r\n              onClick: (event, rowData) => {\r\n                print_Payslip({ rowData });\r\n              },\r\n            },\r\n            // {\r\n            //   icon: \"delete\",\r\n            //   tooltip: \"Delete Record\",\r\n            //   onClick: (event, rowData) => {\r\n            //     delete_Payslip(rowData);\r\n            //   },\r\n            // },\r\n            // {\r\n            //   icon: \"add\",\r\n            //   tooltip: \"Add Record\",\r\n            //   isFreeAction: true,\r\n            //   onClick: (event, rowData) => {\r\n            //     add_Payslip(rowData);\r\n            //   },\r\n            // },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\UserAccessTable.js",["4023","4024","4025","4026","4027","4028"],"import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, Button, Icon } from \"@chakra-ui/react\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useUpdateEmployees } from \"./employees/useUpdateEmployees\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Department\",\r\n    field: \"department\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Designation\",\r\n    field: \"designation\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Role\",\r\n    field: \"role\",\r\n    lookup: {\r\n      1: \"Staff\",\r\n      2: \"Admin\",\r\n      3: \"Ops Supervisor\",\r\n      4: \"AdminManager\",\r\n      5: \"Manager\",\r\n      6: \"Director\",\r\n    },\r\n  },\r\n];\r\n\r\nexport default function UserAccessTable() {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { employees } = useEmployees();\r\n  const updateEmployees = useUpdateEmployees();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n\r\n  const update_rec = (data) => {\r\n    const { id, rec_id, role, ...fields } = data;\r\n    updateEmployees({ id, role: parseInt(role, 10), ...fields });\r\n  };\r\n\r\n  return (\r\n    <div className={fixedHeightPaper}>\r\n      {/* <div className={classes.root}> */}\r\n      <Box w=\"100%\" mt=\"65\">\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={employees}\r\n          title=\"User Access Table\"\r\n          editable={{\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...employees];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  update_rec(newData);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            pageSize: 10,\r\n            headerStyle: {\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}></div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </Box>\r\n      {/* </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\expenses\\useDeleteExpenses.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\expenses\\useExpenses.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\expenses\\useAddExpenses.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\leaves\\useDeleteLeaves.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\leaves\\useAddLeaves.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\leaves\\useLeaves.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\helpers\\Utils.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\payrun\\usePayrun.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallows\\utils.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\PrintPayslip.js",["4029","4030","4031","4032","4033"],"import pdfMake from \"pdfmake/build/pdfmake\";\r\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\r\nimport { formatPrice, formatPriceZero } from \"../helpers/Utils\";\r\nimport { Divider } from \"@material-ui/core\";\r\n\r\nconst PrintPayslip = ({ data, emp }) => {\r\n  var months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  const subtitle =\r\n    \"Payslip for the month of \" +\r\n    months[parseInt(data.rowData.payrun.slice(-2) - 1)] +\r\n    \" \" +\r\n    data.rowData.payrun.slice(0, 4);\r\n  const footer =\r\n    \"This is computer generated report so no signature is required\";\r\n  const {\r\n    empno,\r\n    ic_no,\r\n    designation,\r\n    bank_acno,\r\n    bank_name,\r\n    tap_acno,\r\n    scp_acno,\r\n    payrun,\r\n  } = emp[0];\r\n  const { name, total_allowances_bnd, total_deductions_bnd } = data.rowData;\r\n  const totalEarnings =\r\n    data.rowData.wages_bnd +\r\n    data.rowData.site_allows_bnd +\r\n    data.rowData.expenses_claims_bnd +\r\n    data.rowData.total_allowances_bnd;\r\n  const totalDeductions =\r\n    data.rowData.tap_amount_bnd +\r\n    data.rowData.scp_amount_bnd +\r\n    data.rowData.total_deductions_bnd;\r\n  const earningsdesp = [\r\n    \"Wages\",\r\n    data.rowData.site_allows_bnd === 0 ? \"\" : data.rowData.allows_type1,\r\n    data.rowData.expenses_claims_bnd === 0 ? \"\" : data.rowData.allows_type2,\r\n    data.rowData.allows_type3,\r\n    data.rowData.allows_type4,\r\n    data.rowData.allows_type5,\r\n    data.rowData.allows_type6,\r\n    data.rowData.allows_type7,\r\n    data.rowData.allows_type8,\r\n  ];\r\n  const earningsamt = [\r\n    formatPrice(data.rowData.wages_bnd),\r\n    data.rowData.site_allows_bnd === 0\r\n      ? \"\"\r\n      : formatPrice(data.rowData.site_allows_bnd),\r\n    data.rowData.expenses_claims_bnd === 0\r\n      ? \"\"\r\n      : formatPrice(data.rowData.expenses_claims_bnd),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.allows_type3amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.allows_type4amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.allows_type5amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.allows_type6amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.allows_type7amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.allows_type8amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n  ];\r\n  const deductionsdesp = [\r\n    data.rowData.tap_amount_bnd === 0 ? \"\" : \"TAP Amount\",\r\n    data.rowData.scp_amount_bnd === 0 ? \"\" : \"SCP Amount\",\r\n    data.rowData.deducts_type1,\r\n    data.rowData.deducts_type2,\r\n    data.rowData.deducts_type3,\r\n    data.rowData.deducts_type4,\r\n    data.rowData.deducts_type5,\r\n    data.rowData.deducts_type6,\r\n    data.rowData.deducts_type7,\r\n    data.rowData.deducts_type8,\r\n  ];\r\n  const deductionsamt = [\r\n    formatPrice(parseFloat(data.rowData.tap_amount_bnd, 10)),\r\n    formatPrice(parseFloat(data.rowData.scp_amount_bnd, 10)),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.deducts_type1amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.deducts_type2amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.deducts_type3amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.deducts_type4amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.deducts_type5amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.deducts_type6amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.deducts_type7amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.allows_type8amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n  ];\r\n\r\n  pdfMake.fonts = {\r\n    Courier: {\r\n      normal: \"Courier\",\r\n      bold: \"Courier-Bold\",\r\n      italics: \"Courier-Oblique\",\r\n      bolditalics: \"Courier-BoldOblique\",\r\n    },\r\n    Helvetica: {\r\n      normal: \"Helvetica\",\r\n      bold: \"Helvetica-Bold\",\r\n      italics: \"Helvetica-Oblique\",\r\n      bolditalics: \"Helvetica-BoldOblique\",\r\n    },\r\n    Times: {\r\n      normal: \"Times-Roman\",\r\n      bold: \"Times-Bold\",\r\n      italics: \"Times-Italic\",\r\n      bolditalics: \"Times-BoldItalic\",\r\n    },\r\n    Roboto: {\r\n      normal: \"Roboto-Regular.ttf\",\r\n      bold: \"Roboto-Medium.ttf\",\r\n      italics: \"Roboto-Italic.ttf\",\r\n      bolditalics: \"Roboto-MediumItalic.ttf\",\r\n    },\r\n    Symbol: {\r\n      normal: \"Symbol\",\r\n    },\r\n    ZapfDingbats: {\r\n      normal: \"ZapfDingbats\",\r\n    },\r\n  };\r\n\r\n  const { vfs } = vfsFonts.pdfMake;\r\n  pdfMake.vfs = vfs;\r\n\r\n  const documentDefinition = {\r\n    pageSize: \"A4\",\r\n    pageOrientation: \"portrait\",\r\n    content: [\r\n      {\r\n        image: \"logo\",\r\n        width: 200,\r\n      },\r\n      // { text: \"AppSmith Sutera Sdn Bhd\", style: \"header\" },\r\n      { text: subtitle + \"\\n\", style: \"subheader\" },\r\n      {\r\n        canvas: [\r\n          {\r\n            type: \"line\",\r\n            x1: 0,\r\n            y1: 5,\r\n            x2: 500,\r\n            y2: 5,\r\n            lineWidth: 2,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        columns: [\r\n          {\r\n            width: 90,\r\n            text: \"\\n\",\r\n          },\r\n          {\r\n            width: 20,\r\n            text: \"\",\r\n          },\r\n          {\r\n            width: \"200\",\r\n            text: \"\",\r\n          },\r\n          {\r\n            width: \"*\",\r\n            text: \"\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        columns: [\r\n          {\r\n            width: 90,\r\n            text: \"Emp No \",\r\n          },\r\n          {\r\n            width: 20,\r\n            text: \":\",\r\n          },\r\n          {\r\n            width: \"200\",\r\n            text: empno,\r\n          },\r\n          {\r\n            width: \"*\",\r\n            text: \"\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        columns: [\r\n          {\r\n            width: 90,\r\n            text: \"Name \",\r\n          },\r\n          {\r\n            width: 20,\r\n            text: \":\",\r\n          },\r\n          {\r\n            width: 200,\r\n            text: name,\r\n          },\r\n          {\r\n            width: \"*\",\r\n            text: \"\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        columns: [\r\n          {\r\n            width: 90,\r\n            text: \"I/C No \",\r\n          },\r\n          {\r\n            width: 20,\r\n            text: \":\",\r\n          },\r\n          {\r\n            width: 200,\r\n            text: ic_no,\r\n          },\r\n          {\r\n            width: \"*\",\r\n            text: \"\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        columns: [\r\n          {\r\n            width: 90,\r\n            text: \"Designation \",\r\n          },\r\n          {\r\n            width: 20,\r\n            text: \":\",\r\n          },\r\n          {\r\n            width: 200,\r\n            text: designation,\r\n          },\r\n          {\r\n            width: \"*\",\r\n            text: \"\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        columns: [\r\n          {\r\n            width: 90,\r\n            text: \"Bank A/C No \",\r\n          },\r\n          {\r\n            width: 20,\r\n            text: \":\",\r\n          },\r\n          {\r\n            width: 200,\r\n            text: bank_acno,\r\n          },\r\n          {\r\n            width: \"*\",\r\n            text: \"\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        columns: [\r\n          {\r\n            width: 90,\r\n            text: \"TAP No \",\r\n          },\r\n          {\r\n            width: 20,\r\n            text: \":\",\r\n          },\r\n          {\r\n            width: 200,\r\n            text: tap_acno,\r\n          },\r\n          {\r\n            width: \"*\",\r\n            text: \"\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        columns: [\r\n          {\r\n            width: 90,\r\n            text: \"SCP No \",\r\n          },\r\n          {\r\n            width: 20,\r\n            text: \":\",\r\n          },\r\n          {\r\n            width: 200,\r\n            text: scp_acno,\r\n          },\r\n          {\r\n            width: \"*\",\r\n            text: \"\",\r\n          },\r\n        ],\r\n      },\r\n      // {\r\n      //   text: [\r\n      //     { text: \"Emp No : \" + empno + \"\\n\", style: \"text\" },\r\n      //     { text: \"Name   : \" + name + \"\\n\", style: \"text\" },\r\n      //     { text: \"Addess : \" + address + \"\\n\", style: \"text\" },\r\n      //     { text: \"Phone  : \" + phone + \"\\n\\n\", style: \"text\" },\r\n      //   ],\r\n      // },\r\n\r\n      {\r\n        table: {\r\n          headerRows: 1,\r\n          widths: [\"97%\"],\r\n          body: [[\"\"], [\"\"]],\r\n        },\r\n        layout: \"headerLineOnly\",\r\n      },\r\n      {\r\n        style: \"tableExample\",\r\n        table: {\r\n          widths: [150, 80, 150, 80],\r\n          body: [\r\n            [\r\n              { alignment: \"left\", text: \"Earnings\" },\r\n              { alignment: \"right\", text: \"Amount\" },\r\n              { alignment: \"left\", text: \"Deductions\" },\r\n              { alignment: \"right\", text: \"Amount\" },\r\n            ],\r\n            [\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    ul: earningsdesp,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    alignment: \"right\",\r\n                    ul: earningsamt,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    ul: deductionsdesp,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    alignment: \"right\",\r\n                    ul: deductionsamt,\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n            [\r\n              { alignment: \"left\", text: \"Total Earnings\" },\r\n              { alignment: \"right\", text: formatPrice(totalEarnings) },\r\n              { alignment: \"left\", text: \"Total Deductions\" },\r\n              { alignment: \"right\", text: formatPriceZero(totalDeductions) },\r\n            ],\r\n            [\r\n              { alignment: \"left\", text: \"\" },\r\n              { alignment: \"right\", text: \"\" },\r\n              { alignment: \"left\", text: \"Nett Pay\" },\r\n              { alignment: \"right\", text: formatPrice(data.rowData.nett_pay) },\r\n            ],\r\n          ],\r\n        },\r\n      },\r\n      // {\r\n      //   style: \"tableExample\",\r\n      //   table: {\r\n      //     widths: [480, 80],\r\n      //     body: [\r\n      //       [\r\n      //         { alignment: \"left\", text: \"Nettpay\" },\r\n      //         { alignment: \"right\", text: \"Amount\" },\r\n      //       ],\r\n      //     ],\r\n      //   },\r\n      // },\r\n      { text: footer + \"\\n\", style: \"footer\" },\r\n    ],\r\n    styles: {\r\n      header: {\r\n        fontSize: 18,\r\n        bold: true,\r\n        margin: [0, 0, 0, 10],\r\n      },\r\n      subheader: {\r\n        fontSize: 16,\r\n        bold: true,\r\n        margin: [0, 10, 0, 5],\r\n      },\r\n      text: {\r\n        fontSize: 12,\r\n        bold: false,\r\n        margin: [0, 10, 0, 5],\r\n      },\r\n      tableExample: {\r\n        margin: [0, 5, 0, 15],\r\n      },\r\n      tableOpacityExample: {\r\n        margin: [0, 5, 0, 15],\r\n        fillColor: \"blue\",\r\n        fillOpacity: 0.3,\r\n      },\r\n      tableHeader: {\r\n        bold: true,\r\n        fontSize: 13,\r\n        color: \"black\",\r\n      },\r\n    },\r\n    defaultStyle: {\r\n      // alignment: 'justify'\r\n      //font: \"Helvetica\",\r\n    },\r\n    images: {\r\n      logo: \"https://res.cloudinary.com/dlmzwvakr/image/upload/v1626939253/appsmith/AppSutLogo_rakamz.jpg\",\r\n      img1: \"./AppSutLogo.jpg\",\r\n    },\r\n  };\r\n\r\n  pdfMake.createPdf(documentDefinition).open();\r\n};\r\n\r\nexport default PrintPayslip;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\employees\\useDeleteEmployees.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\deductions\\useDeductions.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\allowances\\useAllowances.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\employees\\useSingleEmployee.js",["4034"],"import React, { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { employees_url } from \"../../utils/constants\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getSingleEmployee(singleEmployeeId) {\r\n  const { data } = await axios.get(`${employees_url}?id=${singleEmployeeId}`);\r\n  return data;\r\n}\r\n\r\nexport function useSingleEmployee() {\r\n  const [singleEmployeeId, setSingleEmployeeId] = useState(\"\");\r\n  const fallback = [];\r\n  const { data: singleemployee = fallback } = useQuery(\r\n    [queryKeys.singleemployee, singleEmployeeId],\r\n    () => getSingleEmployee(singleEmployeeId)\r\n  );\r\n  return { singleemployee, setSingleEmployeeId };\r\n}\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\WPExpiryViewAdmin.js",["4035","4036","4037","4038","4039","4040","4041","4042","4043","4044","4045","4046","4047","4048","4049","4050","4051","4052","4053","4054","4055","4056"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  GridItem,\r\n  Icon,\r\n  Heading,\r\n  IconButton,\r\n  Spacer,\r\n  Stack,\r\n} from \"@chakra-ui/react\";\r\nimport { EditIcon, EmailIcon, ViewIcon } from \"@chakra-ui/icons\";\r\nimport { differenceInDays, addDays } from \"date-fns\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useUser } from \"./user/useUser\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\n\r\nconst drawerWidth = 240;\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Work Permit No\",\r\n    field: \"workpermitno\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Work Permit Expiry\",\r\n    field: \"workpermit_expirydate\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n];\r\n\r\nconst WPExpiryViewAdmin = () => {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const history = useHistory();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { employees, setFilter, setEmployeeId } = useEmployees();\r\n  const [emaildata, setEmailData] = useState([]);\r\n  const { user } = useUser();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [userdata, setUserdata] = useState([]);\r\n  const today = Date().toLocaleString();\r\n  const {\r\n    editEmployeeID,\r\n    employees_loading,\r\n    //deleteEmployee,\r\n    //loadEmployees,\r\n    setEditEmployeeID,\r\n    setIsEditingOn,\r\n    setIsEditingOff,\r\n    resetSingleEmployee,\r\n    resetEmployees,\r\n    //getSingleEmployee,\r\n  } = useEmployeesContext();\r\n  const emp = employees.filter(\r\n    (i) =>\r\n      differenceInDays(new Date(i.workpermit_expirydate), new Date(today)) < 90\r\n  );\r\n  const handleEmailButtonClick = () => {\r\n    console.log(\"data\", emp);\r\n    var data = {\r\n      to_name: \"pvchin\",\r\n      to_email: \"pvchinbn@gmail.com\",\r\n      message:\r\n        \"This is a reminder on your work permit being expired within 90 days!!\",\r\n      cc_to: \"pvchinbn@yahoo.com\",\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, data, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${data.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${data.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleOnClick = (id) => {\r\n    resetSingleEmployee();\r\n    resetEmployees();\r\n    setEditEmployeeID(id);\r\n    setIsEditingOn();\r\n    setEmployeeId(id);\r\n\r\n    history.push(\"/singleemployee\");\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setFilter(user.id);\r\n  // }, []);\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <Grid container direction=\"row\">\r\n        {/* <Heading as=\"h4\" size=\"md\">\r\n          Work Permit Expiry Within 90 days\r\n          <IconButton\r\n            variant=\"outline\"\r\n            colorScheme=\"teal\"\r\n            aria-label=\"Email\"\r\n            icon={<EmailIcon />}\r\n            size=\"lg\"\r\n            w={6}\r\n            h={6}\r\n            s={5}\r\n            onClick={() => handleEmailButtonClick()}\r\n          />\r\n        </Heading> */}\r\n        <Stack direction=\"row\">\r\n          <Heading as=\"h4\" size=\"md\">\r\n            Work Permit Expiry Within 90 days\r\n          </Heading>\r\n          <Spacer />\r\n          <IconButton\r\n            // variant=\"outline\"\r\n            size=\"md\"\r\n            aria-label=\"Edit\"\r\n            icon={<EditIcon />}\r\n            onClick={() => history.push(\"/allemployees\")}\r\n          />\r\n        </Stack>\r\n        {emp.map((row) => {\r\n          return (\r\n            <Grid templateColumns=\"repeat(13, 1fr)\" gap={3} p={1}>\r\n              <GridItem colSpan={1}>\r\n                <Box w=\"100%\">\r\n                  <IconButton\r\n                    size=\"sm\"\r\n                    aria-label=\"Edit\"\r\n                    icon={<ViewIcon />}\r\n                    onClick={()=>handleOnClick(row.id)}\r\n                  />\r\n                </Box>\r\n              </GridItem>\r\n              <GridItem colSpan={3}>\r\n                <Box w=\"100%\">{row.name}</Box>\r\n              </GridItem>\r\n              <GridItem colSpan={3}>\r\n                <Box w=\"100%\">{row.workpermitno}</Box>\r\n              </GridItem>\r\n              <GridItem colSpan={3}>\r\n                <Box w=\"100%\">{row.workpermit_expirydate}</Box>\r\n              </GridItem>\r\n            </Grid>\r\n            // <ListItem key={row.id}>\r\n            //   <Grid item sm={4} align=\"center\">\r\n            //     <ListItemText>{row.name}</ListItemText>\r\n            //   </Grid>\r\n            //   <Grid item sm={4} align=\"center\">\r\n            //     <ListItemText>{row.workpermitno}</ListItemText>\r\n            //   </Grid>\r\n            //   <Grid item sm={4} align=\"center\">\r\n            //     <ListItemText>{row.workpermit_expirydate}</ListItemText>\r\n            //   </Grid>\r\n            // </ListItem>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default WPExpiryViewAdmin;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\TrainingsTableViewAdmin.js",["4057","4058","4059","4060","4061","4062","4063","4064","4065","4066","4067","4068","4069","4070","4071","4072","4073","4074","4075","4076","4077","4078"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  GridItem,\r\n  Icon,\r\n  Heading,\r\n  IconButton,\r\n  Spacer,\r\n  Stack,\r\n} from \"@chakra-ui/react\";\r\nimport { EditIcon, EmailIcon, ViewIcon } from \"@chakra-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { differenceInDays, addDays } from \"date-fns\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { selector, useRecoilState, useRecoilValueLoadable } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { leaves_url } from \"../utils/constants\";\r\nimport { useTrainings } from \"./trainings/useTrainings\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst TrainingsTableViewAdmin = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { trainings, filter, setFilter, setTrainingId } = useTrainings();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const today = Date().toLocaleString();\r\n  const { employees, setEmployeeId } = useEmployees();\r\n  const {\r\n    editEmployeeID,\r\n    employees_loading,\r\n    //deleteEmployee,\r\n    //loadEmployees,\r\n    setEditEmployeeID,\r\n    setIsEditingOn,\r\n    setIsEditingOff,\r\n    resetSingleEmployee,\r\n    resetEmployees,\r\n    //getSingleEmployee,\r\n  } = useEmployeesContext();\r\n\r\n  // useEffect(() => {\r\n  //   setFilter(loginLevel.loginUserId);\r\n  // }, []);\r\n\r\n  const handleOnClick = (id) => {\r\n    resetSingleEmployee();\r\n    resetEmployees();\r\n    setEditEmployeeID(id);\r\n    setIsEditingOn();\r\n    setEmployeeId(id);\r\n\r\n    history.push(\"/singleemployee\");\r\n  };\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <Grid container direction=\"row\">\r\n        <Stack direction=\"row\">\r\n          <Heading as=\"h4\" size=\"md\">\r\n            Trainings Schedule Expiry Within 90 days\r\n          </Heading>\r\n          <Spacer />\r\n          <IconButton\r\n            // variant=\"outline\"\r\n            size=\"md\"\r\n            aria-label=\"Edit\"\r\n            icon={<EditIcon />}\r\n            onClick={() => history.push(\"/allemployees\")}\r\n          />\r\n        </Stack>\r\n\r\n        {trainings\r\n          .filter(\r\n            (i) =>\r\n              differenceInDays(new Date(i.expiry_date), new Date(today)) < 90 &&\r\n              differenceInDays(new Date(today), new Date(i.expiry_date)) < 0\r\n          )\r\n          .map((row) => {\r\n            return (\r\n              <Grid templateColumns=\"repeat(13, 1fr)\" gap={3} p={1}>\r\n                <GridItem colSpan={1}>\r\n                  <Box w=\"100%\">\r\n                    <IconButton\r\n                      size=\"sm\"\r\n                      aria-label=\"Edit\"\r\n                      icon={<ViewIcon />}\r\n                      onClick={() => handleOnClick(row.empid)}\r\n                    />\r\n                  </Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.name}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.course}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.institute}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.expiry_date}</Box>\r\n                </GridItem>\r\n              </Grid>\r\n              // <ListItem key={row.id}>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.name}</ListItemText>\r\n              //   </Grid>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.institute}</ListItemText>\r\n              //   </Grid>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.course}</ListItemText>\r\n              //   </Grid>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.expiry_date}</ListItemText>\r\n              //   </Grid>\r\n              // </ListItem>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default TrainingsTableViewAdmin;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\payslips\\usePayslips.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallowsdetls\\useAddDailyAllowsDetls.js",["4079"],"import { useMutation, useQueryClient } from \"react-query\";\r\nimport { dailyallowsdetls_url } from \"../../utils/constants\";\r\nimport { useCustomToast } from \"../../helpers/useCustomToast\";\r\n\r\nasync function addDailyAllowsDetls(data) {\r\n  await fetch(dailyallowsdetls_url, {\r\n    method: \"POST\",\r\n    body: JSON.stringify({ ...data }),\r\n  });\r\n}\r\n\r\nexport function useAddDailyAllowsDetls(data) {\r\n  const queryClient = useQueryClient();\r\n  const toast = useCustomToast();\r\n\r\n  const { mutate } = useMutation((data) => addDailyAllowsDetls(data), {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"dailyallowsdetls\");\r\n      // toast({\r\n      //   title: \"Site Allowance daily details record being added!\",\r\n      //   status: \"success\",\r\n      // });\r\n    },\r\n  });\r\n\r\n  return mutate;\r\n}\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallowsdetls\\useDeleteDailyAllowsDetls.js",["4080"],"import { useMutation, useQueryClient } from \"react-query\";\r\nimport { dailyallowsdetls_url } from \"../../utils/constants\";\r\nimport { useCustomToast } from \"../../helpers/useCustomToast\";\r\n\r\nasync function deleteDailyAllowsDetls(id) {\r\n  await fetch(dailyallowsdetls_url, {\r\n    method: \"DELETE\",\r\n    body: JSON.stringify({ id: id }),\r\n  });\r\n}\r\n\r\nexport function useDeleteDailyAllowsDetls(data) {\r\n  const queryClient = useQueryClient();\r\n  const toast = useCustomToast();\r\n\r\n  const { mutate } = useMutation((data) => deleteDailyAllowsDetls(data), {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"dailyallowsdetls\");\r\n      // toast({\r\n      //   title: \"Site Allowance daily details record being deleted!\",\r\n      //   status: \"warning\",\r\n      // });\r\n    },\r\n  });\r\n\r\n  return mutate;\r\n}\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallowsdetls\\useUpdateDailyAllowsDetls.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\expenses\\utils.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveTableViewAdmin.js",["4081","4082","4083","4084","4085","4086","4087","4088","4089","4090","4091","4092","4093","4094","4095","4096","4097","4098","4099","4100","4101","4102","4103","4104","4105","4106","4107","4108","4109"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { differenceInDays, differenceInMonths } from \"date-fns\";\r\nimport axios from \"axios\";\r\nimport MaterialTable from \"material-table\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Heading,\r\n  GridItem,\r\n  Icon,\r\n  IconButton,\r\n  Stack,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\nimport { EditIcon, ViewIcon } from \"@chakra-ui/icons\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { selector, useRecoilState, useRecoilValueLoadable } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { leaves_url } from \"../utils/constants\";\r\nimport { useLeaves } from \"./leaves/useLeaves\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport LeaveFormAdmin from \"./LeaveFormAdmin\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst initial_form = {\r\n  name: \"\",\r\n  to_date: \"\",\r\n  from_date: \"\",\r\n  reason: \"\",\r\n  status: \"Pending\",\r\n  no_of_days: 0,\r\n  leave_bal: 0,\r\n};\r\n\r\n// const fetchExpensesDetails = selector({\r\n//   key: \"fetchExpensesDetailsSelector\",\r\n//   get: async ({ get }) => {\r\n//     try {\r\n//       const { data } = await axios.get(expenses_url);\r\n//       const wpexpirydata = data;\r\n\r\n//       return data;\r\n//     } catch (error) {\r\n//       throw error;\r\n//     }\r\n//   },\r\n// });\r\n\r\nconst LeaveTableViewStaff = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { leaves, filter, setFilter, setLeaveId } = useLeaves();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [userdata, setUserdata] = useState([]);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  //const [userdata, setUserdata] = useRecoilState(userdatastate);\r\n  //const ExpensesDetails = useRecoilValueLoadable(fetchExpensesDetails);\r\n  //const { state, contents } = ExpensesDetails;\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const [formdata, setFormdata] = useState(initial_form);\r\n  const { leaves_loading, leaves_error, loadEmpLeaves } = useLeavesContext();\r\n  const today = Date().toLocaleString();\r\n  const {\r\n    // leaves,\r\n    editLeaveID,\r\n    deleteLeave,\r\n    loadLeaves,\r\n    getSingleLeave,\r\n    setEditLeaveID,\r\n    setIsLeaveEditingOn,\r\n    setIsLeaveEditingOff,\r\n    resetSingleLeave,\r\n  } = useLeavesContext();\r\n\r\n  const handleOnClick = (data) => {\r\n    setFormdata({ ...data });\r\n    setFormdata({ ...data });\r\n    setEditLeaveID(data.id);\r\n    setIsLeaveEditingOn();\r\n    handleDialogOpen()\r\n    //history.push(\"/singleleave\");\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    // if (isLeaveEditing) {\r\n    //   loadEmpLeaves(editEmployeeID);\r\n    // }\r\n  };\r\n  return (\r\n    <List className={classes.root}>\r\n      <Grid container direction=\"row\">\r\n        <Stack direction=\"row\">\r\n          <Heading as=\"h4\" size=\"md\">\r\n            Leaves Schedule\r\n          </Heading>\r\n          <Spacer />\r\n          <IconButton\r\n            // variant=\"outline\"\r\n            size=\"md\"\r\n            aria-label=\"Edit\"\r\n            icon={<EditIcon />}\r\n            onClick={() => history.push(\"/leave\")}\r\n          />\r\n        </Stack>\r\n\r\n        {leaves\r\n          .filter(\r\n            (i) =>\r\n              i.status === \"Approve\" &&\r\n              differenceInDays(new Date(i.from_date), new Date(today)) < 60 &&\r\n              differenceInDays(new Date(i.to_date), new Date(today)) < 60 &&\r\n              differenceInDays(new Date(i.from_date), new Date(today)) > 0\r\n          )\r\n          .map((row) => {\r\n            return (\r\n              <>\r\n                <Grid templateColumns=\"repeat(13, 1fr)\" gap={3} p={1}>\r\n                  <GridItem colSpan={1}>\r\n                    <Box w=\"100%\">\r\n                      <IconButton\r\n                        size=\"sm\"\r\n                        aria-label=\"Edit\"\r\n                        icon={<ViewIcon />}\r\n                        onClick={() => handleOnClick(row)}\r\n                      />\r\n                    </Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={3}>\r\n                    <Box w=\"100%\">{row.name}</Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={3}>\r\n                    <Box w=\"100%\">{row.from_date}</Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={3}>\r\n                    <Box w=\"100%\">{row.to_date}</Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={3}>\r\n                    <Box w=\"100%\">{row.reason}</Box>\r\n                  </GridItem>\r\n                </Grid>\r\n                <CustomDialog\r\n                  isOpen={isDialogOpen}\r\n                  handleClose={handleDialogClose}\r\n                  title=\"\"\r\n                  showButton={true}\r\n                  isFullscree={false}\r\n                >\r\n                  <LeaveFormAdmin\r\n                    formdata={formdata}\r\n                    setFormdata={setFormdata}\r\n                    handleDialogClose={handleDialogClose}\r\n                  />\r\n                </CustomDialog>\r\n              </>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default LeaveTableViewStaff;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\leaves\\utils.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\TrainingsTableViewStaff.js",["4110","4111","4112","4113","4114","4115","4116","4117","4118","4119","4120","4121","4122","4123","4124","4125","4126","4127"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  GridItem,\r\n  Icon,\r\n  Heading,\r\n  IconButton,\r\n  Spacer,\r\n  Stack,\r\n} from \"@chakra-ui/react\";\r\nimport { EditIcon, EmailIcon, ViewIcon } from \"@chakra-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { differenceInDays, addDays } from \"date-fns\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { selector, useRecoilState, useRecoilValueLoadable } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { leaves_url } from \"../utils/constants\";\r\nimport { useTrainings } from \"./trainings/useTrainings\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst TrainingsTableViewStaff = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { trainings, filter, setFilter, setTrainingId } = useTrainings();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const today = Date().toLocaleString();\r\n\r\n  useEffect(() => {\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <Grid direction=\"row\">\r\n        <Stack direction=\"row\">\r\n          <Heading as=\"h4\" size=\"md\">\r\n            Trainings Schedule Expiry Within 90 days\r\n          </Heading>\r\n          <Spacer />\r\n          <IconButton\r\n            // variant=\"outline\"\r\n            size=\"md\"\r\n            aria-label=\"Edit\"\r\n            icon={<EditIcon />}\r\n            onClick={() => history.push(\"/singleemployee\")}\r\n          />\r\n        </Stack>\r\n        {/* <Heading as=\"h4\" size=\"md\">\r\n          Trainings Schedule Expiry Within 90 days\r\n        </Heading> */}\r\n        {trainings\r\n          .filter(\r\n            (i) =>\r\n              differenceInDays(new Date(i.expiry_date), new Date(today)) < 90 &&\r\n              differenceInDays(new Date(today), new Date(i.expiry_date)) < 0\r\n          )\r\n          .map((row) => {\r\n            return (\r\n              <Grid templateColumns=\"repeat(9, 1fr)\" gap={3} p={1}>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.institute}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.course}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.expiry_date}</Box>\r\n                </GridItem>\r\n              </Grid>\r\n              // <ListItem key={row.id}>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.institute}</ListItemText>\r\n              //   </Grid>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.course}</ListItemText>\r\n              //   </Grid>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.expiry_date}</ListItemText>\r\n              //   </Grid>\r\n              // </ListItem>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default TrainingsTableViewStaff;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallowsdetls\\useDailyAllowsDetls.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\designations\\useAddDesignations.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\designations\\useDeleteDesignations.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\designations\\useUpdateDesignations.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\departments\\useUpdateDepartments.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\departments\\useDeleteDepartments.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\departments\\useAddDepartments.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\deductions\\useAddDeductions.js",[],["4128","4129"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\allowances\\useAddAllowances.js",[],["4130","4131"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\allowances\\useDeleteAllowances.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\allowances\\useUpdateAllowances.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\payrun\\utils.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\deductions\\useDeleteDeductions.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\deductions\\useUpdateDeductions.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\payslips\\utils.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallowsdetls\\utils.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\helpers\\TableContainer.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\helpers\\Sort.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\InstitutesTable.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\institutes\\useAddInstitutes.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\institutes\\useUpdateInstitutes.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\institutes\\useInstitutes.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\institutes\\useDeleteInstitutes.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\helpers\\EmailSent.js",["4132","4133"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\payrun\\useDeletePayrun.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\payslips\\usePayslipsBatch.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\currency\\useCurrency.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\CurrencyTable.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\currency\\useUpdateCurrency.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\currency\\useDeleteCurrency.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\currency\\useAddCurrency.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\expenses\\useExpensesPayrun.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveFormAdmin.js",["4134","4135","4136","4137","4138","4139","4140","4141","4142","4143","4144","4145","4146","4147"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useLeaves } from \"./leaves/useLeaves\";\r\nimport { useAddLeaves } from \"./leaves/useAddLeaves\";\r\nimport { useDeleteLeaves } from \"./leaves/useDeleteLeaves\";\r\nimport { useUpdateLeaves } from \"./leaves/useUpdateLeaves\";\r\n\r\nconst initial_state = {\r\n  name: \"\",\r\n  to_date: \"\",\r\n  from_date: \"\",\r\n  reason: \"\",\r\n  status: \"Pending\",\r\n  no_of_days: 0,\r\n  leave_bal: 0,\r\n};\r\n\r\nconst LeaveForm = ({ formdata, setFormdata, handleDialogClose }) => {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast()\r\n  const { leaves, filter, setFilter, setLeaveId } = useLeaves();\r\n  const updateLeaves = useUpdateLeaves();\r\n  const addLeaves = useAddLeaves();\r\n  const [state, setState] = useState(initial_state);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { handleSubmit, control } = useForm();\r\n  const initialValues = Object.values(initial_state).join(\"\");\r\n  const { isLeaveEditing, editLeaveID } = useLeavesContext();\r\n\r\n  //console.log(\"leave\", isLeaveEditing, formdata);\r\n  const onSubmit = (data) => {\r\n    console.log(\"leave\", data);\r\n    if (isLeaveEditing) {\r\n      updateLeaves({ id: editLeaveID, ...data });\r\n       toast({\r\n         title: \"Leave record being rejected!\",\r\n         status: \"success\",\r\n       });\r\n    } else {\r\n      addLeaves({\r\n        ...data,\r\n        empid: loginLevel.loginUserId,\r\n        reporting_email: loginLevel.reporting_email,\r\n      });\r\n    }\r\n\r\n    //history.push(\"/leave\");\r\n    handleDialogClose();\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setState(initial_state);\r\n  //   setState({ ...formdata });\r\n  //   setState({ ...formdata });\r\n  //   console.log(\"laeve form\",state)\r\n  // }, [initialValues]);\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          LEAVE FORM\r\n        </Typography>\r\n        <Typography component=\"p\">Leave Application</Typography>\r\n        <Divider />\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Controller\r\n              name=\"name\"\r\n              control={control}\r\n              defaultValue={formdata.name}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    id=\"margin-normal\"\r\n                    name=\"name\"\r\n                    defaultValue={formdata.name}\r\n                    //value={value}\r\n                    className={classes.textField}\r\n                    onChange={(e) => {\r\n                      console.log(e.target.value);\r\n                      onChange(e.target.value);\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    //select\r\n                  >\r\n                    {/* {employees.map((e) => {\r\n                      return (\r\n                        <MenuItem key={e.name} value={e.name}>\r\n                          {e.name}\r\n                        </MenuItem>\r\n                      );\r\n                    })} */}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              // rules={{ required: \"Name required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"from_date\"\r\n              control={control}\r\n              defaultValue={formdata.from_date}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"From Date\"\r\n                    type=\"date\"\r\n                    id=\"margin-normal\"\r\n                    name=\"from_date\"\r\n                    defaultValue={formdata.from_date}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"From Date is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"to_date\"\r\n              control={control}\r\n              defaultValue={formdata.to_date}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"To Date\"\r\n                    id=\"margin-normal\"\r\n                    type=\"date\"\r\n                    name=\"to_date\"\r\n                    defaultValue={formdata.to_date}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"To Date is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"leave_bal\"\r\n              control={control}\r\n              defaultValue={formdata.leave_bal}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    disable\r\n                    label=\"Leave Balance\"\r\n                    type=\"number\"\r\n                    id=\"standard-number\"\r\n                    name=\"leave_bal\"\r\n                    defaultValue={formdata.leave_bal}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"no_of_days\"\r\n              control={control}\r\n              defaultValue={formdata.no_of_days}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"No Of Days\"\r\n                    type=\"number\"\r\n                    id=\"standard-number\"\r\n                    name=\"no_of_days\"\r\n                    defaultValue={formdata.no_of_days}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                     InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                 \r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"reason\"\r\n              control={control}\r\n              defaultValue={formdata.reason}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Reason\"\r\n                    id=\"margin-normal\"\r\n                    name=\"reason\"\r\n                    defaultValue={formdata.reason}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                     InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                  \r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"status\"\r\n              control={control}\r\n              defaultValue={formdata.status}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Status\"\r\n                    id=\"margin-normal\"\r\n                    name=\"status\"\r\n                    defaultValue={formdata.status}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    // select\r\n                  >\r\n                    {/* <MenuItem value=\"Pending\">Pending</MenuItem>\r\n                    <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n                    <MenuItem value=\"Approve\">Approve</MenuItem>\r\n                    <MenuItem value=\"Reject\">Reject</MenuItem> */}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            {/* <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              Submit <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button> */}\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default LeaveForm;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveTableAdmin.js",["4148","4149","4150","4151","4152","4153","4154","4155","4156","4157","4158"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveFormAdmin from \"./LeaveFormAdmin\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeaves } from \"./leaves/useLeaves\";\r\nimport { useAddLeaves } from \"./leaves/useAddLeaves\";\r\nimport { useDeleteLeaves } from \"./leaves/useDeleteLeaves\";\r\nimport { useUpdateLeaves } from \"./leaves/useUpdateLeaves\";\r\n\r\nconst initial_form = {\r\n  name: \"\",\r\n  to_date: \"\",\r\n  from_date: \"\",\r\n  reason: \"\",\r\n  status: \"Pending\",\r\n  no_of_days: 0,\r\n  leave_bal: 0,\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Leave Balance\",\r\n    field: \"leave_bal\",\r\n    type: \"numeric\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"No of Days\",\r\n    field: \"no_of_days\",\r\n    type: \"numeric\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Reason\",\r\n    field: \"reason\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function LeaveTable() {\r\n  const classes = useStyles();\r\n  const { leaves, filter, setFilter, setLeaveId } = useLeaves();\r\n  const updateLeaves = useUpdateLeaves();\r\n  const addLeaves = useAddLeaves();\r\n  const deleteLeaves = useDeleteLeaves();\r\n  const [formdata, setFormdata] = useState(initial_form);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const { loadEmployees } = useEmployeesContext();\r\n  const {\r\n    // leaves,\r\n    editLeaveID,\r\n    leaves_loading,\r\n    deleteLeave,\r\n    loadLeaves,\r\n    getSingleLeave,\r\n    setEditLeaveID,\r\n    setIsLeaveEditingOn,\r\n    setIsLeaveEditingOff,\r\n    resetSingleLeave,\r\n  } = useLeavesContext();\r\n\r\n  useEffect(() => {\r\n    setLeaveId(editLeaveID);\r\n  }, []);\r\n\r\n  const update_Leave = async (data) => {\r\n    const { id } = data;\r\n    setFormdata({ ...data });\r\n    setEditLeaveID(id);\r\n    setIsLeaveEditingOn();\r\n    getSingleLeave(id);\r\n    handleDialogOpen();\r\n    //history.push(\"/singleleave\");\r\n  };\r\n\r\n  const add_Leave = async (data) => {\r\n    // const { id } = data;\r\n    setFormdata({ ...data });\r\n    resetSingleLeave();\r\n    setEditLeaveID(\"\");\r\n    setIsLeaveEditingOff();\r\n    handleDialogOpen();\r\n    //history.push(\"/singleleave\");\r\n  };\r\n\r\n  const delete_Leave = (data) => {\r\n    const { id } = data;\r\n    setEditLeaveID(id);\r\n    handleAlertOpen();\r\n    //deleteLeave(id);\r\n    //loadLeaves();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editLeaveID;\r\n    deleteLeaves(id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={leaves}\r\n          title=\"Leave Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <AddIcon />,\r\n            View: (props) => <VisibilityIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: () => <VisibilityIcon />,\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Leave(rowData);\r\n              },\r\n            },\r\n            // {\r\n            //   icon: \"delete\",\r\n            //   tooltip: \"Delete Record\",\r\n            //   onClick: (event, rowData) => {\r\n            //     delete_Leave(rowData);\r\n            //   },\r\n            // },\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Leave(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n        >\r\n          <LeaveFormAdmin\r\n            formdata={formdata}\r\n            setFormdata={setFormdata}\r\n            handleDialogClose={handleDialogClose}\r\n          />\r\n        </CustomDialog>\r\n\r\n        <AlertDialogBox\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveTableManager.js",["4159","4160","4161","4162","4163","4164","4165"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\n\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\nconst ADMINMANAGER_EMAIL = process.env.ADMINMANAGER_EMAIL;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Leave Balance\",\r\n    field: \"leave_bal\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      width: 10,\r\n      maxWidth: 10,\r\n    },\r\n  },\r\n  {\r\n    title: \"Days\",\r\n    field: \"no_of_days\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      width: 10,\r\n      maxWidth: 10,\r\n    },\r\n  },\r\n  {\r\n    title: \"Reason\",\r\n    field: \"reason\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      width: 10,\r\n      maxWidth: 10,\r\n    },\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      width: 50,\r\n      maxWidth: 50,\r\n    },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function LeaveTable({\r\n  leavesdata,\r\n  setLeavesdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const { employees } = useEmployees();\r\n  const {\r\n    editLeaveID,\r\n    updateLeave,\r\n    deleteLeave,\r\n    loadLeaves,\r\n    update_leave_error,\r\n  } = useLeavesContext();\r\n\r\n  const { updateEmployee, update_employee_error } = useEmployeesContext();\r\n\r\n  // useEffect(() => {\r\n  //   loadLeaves();\r\n  // }, []);\r\n\r\n  const handleLeaveFormDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleLeaveFormDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    loadLeaves();\r\n  };\r\n\r\n  const handleLeaveFormAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleLeaveFormAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleLeaveFormOnDeleteConfirm = () => {\r\n    const id = editLeaveID;\r\n    deleteLeave(id);\r\n    loadLeaves();\r\n  };\r\n\r\n  const handleSentEmail = (data, result) => {\r\n    const { from_date, to_date, name, empid } = data;\r\n    const emp = employees\r\n      .filter((f) => f.id === empid)\r\n      .map((r) => {\r\n        return { ...r };\r\n      });\r\n    //console.log(\"leave form\", data, emp);\r\n\r\n    var emaildata = {\r\n      to_name: name,\r\n      to_email: emp[0].email,\r\n      message: `Your leave application from ${from_date} to ${to_date} has been ${result}!`,\r\n      cc_to: ADMINMANAGER_EMAIL,\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const Approve_LeaveData = () => {\r\n    leavesdata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updateLeave({ id: rec.id, status: \"Approved\" });\r\n        //update leavesdata\r\n        if (!update_leave_error) {\r\n          const recdata = leavesdata.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Approved\";\r\n\r\n          // update leave bal\r\n          //console.log(\"leave\", rec.empid, employees);\r\n          const empleavebal = employees\r\n            .filter((r) => r.id === rec.empid)\r\n            .map((item) => {\r\n              return item.leave_bal;\r\n            });\r\n          const leavebal = empleavebal - rec.no_of_days;\r\n          updateEmployee({ id: rec.empid, leave_bal: leavebal });\r\n        }\r\n        //sent email\r\n        handleSentEmail(rec, \"Approved\");\r\n      }\r\n    });\r\n    leavesdata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  const Reject_LeaveData = () => {\r\n    leavesdata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updateLeave({ id: rec.id, status: \"Rejected\" });\r\n        //update leavesdata\r\n        if (!update_leave_error) {\r\n          const recdata = leavesdata.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Rejected\";\r\n        }\r\n        //sent email\r\n        handleSentEmail(rec, \"Rejected\");\r\n      }\r\n    });\r\n    leavesdata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  const Save_LeaveData = () => {\r\n    leavesdata.forEach((data) => {\r\n      const { id } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updateLeave({ id, ...fields });\r\n      }\r\n    });\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  // if (expenses_loading) {\r\n  //   return (\r\n\r\n  // if (leaves_loading) {\r\n  //   return (\r\n  //     <div>\r\n  //       <h2>Loading...Leaves</h2>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={leavesdata.filter(\r\n            (r) => r.reporting_email === loginLevel.loginEmail\r\n          )}\r\n          title=\"Leave Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         const dataUpdate = [...leavesdata];\r\n          //         const index = oldData.tableData.id;\r\n          //         dataUpdate[index] = newData;\r\n          //         setLeavesdata([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          options={{\r\n            filtering: true,\r\n            selection: true,\r\n            headerStyle: {\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Approve_LeaveData}\r\n                  >\r\n                    Approve\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Reject_LeaveData}\r\n                  >\r\n                    Reject\r\n                  </Button>\r\n                  {/* <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_LeaveData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button> */}\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleLeaveFormDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n        >\r\n          <LeaveForm handleDialogClose={handleLeaveFormDialogClose} />\r\n        </CustomDialog>\r\n\r\n        <AlertDialogBox\r\n          onClose={handleLeaveFormAlertClose}\r\n          onConfirm={handleLeaveFormOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseTableManager.js",["4166","4167","4168","4169","4170","4171","4172","4173","4174","4175","4176"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\n\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\nconst ADMINMANAGER_EMAIL = process.env.ADMINMANAGER_EMAIL;\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  { title: \"Name\", field: \"name\", editable: \"never\" },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Description\",\r\n    field: \"description\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\", editable: \"never\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function ExpenseTable({\r\n  expensesdata,\r\n  setExpensesdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [isLoad, setIsLoad] = useState(false);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const { employees } = useEmployees();\r\n  const {\r\n    editExpenseID,\r\n    updateExpense,\r\n    update_expense_error,\r\n    expenses_loading,\r\n    deleteExpense,\r\n    loadPendingExpenses,\r\n  } = useExpensesContext();\r\n\r\n  // useEffect(() => {\r\n  //   setExpensesdata(expenses);\r\n  //   console.log(expensesdata)\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   loadEmployees();\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (expenses) {\r\n  //     setExpensesdata(expenses);\r\n  //     console.log(\"expenses\", expenses, expensesdata)\r\n  //   } else {\r\n  //     setIsLoad(!isLoad);\r\n  //   }\r\n  // }, [isLoad]);\r\n\r\n  const handleExpenseFormDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleExpenseFormDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  const handleExpenseFormAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleExpenseFormAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleExpenseFormOnDeleteConfirm = () => {\r\n    const id = editExpenseID;\r\n    deleteExpense(id);\r\n    loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  const handleSentEmail = (data, result) => {\r\n    const { date, empid, name } = data;\r\n    const emp = employees\r\n      .filter((f) => f.id === empid)\r\n      .map((r) => {\r\n        return { ...r };\r\n      });\r\n    // console.log(\"leave form\", emp[0].email, data);\r\n    var emaildata = {\r\n      to_name: name,\r\n      to_email: emp[0].email,\r\n      message: `Your expenses claim application dated on ${date} has been ${result}!`,\r\n      cc_to: ADMINMANAGER_EMAIL,\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const Save_ExpenseData = () => {\r\n    expensesdata.forEach((data) => {\r\n      const { id } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updateExpense({ id, ...fields });\r\n      }\r\n    });\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  const Approve_ExpenseData = () => {\r\n    expensesdata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updateExpense({ id: rec.id, status: \"Approved\" });\r\n        //update leavesdata\r\n        if (!update_expense_error) {\r\n          const recdata = expensesdata.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Approved\";\r\n        }\r\n        //sent email\r\n        handleSentEmail(rec, \"Approved\");\r\n      }\r\n    });\r\n    expensesdata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  const Reject_ExpenseData = () => {\r\n    expensesdata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updateExpense({ id: rec.id, status: \"Rejected\" });\r\n        //update leavesdata\r\n        if (!update_expense_error) {\r\n          const recdata = expensesdata.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Rejected\";\r\n        }\r\n        //sent email\r\n        handleSentEmail(rec, \"Rejected\");\r\n      }\r\n    });\r\n    expensesdata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  if (!expensesdata) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Expenses</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={expensesdata}\r\n          title=\"Expenses Claims Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         const dataUpdate = [...expensesdata];\r\n          //         const index = oldData.tableData.id;\r\n          //         dataUpdate[index] = newData;\r\n          //         setExpensesdata([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          options={{\r\n            filtering: true,\r\n            selection: true,\r\n            headerStyle: {\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Approve_ExpenseData}\r\n                  >\r\n                    Approve <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Reject_ExpenseData}\r\n                  >\r\n                    Reject <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                  {/* <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_ExpenseData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button> */}\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleExpenseFormDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n        >\r\n          <ExpenseForm handleDialogClose={handleExpenseFormDialogClose} />\r\n        </CustomDialog>\r\n\r\n        <AlertDialogBox\r\n          onClose={handleExpenseFormAlertClose}\r\n          onConfirm={handleExpenseFormOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\payslips\\useUpdatePayslips.js",["4177"],"import { useMutation, useQueryClient } from \"react-query\";\r\nimport { payslips_url } from \"../../utils/constants\";\r\nimport { useCustomToast } from \"../../helpers/useCustomToast\";\r\n\r\nasync function updatePayslips(data) {\r\n  const { id, ...fields } = data;\r\n\r\n  await fetch(payslips_url, {\r\n    method: \"PUT\",\r\n    body: JSON.stringify({ id, ...fields }),\r\n  });\r\n}\r\n\r\nexport function useUpdatePayslips(data) {\r\n  const queryClient = useQueryClient();\r\n  const toast = useCustomToast();\r\n\r\n  const { mutate } = useMutation((data) => updatePayslips(data), {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"payslips\");\r\n      // toast({\r\n      //   title: \"Payslip record being updated!\",\r\n      //   status: \"success\",\r\n      // });\r\n    },\r\n  });\r\n\r\n  return mutate;\r\n}\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallows\\useDailyAllowsBatch.js",[],["4178","4179"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\payrun\\useUpdatePayrun.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipTableViewManager.js",["4180","4181","4182","4183","4184","4185","4186","4187","4188","4189"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst FILTERSTRING = \"Verified\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Batch\",\r\n    field: \"payrun\",\r\n    editable: \"never\",\r\n  },\r\n  // { title: \"Period\", field: \"period\", editable: \"never\" },\r\n  // {\r\n  //   title: \"PayDate\",\r\n  //   field: \"pay_date\",\r\n  //   type: \"date\",\r\n  //   dateSetting: { locale: \"en-GB\" },\r\n  //   editable: \"never\",\r\n  // },\r\n  {\r\n    title: \"Wages\",\r\n    field: \"totalwages\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"TAP Amount\",\r\n    field: \"totaltap\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"SCP Amount\",\r\n    field: \"totalscp\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Site Allowances\",\r\n    field: \"totalsitesallows\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Expenses Claims\",\r\n    field: \"totalexpensesclaims\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Allowances\",\r\n    field: \"totalallows\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Deductions\",\r\n    field: \"totaldeducts\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Payroll\",\r\n    field: \"totalpayroll\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  // { title: \"Bank Name\", field: \"bank_name\" },\r\n  // { title: \"Bank AC No\", field: \"bank_accno\" },\r\n  { title: \"Status\", field: \"status\", editable: \"never\" },\r\n];\r\n\r\nexport default function PayslipTableVIew() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\r\n  const {\r\n    batchpayrun,\r\n    getBatchPayrun,\r\n    batchpayrun_loading,\r\n    batchpayrun_error,\r\n    loadPendingPayslips,\r\n  } = usePayslipsContext();\r\n  //const { loadEmployees, employees } = useEmployeesContext();\r\n\r\n  useEffect(() => {\r\n    getBatchPayrun(FILTERSTRING);\r\n  }, []);\r\n\r\n  if (batchpayrun_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading.....Payslips</h2>\r\n      </div>\r\n    );\r\n  }\r\n  if (batchpayrun_error) {\r\n    return (\r\n      <div>\r\n        <h2>Internet connection problem!</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={batchpayrun}\r\n          title=\"Payslips\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"black\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallowsdetls\\useDailyAllowsDetlsBatch.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\helpers\\AlertDialogBox.js",["4190","4191"],"import React, { useState, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogContent,\r\n  AlertDialogOverlay,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\n\r\nexport const AlertDialogBox = ({\r\n  isOpen,\r\n  onClose,\r\n  onConfirm,\r\n  title,\r\n  children,\r\n}) => {\r\n  const cancelRef = useRef(null);\r\n\r\n  return (\r\n    <AlertDialog\r\n      isOpen={isOpen}\r\n      cancelRef={cancelRef}\r\n      onClose={onClose}\r\n      conConfirm={onConfirm}\r\n      blockScrollOnMount={true}\r\n    >\r\n      <AlertDialogOverlay>\r\n        <AlertDialogContent>\r\n          <AlertDialogHeader\r\n            fontFamily=\"roboto\"\r\n            fontWeight=\"bold\"\r\n            fontSize=\"1.5rem\"\r\n          >\r\n            {title}\r\n          </AlertDialogHeader>\r\n\r\n          <AlertDialogBody fontFamily=\"roboto\" fontSize=\"1.25rem\">\r\n            {children}\r\n          </AlertDialogBody>\r\n\r\n          <AlertDialogFooter>\r\n            {/* <Button ref={cancelRef} onClick={onClose}> */}\r\n            <Button\r\n              w=\"100px\"\r\n              py=\"0.5rem\"\r\n              fontFamily=\"cursive\"\r\n              onClick={onClose}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              colorScheme=\"red\"\r\n              py=\"0.5rem\"\r\n              w=\"100px\"\r\n              ml={3}\r\n              fontFamily=\"cursive\"\r\n              onClick={() => {\r\n                onClose();\r\n                onConfirm();\r\n              }}\r\n            >\r\n              Confirm\r\n            </Button>\r\n          </AlertDialogFooter>\r\n        </AlertDialogContent>\r\n      </AlertDialogOverlay>\r\n    </AlertDialog>\r\n  );\r\n};\r\n\r\n// export const AlertDialogBox = ({\r\n//   isOpen,\r\n//   onClose,\r\n//   cancelRef,\r\n//   heading,\r\n//   children,\r\n\r\n// }) => {\r\n//   return (\r\n//     <>\r\n//       <AlertDialog\r\n//         isopen={isOpen}\r\n//         onClose={onClose}\r\n//         leastDestructiveRef={cancelRef}\r\n//       >\r\n//         <AlertDialogOverlay>\r\n//           <AlertDialogContent>\r\n//             <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n//               {heading}\r\n//             </AlertDialogHeader>\r\n//             <AlertDialogBody>{children}</AlertDialogBody>\r\n//             <AlertDialogFooter>\r\n//               <Button ref={cancelRef} onClick={onClose}>\r\n//                 Cancel\r\n//               </Button>\r\n//               <Button\r\n//                 colorScheme=\"red\"\r\n//                 onClick={() => {\r\n//                   // handleClose();\r\n//                   // onConfirm();\r\n//                   onClose();\r\n//                 }}\r\n//                 ml={3}\r\n//               >\r\n//                 Confirm\r\n//               </Button>\r\n//             </AlertDialogFooter>\r\n//           </AlertDialogContent>\r\n//         </AlertDialogOverlay>\r\n//       </AlertDialog>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// AlertDialogBox.propTypes = {\r\n//   isOpen: PropTypes.bool.isRequired,\r\n//   handleClose: PropTypes.func.isRequired,\r\n//   onConfirm: PropTypes.func.isRequired,\r\n//   title: PropTypes.string.isRequired,\r\n//   children: PropTypes.element.isRequired,\r\n// };\r\n","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\CustomAlertDialog.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\helpers\\CardLayout4.js",["4192","4193","4194","4195","4196","4197","4198","4199","4200","4201","4202","4203","4204","4205"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport { Box} from \"@chakra-ui/react\"\r\n\r\nconst CardLayout3 = ({ title, children, handleClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box maxW=\"sm\" borderColor=\"blue.500\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"500\",\r\n  },\r\n  card: {\r\n    margin: \"15px 10px\",\r\n    padding: 0,\r\n    border: \"solid 1px black\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"dark\",\r\n  },\r\n  small: {\r\n    gridRowEnd: \"span 26\",\r\n  },\r\n  medium: {\r\n    gridRowEnd: \"span 33\",\r\n  },\r\n  large: {\r\n    gridRowEnd: \"span 45\",\r\n  },\r\n}));\r\n\r\nexport default CardLayout3;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\expenses\\useExpensesStatus.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\payrun\\usePayrunStatus.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipTableViewSummary.js",["4206","4207","4208","4209","4210","4211","4212","4213","4214","4215","4216","4217","4218","4219"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box} from \"@chakra-ui/react\"\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { usePayrunStatus} from \"./payrun/usePayrunStatus\"\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  // { title: \"Period\", field: \"period\" },\r\n  {\r\n    title: \"Payrun Batch\",\r\n    field: \"payrun\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  // {\r\n  //   title: \"Pay Date\",\r\n  //   field: \"pay_date\",\r\n  //   type: \"date\",\r\n  //   dateSetting: { locale: \"en-GB\" },\r\n  // },\r\n  { title: \"Total Wages\", field: \"totalwages\", type: \"currency\" },\r\n  { title: \"TAP Amount\", field: \"totaltap\", type: \"currency\" },\r\n  { title: \"SCP Amount\", field: \"totalscp\", type: \"currency\" },\r\n  { title: \"Site Allowances\", field: \"totalsitesallows\", type: \"currency\" },\r\n  { title: \"Expenses Claims\", field: \"totalexpensesclaims\", type: \"currency\" },\r\n  { title: \"Total Allowances\", field: \"totalallows\", type: \"currency\" },\r\n  { title: \"Total Deductions\", field: \"totaldeducts\", type: \"currency\" },\r\n  { title: \"Total Payroll\", field: \"totalpayroll\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\n\r\nexport default function PayslipTableVIew({status}) {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\r\n  const { payrun, getPayrun,payrun_loading, loadPendingPayslips } =\r\n    usePayslipsContext();\r\n  //const { loadEmployees, employees } = useEmployeesContext();\r\n  const { payrunstatus, setPayrunStatusId} = usePayrunStatus()\r\n  \r\n  \r\n  useEffect(() => {\r\n    setPayrunStatusId(status);\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n    \r\n        <Box maxW=\"100%\" pt=\"5px\" overflow=\"Scroll\">\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payrunstatus}\r\n          title=\"Payslips\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            paging: false,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesTableViewSummary.js",["4220","4221","4222","4223","4224","4225","4226","4227","4228","4229","4230","4231","4232","4233","4234","4235","4236","4237","4238","4239","4240","4241","4242","4243","4244","4245","4246","4247","4248","4249","4250","4251","4252","4253"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport {\r\n  useSetRecoilState,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  useRecoilValueLoadable,\r\n} from \"recoil\";\r\nimport {\r\n  allowsPeriodState,\r\n  allowsDataState,\r\n  empidState,\r\n} from \"./data/atomdata\";\r\nimport { fetchDailyAllowancesSelector } from \"./data/selectordata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useDailyAllowsPeriod } from \"./dailyallows/useDailyAllowsPeriod\";\r\n\r\nconst FILTERSTRING = \"Submitted\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  { title: \"Period\", field: \"period\" },\r\n  { title: \"Location\", field: \"location\" },\r\n  { title: \"Manager\", field: \"manager_name\" },\r\n  { title: \"Days\", field: \"no_of_days\", type: \"numeric\" },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function DailyAllowancesTable({ month, year }) {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const period = `${year}-${month}`;\r\n\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [tmpallowsdata, setTmpallowsdata] = useState([]);\r\n  const allows_period = useRecoilValue(allowsPeriodState);\r\n  const allows_empid = useRecoilValue(empidState);\r\n  const [allowsdata, setAllowsdata] = useRecoilState(allowsDataState);\r\n  const setEmpID = useSetRecoilState(empidState);\r\n  const title = `Site Allowances (${allows_period})`;\r\n  const { dailyallowsperiod, setDailyAllowsPeriodId } = useDailyAllowsPeriod();\r\n  const {\r\n    dailyallowances,\r\n    loadPendingDailyAllowances,\r\n    singlebatch_dailyallowance,\r\n    singlebatch_dailyallowance_loading,\r\n    deleteDailyAllowance,\r\n    setEditDailyAllowanceID,\r\n    setIsDailyAllowanceEditingOn,\r\n    setIsDailyAllowanceEditingOff,\r\n    resetSingleDailyAllowance,\r\n    dailyallowance_period,\r\n    getSingleBatchDailyAllowance,\r\n  } = useDailyAllowancesContext();\r\n\r\n  useEffect(() => {\r\n    setDailyAllowsPeriodId(period);\r\n  }, []);\r\n\r\n  const handleDialogOpen = () => {\r\n    //console.log(\"allowsdetls\", allowsdata, allowsdataRef, singlebatch_dailyallowsdetl);\r\n    //setAllowsdata({ singlebatch_dailyallowsdetl });\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    //getSingleBatchDailyAllowance(dailyallowance_period);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box maxW=\"100%\" pt=\"5px\" overflow=\"scroll\">\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={dailyallowsperiod}\r\n          title={title}\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            paging: false,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  dialog: {\r\n    width: 1000,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseTableViewSummary.js",["4254","4255","4256","4257","4258","4259","4260","4261","4262","4263","4264","4265","4266","4267","4268","4269","4270","4271","4272","4273","4274"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialogBox\";\r\nimport { useExpensesStatus } from \"./expenses/useExpensesStatus\";\r\nimport { useExpensesPeriod } from \"./expenses/useExpensesPeriod\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n\r\n  { title: \"Description\", field: \"description\" },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function ExpenseTableView({ year, month }) {\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [totals, setTotals] = useState(0);\r\n  const [isCalc, setIsCalc] = useState(false);\r\n  const { loadEmployees } = useEmployeesContext();\r\n  const { expensesstatus, setExpStatusId } = useExpensesStatus();\r\n  const { expensesperiod, setExpPeriodYrId, setExpPeriodMthId } =\r\n    useExpensesPeriod();\r\n\r\n  useEffect(() => {\r\n    setExpPeriodYrId(year);\r\n    setExpPeriodMthId(month);\r\n    setIsCalc(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (expensesperiod) {\r\n      Calc_Totals();\r\n      setIsCalc(false);\r\n    }\r\n  }, [isCalc]);\r\n\r\n  const Calc_Totals = () => {\r\n    const amount = expensesperiod.reduce((acc, r) => {\r\n      if (r.status === \"Approved\" || r.status === \"Approve\") {\r\n        return acc + r.amount;\r\n      } else {\r\n        return acc;\r\n      }\r\n    }, 0);\r\n    setTotals(amount);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <Box maxW=\"100%\" pt=\"5px\" overflow=\"scroll\">\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={expensesperiod}\r\n          title=\"Leave Application\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            paging: false,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"white\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallows\\useDailyAllowsStatus.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\helpers\\BarChartStack.js",["4275"],"import React from \"react\";\r\nimport { Bar, char } from \"react-chartjs-2\";\r\nimport { Box, Container } from \"@chakra-ui/react\";\r\n\r\nconst data = {\r\n  labels: [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ],\r\n  datasets: [\r\n    {\r\n      label: \"Basic Salary\",\r\n      backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n      borderColor: \"rgba(255,99,132,1)\",\r\n      borderWidth: 1,\r\n      stack: 1,\r\n      hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n      hoverBorderColor: \"rgba(255,99,132,1)\",\r\n      data: [65, 59, 50, 61, 56, 55, 40, 55, 50, 65, 70, 65],\r\n    },\r\n    {\r\n      label: \"Site Allowances\",\r\n      backgroundColor: \"#D6BCFA\",\r\n      borderColor: \"rgba(255,99,132,1)\",\r\n      borderWidth: 1,\r\n      stack: 1,\r\n      hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n      hoverBorderColor: \"rgba(255,99,132,1)\",\r\n      data: [25, 29, 20, 41, 16, 25, 20, 25, 23, 15, 24, 22],\r\n    },\r\n    {\r\n      label: \"Allowances\",\r\n      backgroundColor: \"skyblue\",\r\n      borderColor: \"rgba(255,99,132,1)\",\r\n      borderWidth: 1,\r\n      stack: 1,\r\n      hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n      hoverBorderColor: \"rgba(255,99,132,1)\",\r\n      data: [25, 29, 10, 41, 16, 25, 20, 25, 23, 15, 24, 22],\r\n    },\r\n    {\r\n      label: \"Expenses Claims\",\r\n      backgroundColor: \"grey\",\r\n      borderColor: \"rgba(255,99,132,1)\",\r\n      borderWidth: 1,\r\n      stack: 1,\r\n      hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n      hoverBorderColor: \"rgba(255,99,132,1)\",\r\n      data: [25, 39, 20, 21, 16, 25, 20, 16, 25, 35, 25, 33],\r\n    },\r\n    {\r\n      label: \"TAP/SCP\",\r\n      backgroundColor: \"cyan\",\r\n      borderColor: \"rgba(255,99,132,1)\",\r\n      borderWidth: 1,\r\n      stack: 1,\r\n      hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n      hoverBorderColor: \"rgba(255,99,132,1)\",\r\n      data: [25, 39, 15, 21, 16, 25, 20, 16, 25, 35, 25, 33],\r\n    },\r\n    {\r\n      label: \"Deductions\",\r\n      backgroundColor: \"#9AE6B4\",\r\n      borderColor: \"rgba(255,99,132,1)\",\r\n      borderWidth: 1,\r\n      stack: 1,\r\n      hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n      hoverBorderColor: \"rgba(255,99,132,1)\",\r\n      data: [25, 39, 10, 11, 16, 25, 20, 16, 25, 35, 25, 33],\r\n    },\r\n  ],\r\n};\r\n\r\nexport default function BarChartStack() {\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    type: \"bar\",\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          stacked: true,\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          stacked: true,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  return (\r\n    <Container maxW=\"container.x2\">\r\n      <Box>\r\n        <Bar data={data} width=\"1200\" height=\"2800\" options={options} />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\SummaryTableView.js",["4276","4277","4278","4279"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\n\r\nexport default function SummaryTableView({columns, data}) {\r\n  const classes = useStyles();\r\n      \r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={data}\r\n          title=\"Expenses Claims\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"white\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\BarChart.js",["4280"],"import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst state = {\r\n  labels: [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ],\r\n  datasets: [\r\n    {\r\n      label: \"Expenses\",\r\n      backgroundColor: \"rgba(75,192,192,1)\",\r\n      borderColor: \"rgba(0,0,0,1)\",\r\n      borderWidth: 2,\r\n      data: [65, 59, 80, 81, 56, 0, 0, 0, 0, 0, 0, 0],\r\n    },\r\n  ],\r\n};\r\n\r\nexport default function BarChart({ heading, barchartdata }) {\r\n  return (\r\n    <div>\r\n      <Bar\r\n        data={barchartdata}\r\n        height=\"80\"\r\n        options={{\r\n          title: {\r\n            display: true,\r\n            text: { heading },\r\n            fontSize: 20,\r\n          },\r\n          legend: {\r\n            display: true,\r\n            position: \"right\",\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\expenses\\useExpensesPeriod.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseTableHistoryView.js",["4281","4282","4283","4284","4285","4286","4287","4288","4289","4290","4291","4292","4293","4294","4295","4296","4297","4298","4299","4300"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialogBox\";\r\nimport { useExpensesStatus } from \"./expenses/useExpensesStatus\";\r\nimport { useExpensesPeriod } from \"./expenses/useExpensesPeriod\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n\r\n  { title: \"Description\", field: \"description\" },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function ExpenseTableHistoryView() {\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const { loadEmployees } = useEmployeesContext();\r\n  const { expensesstatus, setExpStatusId } = useExpensesStatus();\r\n  const { expensesperiod, setExpPeriodId } = useExpensesPeriod();\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={expensesstatus}\r\n          title=\"Leave Application\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"white\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n",["4301","4302"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallows\\useDailyAllowsPeriod.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\LeavesTableViewSummary.js",["4303","4304","4305","4306","4307","4308","4309","4310","4311","4312","4313","4314","4315","4316","4317","4318","4319","4320"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, Button, HStack, Text } from \"@chakra-ui/react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialogBox\";\r\nimport { useLeavesPeriod } from \"./leaves/useLeavesPeriod\";\r\nimport Export2Excel from \"./ExportLeave2Excel\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"No of Days\",\r\n    field: \"no_of_days\",\r\n    type: \"numeric\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Reason\",\r\n    field: \"reason\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\n\r\n\r\n\r\nexport default function LeaveTableViewSummary({ year, month }) {\r\n  const classes = useStyles();\r\n  const { leavesperiod, setLeavePeriodYrId, setLeavePeriodMthId } =\r\n    useLeavesPeriod();\r\n\r\n  useEffect(() => {\r\n    setLeavePeriodYrId(year);\r\n    setLeavePeriodMthId(month);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      {/* <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}> */}\r\n      \r\n      <Box maxW=\"100%\" pt=\"5px\" overflow=\"scroll\">\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={leavesperiod}\r\n          title=\"Leave Application\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            paging: false,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"white\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </Box>\r\n    </div>\r\n    // </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\leaves\\useLeavesPeriod.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpensesSummaryTableView.js",["4321","4322","4323","4324","4325","4326","4327","4328","4329","4330","4331","4332","4333","4334","4335","4336","4337"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialogBox\";\r\nimport { useExpensesPeriod } from \"./expenses/useExpensesPeriod\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"January\",\r\n    field: \"jan\",\r\n  },\r\n  {\r\n    title: \"February\",\r\n    field: \"feb\",\r\n  },\r\n  {\r\n    title: \"March\",\r\n    field: \"mar\",\r\n  },\r\n  {\r\n    title: \"April\",\r\n    field: \"apr\",\r\n  },\r\n  {\r\n    title: \"May\",\r\n    field: \"may\",\r\n  },\r\n  {\r\n    title: \"June\",\r\n    field: \"jun\",\r\n  },\r\n  {\r\n    title: \"July\",\r\n    field: \"jul\",\r\n  },\r\n  {\r\n    title: \"August\",\r\n    field: \"aug\",\r\n  },\r\n  {\r\n    title: \"September\",\r\n    field: \"sep\",\r\n  },\r\n  {\r\n    title: \"October\",\r\n    field: \"oct\",\r\n  },\r\n  {\r\n    title: \"November\",\r\n    field: \"nov\",\r\n  },\r\n  {\r\n    title: \"December\",\r\n    field: \"dec\",\r\n  },\r\n];\r\n\r\nconst data = [\r\n  {\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n];\r\n\r\nexport default function ExpenseSummaryTableView({ year }) {\r\n  const classes = useStyles();\r\n  const [expdata, setExpData] = useState([]);\r\n  const { expensesperiod, setExpPeriodYrId, setExpPeriodMthId } =\r\n    useExpensesPeriod();\r\n\r\n  // useEffect(() => {\r\n  //   setExpPeriodYrId(year);\r\n  //   setExpPeriodMthId(i);\r\n  // }, []);\r\n\r\n  // const Build_data = () => {\r\n  //   for (var i = 1; i <= 12; i++) {\r\n  //     setExpPeriodYrId(year);\r\n  //     setExpPeriodMthId(i);\r\n  //     const amount = expensesperiod.reduce((acc, r) => {\r\n  //       if (r.status === \"Approved\" || r.status === \"Approve\") {\r\n  //         return acc + r.amount;\r\n  //       } else {\r\n  //         return acc;\r\n  //       }\r\n  //     }, 0);\r\n  //     expdata[i] = amount\r\n  //   }\r\n  //   console.log(\"exp\", expdata)\r\n  // };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={data}\r\n          title=\"Expenses Claims\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"white\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipSummaryTableView.js",["4338","4339","4340","4341","4342","4343","4344","4345","4346","4347","4348","4349","4350","4351"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialogBox\";\r\nimport { useExpensesPeriod } from \"./expenses/useExpensesPeriod\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { usePayrunStatus } from \"./payrun/usePayrunStatus\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"January\",\r\n    field: \"jan\",\r\n  },\r\n  {\r\n    title: \"February\",\r\n    field: \"feb\",\r\n  },\r\n  {\r\n    title: \"March\",\r\n    field: \"mar\",\r\n  },\r\n  {\r\n    title: \"April\",\r\n    field: \"apr\",\r\n  },\r\n  {\r\n    title: \"May\",\r\n    field: \"may\",\r\n  },\r\n  {\r\n    title: \"June\",\r\n    field: \"jun\",\r\n  },\r\n  {\r\n    title: \"July\",\r\n    field: \"jul\",\r\n  },\r\n  {\r\n    title: \"August\",\r\n    field: \"aug\",\r\n  },\r\n  {\r\n    title: \"September\",\r\n    field: \"sep\",\r\n  },\r\n  {\r\n    title: \"October\",\r\n    field: \"oct\",\r\n  },\r\n  {\r\n    title: \"November\",\r\n    field: \"nov\",\r\n  },\r\n  {\r\n    title: \"December\",\r\n    field: \"dec\",\r\n  },\r\n];\r\n\r\nconst data = [\r\n  {\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n];\r\n\r\nexport default function PayslipSummaryTableView({ year, status }) {\r\n  const classes = useStyles();\r\n  const [paydata, setPayData] = useState([]);\r\n  const [isCalc, setIsCalc] = useState(false);\r\n  const { payrunstatus, setPayrunStatusId } = usePayrunStatus();\r\n\r\n  useEffect(() => {\r\n    setPayrunStatusId(status);\r\n    setIsCalc(true)\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (payrunstatus) {\r\n      Build_data()\r\n      setIsCalc(false)\r\n    }\r\n  },[isCalc])\r\n\r\n\r\n  const Build_data = () => {\r\n    payrunstatus.forEach((rec) => {\r\n      const { payrun, totalpayroll } = rec;\r\n      if (payrun === \"2021-01\") {\r\n        setPayData({ ...paydata, jan: totalpayroll });\r\n      }\r\n      if (payrun === \"2021-06\") {\r\n        setPayData({ ...paydata, jun: totalpayroll });\r\n      }\r\n      if (payrun === \"2021-07\") {\r\n        setPayData({ ...paydata, jul: totalpayroll });\r\n      }\r\n      if (payrun === \"2021-08\") {\r\n        setPayData({ ...paydata, aug: totalpayroll });\r\n      }\r\n      \r\n    })\r\n    console.log(\"build\", paydata)\r\n  };\r\n\r\n    // payrunstatus.map((rec) => {\r\n    //   const { payrun, totalpayroll } = rec\r\n    //   return {\r\n    //     if(payrun === \"2021-01\") {\r\n    //       setPayData({...paydata, jan: totalpayroll})\r\n    //     }\r\n    //   }\r\n  \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={data}\r\n          title=\"Expenses Claims\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"white\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmployeeTableLeaveView.js",["4352","4353","4354","4355","4356","4357","4358","4359","4360","4361","4362","4363","4364","4365","4366","4367","4368","4369","4370","4371","4372","4373","4374","4375","4376","4377","4378"],"import React, { useState, useEffect, useMemo } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { GrFormView } from \"react-icons/gr\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialogBox\";\r\nimport { useExpensesPeriod } from \"./expenses/useExpensesPeriod\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useLeaves } from \"./leaves/useLeaves\";\r\n\r\nconst YEAR = new Date().getFullYear();\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    cellStyle: {\r\n      width: 250,\r\n      maxWidth: 250,\r\n    },\r\n  },\r\n  // { title: \"IC No\", field: \"ic_no\" },\r\n  // { title: \"Gender\", field: \"gender\" },\r\n  { title: \"Emp No\", field: \"empno\" },\r\n  { title: \"Designation\", field: \"designation\" },\r\n  { title: \"Department\", field: \"department\" },\r\n\r\n  {\r\n    title: \"Leave Entitled\",\r\n    field: \"leave_entitled\",\r\n    type: \"numeric\",\r\n    cellStyle: {\r\n      width: 60,\r\n    },\r\n  },\r\n  {\r\n    title: \"Leave C/F\",\r\n    field: \"leave_bf\",\r\n    type: \"numeric\",\r\n    cellStyle: {\r\n      width: 60,\r\n    },\r\n  }, \r\n  {\r\n    title: \"Total Leave\",\r\n    field: \"leave_total\",\r\n    type: \"numeric\",\r\n    cellStyle: {\r\n      width: 60,\r\n    },\r\n  },\r\n  {\r\n    title: \"Leave Taken\",\r\n    field: \"leave_taken\",\r\n    type: \"numeric\",\r\n    cellStyle: {\r\n      width: 60,\r\n    },\r\n  },\r\n  // {\r\n  //   title: \"Leave Pending\",\r\n  //   field: \"leave_pending\",\r\n  //   type: \"numeric\",\r\n  //   cellStyle: {\r\n  //     width: 60,\r\n  //   },\r\n  // },\r\n  {\r\n    title: \"Leave Balance\",\r\n    field: \"leave_bal\",\r\n    type: \"numeric\",\r\n    cellStyle: {\r\n      width: 60,\r\n    },\r\n  },\r\n  // { title: \"Email\", field: \"email\" },\r\n];\r\n\r\nexport default function EmployeeTableLeaveView({ year }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { employees, setEmployeeId } = useEmployees();\r\n  const { leaves } = useLeaves();\r\n  const [empdata, setEmpData] = useState([]);\r\n  const currentyear = new Date().getFullYear();\r\n  const { expensesperiod, setExpPeriodYrId, setExpPeriodMthId } =\r\n    useExpensesPeriod();\r\n  const emp = employees.map((rec) => {\r\n    return { ...rec, leave_total: 0, leave_taken: 0, leave_pending: 0 };\r\n  });\r\n\r\n  const {\r\n    editEmployeeID,\r\n    employees_loading,\r\n    //deleteEmployee,\r\n    //loadEmployees,\r\n    setEditEmployeeID,\r\n    setIsEditingOn,\r\n    setIsEditingOff,\r\n    resetSingleEmployee,\r\n    resetEmployees,\r\n    //getSingleEmployee,\r\n  } = useEmployeesContext();\r\n\r\n  const update_Employee = (data) => {\r\n    const { id } = data;\r\n    resetSingleEmployee();\r\n    resetEmployees();\r\n    setEditEmployeeID(id);\r\n    setIsEditingOn();\r\n    setEmployeeId(id);\r\n\r\n    history.push(\"/singleemployee\");\r\n  };\r\n\r\n  const Build_EmpData = (YEAR) => {\r\n    // eslint-disable-next-line no-lone-blocks\r\n    {\r\n      emp &&\r\n        emp.forEach((rec, index) => {\r\n          const {\r\n            id,\r\n            name,\r\n            icno,\r\n            gender,\r\n            designation,\r\n            department,\r\n            leave_entitled,\r\n            leave_bf,\r\n            leave_cd,\r\n          } = rec;\r\n          // calculate leaves\r\n          const leavedata = leaves\r\n            .filter(\r\n              (r) =>\r\n                r.empid === id && moment(r.from_date).format(\"YYYY\") === YEAR\r\n            )\r\n            .map((rec) => {\r\n              return { ...rec };\r\n            });\r\n          console.log(\"leavedata\", leavedata);\r\n          const leaveTaken = leavedata.reduce((acc, item) => {\r\n            if (item.status === \"Approved\") {\r\n              return acc + item.no_of_days;\r\n            } else {\r\n              return acc;\r\n            }\r\n          }, 0);\r\n          const leavePending = leavedata.reduce((acc, item) => {\r\n            if (item.status === \"Pending\") {\r\n              return acc + item.no_of_days;\r\n            } else {\r\n              return acc;\r\n            }\r\n          }, 0);\r\n          const leaveEntitled = isNaN(emp[index].leave_entitled)\r\n            ? 0\r\n            : emp[index].leave_entitled;\r\n          const leaveBf = isNaN(emp[index].leave_bf) ? 0 : emp[index].leave_bf;\r\n          //const leaveCd = isNaN(emp[index].leave_cd) ? 0 : emp[index].leave_cd;\r\n          const leaveCd = 0;\r\n          emp[index].leave_cd = leaveCd;\r\n          emp[index].leave_total = leaveEntitled + leaveBf;\r\n          emp[index].leave_taken = leaveTaken + leaveCd;\r\n          emp[index].leave_pending = leavePending;\r\n          emp[index].leave_bal = leaveEntitled + leaveBf - leaveCd - leaveTaken;\r\n          setEmpData(emp);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    Build_EmpData(YEAR);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={empdata}\r\n          title=\"Employee Leave Details\"\r\n          actions={[\r\n            (rowData) => ({\r\n              //disabled: rowData.status !== \"Pending\",\r\n              icon: () => <GrFormView size=\"33px\" />,\r\n              tooltip: \"View\",\r\n              onClick: (event, rowData) => {\r\n                update_Employee(rowData);\r\n              },\r\n            }),\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            search: true,\r\n            toolbar: false,\r\n            paging: false,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"white\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\ApprovalManager.js",["4379","4380","4381","4382","4383","4384","4385","4386","4387","4388","4389","4390"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { TextField, Grid, Paper, Container, Box } from \"@material-ui/core\";\r\nimport CardLayout from \"../helpers/CardLayout\";\r\nimport CardLayout2 from \"../helpers/CardLayout2\";\r\nimport CardLayout3 from \"../helpers/CardLayout3\";\r\nimport Copyright from \"./Copyright\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport LeaveTableViewManager from \"./LeaveTableViewManager\";\r\nimport LeaveTableManager from \"./LeaveTableManager\";\r\nimport ExpenseTableView from \"./ExpenseTableView\";\r\nimport ExpenseTableManager from \"./ExpenseTableManager\";\r\nimport PayslipTableViewManager from \"./PayslipTableViewManager\";\r\nimport PayslipTableAdmin from \"./PayslipTableAdmin\";\r\nimport DailyAllowancesTableView from \"./DailyAllowancesTableView\";\r\nimport DailyAllowancesTableAdmin from \"./DailyAllowancesTableAdmin\";\r\nimport OnLeavesView from \"./OnLeavesView\";\r\nimport WPExpiryView from \"./WPExpiryView\";\r\nimport { useDailyAllowsStatus } from \"./dailyallows/useDailyAllowsStatus\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst EmployeeView = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [leavesdata, setLeavesdata] = useState([]);\r\n  const [isLeaveDialogOpen, setIsLeaveDialogOpen] = useState(false);\r\n  const [expensesdata, setExpensesdata] = useState([]);\r\n  const [isExpenseDialogOpen, setIsExpenseDialogOpen] = useState(false);\r\n  const [payslipsdata, setPayslipsdata] = useState([]);\r\n  const [isPayslipDialogOpen, setIsPayslipDialogOpen] = useState(false);\r\n  const [dailyallowancesdata, setDailyAllowancesdata] = useState([]);\r\n  const [isDailyAllowancesDialogOpen, setIsDailyAllowancesDialogOpen] =\r\n    useState(false);\r\n  const { dailyallowsstatus, setDailyAllowsStatusId } = useDailyAllowsStatus();\r\n  const { leaves, loadPendingLeaves } = useLeavesContext();\r\n  const { expenses, loadPendingExpenses } = useExpensesContext();\r\n  const { batchpayslips, loadPendingPayslips } = usePayslipsContext();\r\n  const { dailyallowances, loadPendingDailyAllowances } =\r\n    useDailyAllowancesContext();\r\n\r\n  const handleLeaveDialogOpen = () => {\r\n    setLeavesdata([]);\r\n    setLeavesdata([...leaves]);\r\n    setIsLeaveDialogOpen(true);\r\n  };\r\n\r\n  const handleLeaveDialogClose = () => {\r\n    setIsLeaveDialogOpen(false);\r\n    loadPendingLeaves(FILTERSTRING);\r\n  };\r\n\r\n  const handleExpenseDialogOpen = () => {\r\n    setExpensesdata([]);\r\n    setExpensesdata([...expenses]);\r\n    setIsExpenseDialogOpen(true);\r\n  };\r\n\r\n  const handleExpenseDialogClose = () => {\r\n    setIsExpenseDialogOpen(false);\r\n    loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  const handlePayslipDialogOpen = () => {\r\n    setPayslipsdata([]);\r\n    //setPayslipsdata([...batchpayslips]);\r\n    setIsPayslipDialogOpen(true);\r\n  };\r\n\r\n  const handlePayslipDialogClose = () => {\r\n    setIsPayslipDialogOpen(false);\r\n    loadPendingPayslips(FILTERSTRING);\r\n  };\r\n\r\n  const handleDailyAllowancesDialogOpen = () => {\r\n    setDailyAllowancesdata([]);\r\n    setDailyAllowancesdata([...dailyallowsstatus]);\r\n    setIsDailyAllowancesDialogOpen(true);\r\n  };\r\n\r\n  const handleDailyAllowancesDialogClose = () => {\r\n    setIsDailyAllowancesDialogOpen(false);\r\n    loadPendingDailyAllowances(FILTERSTRING);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setDailyAllowsStatusId(\"Verified\");\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.appBarSpacer} />\r\n      <div style={{ paddingLeft: 50 }}>\r\n        {/* <h2>Welcome {loginLevel.loginUser}!</h2>\r\n        <h3>Dashboard</h3> */}\r\n      </div>\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={8} lg={12}>\r\n            <CardLayout3\r\n              title=\"Leaves pending for approval\"\r\n              handleClick={handleLeaveDialogOpen}\r\n            >\r\n              <LeaveTableViewManager />\r\n            </CardLayout3>\r\n          </Grid>\r\n          <Grid item xs={12} md={8} lg={12}>\r\n            <CardLayout3\r\n              title=\"Expenses pending for approval\"\r\n              handleClick={handleExpenseDialogOpen}\r\n            >\r\n              <ExpenseTableView />\r\n            </CardLayout3>\r\n          </Grid>\r\n          <Grid item xs={12} md={8} lg={12}>\r\n            <CardLayout3\r\n              title=\"Site Allowances pending for approval\"\r\n              handleClick={handleDailyAllowancesDialogOpen}\r\n            >\r\n              <DailyAllowancesTableView />\r\n            </CardLayout3>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={8} lg={12}>\r\n            <CardLayout3\r\n              title=\"Payroll pending for approval\"\r\n              handleClick={handlePayslipDialogOpen}\r\n            >\r\n              <PayslipTableViewManager />\r\n            </CardLayout3>\r\n          </Grid>\r\n        </Grid>\r\n        <Box pt={4}>\r\n          <Copyright />\r\n        </Box>\r\n        <CustomDialog\r\n          isOpen={isLeaveDialogOpen}\r\n          handleClose={handleLeaveDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <LeaveTableManager\r\n            setLeavesdata={setLeavesdata}\r\n            leavesdata={leavesdata}\r\n            handleDialogClose={handleLeaveDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isExpenseDialogOpen}\r\n          handleClose={handleExpenseDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <ExpenseTableManager\r\n            setExpensesdata={setExpensesdata}\r\n            expensesdata={expensesdata}\r\n            handleDialogClose={handleExpenseDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isPayslipDialogOpen}\r\n          handleClose={handlePayslipDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={false}\r\n        >\r\n          <PayslipTableAdmin\r\n            setPayslipsdata={setPayslipsdata}\r\n            payslipsdata={payslipsdata}\r\n            handleDialogClose={handlePayslipDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isDailyAllowancesDialogOpen}\r\n          handleClose={handleDailyAllowancesDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={false}\r\n        >\r\n          <DailyAllowancesTableAdmin\r\n            setDailyAllowancesdata={setDailyAllowancesdata}\r\n            dailyallowancesdata={dailyallowancesdata}\r\n            handleDialogClose={handleDailyAllowancesDialogClose}\r\n          />\r\n        </CustomDialog>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default EmployeeView;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\dailyallows\\useDailyAllowsPayrun.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\payitems\\usePayItems.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\payitems\\utils.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\payitems\\useUpdatePayItems.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\payitems\\useDeletePayItems.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\payitems\\useAddPayItems.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\MainMenu.js",["4391","4392","4393","4394","4395","4396","4397","4398","4399"],"import React, { useState } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { Button } from \"@chakra-ui/react\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport DashboardMain from \"./DashboardMain\";\r\nimport DashboardStaff from \"./DashboardStaff\";\r\nimport DashboardAdmin from \"./DashboardAdmin\";\r\nimport DashboardOpsSpvr from \"./DashboardOpsSpvr\";\r\nimport DashboardAdminManager from \"./DashboardAdminManager\";\r\nimport DashboardManager from \"./DashboardManager\";\r\nimport DashboardDirector from \"./DashboardDirector\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useAuthContext } from \"../context/auth_context\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\n\r\nconst Main = () => {\r\n  const history = useHistory();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { currentUser } = useAuthContext();\r\n  const [role, setRole] = useState(\"\");\r\n  const SwitchCase = () => {\r\n    //console.log(loginLevel);\r\n    switch (loginLevel.loginLevel) {\r\n      case \"Staff\":\r\n        return <DashboardStaff />;\r\n      case \"Admin\":\r\n        return <DashboardAdmin />;\r\n      case \"OpsSpvr\":\r\n        return <DashboardOpsSpvr />;\r\n      case \"AdminManager\":\r\n        return <DashboardAdminManager />;\r\n      case \"Manager\":\r\n        return <DashboardManager />;\r\n      case \"Director\":\r\n        return <DashboardDirector />;\r\n      default:\r\n        return \"You are not authorised user!\";\r\n    }\r\n  };\r\n\r\n  if (!loginLevel.login) {\r\n    return <LoginForm />;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <DashboardMain />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Main;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\PaySummaryTable.js",["4400","4401","4402","4403"],"import React, { useMemo } from \"react\";\r\nimport {\r\n  Box,\r\n  Divider,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  chakra,\r\n} from \"@chakra-ui/react\";\r\nimport { TriangleDownIcon, TriangleUpIcon } from \"@chakra-ui/icons\";\r\nimport { useTable, useSortBy } from \"react-table\";\r\nimport { formatPrice } from \"../helpers/Utils\";\r\n\r\nexport default function PaySummaryTable({ columns, data }) {\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable({ columns, data }, useSortBy);\r\n\r\n  return (\r\n    <Table colorScheme=\"whiteAlpha\" variant=\"simple\" {...getTableProps()}>\r\n      <Thead position=\"sticky\" top=\"0\" bgColor=\"blue.200\">\r\n        {headerGroups.map((headerGroup) => (\r\n          <Tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map((column) => (\r\n              <Th\r\n                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                isNumeric={column.isNumeric}\r\n              >\r\n                {column.render(\"Header\")}\r\n                <chakra.span pl=\"4\">\r\n                  {column.isSorted ? (\r\n                    column.isSortedDesc ? (\r\n                      <TriangleDownIcon aria-label=\"sorted descending\" />\r\n                    ) : (\r\n                      <TriangleUpIcon aria-label=\"sorted ascending\" />\r\n                    )\r\n                  ) : null}\r\n                </chakra.span>\r\n              </Th>\r\n            ))}\r\n          </Tr>\r\n        ))}\r\n      </Thead>\r\n\r\n      <Tbody {...getTableBodyProps()}>\r\n        {rows.map((row) => {\r\n          prepareRow(row);\r\n          return (\r\n            <Tr bgColor=\"gray.50\" {...row.getRowProps()}>\r\n              {row.cells.map((cell) => (\r\n                <Td\r\n                  borderBottom=\"1px solid black\"\r\n                  borderRight=\"1px solid black\"\r\n                  bgColor=\"whiteAlpha.400\"\r\n                  {...cell.getCellProps()}\r\n                  isNumeric={cell.column.isNumeric}\r\n                >\r\n                  {cell.render(\"Cell\")}\r\n                </Td>\r\n              ))}\r\n            </Tr>\r\n          );\r\n        })}\r\n      </Tbody>\r\n    </Table>\r\n  );\r\n}\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayRunTable.js",["4404","4405","4406","4407","4408","4409","4410","4411","4412"],"D:\\react-myprojects\\hrms-airtable\\src\\utils\\dates.js",["4413"],"/* eslint no-fallthrough: off */\r\nimport * as dates from \"date-arithmetic\";\r\n\r\nexport {\r\n  milliseconds,\r\n  seconds,\r\n  minutes,\r\n  hours,\r\n  month,\r\n  startOf,\r\n  endOf,\r\n  add,\r\n  eq,\r\n  neq,\r\n  gte,\r\n  gt,\r\n  lte,\r\n  lt,\r\n  inRange,\r\n  min,\r\n  max,\r\n} from \"date-arithmetic\";\r\n\r\nconst MILLI = {\r\n  seconds: 1000,\r\n  minutes: 1000 * 60,\r\n  hours: 1000 * 60 * 60,\r\n  day: 1000 * 60 * 60 * 24,\r\n};\r\n\r\nconst MONTHS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\r\n\r\nexport function monthsInYear(year) {\r\n  let date = new Date(year, 0, 1);\r\n\r\n  return MONTHS.map((i) => dates.month(date, i));\r\n}\r\n\r\nexport function firstVisibleDay(date, localizer) {\r\n  let firstOfMonth = dates.startOf(date, \"month\");\r\n\r\n  return dates.startOf(firstOfMonth, \"week\", localizer.startOfWeek());\r\n}\r\n\r\nexport function lastVisibleDay(date, localizer) {\r\n  let endOfMonth = dates.endOf(date, \"month\");\r\n\r\n  return dates.endOf(endOfMonth, \"week\", localizer.startOfWeek());\r\n}\r\n\r\nexport function visibleDays(date, localizer) {\r\n  let current = firstVisibleDay(date, localizer),\r\n    last = lastVisibleDay(date, localizer),\r\n    days = [];\r\n\r\n  while (dates.lte(current, last, \"day\")) {\r\n    days.push(current);\r\n    current = dates.add(current, 1, \"day\");\r\n  }\r\n\r\n  return days;\r\n}\r\n\r\nexport function ceil(date, unit) {\r\n  let floor = dates.startOf(date, unit);\r\n\r\n  return dates.eq(floor, date) ? floor : dates.add(floor, 1, unit);\r\n}\r\n\r\nexport function range(start, end, unit = \"day\") {\r\n  let current = start,\r\n    days = [];\r\n\r\n  while (dates.lte(current, end, unit)) {\r\n    days.push(current);\r\n    current = dates.add(current, 1, unit);\r\n  }\r\n\r\n  return days;\r\n}\r\n\r\nexport function merge(date, time) {\r\n  if (time == null && date == null) return null;\r\n\r\n  if (time == null) time = new Date();\r\n  if (date == null) date = new Date();\r\n\r\n  date = dates.startOf(date, \"day\");\r\n  date = dates.hours(date, dates.hours(time));\r\n  date = dates.minutes(date, dates.minutes(time));\r\n  date = dates.seconds(date, dates.seconds(time));\r\n  return dates.milliseconds(date, dates.milliseconds(time));\r\n}\r\n\r\nexport function eqTime(dateA, dateB) {\r\n  return (\r\n    dates.hours(dateA) === dates.hours(dateB) &&\r\n    dates.minutes(dateA) === dates.minutes(dateB) &&\r\n    dates.seconds(dateA) === dates.seconds(dateB)\r\n  );\r\n}\r\n\r\nexport function isJustDate(date) {\r\n  return (\r\n    dates.hours(date) === 0 &&\r\n    dates.minutes(date) === 0 &&\r\n    dates.seconds(date) === 0 &&\r\n    dates.milliseconds(date) === 0\r\n  );\r\n}\r\n\r\nexport function duration(start, end, unit, firstOfWeek) {\r\n  if (unit === \"day\") unit = \"date\";\r\n  return Math.abs(\r\n    // eslint-disable-next-line import/namespace\r\n    dates[unit](start, undefined, firstOfWeek) -\r\n      // eslint-disable-next-line import/namespace\r\n      dates[unit](end, undefined, firstOfWeek)\r\n  );\r\n}\r\n\r\nexport function diff(dateA, dateB, unit) {\r\n  if (!unit || unit === \"milliseconds\") return Math.abs(+dateA - +dateB);\r\n\r\n  // the .round() handles an edge case\r\n  // with DST where the total won't be exact\r\n  // since one day in the range may be shorter/longer by an hour\r\n  return Math.round(\r\n    Math.abs(\r\n      +dates.startOf(dateA, unit) / MILLI[unit] -\r\n        +dates.startOf(dateB, unit) / MILLI[unit]\r\n    )\r\n  );\r\n}\r\n\r\nexport function total(date, unit) {\r\n  let ms = date.getTime(),\r\n    div = 1;\r\n\r\n  switch (unit) {\r\n    case \"week\":\r\n      div *= 7;\r\n    case \"day\":\r\n      div *= 24;\r\n    case \"hours\":\r\n      div *= 60;\r\n    case \"minutes\":\r\n      div *= 60;\r\n    case \"seconds\":\r\n      div *= 1000;\r\n  }\r\n\r\n  return ms / div;\r\n}\r\n\r\nexport function week(date) {\r\n  var d = new Date(date);\r\n  d.setHours(0, 0, 0);\r\n  d.setDate(d.getDate() + 4 - (d.getDay() || 7));\r\n  return Math.ceil(((d - new Date(d.getFullYear(), 0, 1)) / 8.64e7 + 1) / 7);\r\n}\r\n\r\nexport function today() {\r\n  return dates.startOf(new Date(), \"day\");\r\n}\r\n\r\nexport function yesterday() {\r\n  return dates.add(dates.startOf(new Date(), \"day\"), -1, \"day\");\r\n}\r\n\r\nexport function tomorrow() {\r\n  return dates.add(dates.startOf(new Date(), \"day\"), 1, \"day\");\r\n}\r\n",["4414","4415"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\employees\\useAllEmployees.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\MenuListItemsOpsSpvr.js",["4416","4417","4418","4419","4420","4421","4422","4423"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Text} from \"@chakra-ui/react\"\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport FlightIcon from \"@material-ui/icons/Flight\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport MoneyIcon from \"@material-ui/icons/Money\";\r\n// import Collapse from \"@material-ui/core/Collapse\";\r\n// import ExpandLess from \"@material-ui/icons/ExpandLess\";\r\n// import ExpandMore from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst MenuListItems = () => {\r\n  const classes = useStyles();\r\n  const [openPay, setOpenPay] = useState(false);\r\n  const [openTable, setOpenTable] = useState(false);\r\n\r\n  const handleClickPay = () => {\r\n    setOpenPay(!openPay);\r\n  };\r\n\r\n  const handleClickTable = () => {\r\n    setOpenTable(!openTable);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <ListSubheader align=\"center\" className={classes.itemIcon}>\r\n        <Text color=\"blue\" fontSize=\"21\" fontWeight=\"bold\">\r\n          Supervisor\r\n        </Text>\r\n      </ListSubheader>\r\n\r\n      <Link to=\"/\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <DashboardIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Dashboard\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <Link to=\"/allemployees\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <PeopleIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"All Employees\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <Link to=\"/leave\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FlightIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Leave\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <Link to=\"/expenses\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <ShoppingCartIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Expenses\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <Link to=\"/dailyallowances\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MoneyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Site Allowances\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n      {/* <Link to=\"/tables\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <LayersIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Tables\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <Link to=\"/example\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <LayersIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Example\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <ListItem button onClick={handleClickTable}>\r\n        <ListItemIcon className={classes.itemIcon}>\r\n          <LayersIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Tables\" className={classes.item} />\r\n        {openTable ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={openTable} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/clients\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Clients\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/departments\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Departments\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/designation\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Designation\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/allowances\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Allowances\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainHeader: {\r\n    fontSize: 24,\r\n    color: \"primary\",\r\n  },\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: \"primary\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: \"primary\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: \"rgba(255, 255, 255, 0.08)\",\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: \"#232f3e\",\r\n    boxShadow: \"0 -1px 0 #404854 inset\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.orange,\r\n  },\r\n  itemActiveItem: {\r\n    color: \"primary\",\r\n  },\r\n  itemPrimary: {\r\n    fontSize: \"inherit\",\r\n  },\r\n  itemIcon: {\r\n    minWidth: \"auto\",\r\n    marginRight: theme.spacing(2),\r\n    color: \"primary\",\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default MenuListItems;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\HomeOpsSpvr.js",["4424","4425","4426","4427","4428","4429","4430","4431","4432","4433","4434","4435","4436","4437","4438","4439","4440","4441","4442","4443"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Divider,\r\n  Heading,\r\n  HStack,\r\n  Stack,\r\n  Select,\r\n  SimpleGrid,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n} from \"@chakra-ui/react\";\r\nimport { TextField, Grid, Paper, Container } from \"@material-ui/core\";\r\nimport CardLayout from \"../helpers/CardLayout\";\r\nimport CardLayout2 from \"../helpers/CardLayout2\";\r\nimport CardLayout3 from \"../helpers/CardLayout3\";\r\nimport Copyright from \"./Copyright\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport LeaveTableViewAdmin from \"./LeaveTableViewAdmin\";\r\nimport LeaveTableAdmin from \"./LeaveTableManager\";\r\n//import ExpenseTableView from \"./ExpenseTableView\";\r\nimport ExpenseTableAdmin from \"./ExpenseTableAdmin\";\r\n//import PayslipTableView from \"./PayslipTableView\";\r\nimport PayslipTableAdmin from \"./PayslipTableAdmin\";\r\n//import DailyAllowancesTableView from \"./DailyAllowancesTableView\";\r\nimport DailyAllowancesTableAdmin from \"./DailyAllowancesTableAdmin\";\r\nimport DailyAllowanceTableViewSummary from \"./DailyAllowancesTableViewSummary\";\r\nimport TrainingsTableViewAdmin from \"./TrainingsTableViewAdmin\";\r\nimport WPExpiryViewAdmin from \"./WPExpiryViewAdmin\";\r\nimport EmployeeTableLeaveView from \"./EmployeeTableLeaveView\";\r\nimport LeavesTableViewSummary from \"./LeavesTableViewSummary\";\r\nimport LeavesTableApproval from \"./LeaveTableApproval\";\r\nimport DailyAllowancesTableApproval from \"./DailyAllowancesTableVeryfy\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst EmployeeView = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { employees } = useEmployees();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [leavesdata, setLeavesdata] = useState([]);\r\n  const [isLeaveDialogOpen, setIsLeaveDialogOpen] = useState(false);\r\n  const [expensesdata, setExpensesdata] = useState([]);\r\n  const [isExpenseDialogOpen, setIsExpenseDialogOpen] = useState(false);\r\n  const [payslipsdata, setPayslipsdata] = useState([]);\r\n  const [isPayslipDialogOpen, setIsPayslipDialogOpen] = useState(false);\r\n  const [dailyallowancesdata, setDailyAllowancesdata] = useState([]);\r\n  const [isDailyAllowancesDialogOpen, setIsDailyAllowancesDialogOpen] =\r\n    useState(false);\r\n\r\n  const { leaves, loadPendingLeaves } = useLeavesContext();\r\n  const { expenses, loadPendingExpenses } = useExpensesContext();\r\n  const { payslips, loadPendingPayslips } = usePayslipsContext();\r\n  const { dailyallowances, loadPendingDailyAllowances } =\r\n    useDailyAllowancesContext();\r\n  const [selectleaveyear, setSelectLeaveYear] = useState(\"\");\r\n  const [selectsiteallowsyear, setSelectSiteAllowsYear] = useState(\"\");\r\n  const currentyear = new Date().getFullYear();\r\n  const currentmonth = new Date().getMonth();\r\n\r\n  const handleLeaveDialogOpen = () => {\r\n    setLeavesdata([]);\r\n    setLeavesdata([...leaves]);\r\n    setIsLeaveDialogOpen(true);\r\n  };\r\n\r\n  const handleLeaveDialogClose = () => {\r\n    setIsLeaveDialogOpen(false);\r\n    loadPendingLeaves(FILTERSTRING);\r\n  };\r\n\r\n  const handleExpenseDialogOpen = () => {\r\n    setExpensesdata([]);\r\n    setExpensesdata([...expenses]);\r\n    setIsExpenseDialogOpen(true);\r\n  };\r\n\r\n  const handleExpenseDialogClose = () => {\r\n    setIsExpenseDialogOpen(false);\r\n    loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  const handlePayslipDialogOpen = () => {\r\n    setPayslipsdata([]);\r\n    setPayslipsdata([...payslips]);\r\n    setIsPayslipDialogOpen(true);\r\n  };\r\n\r\n  const handlePayslipDialogClose = () => {\r\n    setIsPayslipDialogOpen(false);\r\n    loadPendingPayslips(FILTERSTRING);\r\n  };\r\n\r\n  const handleDailyAllowancesDialogOpen = () => {\r\n    setDailyAllowancesdata([]);\r\n    setDailyAllowancesdata([...dailyallowances]);\r\n    setIsDailyAllowancesDialogOpen(true);\r\n  };\r\n\r\n  const handleDailyAllowancesDialogClose = () => {\r\n    setIsDailyAllowancesDialogOpen(false);\r\n    loadPendingDailyAllowances(FILTERSTRING);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSelectLeaveYear(currentyear);\r\n    setSelectSiteAllowsYear(currentyear);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.appBarSpacer} />\r\n      <div style={{ paddingLeft: 50 }}>\r\n        {/* <h2>Welcome {loginLevel.loginUser}!</h2>\r\n        <h3>Dashboard</h3> */}\r\n      </div>\r\n      <Container maxWidth=\"full\" className={classes.container}>\r\n        <Stack direction=\"column\">\r\n          {/* <Box>\r\n            <CardLayout2>\r\n              <LeaveTableViewAdmin />\r\n            </CardLayout2>\r\n          </Box> */}\r\n          {/* <Box>\r\n            <CardLayout2>\r\n              <WPExpiryViewAdmin />\r\n            </CardLayout2>\r\n          </Box> */}\r\n          {/* <Box>\r\n            <CardLayout2>\r\n              <TrainingsTableViewAdmin />\r\n            </CardLayout2>\r\n          </Box> */}\r\n          <Box\r\n            maxW=\"x3\"\r\n            padding=\"4\"\r\n            width=\"100%\"\r\n            height=\"750\"\r\n            borderColor=\"blue.500\"\r\n            borderWidth=\"1px\"\r\n            borderRadius=\"lg\"\r\n            overflow=\"scroll\"\r\n          >\r\n            <Tabs>\r\n              <TabList>\r\n                {/* <Tab>Employees</Tab> */}\r\n                <Tab>Leaves</Tab>\r\n                <Tab>Site Allowances</Tab>\r\n                <Tab>Leaves Approval</Tab>\r\n                <Tab>Site Allows Verify</Tab>\r\n              </TabList>\r\n              <TabPanels>\r\n                {/* <TabPanel>\r\n                  <Box\r\n                    maxW=\"full\"\r\n                    padding=\"4\"\r\n                    width=\"100%\"\r\n                    height=\"700\"\r\n                    borderColor=\"blue.500\"\r\n                    borderWidth=\"1px\"\r\n                    borderRadius=\"lg\"\r\n                    overflow=\"scroll\"\r\n                  >\r\n                    <SimpleGrid>\r\n                      <Box>\r\n                        <Heading as=\"h2\" size=\"lg\">\r\n                          Employees\r\n                        </Heading>\r\n                      </Box>\r\n                      <Divider />\r\n                      <Box>\r\n                        <Tabs isLazy>\r\n                          <TabPanels>\r\n                            <TabPanel>\r\n                              <EmployeeTableLeaveView />\r\n                            </TabPanel>\r\n                          </TabPanels>\r\n                        </Tabs>\r\n                      </Box>\r\n                      <Divider />\r\n                    </SimpleGrid>\r\n                  </Box>\r\n                </TabPanel> */}\r\n                <TabPanel>\r\n                  <Box\r\n                    maxW=\"100%\"\r\n                    padding=\"4\"\r\n                    width=\"full\"\r\n                    height=\"700\"\r\n                    borderColor=\"blue.500\"\r\n                    borderWidth=\"1px\"\r\n                    borderRadius=\"lg\"\r\n                    overflow=\"scroll\"\r\n                  >\r\n                    <SimpleGrid w=\"168vh\">\r\n                      <HStack>\r\n                        <Box>\r\n                          <Heading as=\"h2\" size=\"lg\">\r\n                            Leaves\r\n                          </Heading>\r\n                        </Box>\r\n                        <Box alignSelf=\"flex-end\">\r\n                          <HStack>\r\n                            <Select\r\n                              value={selectleaveyear}\r\n                              fontSize={20}\r\n                              onChange={(e) =>\r\n                                setSelectLeaveYear(e.target.value)\r\n                              }\r\n                            >\r\n                              <option value=\"2021\">2021</option>\r\n                              <option value=\"2022\">2022</option>\r\n                            </Select>\r\n                            {/* <Box size=\"xl\" py={2}>\r\n                              <Text fontSize=\"lg\">\r\n                                <ExportLeave2Excel\r\n                                  filename=\"leave\"\r\n                                  dataset={dataset}\r\n                                  title=\"Leave\"\r\n                                />\r\n                              </Text>\r\n                            </Box> */}\r\n                          </HStack>\r\n                        </Box>\r\n                      </HStack>\r\n                      <Divider />\r\n                      <Box>\r\n                        <Tabs defaultIndex={currentmonth} isLazy>\r\n                          <TabList>\r\n                            {/* <Tab>Chart</Tab>\r\n                          <Tab>Summary</Tab> */}\r\n                            <Tab>January</Tab>\r\n                            <Tab>February</Tab>\r\n                            <Tab>March</Tab>\r\n                            <Tab>April</Tab>\r\n                            <Tab>May</Tab>\r\n                            <Tab>June</Tab>\r\n                            <Tab>July</Tab>\r\n                            <Tab>August</Tab>\r\n                            <Tab>September</Tab>\r\n                            <Tab>October</Tab>\r\n                            <Tab>November</Tab>\r\n                            <Tab>December</Tab>\r\n                          </TabList>\r\n                          <TabPanels>\r\n                            {/* <TabPanel>\r\n                  <BarChart\r\n                    heading=\"Expenses for the Month\"\r\n                    barchartdata={expchartdata}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <SummaryTableView columns={columns} data={data} />\r\n                </TabPanel> */}\r\n                            <TabPanel>\r\n                              <LeavesTableViewSummary\r\n                                year={\r\n                                  selectleaveyear\r\n                                    ? selectleaveyear\r\n                                    : currentyear\r\n                                }\r\n                                month={1}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <LeavesTableViewSummary\r\n                                year={\r\n                                  selectleaveyear\r\n                                    ? selectleaveyear\r\n                                    : currentyear\r\n                                }\r\n                                month={2}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <LeavesTableViewSummary\r\n                                year={\r\n                                  selectleaveyear\r\n                                    ? selectleaveyear\r\n                                    : currentyear\r\n                                }\r\n                                month={3}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <LeavesTableViewSummary\r\n                                year={\r\n                                  selectleaveyear\r\n                                    ? selectleaveyear\r\n                                    : currentyear\r\n                                }\r\n                                month={4}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <LeavesTableViewSummary\r\n                                year={\r\n                                  selectleaveyear\r\n                                    ? selectleaveyear\r\n                                    : currentyear\r\n                                }\r\n                                month={5}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <LeavesTableViewSummary\r\n                                year={\r\n                                  selectleaveyear\r\n                                    ? selectleaveyear\r\n                                    : currentyear\r\n                                }\r\n                                month={6}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <LeavesTableViewSummary\r\n                                year={\r\n                                  selectleaveyear\r\n                                    ? selectleaveyear\r\n                                    : currentyear\r\n                                }\r\n                                month={7}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <LeavesTableViewSummary\r\n                                year={\r\n                                  selectleaveyear\r\n                                    ? selectleaveyear\r\n                                    : currentyear\r\n                                }\r\n                                month={8}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <LeavesTableViewSummary\r\n                                year={\r\n                                  selectleaveyear\r\n                                    ? selectleaveyear\r\n                                    : currentyear\r\n                                }\r\n                                month={9}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <LeavesTableViewSummary\r\n                                year={\r\n                                  selectleaveyear\r\n                                    ? selectleaveyear\r\n                                    : currentyear\r\n                                }\r\n                                month={10}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <LeavesTableViewSummary\r\n                                year={\r\n                                  selectleaveyear\r\n                                    ? selectleaveyear\r\n                                    : currentyear\r\n                                }\r\n                                month={11}\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <LeavesTableViewSummary\r\n                                year={\r\n                                  selectleaveyear\r\n                                    ? selectleaveyear\r\n                                    : currentyear\r\n                                }\r\n                                month={12}\r\n                              />\r\n                            </TabPanel>\r\n                          </TabPanels>\r\n                        </Tabs>\r\n                      </Box>\r\n                      <Divider />\r\n                    </SimpleGrid>\r\n                  </Box>\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <Box\r\n                    maxW=\"x3\"\r\n                    padding=\"4\"\r\n                    width=\"100%\"\r\n                    height=\"700\"\r\n                    borderColor=\"blue.500\"\r\n                    borderWidth=\"1px\"\r\n                    borderRadius=\"lg\"\r\n                    overflow=\"scroll\"\r\n                  >\r\n                    <SimpleGrid w=\"168vh\">\r\n                      <HStack>\r\n                        <Box>\r\n                          <Heading as=\"h2\" size=\"lg\">\r\n                            Site Allowances\r\n                          </Heading>\r\n                        </Box>\r\n                        <Box alignSelf=\"flex-end\">\r\n                          <HStack>\r\n                            <Select\r\n                              value={selectsiteallowsyear}\r\n                              fontSize={20}\r\n                              onChange={(e) =>\r\n                                setSelectSiteAllowsYear(e.target.value)\r\n                              }\r\n                            >\r\n                              <option value=\"2021\">2021</option>\r\n                              <option value=\"2022\">2022</option>\r\n                            </Select>\r\n                            {/* <Box size=\"xl\" py={2}>\r\n                              <Text fontSize=\"lg\">\r\n                                <ExportLeave2Excel\r\n                                  filename=\"leave\"\r\n                                  dataset={dataset}\r\n                                  title=\"Leave\"\r\n                                />\r\n                              </Text>\r\n                            </Box> */}\r\n                          </HStack>\r\n                        </Box>\r\n                      </HStack>\r\n                      <Divider />\r\n                      <Box>\r\n                        <Tabs defaultIndex={currentmonth} isLazy>\r\n                          <TabList>\r\n                            {/* <Tab>Chart</Tab>\r\n                <Tab>Summary</Tab> */}\r\n                            <Tab>January</Tab>\r\n                            <Tab>February</Tab>\r\n                            <Tab>March</Tab>\r\n                            <Tab>April</Tab>\r\n                            <Tab>May</Tab>\r\n                            <Tab>June</Tab>\r\n                            <Tab>July</Tab>\r\n                            <Tab>August</Tab>\r\n                            <Tab>September</Tab>\r\n                            <Tab>October</Tab>\r\n                            <Tab>November</Tab>\r\n                            <Tab>December</Tab>\r\n                          </TabList>\r\n                          <TabPanels>\r\n                            {/* <TabPanel>\r\n                  <BarChart\r\n                    heading=\"Site Allowances for the Month\"\r\n                    barchartdata={paychartdata}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <SummaryTableView columns={columns} data={data} />\r\n                </TabPanel> */}\r\n                            <TabPanel>\r\n                              <DailyAllowanceTableViewSummary\r\n                                year={\r\n                                  selectsiteallowsyear\r\n                                    ? selectsiteallowsyear\r\n                                    : currentyear\r\n                                }\r\n                                month=\"01\"\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <DailyAllowanceTableViewSummary\r\n                                year={\r\n                                  selectsiteallowsyear\r\n                                    ? selectsiteallowsyear\r\n                                    : currentyear\r\n                                }\r\n                                month=\"02\"\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <DailyAllowanceTableViewSummary\r\n                                year={\r\n                                  selectsiteallowsyear\r\n                                    ? selectsiteallowsyear\r\n                                    : currentyear\r\n                                }\r\n                                month=\"03\"\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <DailyAllowanceTableViewSummary\r\n                                year={\r\n                                  selectsiteallowsyear\r\n                                    ? selectsiteallowsyear\r\n                                    : currentyear\r\n                                }\r\n                                month=\"04\"\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <DailyAllowanceTableViewSummary\r\n                                year={\r\n                                  selectsiteallowsyear\r\n                                    ? selectsiteallowsyear\r\n                                    : currentyear\r\n                                }\r\n                                month=\"05\"\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <DailyAllowanceTableViewSummary\r\n                                year={currentyear}\r\n                                month=\"06\"\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <DailyAllowanceTableViewSummary\r\n                                year={\r\n                                  selectsiteallowsyear\r\n                                    ? selectsiteallowsyear\r\n                                    : currentyear\r\n                                }\r\n                                month=\"07\"\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <DailyAllowanceTableViewSummary\r\n                                year={\r\n                                  selectsiteallowsyear\r\n                                    ? selectsiteallowsyear\r\n                                    : currentyear\r\n                                }\r\n                                month=\"08\"\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <DailyAllowanceTableViewSummary\r\n                                year={\r\n                                  selectsiteallowsyear\r\n                                    ? selectsiteallowsyear\r\n                                    : currentyear\r\n                                }\r\n                                month=\"09\"\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <DailyAllowanceTableViewSummary\r\n                                year={\r\n                                  selectsiteallowsyear\r\n                                    ? selectsiteallowsyear\r\n                                    : currentyear\r\n                                }\r\n                                month=\"10\"\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <DailyAllowanceTableViewSummary\r\n                                year={\r\n                                  selectsiteallowsyear\r\n                                    ? selectsiteallowsyear\r\n                                    : currentyear\r\n                                }\r\n                                month=\"11\"\r\n                              />\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                              <DailyAllowanceTableViewSummary\r\n                                year={\r\n                                  selectsiteallowsyear\r\n                                    ? selectsiteallowsyear\r\n                                    : currentyear\r\n                                }\r\n                                month=\"12\"\r\n                              />\r\n                            </TabPanel>\r\n                          </TabPanels>\r\n                        </Tabs>\r\n                      </Box>\r\n                      <Divider />\r\n                    </SimpleGrid>\r\n                  </Box>\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <Box\r\n                    maxW=\"full\"\r\n                    padding=\"4\"\r\n                    width=\"100%\"\r\n                    height=\"700\"\r\n                    borderColor=\"blue.500\"\r\n                    borderWidth=\"1px\"\r\n                    borderRadius=\"lg\"\r\n                    overflow=\"scroll\"\r\n                  >\r\n                    <LeavesTableApproval />\r\n                  </Box>\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <Box\r\n                    maxW=\"full\"\r\n                    padding=\"4\"\r\n                    width=\"100%\"\r\n                    height=\"700\"\r\n                    borderColor=\"blue.500\"\r\n                    borderWidth=\"1px\"\r\n                    borderRadius=\"lg\"\r\n                    overflow=\"scroll\"\r\n                  >\r\n                    <DailyAllowancesTableApproval />\r\n                  </Box>\r\n                </TabPanel>\r\n              </TabPanels>\r\n            </Tabs>\r\n          </Box>\r\n        </Stack>\r\n\r\n        <Box pt={4}>\r\n          <Copyright />\r\n        </Box>\r\n        <CustomDialog\r\n          isOpen={isLeaveDialogOpen}\r\n          handleClose={handleLeaveDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <LeaveTableAdmin\r\n            setLeavesdata={setLeavesdata}\r\n            leavesdata={leavesdata}\r\n            handleDialogClose={handleLeaveDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isExpenseDialogOpen}\r\n          handleClose={handleExpenseDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <ExpenseTableAdmin\r\n            setExpensesdata={setExpensesdata}\r\n            expensesdata={expensesdata}\r\n            handleDialogClose={handleExpenseDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isPayslipDialogOpen}\r\n          handleClose={handlePayslipDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={false}\r\n        >\r\n          <PayslipTableAdmin\r\n            setPayslipsdata={setPayslipsdata}\r\n            payslipsdata={payslipsdata}\r\n            handleDialogClose={handlePayslipDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isDailyAllowancesDialogOpen}\r\n          handleClose={handleDailyAllowancesDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={false}\r\n        >\r\n          <DailyAllowancesTableAdmin\r\n            setDailyAllowancesdata={setDailyAllowancesdata}\r\n            dailyallowancesdata={dailyallowancesdata}\r\n            handleDialogClose={handleDailyAllowancesDialogClose}\r\n          />\r\n        </CustomDialog>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default EmployeeView;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveTableApproval.js",["4444","4445","4446","4447","4448","4449","4450","4451","4452","4453","4454","4455","4456","4457","4458","4459","4460"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { Button, HStack } from \"@chakra-ui/react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveFormAdmin from \"./LeaveFormAdmin\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeaves } from \"./leaves/useLeaves\";\r\nimport { useLeavesStatus } from \"./leaves/useLeavesStatus\";\r\nimport { useAddLeaves } from \"./leaves/useAddLeaves\";\r\nimport { useDeleteLeaves } from \"./leaves/useDeleteLeaves\";\r\nimport { useUpdateLeaves } from \"./leaves/useUpdateLeaves\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\n\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\nconst ADMINMANAGER_EMAIL = process.env.REACT_APP_ADMINMANAGER_EMAIL;\r\n\r\nconst initial_form = {\r\n  name: \"\",\r\n  to_date: \"\",\r\n  from_date: \"\",\r\n  reason: \"\",\r\n  status: \"Pending\",\r\n  no_of_days: 0,\r\n  leave_bal: 0,\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Leave Balance\",\r\n    field: \"leave_bal\",\r\n    type: \"numeric\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"No of Days\",\r\n    field: \"no_of_days\",\r\n    type: \"numeric\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Reason\",\r\n    field: \"reason\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function LeaveTableApproval() {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  //const { leaves, filter, setFilter, setLeaveId } = useLeaves();\r\n  const { employees } = useEmployees();\r\n  const { leavesstatus, setLeaveStatusId } = useLeavesStatus();\r\n  const updateLeaves = useUpdateLeaves();\r\n  const addLeaves = useAddLeaves();\r\n  const deleteLeaves = useDeleteLeaves();\r\n  const [formdata, setFormdata] = useState(initial_form);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [isUpdate, setIsUpdate] = useState(true);\r\n  const {\r\n    // leaves,\r\n    editLeaveID,\r\n    leaves_loading,\r\n    deleteLeave,\r\n    loadLeaves,\r\n    getSingleLeave,\r\n    setEditLeaveID,\r\n    setIsLeaveEditingOn,\r\n    setIsLeaveEditingOff,\r\n    resetSingleLeave,\r\n  } = useLeavesContext();\r\n\r\n  useEffect(() => {\r\n    setLeaveStatusId(\"Pending\");\r\n  }, []);\r\n\r\n  // const update_Leave = async (data) => {\r\n  //   const { id } = data;\r\n  //   setFormdata({ ...data });\r\n  //   setEditLeaveID(id);\r\n  //   setIsLeaveEditingOn();\r\n  //   getSingleLeave(id);\r\n  //   handleDialogOpen();\r\n  //   //history.push(\"/singleleave\");\r\n  // };\r\n\r\n  // const add_Leave = async (data) => {\r\n  //   // const { id } = data;\r\n  //   setFormdata({ ...data });\r\n  //   resetSingleLeave();\r\n  //   setEditLeaveID(\"\");\r\n  //   setIsLeaveEditingOff();\r\n  //   handleDialogOpen();\r\n  //   //history.push(\"/singleleave\");\r\n  // };\r\n\r\n  // const delete_Leave = (data) => {\r\n  //   const { id } = data;\r\n  //   setEditLeaveID(id);\r\n  //   handleAlertOpen();\r\n  //   //deleteLeave(id);\r\n  //   //loadLeaves();\r\n  // };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editLeaveID;\r\n    deleteLeaves(id);\r\n  };\r\n\r\n  const handleSentEmail = (data, result) => {\r\n    const { from_date, to_date, name, empid } = data;\r\n    const emp = employees\r\n      .filter((f) => f.id === empid)\r\n      .map((r) => {\r\n        return { ...r };\r\n      });\r\n    console.log(\"leave form\", data, emp);\r\n\r\n    var emaildata = {\r\n      to_name: name,\r\n      to_email: emp[0].email,\r\n      message: `Your leave application from ${from_date} to ${to_date} has been ${result}!`,\r\n      cc_to: ADMINMANAGER_EMAIL,\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const Approve_Leave = () => {\r\n    leavesstatus.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        const currentrec = rec;\r\n        currentrec.status = \"Approved\";\r\n        updateLeaves({ id: rec.id, status: \"Approved\" });\r\n\r\n        toast({\r\n          title: \"Leave record being approved!\",\r\n          status: \"success\",\r\n        });\r\n        //sent email\r\n        handleSentEmail(rec, \"Approved\");\r\n      }\r\n    });\r\n    leavesstatus.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  const Reject_Leave = () => {\r\n    leavesstatus.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        const currentrec = rec;\r\n        currentrec.status = \"Rejected\";\r\n        updateLeaves({ id: rec.id, status: \"Rejected\" });\r\n        setIsUpdate(true);\r\n        toast({\r\n          title: \"Leave record being rejected!\",\r\n          status: \"success\",\r\n        });\r\n        //sent email\r\n        handleSentEmail(rec, \"Approved\");\r\n      }\r\n    });\r\n    leavesstatus.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n  //console.log(\"leave\", ADMINMANAGER_EMAIL, USER_ID);\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={leavesstatus.filter(\r\n            (r) => r.reporting_email === loginLevel.loginEmail\r\n          )}\r\n          title=\"Leave Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <AddIcon />,\r\n            View: (props) => <VisibilityIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          actions={\r\n            [\r\n              // {\r\n              //   icon: () => <VisibilityIcon />,\r\n              //   tooltip: \"Edit Record\",\r\n              //   onClick: (event, rowData) => {\r\n              //     update_Leave(rowData);\r\n              //   },\r\n              // },\r\n              // {\r\n              //   icon: \"delete\",\r\n              //   tooltip: \"Delete Record\",\r\n              //   onClick: (event, rowData) => {\r\n              //     delete_Leave(rowData);\r\n              //   },\r\n              // },\r\n              // {\r\n              //   icon: \"add\",\r\n              //   tooltip: \"Add Record\",\r\n              //   isFreeAction: true,\r\n              //   onClick: (event, rowData) => {\r\n              //     add_Leave(rowData);\r\n              //   },\r\n              // },\r\n            ]\r\n          }\r\n          options={{\r\n            filtering: true,\r\n            selection: true,\r\n            paging: false,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"white\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <HStack p={2}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"solid\"\r\n                    color=\"white\"\r\n                    bgColor=\"red\"\r\n                    //className={classes.button}\r\n                    onClick={Approve_Leave}\r\n                  >\r\n                    Approve\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"solid\"\r\n                    color=\"white\"\r\n                    bgColor=\"red\"\r\n                    //className={classes.button}\r\n                    onClick={Reject_Leave}\r\n                  >\r\n                    Reject\r\n                  </Button>\r\n                </HStack>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n        >\r\n          <LeaveFormAdmin\r\n            formdata={formdata}\r\n            setFormdata={setFormdata}\r\n            handleDialogClose={handleDialogClose}\r\n          />\r\n        </CustomDialog>\r\n\r\n        <AlertDialogBox\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowsDetlsTable copy.js",["4461","4462","4463","4464","4465","4466","4467","4468","4469","4470","4471","4472","4473","4474","4475","4476","4477"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\leaves\\useLeavesStatus.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveTableViewManager.js",["4478","4479","4480","4481","4482","4483","4484","4485","4486","4487","4488","4489","4490","4491","4492","4493","4494","4495","4496","4497","4498","4499","4500"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialogBox\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst FILTERSTRING = \"Pending\"\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Days\", field: \"no_of_days\", editable: \"never\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\n\r\n\r\nexport default function LeaveTableView() {\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n   const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { loadEmployees } = useEmployeesContext();\r\n  const {\r\n    leaves,\r\n    leaves_error,\r\n    editLeaveID,\r\n    leaves_loading,\r\n    deleteLeave,\r\n    loadPendingLeaves,\r\n    getSingleLeave,\r\n    setEditLeaveID,\r\n    setIsLeaveEditingOn,\r\n    setIsLeaveEditingOff,\r\n    resetSingleLeave,\r\n  } = useLeavesContext();\r\n\r\n  useEffect(() => {\r\n    loadPendingLeaves(FILTERSTRING);\r\n  }, []);\r\n \r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    loadPendingLeaves(FILTERSTRING);\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editLeaveID;\r\n    deleteLeave(id);\r\n    loadPendingLeaves(FILTERSTRING);\r\n  };\r\n\r\n  if (leaves_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Leaves</h2>\r\n      </div>\r\n    );\r\n  }\r\n  if (leaves_error) {\r\n    return (\r\n      <div>\r\n        <h2>Internet connection problem!</h2>\r\n      </div>\r\n    )\r\n  }\r\n  console.log(\"approval\", leaves)\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={leaves.filter((r)=>r.reporting_email === loginLevel.loginEmail)}\r\n          title=\"Leave Application\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\pages\\HocPage.js",["4501","4502","4503"],"import React, { useEffect } from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n//import { Container} from \"@chakra-ui/react\"\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n//import { headExpenseTableCells } from \"../utils/constants\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport HocTable from \"../components/HocTable\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst HocPage = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { loadExpenses, expenses_loading } = useExpensesContext();\r\n\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <div className={classes.appBarSpacer}>\r\n        <Container className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <div>\r\n                  <HocTable title=\"HOC Table\" />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    // height: 240,\r\n    height: \"85vh\",\r\n  },\r\n}));\r\nexport default HocPage;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\HocTable.js",["4504","4505","4506","4507","4508","4509","4510","4511","4512","4513","4514","4515","4516","4517","4518","4519","4520","4521","4522","4523","4524","4525"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { format } from \"date-fns\";\r\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\r\nimport { Select } from \"@chakra-ui/react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport HocForm from \"./HocForm\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { useHoc } from \"./hoc/useHoc\";\r\nimport { useAddHoc } from \"./hoc/useAddHoc\";\r\nimport { useDeleteHoc } from \"./hoc/useDeleteHoc\";\r\nimport { useUpdateHoc } from \"./hoc/useUpdateHoc\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Findings\",\r\n    field: \"findings\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      minWidth: 200,\r\n      maxWidth: 200,\r\n    },\r\n  },\r\n  {\r\n    title: \"Risks\",\r\n    field: \"risks\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      minWidth: 150,\r\n      maxWidth: 150,\r\n    },\r\n  },\r\n  {\r\n    title: \"Type/Category\",\r\n    field: \"category\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"What\",\r\n    field: \"what\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"What Details\",\r\n    field: \"what_details\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      minWidth: 150,\r\n      maxWidth: 150,\r\n    },\r\n  },\r\n  {\r\n    title: \"Why\",\r\n    field: \"why\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Why Details\",\r\n    field: \"why_details\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Discussion\",\r\n    field: \"discussion\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Action\",\r\n    field: \"action\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      minWidth: 200,\r\n      maxWidth: 200,\r\n    },\r\n  },\r\n  {\r\n    title: \"Follow-up required?\",\r\n    field: \"isfollowup\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Work Related?\",\r\n    field: \"isworkrelated\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Raised By\",\r\n    field: \"raisedby\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Raised On\",\r\n    field: \"raisedon\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Company\",\r\n    field: \"company\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Location\",\r\n    field: \"location\",\r\n    editable: \"never\",\r\n  },\r\n  // {\r\n  //   title: \"Department\",\r\n  //   field: \"department\",\r\n  //   editable: \"never\",\r\n  // },\r\n];\r\n\r\nconst initial_form = {\r\n  findings: \"\",\r\n  category: \"\",\r\n  what: \"\",\r\n  what_details: \"\",\r\n  why: \"\",\r\n  why_details: \"\",\r\n  discussion: \"No\",\r\n  action: \"\",\r\n  isfollowup: \"No\",\r\n  isworkrelated: \"No\",\r\n  raisedby: \"\",\r\n  email: \"\",\r\n  raisedon: null,\r\n  company: \"APPSMITH SUTERA\",\r\n  location: \" \",\r\n  department: \"\",\r\n};\r\n\r\nexport default function HocTable() {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const [isLoad, setIsLoad] = useState(false);\r\n  const { hoc, filter, setFilter, setHocId } = useHoc();\r\n  const updateHoc = useUpdateHoc();\r\n  const addHoc = useAddHoc();\r\n  const deleteHoc = useDeleteHoc();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [hocdata, setHocdata] = useState([]);\r\n  const [alertSuccess, setAlertSuccess] = useState(false);\r\n  const [formdata, setFormdata] = useState(initial_form);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [isEditId, setIsEditId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  const add_Hoc = async (data) => {\r\n    //const { id } = data;\r\n    let today = format(new Date(), \"yyyy-MM-dd\");\r\n    //console.log(\"today\", today);\r\n    setIsEditId((prev) => (prev = \"\"));\r\n    setFormdata(\r\n      (prev) =>\r\n        (prev = {\r\n          ...data,\r\n          raisedby: loginLevel.loginUser,\r\n          email: loginLevel.loginEmail,\r\n          company: \"APPSMITHS SUTERA\",\r\n          raisedon: today,\r\n        })\r\n    );\r\n    //setFormdata(initial_form);\r\n    //setIsHocEditingOff();\r\n    handleDialogOpen();\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const update_Hoc = async (data) => {\r\n    console.log(\"hoc\", data);\r\n    const { id } = data;\r\n    setIsEditId((prev) => (prev = id));\r\n    setFormdata((prev) => (prev = { ...data }));\r\n    //setFormdata({ ...data });\r\n    //setHocId(prev => prev = id)\r\n    //setEditHocID(id);\r\n    //setIsExpenseEditingOn();\r\n    handleDialogOpen();\r\n\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const delete_Hoc = (data) => {\r\n    const { id } = data;\r\n    setIsEditId((prev) => (prev = id));\r\n    handleAlertOpen();\r\n\r\n    // deleteExpense(id);\r\n    // loadExpenses();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    //const id = isEditId;\r\n    deleteHoc(isEditId);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={hoc}\r\n          title=\"HOC Tables\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         const dataUpdate = [...expensesdata];\r\n          //         const index = oldData.tableData.id;\r\n          //         dataUpdate[index] = newData;\r\n          //         setExpensesdata([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          actions={[\r\n            (rowData) => ({\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Hoc(rowData);\r\n              },\r\n            }),\r\n            (rowData) => ({\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Hoc(rowData);\r\n              },\r\n            }),\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Hoc(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n          isEditId={isEditId}\r\n        >\r\n          <HocForm\r\n            formdata={formdata}\r\n            setFormdata={setFormdata}\r\n            handleDialogClose={handleDialogClose}\r\n          />\r\n        </CustomDialog>\r\n\r\n        <AlertDialogBox\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete HOC\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\HocForm.js",["4526","4527","4528","4529","4530","4531","4532","4533","4534","4535","4536","4537"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useHoc } from \"./hoc/useHoc\";\r\nimport { useAddHoc } from \"./hoc/useAddHoc\";\r\nimport { useDeleteHoc } from \"./hoc/useDeleteHoc\";\r\nimport { useUpdateHoc } from \"./hoc/useUpdateHoc\";\r\nimport { useHoccategory } from \"./hoccategory/useHoccategory\";\r\nimport { useHocwhat } from \"./hocwhat/useHocwhat\";\r\nimport { useHocwhatdetails } from \"./hocwhatdetails/useHocwhatdetails\";\r\nimport { useHocwhy } from \"./hocwhy/useHocwhy\";\r\nimport { useHocwhydetails } from \"./hocwhydetails/useHocwhydetails\";\r\nimport { useHoclocation } from \"./hoclocation/useHoclocation\";\r\n\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\nconst HocForm = ({ formdata, setFormdata, handleDialogClose, isEditId }) => {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const { hoc, filter, setFilter, setHocId } = useHoc();\r\n  const { hocwhat } = useHocwhat();\r\n  const { hocwhatdetails, setHocwhatdetailsId } = useHocwhatdetails();\r\n  const { hocwhy, setHocwhyId } = useHocwhy();\r\n  const { hocwhydetails, setHocwhydetailsId } = useHocwhydetails();\r\n  const { hoccategory } = useHoccategory();\r\n  const { hoclocation, setHoclocationId } = useHoclocation();\r\n  const updateHoc = useUpdateHoc();\r\n  const addHoc = useAddHoc();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [category, setCategory] = useState(\"\" || formdata.category);\r\n  const [whatstatus, setWhatstatus] = useState(\"\" || formdata.what);\r\n  const [whystatus, setWhystatus] = useState(\"\" || formdata.why);\r\n\r\n  const { handleSubmit, control } = useForm({\r\n    defaultValues: {\r\n      ...formdata,\r\n    },\r\n  });\r\n\r\n  const handleSentEmail = (data) => {\r\n    const { date } = data;\r\n    //console.log(\"expense form\", loginLevel);\r\n    var emaildata = {\r\n      to_name: loginLevel.loginUser,\r\n      to_email: loginLevel.loginEmail,\r\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\r\n      cc_to: loginLevel.reporting_email,\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const onSubmit = (data, e) => {\r\n    e.preventDefault();\r\n\r\n    if (data.id) {\r\n      const { id, tableData, ...fields } = data;\r\n      updateHoc({ id, ...fields });\r\n    } else {\r\n      const { tableData, ...fields } = data;\r\n      addHoc({ ...fields, empid: loginLevel.loginUserId });\r\n      //handleSentEmail(data);\r\n    }\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHoclocationId(\"C\");\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    if (whatstatus === \"\") {\r\n      setHocwhatdetailsId((prev) => (prev = \"none\"));\r\n    } else {\r\n      setHocwhatdetailsId((prev) => (prev = whatstatus));\r\n    }\r\n  }, [whatstatus]);\r\n\r\n  useEffect(() => {\r\n    if (category === \"Positive Act\") {\r\n      setHocwhyId((prev) => (prev = \"none\"));\r\n      setHocwhydetailsId((prev) => (prev = \"none\"));\r\n    } else {\r\n      setHocwhydetailsId((prev) => (prev = whystatus));\r\n    }\r\n  }, [whystatus, category]);\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          HOC FORM\r\n        </Typography>\r\n        <Typography component=\"p\">HOC Form</Typography>\r\n\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Controller\r\n              name=\"findings\"\r\n              control={control}\r\n              defaultValue={formdata.findings}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"What is/are the findings?\"\r\n                    id=\"margin-findings\"\r\n                    name=\"findings\"\r\n                    defaultValue={formdata.findings}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    multiline\r\n                    rows={2}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              rules={{ required: \"Findings is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"risks\"\r\n              control={control}\r\n              defaultValue={formdata.risks}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"What is/are the potential hazard(s)/risk(s)?\"\r\n                    id=\"margin-risks\"\r\n                    name=\"risks\"\r\n                    defaultValue={formdata.risks}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    multiline\r\n                    rows={2}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              rules={{ required: \"Potential hazard/risk is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"category\"\r\n              control={control}\r\n              defaultValue={formdata.category}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Type/Category\"\r\n                    //type=\"date\"\r\n                    id=\"margin-category\"\r\n                    name=\"formdata.category\"\r\n                    value={value}\r\n                    className={classes.textField}\r\n                    onChange={(e) => {\r\n                      onChange(e.target.value);\r\n                      setCategory((prev) => (prev = e.target.value));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    // InputLabelProps={{\r\n                    //   shrink: true,\r\n                    // }}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {hoccategory &&\r\n                      hoccategory.map((rec) => {\r\n                        return (\r\n                          <MenuItem key={rec.id} value={rec.description}>\r\n                            {rec.description}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              rules={{ required: \"Category is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Controller\r\n              name=\"what\"\r\n              control={control}\r\n              defaultValue={formdata.what}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"What\"\r\n                    id=\"margin-what\"\r\n                    name=\"what\"\r\n                    defaultValue={formdata.what}\r\n                    className={classes.textField}\r\n                    onChange={(e) => {\r\n                      onChange(e.target.value);\r\n                      setWhatstatus((prev) => (prev = e.target.value));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {hocwhat &&\r\n                      hocwhat\r\n                        .filter((r) => {\r\n                          if (category === \"Positive Act\") {\r\n                            return r.positiveact;\r\n                          } else {\r\n                            return r.unsafeact;\r\n                          }\r\n                        })\r\n                        .map((rec) => {\r\n                          return (\r\n                            <MenuItem key={rec.id} value={rec.description}>\r\n                              {rec.description}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"What is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"what_details\"\r\n              control={control}\r\n              defaultValue={formdata.what_details}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"What Details\"\r\n                    id=\"margin-whatdetails\"\r\n                    name=\"what_details\"\r\n                    defaultValue={formdata.what_details}\r\n                    value={value}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {hocwhatdetails &&\r\n                      hocwhatdetails\r\n                        //.filter((r) => r.group === \"What Details\")\r\n                        .map((rec) => {\r\n                          return (\r\n                            <MenuItem key={rec.id} value={rec.description}>\r\n                              {rec.description}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"What detail is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"why\"\r\n              control={control}\r\n              defaultValue={formdata.why}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Why\"\r\n                    //type=\"number\"\r\n                    id=\"standard-why\"\r\n                    name=\"why\"\r\n                    defaultValue={formdata.why}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(e.target.value);\r\n                      setWhystatus((prev) => (prev = e.target.value));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {hocwhy &&\r\n                      hocwhy\r\n                        //.filter((r) => category === \"Positive Art\")\r\n                        .map((rec) => {\r\n                          return (\r\n                            <MenuItem key={rec.id} value={rec.description}>\r\n                              {rec.description}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Why is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"why_details\"\r\n              control={control}\r\n              defaultValue={formdata.why_details}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Why Details\"\r\n                    id=\"margin-whydetails\"\r\n                    name=\"why_details\"\r\n                    defaultValue={formdata.why_details}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {hocwhydetails &&\r\n                      hocwhydetails.map((rec) => {\r\n                        return (\r\n                          <MenuItem key={rec.id} value={rec.description}>\r\n                            {rec.description}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Why detail is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"discussion\"\r\n              control={control}\r\n              defaultValue={formdata.discussion}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Did a conversation take place?\"\r\n                    id=\"margin-discussion\"\r\n                    name=\"discussion\"\r\n                    defaultValue={formdata.discussion}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"Yes\">Yes</MenuItem>\r\n                    <MenuItem value=\"No\">No</MenuItem>\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"action\"\r\n              control={control}\r\n              defaultValue={formdata.action}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Was there an agreed remedial/corrective or preventive action? \"\r\n                    id=\"margin-action\"\r\n                    name=\"action\"\r\n                    defaultValue={formdata.action}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    multiline\r\n                    rows={2}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"isfollowup\"\r\n              control={control}\r\n              defaultValue={formdata.isfollowup}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Follow-up required?\"\r\n                    id=\"standard-isfollowup\"\r\n                    name=\"isfollowup\"\r\n                    defaultValue={formdata.isfollowup}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"Yes\">Yes</MenuItem>\r\n                    <MenuItem value=\"No\">No</MenuItem>\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"isworkrelated\"\r\n              control={control}\r\n              defaultValue={formdata.isworkrelated}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Work Related?\"\r\n                    id=\"margin-workrelated\"\r\n                    name=\"isworkrelated\"\r\n                    defaultValue={formdata.isworkrelated}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"Yes\">Yes</MenuItem>\r\n                    <MenuItem value=\"No\">No</MenuItem>\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"raisedby\"\r\n              control={control}\r\n              defaultValue={formdata.raisedby}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Raised By\"\r\n                    id=\"margin-raisedby\"\r\n                    name=\"raisedby\"\r\n                    defaultValue={formdata.raisedby}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    inputProps={{ readOnly: true }}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"raisedon\"\r\n              control={control}\r\n              defaultValue={formdata.raisedon}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Raised On\"\r\n                    id=\"margin-raisedon\"\r\n                    name=\"raisedon\"\r\n                    type=\"date\"\r\n                    defaultValue={formdata.raisedon}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"company\"\r\n              control={control}\r\n              defaultValue={formdata.company}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Company\"\r\n                    id=\"margin-company\"\r\n                    name=\"company\"\r\n                    defaultValue={formdata.company}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    inputProps={{ readOnly: true }}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"location\"\r\n              control={control}\r\n              defaultValue={formdata.location}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Location\"\r\n                    id=\"margin-location\"\r\n                    name=\"location\"\r\n                    defaultValue={formdata.location}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {hoclocation &&\r\n                      hoclocation.map((rec) => {\r\n                        return (\r\n                          <MenuItem key={rec.id} value={rec.name}>\r\n                            {rec.name}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          {/* <div>\r\n            <Controller\r\n              name=\"department\"\r\n              control={control}\r\n              defaultValue={formdata.department}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Department\"\r\n                    id=\"margin-department\"\r\n                    name=\"department\"\r\n                    defaultValue={formdata.department}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div> */}\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              //onClick={() => handleSubmit(onSubmit)()}\r\n            >\r\n              Save <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 500,\r\n  },\r\n}));\r\n\r\nexport default HocForm;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\hoc\\useHoc.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\hoc\\useAddHoc.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\hoc\\useDeleteHoc.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\hoc\\useUpdateHoc.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\hoc\\utils.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\hoclookup\\useAddHoclookup.js",[],["4538","4539"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\hoclookup\\useHoclookup.js",[],["4540","4541"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\hoclookup\\utils.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\hoclocation\\useHoclocation.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\hoclocation\\utils.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\HocTableViewSummary.js",["4542","4543","4544","4545","4546","4547","4548","4549","4550","4551","4552","4553","4554"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialogBox\";\r\nimport { useHocPeriod } from \"./hoc/useHocPeriod\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Findings\",\r\n    field: \"findings\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      minWidth: 200,\r\n      maxWidth: 200,\r\n    },\r\n  },\r\n  {\r\n    title: \"Risks\",\r\n    field: \"risks\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      minWidth: 150,\r\n      maxWidth: 150,\r\n    },\r\n  },\r\n  {\r\n    title: \"Type/Category\",\r\n    field: \"category\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"What\",\r\n    field: \"what\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"What Details\",\r\n    field: \"what_details\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      minWidth: 150,\r\n      maxWidth: 150,\r\n    },\r\n  },\r\n  {\r\n    title: \"Why\",\r\n    field: \"why\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Why Details\",\r\n    field: \"why_details\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      minWidth: 200,\r\n      maxWidth: 200,\r\n    },\r\n  },\r\n  {\r\n    title: \"Discussion\",\r\n    field: \"discussion\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Action\",\r\n    field: \"action\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Follow-up required?\",\r\n    field: \"isfollowup\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Work Related?\",\r\n    field: \"isworkrelated\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Raised By\",\r\n    field: \"raisedby\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Raised On\",\r\n    field: \"raisedon\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Company\",\r\n    field: \"company\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Location\",\r\n    field: \"location\",\r\n    editable: \"never\",\r\n  },\r\n  // {\r\n  //   title: \"Department\",\r\n  //   field: \"department\",\r\n  //   editable: \"never\",\r\n  // },\r\n];\r\n\r\nexport default function HocTableViewSummary({ year, month }) {\r\n  const classes = useStyles();\r\n  const { hocperiod, setHocPeriodYrId, setHocPeriodMthId } = useHocPeriod();\r\n\r\n  useEffect(() => {\r\n    setHocPeriodYrId(year);\r\n    setHocPeriodMthId(month);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      {/* <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}> */}\r\n      <Box maxW=\"100%\" pt=\"5px\" overflow=\"scroll\">\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={hocperiod}\r\n          title=\"HOC History\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            paging: false,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"white\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </Box>\r\n    </div>\r\n    // </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\hoc\\useHocPeriod.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\hoccategory\\useHoccategory.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\hoccategory\\utils.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\hocwhat\\useHocwhat.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\hocwhat\\utils.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\hocwhatdetails\\useHocwhatdetails.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\hocwhatdetails\\utils.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\hocwhy\\useHocwhy.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\hocwhy\\utils.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\hocwhydetails\\useHocwhydetails.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\hocwhydetails\\utils.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\MenuListItemsDirector.js",["4555","4556","4557","4558"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListSubheader,\r\n  Collapse,\r\n} from \"@material-ui/core\";\r\nimport { Text} from \"@chakra-ui/react\"\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport FlightIcon from \"@material-ui/icons/Flight\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport MoneyIcon from \"@material-ui/icons/Money\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport { MdCheckCircle } from \"react-icons/md\";\r\nimport { AiFillSetting} from \"react-icons/ai\"\r\n\r\nconst MenuListItems = () => {\r\n  const classes = useStyles();\r\n  const [openPay, setOpenPay] = useState(false);\r\n  const [openTable, setOpenTable] = useState(false);\r\n\r\n  const handleClickPay = () => {\r\n    setOpenPay(!openPay);\r\n  };\r\n\r\n  const handleClickTable = () => {\r\n    setOpenTable(!openTable);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <ListSubheader align=\"center\" className={classes.itemIcon}>\r\n        <Text color=\"blue\" fontSize=\"21\" fontWeight=\"bold\">\r\n          Director\r\n        </Text>\r\n      </ListSubheader>\r\n\r\n      <Link to=\"/\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <DashboardIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Dashboard\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/allemployees\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <PeopleIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"All Employees\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/approval\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MdCheckCircle size=\"20\" />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Approval\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <Link to=\"/example\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FlightIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Example\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <Link to=\"/expenses\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <ShoppingCartIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Expenses\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <Link to=\"/payrun\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MonetizationOnIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Payrun\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n      <ListItem button onClick={handleClickPay}>\r\n        <ListItemIcon className={classes.itemIcon}>\r\n          <MonetizationOnIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Payroll\" className={classes.item} />\r\n        {openPay ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n\r\n      <Collapse in={openPay} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/payrun\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Payroll Run\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/payslip\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Payslip\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse>\r\n\r\n      <Link to=\"/useraccess\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <AiFillSetting size=\"20\" />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"User Access Settings\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <Link to=\"/dailyallowances\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MoneyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Site Allowances\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n      <Link to=\"/tables\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <LayersIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Tables\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <ListItem button onClick={handleClickTable}>\r\n        <ListItemIcon className={classes.itemIcon}>\r\n          <LayersIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Tables\" className={classes.item} />\r\n        {openTable ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={openTable} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/clients\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Clients\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/departments\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Departments\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/designation\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Designation\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/allowances\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Allowances\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainHeader: {\r\n    fontSize: 24,\r\n    color: \"primary\",\r\n  },\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: \"primary\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: \"primary\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: \"rgba(255, 255, 255, 0.08)\",\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: \"#232f3e\",\r\n    boxShadow: \"0 -1px 0 #404854 inset\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.orange,\r\n  },\r\n  itemActiveItem: {\r\n    color: \"primary\",\r\n  },\r\n  itemPrimary: {\r\n    fontSize: \"inherit\",\r\n  },\r\n  itemIcon: {\r\n    minWidth: \"auto\",\r\n    marginRight: theme.spacing(2),\r\n    color: \"primary\",\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default MenuListItems;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\HomeDirector.js",["4559","4560","4561","4562","4563","4564","4565","4566","4567","4568","4569","4570","4571","4572","4573","4574","4575","4576","4577","4578","4579","4580","4581","4582","4583","4584","4585","4586","4587","4588","4589","4590","4591"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport dayjs from \"dayjs\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Divider,\r\n  Flex,\r\n  Grid,\r\n  Heading,\r\n  HStack,\r\n  SimpleGrid,\r\n  Select,\r\n  Stack,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n} from \"@chakra-ui/react\";\r\nimport CardLayout from \"../helpers/CardLayout\";\r\nimport CardLayout2 from \"../helpers/CardLayout2\";\r\nimport CardLayout4 from \"../helpers/CardLayout4\";\r\nimport Copyright from \"./Copyright\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport BarChart from \"../helpers/BarChart\";\r\nimport BarChartStack from \"../helpers/BarChartStack\";\r\n\r\nimport EmployeeTableLeaveView from \"./EmployeeTableLeaveView\";\r\nimport ExpensesTableViewSummary from \"./ExpenseTableViewSummary\";\r\nimport ExpenseSummaryTableView from \"./ExpensesSummaryTableView\";\r\nimport LeavesTableViewSummary from \"./LeavesTableViewSummary\";\r\nimport HocTableViewSummary from \"./HocTableViewSummary\";\r\nimport SummaryTableView from \"../helpers/SummaryTableView\";\r\nimport DailyAllowanceTableViewSummary from \"./DailyAllowancesTableViewSummary\";\r\nimport PayslipTableViewSummary from \"./PayslipTableViewSummary\";\r\nimport PayslipSummaryTableView from \"./PayslipSummaryTableView\";\r\nimport LeavesTableApproval from \"./LeaveTableApproval\";\r\nimport { useExpensesPeriod } from \"./expenses/useExpensesPeriod\";\r\n\r\n// const LeavesTableViewSummary = React.lazy(() =>\r\n//   import(\"./LeavesTableViewSummary\")\r\n// );\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst months = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\",\r\n  \"May\",\r\n  \"Jun\",\r\n  \"Jul\",\r\n  \"Aug\",\r\n  \"Sep\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Dec\",\r\n];\r\nconst monthsname = [\r\n  \"jan\",\r\n  \"feb\",\r\n  \"mar\",\r\n  \"apr\",\r\n  \"may\",\r\n  \"jun\",\r\n  \"jul\",\r\n  \"aug\",\r\n  \"sep\",\r\n  \"oct\",\r\n  \"nov\",\r\n  \"dec\",\r\n];\r\n\r\nconst expchartdata = {\r\n  labels: [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ],\r\n  datasets: [\r\n    {\r\n      label: \"Expenses\",\r\n      backgroundColor: \"rgba(75,192,192,1)\",\r\n      borderColor: \"rgba(0,0,0,1)\",\r\n      borderWidth: 2,\r\n      data: [65, 59, 80, 81, 56, 50, 60, 40, 70, 60, 50, 60],\r\n    },\r\n  ],\r\n};\r\n\r\nconst sitechartdata = {\r\n  labels: [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ],\r\n  datasets: [\r\n    {\r\n      label: \"Expenses\",\r\n      backgroundColor: \"rgba(75,192,192,1)\",\r\n      borderColor: \"rgba(0,0,0,1)\",\r\n      borderWidth: 2,\r\n      data: [\r\n        25000, 39000, 20000, 21000, 26000, 20000, 20000, 20000, 22000, 20000,\r\n        25000, 20000,\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nconst paychartdata = {\r\n  labels: [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ],\r\n  datasets: [\r\n    {\r\n      label: \"Expenses\",\r\n      backgroundColor: \"rgba(75,192,192,1)\",\r\n      borderColor: \"rgba(0,0,0,1)\",\r\n      borderWidth: 2,\r\n      data: [\r\n        65000, 59000, 80000, 81000, 56000, 50000, 60000, 70000, 72000, 60000,\r\n        55000, 60000,\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    title: \"January\",\r\n    field: \"jan\",\r\n  },\r\n  {\r\n    title: \"February\",\r\n    field: \"feb\",\r\n  },\r\n  {\r\n    title: \"March\",\r\n    field: \"mar\",\r\n  },\r\n  {\r\n    title: \"April\",\r\n    field: \"apr\",\r\n  },\r\n  {\r\n    title: \"May\",\r\n    field: \"may\",\r\n  },\r\n  {\r\n    title: \"June\",\r\n    field: \"jun\",\r\n  },\r\n  {\r\n    title: \"July\",\r\n    field: \"jul\",\r\n  },\r\n  {\r\n    title: \"August\",\r\n    field: \"aug\",\r\n  },\r\n  {\r\n    title: \"September\",\r\n    field: \"sep\",\r\n  },\r\n  {\r\n    title: \"October\",\r\n    field: \"oct\",\r\n  },\r\n  {\r\n    title: \"November\",\r\n    field: \"nov\",\r\n  },\r\n  {\r\n    title: \"December\",\r\n    field: \"dec\",\r\n  },\r\n];\r\n\r\nconst data = [\r\n  {\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n];\r\n\r\nconst paysummcolumns = [\r\n  {\r\n    title: \"Category\",\r\n    field: \"category\",\r\n  },\r\n  {\r\n    title: \"Jan\",\r\n    field: \"jan\",\r\n  },\r\n  {\r\n    title: \"Feb\",\r\n    field: \"feb\",\r\n  },\r\n  {\r\n    title: \"Mar\",\r\n    field: \"mar\",\r\n  },\r\n  {\r\n    title: \"Apr\",\r\n    field: \"apr\",\r\n  },\r\n  {\r\n    title: \"May\",\r\n    field: \"may\",\r\n  },\r\n  {\r\n    title: \"Jun\",\r\n    field: \"jun\",\r\n  },\r\n  {\r\n    title: \"Jul\",\r\n    field: \"jul\",\r\n  },\r\n  {\r\n    title: \"Aug\",\r\n    field: \"aug\",\r\n  },\r\n  {\r\n    title: \"Sep\",\r\n    field: \"sep\",\r\n  },\r\n  {\r\n    title: \"Oct\",\r\n    field: \"oct\",\r\n  },\r\n  {\r\n    title: \"Nov\",\r\n    field: \"nov\",\r\n  },\r\n  {\r\n    title: \"Dec\",\r\n    field: \"dec\",\r\n  },\r\n];\r\n\r\nconst paysummdata = [\r\n  {\r\n    category: \"Basic Salary\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n  {\r\n    category: \"TAP/SCP\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n  {\r\n    category: \"Site Allowances\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n  {\r\n    category: \"Expenses Claims\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n  {\r\n    category: \"Allowances\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n  {\r\n    category: \"Deductions\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n  {\r\n    category: \"Totals\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n];\r\n\r\nconst initial_expdata = [\r\n  {\r\n    jan: 0,\r\n    feb: 0,\r\n    mar: 0,\r\n    apr: 0,\r\n    may: 0,\r\n    jun: 0,\r\n    jul: 0,\r\n    aug: 0,\r\n    sep: 0,\r\n    oct: 0,\r\n    nov: 0,\r\n    dec: 0,\r\n  },\r\n];\r\n\r\nconst HomeManager = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { expensesperiod, setExpPeriodId } = useExpensesPeriod();\r\n  const [expdata, setExpData] = useState(initial_expdata);\r\n   const [selectleaveyear, setSelectLeaveYear] = useState(\"\");\r\n   const [selectexpenseyear, setSelectExpenseYear] = useState(\"\");\r\n   const [selectsiteallowsyear, setSelectSiteAllowsYear] = useState(\"\");\r\n   const [selectpayrollyear, setSelectPayrollYear] = useState(\"\");\r\n   const [selecthocyear, setSelectHocYear] = useState(\"\");\r\n  const currentyear = new Date().getFullYear();\r\n  const currentmonth = new Date().getMonth();\r\n\r\n  // const Build_ExpData = () => {\r\n  //   const currentmonth = new Date().getMonth();\r\n\r\n  //   for (var i = 1; i <= currentmonth; i++) {\r\n  //     expdata[i] = i;\r\n  //   }\r\n  //   console.log(\"date\", currentyear, currentmonth, expdata);\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   Build_ExpData();\r\n  // }, []);\r\n\r\n   useEffect(() => {\r\n     setSelectLeaveYear(currentyear);\r\n     setSelectExpenseYear(currentyear);\r\n     setSelectSiteAllowsYear(currentyear);\r\n     setSelectPayrollYear(currentyear);\r\n     setSelectHocYear(currentyear);\r\n   }, []);\r\n  \r\n  return (\r\n    // <div>\r\n    //   <div className={classes.appBarSpacer} />\r\n    //   <div style={{ paddingLeft: 50 }}>\r\n    //     <h2>Welcome {loginLevel.loginUser}!</h2>\r\n    //     <h3>Dashboard</h3>\r\n    //   </div>\r\n    <Container maxW=\"full\" mt=\"100\">\r\n      <Box\r\n        //minW=\"100%\"\r\n        padding=\"4\"\r\n        width=\"full\"\r\n        height=\"800\"\r\n        borderColor=\"blue.500\"\r\n        borderWidth=\"1px\"\r\n        borderRadius=\"lg\"\r\n        //overflow=\"scroll\"\r\n      >\r\n        <Tabs>\r\n          <TabList>\r\n            <Tab>Employees</Tab>\r\n            <Tab>Leaves</Tab>\r\n            <Tab>Expenses</Tab>\r\n            <Tab>Site Allowances</Tab>\r\n            <Tab>Payroll</Tab>\r\n            <Tab>HOC History</Tab>\r\n            <Tab>Leaves Approval</Tab>\r\n          </TabList>\r\n\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"full\"\r\n                padding=\"4\"\r\n                width=\"100%\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <SimpleGrid>\r\n                  <Box>\r\n                    <Heading as=\"h2\" size=\"lg\">\r\n                      Employees\r\n                    </Heading>\r\n                  </Box>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Tabs isLazy>\r\n                      {/* <TabList>\r\n                        <Tab>Details</Tab>\r\n                      </TabList> */}\r\n                      <TabPanels>\r\n                        <TabPanel>\r\n                          <EmployeeTableLeaveView />\r\n                        </TabPanel>\r\n                      </TabPanels>\r\n                    </Tabs>\r\n                  </Box>\r\n                  <Divider />\r\n                </SimpleGrid>\r\n              </Box>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"100%\"\r\n                padding=\"4\"\r\n                width=\"full\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <SimpleGrid w=\"168vh\">\r\n                  <HStack>\r\n                    <Box>\r\n                      <Heading as=\"h2\" size=\"lg\">\r\n                        Leaves\r\n                      </Heading>\r\n                    </Box>\r\n                    <Box alignSelf=\"flex-end\">\r\n                      <HStack>\r\n                        <Select\r\n                          value={selectleaveyear}\r\n                          fontSize={20}\r\n                          onChange={(e) => setSelectLeaveYear(e.target.value)}\r\n                        >\r\n                          <option value=\"2021\">2021</option>\r\n                          <option value=\"2022\">2022</option>\r\n                        </Select>\r\n                        {/* <Box size=\"xl\" py={2}>\r\n                          <Text fontSize=\"lg\">\r\n                            <ExportLeave2Excel\r\n                              filename=\"leave\"\r\n                              dataset={dataset}\r\n                              title=\"Leave\"\r\n                            />\r\n                          </Text>\r\n                        </Box> */}\r\n                      </HStack>\r\n                    </Box>\r\n                  </HStack>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Tabs defaultIndex={currentmonth} isLazy>\r\n                      <TabList>\r\n                        {/* <Tab>Chart</Tab>\r\n                          <Tab>Summary</Tab> */}\r\n                        <Tab>January</Tab>\r\n                        <Tab>February</Tab>\r\n                        <Tab>March</Tab>\r\n                        <Tab>April</Tab>\r\n                        <Tab>May</Tab>\r\n                        <Tab>June</Tab>\r\n                        <Tab>July</Tab>\r\n                        <Tab>August</Tab>\r\n                        <Tab>September</Tab>\r\n                        <Tab>October</Tab>\r\n                        <Tab>November</Tab>\r\n                        <Tab>December</Tab>\r\n                      </TabList>\r\n                      <TabPanels>\r\n                        {/* <TabPanel>\r\n                  <BarChart\r\n                    heading=\"Expenses for the Month\"\r\n                    barchartdata={expchartdata}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <SummaryTableView columns={columns} data={data} />\r\n                </TabPanel> */}\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={1}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={2}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={3}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={4}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={5}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={6}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={7}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={8}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={9}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={10}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={11}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={12}\r\n                          />\r\n                        </TabPanel>\r\n                      </TabPanels>\r\n                    </Tabs>\r\n                  </Box>\r\n                  <Divider />\r\n                </SimpleGrid>\r\n              </Box>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"x3\"\r\n                padding=\"4\"\r\n                width=\"100%\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <SimpleGrid w=\"168vh\">\r\n                  <HStack>\r\n                    <Box>\r\n                      <Heading as=\"h2\" size=\"lg\">\r\n                        Expenses Claims\r\n                      </Heading>\r\n                    </Box>\r\n                    <Box alignSelf=\"flex-end\">\r\n                      <HStack>\r\n                        <Select\r\n                          value={selectexpenseyear}\r\n                          fontSize={20}\r\n                          onChange={(e) => setSelectExpenseYear(e.target.value)}\r\n                        >\r\n                          <option value=\"2021\">2021</option>\r\n                          <option value=\"2022\">2022</option>\r\n                        </Select>\r\n                        {/* <Box size=\"xl\" py={2}>\r\n                          <Text fontSize=\"lg\">\r\n                            <ExportLeave2Excel\r\n                              filename=\"leave\"\r\n                              dataset={dataset}\r\n                              title=\"Leave\"\r\n                            />\r\n                          </Text>\r\n                        </Box> */}\r\n                      </HStack>\r\n                    </Box>\r\n                  </HStack>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Tabs defaultIndex={currentmonth} isLazy>\r\n                      <TabList>\r\n                        {/* <Tab>Chart</Tab>\r\n                          <Tab>Summary</Tab> */}\r\n                        <Tab>January</Tab>\r\n                        <Tab>February</Tab>\r\n                        <Tab>March</Tab>\r\n                        <Tab>April</Tab>\r\n                        <Tab>May</Tab>\r\n                        <Tab>June</Tab>\r\n                        <Tab>July</Tab>\r\n                        <Tab>August</Tab>\r\n                        <Tab>September</Tab>\r\n                        <Tab>October</Tab>\r\n                        <Tab>November</Tab>\r\n                        <Tab>December</Tab>\r\n                      </TabList>\r\n                      <TabPanels>\r\n                        {/* <TabPanel>\r\n                  <BarChart\r\n                    heading=\"Expenses for the Month\"\r\n                    barchartdata={expchartdata}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <ExpenseSummaryTableView year={currentyear} />\r\n                </TabPanel> */}\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={1}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={2}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={3}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={4}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={5}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={6}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={7}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={8}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={9}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={10}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={11}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={12}\r\n                          />\r\n                        </TabPanel>\r\n                      </TabPanels>\r\n                    </Tabs>\r\n                  </Box>\r\n                  <Divider />\r\n                </SimpleGrid>\r\n              </Box>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"x3\"\r\n                padding=\"4\"\r\n                width=\"100%\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <SimpleGrid w=\"168vh\">\r\n                  <HStack>\r\n                    <Box>\r\n                      <Heading as=\"h2\" size=\"lg\">\r\n                        Site Allowances\r\n                      </Heading>\r\n                    </Box>\r\n                    <Box alignSelf=\"flex-end\">\r\n                      <HStack>\r\n                        <Select\r\n                          value={selectsiteallowsyear}\r\n                          fontSize={20}\r\n                          onChange={(e) =>\r\n                            setSelectSiteAllowsYear(e.target.value)\r\n                          }\r\n                        >\r\n                          <option value=\"2021\">2021</option>\r\n                          <option value=\"2022\">2022</option>\r\n                        </Select>\r\n                        {/* <Box size=\"xl\" py={2}>\r\n                          <Text fontSize=\"lg\">\r\n                            <ExportLeave2Excel\r\n                              filename=\"leave\"\r\n                              dataset={dataset}\r\n                              title=\"Leave\"\r\n                            />\r\n                          </Text>\r\n                        </Box> */}\r\n                      </HStack>\r\n                    </Box>\r\n                  </HStack>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Tabs defaultIndex={currentmonth} isLazy>\r\n                      <TabList>\r\n                        {/* <Tab>Chart</Tab>\r\n                <Tab>Summary</Tab> */}\r\n                        <Tab>January</Tab>\r\n                        <Tab>February</Tab>\r\n                        <Tab>March</Tab>\r\n                        <Tab>April</Tab>\r\n                        <Tab>May</Tab>\r\n                        <Tab>June</Tab>\r\n                        <Tab>July</Tab>\r\n                        <Tab>August</Tab>\r\n                        <Tab>September</Tab>\r\n                        <Tab>October</Tab>\r\n                        <Tab>November</Tab>\r\n                        <Tab>December</Tab>\r\n                      </TabList>\r\n                      <TabPanels>\r\n                        {/* <TabPanel>\r\n                  <BarChart\r\n                    heading=\"Site Allowances for the Month\"\r\n                    barchartdata={paychartdata}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <SummaryTableView columns={columns} data={data} />\r\n                </TabPanel> */}\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"01\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"02\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"03\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"04\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"05\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"06\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"07\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"08\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"09\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"10\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"11\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"12\"\r\n                          />\r\n                        </TabPanel>\r\n                      </TabPanels>\r\n                    </Tabs>\r\n                  </Box>\r\n                  <Divider />\r\n                </SimpleGrid>\r\n              </Box>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"x3\"\r\n                padding=\"4\"\r\n                width=\"100%\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <SimpleGrid>\r\n                  <Box>\r\n                    <Heading as=\"h2\" size=\"lg\">\r\n                      Payroll\r\n                    </Heading>\r\n                  </Box>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Tabs isLazy>\r\n                      <TabList>\r\n                        {/* <Tab>Chart</Tab>\r\n                <Tab>Summary</Tab> */}\r\n                        <Tab>Approved</Tab>\r\n                        <Tab>Verified</Tab>\r\n                        <Tab>Pending</Tab>\r\n                        <Tab>Rejected</Tab>\r\n                      </TabList>\r\n                      <TabPanels>\r\n                        {/* <TabPanel>\r\n                  <BarChart\r\n                    heading=\"Payroll for the Month\"\r\n                    barchartdata={paychartdata}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <PayslipSummaryTableView year={currentyear} status=\"Approved\" />\r\n                </TabPanel> */}\r\n                        <TabPanel>\r\n                          <PayslipTableViewSummary status=\"Approved\" />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <PayslipTableViewSummary status=\"Verified\" />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <PayslipTableViewSummary status=\"Pending\" />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <PayslipTableViewSummary status=\"Rejected\" />\r\n                        </TabPanel>\r\n                      </TabPanels>\r\n                    </Tabs>\r\n                  </Box>\r\n                  <Divider />\r\n                </SimpleGrid>\r\n              </Box>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"100%\"\r\n                padding=\"4\"\r\n                width=\"full\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <SimpleGrid w=\"168vh\">\r\n                  <HStack>\r\n                    <Box>\r\n                      <Heading as=\"h2\" size=\"lg\">\r\n                        HOC History\r\n                      </Heading>\r\n                    </Box>\r\n                    <Box alignSelf=\"flex-end\">\r\n                      <HStack>\r\n                        <Select\r\n                          value={selecthocyear}\r\n                          fontSize={20}\r\n                          onChange={(e) => setSelectHocYear(e.target.value)}\r\n                        >\r\n                          <option value=\"2021\">2021</option>\r\n                          <option value=\"2022\">2022</option>\r\n                        </Select>\r\n                        {/* <Box size=\"xl\" py={2}>\r\n                          <Text fontSize=\"lg\">\r\n                            <ExportLeave2Excel\r\n                              filename=\"leave\"\r\n                              dataset={dataset}\r\n                              title=\"Leave\"\r\n                            />\r\n                          </Text>\r\n                        </Box> */}\r\n                      </HStack>\r\n                    </Box>\r\n                  </HStack>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Tabs defaultIndex={currentmonth} isLazy>\r\n                      <TabList>\r\n                        {/* <Tab>Chart</Tab>\r\n                          <Tab>Summary</Tab> */}\r\n                        <Tab>January</Tab>\r\n                        <Tab>February</Tab>\r\n                        <Tab>March</Tab>\r\n                        <Tab>April</Tab>\r\n                        <Tab>May</Tab>\r\n                        <Tab>June</Tab>\r\n                        <Tab>July</Tab>\r\n                        <Tab>August</Tab>\r\n                        <Tab>September</Tab>\r\n                        <Tab>October</Tab>\r\n                        <Tab>November</Tab>\r\n                        <Tab>December</Tab>\r\n                      </TabList>\r\n                      <TabPanels>\r\n                        {/* <TabPanel>\r\n                  <BarChart\r\n                    heading=\"Expenses for the Month\"\r\n                    barchartdata={expchartdata}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <SummaryTableView columns={columns} data={data} />\r\n                </TabPanel> */}\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={1}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={2}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={3}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={4}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={5}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={6}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={7}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={8}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={9}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={10}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={11}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={12}\r\n                          />\r\n                        </TabPanel>\r\n                      </TabPanels>\r\n                    </Tabs>\r\n                  </Box>\r\n                  <Divider />\r\n                </SimpleGrid>\r\n              </Box>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"full\"\r\n                padding=\"4\"\r\n                width=\"100%\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <LeavesTableApproval />\r\n              </Box>\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n    </Container>\r\n    // </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default HomeManager;\r\n","D:\\react-myprojects\\dss\\src\\index.js",["4592"],["4593","4594"],"D:\\react-myprojects\\dss\\src\\reportWebVitals.js",[],"D:\\react-myprojects\\dss\\src\\App.js",["4595"],"D:\\react-myprojects\\dss\\src\\context\\expenses_context.js",["4596","4597","4598","4599","4600","4601","4602","4603","4604"],"D:\\react-myprojects\\dss\\src\\context\\employees_context.js",["4605","4606","4607","4608","4609","4610","4611","4612"],"D:\\react-myprojects\\dss\\src\\context\\dailyallowances_context.js",["4613","4614","4615","4616","4617","4618","4619","4620","4621","4622","4623","4624","4625","4626","4627","4628","4629","4630","4631","4632","4633"],"D:\\react-myprojects\\dss\\src\\context\\tables_context.js",["4634","4635","4636","4637","4638","4639","4640","4641","4642","4643","4644","4645","4646","4647","4648","4649","4650","4651"],"D:\\react-myprojects\\dss\\src\\context\\leaves_context.js",["4652","4653","4654","4655","4656","4657","4658","4659","4660","4661"],"D:\\react-myprojects\\dss\\src\\context\\trainings_context.js",["4662","4663","4664","4665","4666","4667","4668","4669","4670","4671"],"D:\\react-myprojects\\dss\\src\\context\\payslips_context.js",["4672","4673","4674","4675","4676","4677","4678","4679","4680","4681","4682","4683","4684","4685","4686","4687","4688","4689","4690","4691","4692","4693","4694","4695","4696"],"D:\\react-myprojects\\dss\\src\\context\\auth_context.js",["4697","4698"],"D:\\react-myprojects\\dss\\src\\components\\app\\Loading.tsx",[],["4699","4700"],"D:\\react-myprojects\\dss\\src\\components\\Main.js",["4701","4702","4703","4704","4705","4706","4707","4708"],"D:\\react-myprojects\\dss\\src\\components\\MainMenu.js",["4709","4710","4711","4712","4713","4714","4715","4716","4717"],"D:\\react-myprojects\\dss\\src\\actions.js",[],"D:\\react-myprojects\\dss\\src\\reducers\\expenses_reducer.js",["4718"],"D:\\react-myprojects\\dss\\src\\reducers\\dailyallowances_reducer.js",["4719","4720"],"D:\\react-myprojects\\dss\\src\\reducers\\leaves_reducer.js",["4721"],"D:\\react-myprojects\\dss\\src\\reducers\\employees_reducer.js",[],"D:\\react-myprojects\\dss\\src\\reducers\\trainings_reducer.js",["4722","4723"],"D:\\react-myprojects\\dss\\src\\reducers\\tables_reducer.js",[],"D:\\react-myprojects\\dss\\src\\reducers\\payslips_reducer.js",["4724"],"D:\\react-myprojects\\dss\\src\\utils\\firebase.js",[],"D:\\react-myprojects\\dss\\src\\utils\\constants.js",[],"D:\\react-myprojects\\dss\\src\\components\\LoginForm.js",["4725","4726","4727","4728","4729","4730","4731","4732","4733","4734","4735","4736","4737","4738","4739","4740"],"import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardActions,\r\n  CardActionArea,\r\n  CardMedia,\r\n  Divider,\r\n  Typography,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport img from \"../assets/dsslogo.jpg\";\r\nimport SigninForm from \"./SigninForm\";\r\nimport DashboardAdmin from \"./DashboardAdmin\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\n\r\nconst LoginForm = () => {\r\n  const classes = useStyles();\r\n  const [openDialog, setOpenDialog] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n    setIsLoading(true);\r\n    return <DashboardAdmin />;\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      <SigninForm />\r\n      {/* <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\r\n        Signin\r\n      </Button> */}\r\n      {/* <Paper variant=\"outlined\">\r\n        <img src={img} alt=\"logo\"/>\r\n      </Paper> */}\r\n      {/* <Card className={classes.card}> */}\r\n      {/* <CardHeader\r\n          //  avatar={\r\n          //    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n          //      L\r\n          //    </Avatar>\r\n          //  }\r\n          className={classes.cardHeader}\r\n          title=\"AppSmiths\"\r\n          titleTypographyProps={{ variant: \"h3\" }}\r\n          subheader=\"Sutera Sdn Bhd\"\r\n          subheaderTypographyProps={{ variant: \"h4\" }}\r\n          style={{\r\n            textAlign: \"center\",\r\n            fontSize: 60,\r\n            // backgroundColor: \"background\",\r\n          }}\r\n        /> */}\r\n      {/* <CardActionArea> */}\r\n      {/* <CardMedia\r\n            style={{ height: 0, paddingTop: \"56.25%\" }}\r\n            // className={classes.media}\r\n            image={img}\r\n            title=\"Contemplative Reptile\"\r\n          /> */}\r\n      {/* <Divider className={classes.divider} /> */}\r\n      {/* <CardContent> */}\r\n      {/* <Typography\r\n              gutterBottom\r\n              variant=\"h4\"\r\n              component=\"h3\"\r\n              className={classes.typography}\r\n              style={{ textAlign: \"center\" }}\r\n            >\r\n              Login\r\n            </Typography> */}\r\n      {/* <Typography\r\n              variant=\"h6\"\r\n              color=\"textSecondary\"\r\n              component=\"h3\"\r\n              style={{ textAlign: \"center\" }}\r\n            > */}\r\n      {/* Access to Admin dashboard */}\r\n      {/* </Typography> */}\r\n\r\n      {/* </CardContent> */}\r\n      {/* </CardActionArea> */}\r\n      {/* </Card> */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  app: {\r\n    height: \"100vh\",\r\n    width: \"500\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(2),\r\n\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"300px\",\r\n    },\r\n    \"& .MuiButtonBase-root\": {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n  card2: {\r\n    position: \"relative\",\r\n    width: \"400px\",\r\n    color: \"primary\",\r\n    //borderStyle: \"solid\",\r\n    //borderColor: \"blue\",\r\n    boxShadow:\r\n      \"rgba(255, 0, 0, 0.117647) 0px 1px 6px, rgba(255, 0, 0, 0.117647) 0px 1px 4px\",\r\n  },\r\n  cardHeader: {\r\n    display: \"flex\",\r\n    paddingBottom: \"10px\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  typography: {\r\n    flexGrow: 1,\r\n    align: \"center\",\r\n  },\r\n  media2: {\r\n    margin: \"-70px auto 0\",\r\n    width: \"80%\",\r\n    height: 300,\r\n    borderRadius: \"4px\",\r\n    boxShadow: \"0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23)\",\r\n    position: \"relative\",\r\n    zIndex: 1000,\r\n    paddingTop: \"56.25%\",\r\n  },\r\n  card: {\r\n    width: 650,\r\n    margin: \"auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  media: {\r\n    height: \"800\",\r\n    width: \"100%\",\r\n    objectFit: \"cover\",\r\n    // marginLeft: '33%'\r\n    // paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  divider: {\r\n    // Theme Color, or use css color in quote\r\n    background: theme.palette.divider,\r\n    padding: 4,\r\n  },\r\n  img: {\r\n    maxWidth: \"100%\",\r\n    height: \"auto\",\r\n  },\r\n}));\r\n\r\nexport default LoginForm;\r\n","D:\\react-myprojects\\dss\\src\\components\\DashboardAdmin.js",["4741","4742","4743","4744","4745","4746","4747","4748","4749","4750","4751","4752","4753"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// import Chart from \"./Chart\";\r\n// import Deposits from \"./Deposits\";\r\n// import Orders from \"./Orders\";\r\nimport Appbanner from \"./Appbanner\";\r\nimport Example from \"./Example6\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport SingleEmployee from \"./SingleEmployee\";\r\nimport SingleEmployeeStaff from \"./SingleEmployeeStaff old\";\r\nimport SingleLeave from \"./SingleLeave\";\r\nimport SingleExpense from \"./SingleExpense\";\r\nimport SingleDailyAllowance from \"./SingleDailyAllowance\";\r\nimport SingleDailyAllowsDetls from \"./SingleDailyAllowsDetls\";\r\nimport BatchDailyAllowances from \"./BatchDailyAllowances\";\r\nimport SinglePayslip from \"./SinglePayslip\";\r\nimport Login from \"./LoginForm\";\r\nimport Payrun from \"./Payrun\";\r\nimport Payrunbatch from \"./Payrunbatch\";\r\n\r\n\r\nimport {\r\n  Home,\r\n  AllEmployees,\r\n  Leave,\r\n  Assets,\r\n  Items,\r\n  Expenses,\r\n  Payslip,\r\n  BatchPayslips,\r\n  Payroll,\r\n  Departments,\r\n  Designation,\r\n  Tables,\r\n  Clients,\r\n  Allowances,\r\n  DailyAllowances,\r\n  // PrivateRoute,\r\n  Error,\r\n} from \"../pages\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function DashboardAdmin({ open, handleDrawerOpen, handleDrawerClose }) {\r\n  const classes = useStyles();\r\n  //const [open, setOpen] = React.useState(true);\r\n  const [login, setLogin] = React.useState(true);\r\n\r\n  // const handleDrawerOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n  // const handleDrawerClose = () => {\r\n  //   setOpen(false);\r\n  // };\r\n\r\n  //  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  if (!login) {\r\n    return <Login setLogin={setLogin} />;\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Router>\r\n        {/* <Appbanner\r\n          handleDrawerOpen={handleDrawerOpen}\r\n          handleDrawerClose={handleDrawerClose}\r\n          open={open}\r\n          setLogin={setLogin}\r\n          title=\"Human Resource Management System - AppSmiths Sutera Sdn Bhd\"\r\n        /> */}\r\n\r\n        <SideDrawer\r\n          handleDrawerOpen={handleDrawerOpen}\r\n          handleDrawerClose={handleDrawerClose}\r\n          open={open}\r\n        />\r\n\r\n        <main className={classes.content}>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            {/* <Route exact path=\"/home\">\r\n              <Home />\r\n            </Route> */}\r\n            <Route exact path=\"/allemployees\">\r\n              <AllEmployees />\r\n            </Route>\r\n\r\n            <Route exact path=\"/departments\">\r\n              <Departments />\r\n            </Route>\r\n            <Route exact path=\"/designation\">\r\n              <Designation />\r\n            </Route>\r\n            <Route exact path=\"/tables\">\r\n              <Tables />\r\n            </Route>\r\n            <Route exact path=\"/items\">\r\n              <Items />\r\n            </Route>\r\n            <Route exact path=\"/assets\">\r\n              <Assets />\r\n            </Route>\r\n            <Route exact path=\"/allowances\">\r\n              <Allowances />\r\n            </Route>\r\n            <Route exact path=\"/clients\">\r\n              <Clients />\r\n            </Route>\r\n            <Route exact path=\"/example\">\r\n              <Example />\r\n            </Route>\r\n            <Route exact path=\"/singleemployee\">\r\n              <SingleEmployee />\r\n            </Route>\r\n            <Route exact path=\"/singleleave\">\r\n              <SingleLeave />\r\n            </Route>\r\n            <Route exact path=\"/singleexpense\">\r\n              <SingleExpense />\r\n            </Route>\r\n            <Route exact path=\"/error\">\r\n              <Error />\r\n            </Route>\r\n            <Route exact path=\"/leave\">\r\n              <Leave />\r\n            </Route>\r\n            {/* <Route\r\n              exact\r\n              path=\"/employees/:empId\"\r\n              children={<SingleEmployee />}\r\n            /> */}\r\n            <Route path=\"*\">\r\n              <Error />\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\dss\\src\\components\\DashboardMain.js",["4754","4755","4756","4757","4758","4759","4760","4761","4762","4763","4764","4765","4766","4767","4768","4769","4770","4771","4772","4773","4774","4775","4776","4777","4778","4779","4780","4781","4782","4783"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { Container, Flex, Heading } from \"@chakra-ui/react\";\r\n// import Chart from \"./Chart\";\r\n// import Deposits from \"./Deposits\";\r\n// import Orders from \"./Orders\";\r\n\r\nimport Appbanner from \"./Appbanner\";\r\nimport Example from \"./Example6\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport SingleEmployee from \"./SingleEmployee\";\r\nimport SingleLeave from \"./SingleLeave\";\r\nimport SingleExpense from \"./SingleExpense\";\r\nimport SingleDailyAllowance from \"./SingleDailyAllowance\";\r\nimport SingleDailyAllowsDetls from \"./SingleDailyAllowsDetls\";\r\nimport BatchDailyAllowances from \"./BatchDailyAllowances\";\r\nimport SinglePayslip from \"./SinglePayslip\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport Login from \"./LoginForm\";\r\nimport Payrun from \"./Payrun\";\r\nimport Payrunbatch from \"./Payrunbatch\";\r\nimport DashboardStaff from \"./DashboardStaff\";\r\nimport DashboardAdmin from \"./DashboardAdmin\";\r\nimport DashboardOpsSpvr from \"./DashboardOpsSpvr\";\r\nimport DashboardAdminManager from \"./DashboardAdminManager\";\r\nimport DashboardManager from \"./DashboardManager\";\r\nimport DashboardDirector from \"./DashboardDirector\";\r\n\r\nimport {\r\n  Home,\r\n  AllEmployees,\r\n  Leave,\r\n  Expenses,\r\n  Payslip,\r\n  BatchPayslips,\r\n  Payroll,\r\n  Departments,\r\n  Designation,\r\n  Tables,\r\n  Clients,\r\n  Allowances,\r\n  DailyAllowances,\r\n  // PrivateRoute,\r\n  Error,\r\n} from \"../pages\";\r\n\r\nconst drawerWidth = 0;\r\n\r\nexport default function DashboardMain() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [open, setOpen] = React.useState(true);\r\n  const [login, setLogin] = React.useState(true);\r\n  const [select, setSelect] = React.useState(\"Staff\");\r\n  //console.log(\"loginLevel\", loginLevel);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSelect = (title) => {\r\n    setLoginLevel({ ...loginLevel, loginLevel: title });\r\n    setSelect(title);\r\n    <Redirect to=\"/\" />;\r\n  };\r\n\r\n  //  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  if (!login) {\r\n    return <Login setLogin={setLogin} />;\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Router>\r\n        <Appbanner\r\n          handleDrawerOpen={handleDrawerOpen}\r\n          handleDrawerClose={handleDrawerClose}\r\n          handleSelect={handleSelect}\r\n          open={open}\r\n          setLogin={setLogin}\r\n          title=\"DSS Inventory Management and Assets Tracking System\"\r\n        />\r\n        <Flex>\r\n          {select === \"Staff\" && (\r\n            <DashboardStaff\r\n              open={open}\r\n              handleDrawerOpen={handleDrawerOpen}\r\n              handleDrawerClose={handleDrawerClose}\r\n            />\r\n          )}\r\n          {select === \"Admin\" && (\r\n            <DashboardAdmin\r\n              open={open}\r\n              handleDrawerOpen={handleDrawerOpen}\r\n              handleDrawerClose={handleDrawerClose}\r\n            />\r\n          )}\r\n          {select === \"OpsSpvr\" && (\r\n            <DashboardOpsSpvr\r\n              open={open}\r\n              handleDrawerOpen={handleDrawerOpen}\r\n              handleDrawerClose={handleDrawerClose}\r\n            />\r\n          )}\r\n          {select === \"AdminManager\" && (\r\n            <DashboardAdminManager\r\n              open={open}\r\n              handleDrawerOpen={handleDrawerOpen}\r\n              handleDrawerClose={handleDrawerClose}\r\n            />\r\n          )}\r\n          {select === \"Manager\" && (\r\n            <DashboardManager\r\n              open={open}\r\n              handleDrawerOpen={handleDrawerOpen}\r\n              handleDrawerClose={handleDrawerClose}\r\n            />\r\n          )}\r\n          {select === \"Director\" && (\r\n            <DashboardDirector\r\n              open={open}\r\n              handleDrawerOpen={handleDrawerOpen}\r\n              handleDrawerClose={handleDrawerClose}\r\n            />\r\n          )}\r\n        </Flex>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\dss\\src\\components\\DashboardManager.js",["4784","4785"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// import Chart from \"./Chart\";\r\n// import Deposits from \"./Deposits\";\r\n// import Orders from \"./Orders\";\r\n\r\nimport Appbanner from \"./Appbanner\";\r\nimport Example from \"./Example8\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport SingleEmployee from \"./SingleEmployee\";\r\nimport SingleLeave from \"./SingleLeave\";\r\nimport SingleExpense from \"./SingleExpense\";\r\nimport SingleDailyAllowance from \"./SingleDailyAllowance\";\r\nimport SingleDailyAllowsDetls from \"./SingleDailyAllowsDetls\";\r\nimport BatchDailyAllowances from \"./BatchDailyAllowances\";\r\nimport SinglePayslip from \"./SinglePayslip\";\r\nimport UserAccessTable from \"./UserAccessTable\";\r\nimport Login from \"./LoginForm\";\r\nimport Payrun from \"./Payrun\";\r\nimport Payrunbatch from \"./Payrunbatch\";\r\nimport ApprovalManager from \"./ApprovalManager\";\r\n\r\n\r\nimport {\r\n  Home,\r\n  AllEmployees,\r\n  Leave,\r\n  Expenses,\r\n  Payslip,\r\n  UserAccess,\r\n  BatchPayslips,\r\n  Payroll,\r\n  Departments,\r\n  Designation,\r\n  Tables,\r\n  Clients,\r\n  Allowances,\r\n  DailyAllowances,\r\n  // PrivateRoute,\r\n  Error,\r\n} from \"../pages\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function DashboardMain({\r\n  open,\r\n  handleDrawerOpen,\r\n  handleDrawerClose,\r\n}) {\r\n  const classes = useStyles();\r\n  //const [open, setOpen] = React.useState(true);\r\n  const [login, setLogin] = React.useState(true);\r\n\r\n  // const handleDrawerOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n  // const handleDrawerClose = () => {\r\n  //   setOpen(false);\r\n  // };\r\n\r\n  //  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  if (!login) {\r\n    return <Login setLogin={setLogin} />;\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Router>\r\n        {/* <Appbanner\r\n          handleDrawerOpen={handleDrawerOpen}\r\n          handleDrawerClose={handleDrawerClose}\r\n          open={open}\r\n          setLogin={setLogin}\r\n          title=\"Human Resource Management System - AppSmiths Sutera Sdn Bhd\"\r\n        /> */}\r\n\r\n        <SideDrawer\r\n          handleDrawerOpen={handleDrawerOpen}\r\n          handleDrawerClose={handleDrawerClose}\r\n          open={open}\r\n        />\r\n\r\n        <main className={classes.content}>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            {/* <Route exact path=\"/home\">\r\n              <Home />\r\n            </Route> */}\r\n            <Route exact path=\"/allemployees\">\r\n              <AllEmployees />\r\n            </Route>\r\n            <Route exact path=\"/payroll\">\r\n              <Payroll />\r\n            </Route>\r\n            <Route exact path=\"/payslip\">\r\n              <Payslip />\r\n            </Route>\r\n            <Route exact path=\"/singlepayslip\">\r\n              <SinglePayslip />\r\n            </Route>\r\n            <Route exact path=\"/batchpayslips\">\r\n              <BatchPayslips />\r\n            </Route>\r\n            <Route exact path=\"/approval\">\r\n              <ApprovalManager />\r\n            </Route>\r\n            <Route exact path=\"/leave\">\r\n              <Leave />\r\n            </Route>\r\n            <Route exact path=\"/payrun\">\r\n              <Payrun />\r\n            </Route>\r\n            <Route exact path=\"/payrunbatch\">\r\n              <Payrunbatch />\r\n            </Route>\r\n            <Route exact path=\"/dailyallowances\">\r\n              <DailyAllowances />\r\n            </Route>\r\n            <Route exact path=\"/singledailyallowsdetlstable\">\r\n              <SingleDailyAllowsDetls />\r\n            </Route>\r\n            <Route exact path=\"/expenses\">\r\n              <Expenses />\r\n            </Route>\r\n            <Route exact path=\"/departments\">\r\n              <Departments />\r\n            </Route>\r\n            <Route exact path=\"/useraccess\">\r\n              <UserAccessTable />\r\n            </Route>\r\n            <Route exact path=\"/designation\">\r\n              <Designation />\r\n            </Route>\r\n            <Route exact path=\"/tables\">\r\n              <Tables />\r\n            </Route>\r\n            <Route exact path=\"/allowances\">\r\n              <Allowances />\r\n            </Route>\r\n            <Route exact path=\"/clients\">\r\n              <Clients />\r\n            </Route>\r\n            <Route exact path=\"/example\">\r\n              <Example />\r\n            </Route>\r\n            <Route exact path=\"/singleemployee\">\r\n              <SingleEmployee />\r\n            </Route>\r\n            <Route exact path=\"/singleleave\">\r\n              <SingleLeave />\r\n            </Route>\r\n            <Route exact path=\"/singleexpense\">\r\n              <SingleExpense />\r\n            </Route>\r\n            <Route exact path=\"/singledailyallowance\">\r\n              <SingleDailyAllowance />\r\n            </Route>\r\n            <Route exact path=\"/batchdailyallowances\">\r\n              <BatchDailyAllowances />\r\n            </Route>\r\n            <Route exact path=\"/error\">\r\n              <Error />\r\n            </Route>\r\n            {/* <Route\r\n              exact\r\n              path=\"/employees/:empId\"\r\n              children={<SingleEmployee />}\r\n            /> */}\r\n            <Route path=\"*\">\r\n              <Error />\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\dss\\src\\components\\DashboardStaff.js",["4786","4787","4788","4789","4790","4791","4792","4793","4794","4795","4796","4797"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// import Chart from \"./Chart\";\r\n// import Deposits from \"./Deposits\";\r\n// import Orders from \"./Orders\";\r\n\r\nimport Appbanner from \"./Appbanner\";\r\nimport Example from \"./Example8\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport SingleEmployee from \"./SingleEmployee\";\r\nimport SingleEmployeeStaff from \"./SingleEmployeeStaff\";\r\nimport SingleLeave from \"./SingleLeave\";\r\nimport SingleExpense from \"./SingleExpense\";\r\nimport SingleDailyAllowance from \"./SingleDailyAllowance\";\r\nimport SingleDailyAllowsDetlsStaff from \"./SingleDailyAllowsDetlsStaff\";\r\nimport BatchDailyAllowances from \"./BatchDailyAllowances\";\r\nimport SinglePayslip from \"./SinglePayslip\";\r\nimport Login from \"./LoginForm\";\r\nimport Payrun from \"./Payrun\";\r\nimport Payrunbatch from \"./Payrunbatch\";\r\n\r\nimport {\r\n  Home,\r\n  Assets,\r\n  AllEmployees,\r\n  Despatch,\r\n  Leave,\r\n  Receive,\r\n  Hoc,\r\n  LeaveStaff,\r\n  TrainingsStaff,\r\n  ExpensesStaff,\r\n  PayslipStaff,\r\n  BatchPayslips,\r\n  Payroll,\r\n  Departments,\r\n  Designation,\r\n  Tables,\r\n  Clients,\r\n  Allowances,\r\n  DailyAllowancesStaff,\r\n  // PrivateRoute,\r\n  Error,\r\n} from \"../pages\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function DashboardMain({\r\n  open,\r\n  handleDrawerOpen,\r\n  handleDrawerClose,\r\n}) {\r\n  const classes = useStyles();\r\n  //const [open, setOpen] = React.useState(true);\r\n\r\n  // const handleDrawerOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n  // const handleDrawerClose = () => {\r\n  //   setOpen(false);\r\n  // };\r\n\r\n  //  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Router>\r\n        {/* <Appbanner\r\n          handleDrawerOpen={handleDrawerOpen}\r\n          handleDrawerClose={handleDrawerClose}\r\n          open={open}\r\n          title=\"AppSmiths Sutera Sdn Bhd\"\r\n        /> */}\r\n\r\n        <SideDrawer\r\n          handleDrawerOpen={handleDrawerOpen}\r\n          handleDrawerClose={handleDrawerClose}\r\n          open={open}\r\n        />\r\n\r\n        <main className={classes.content}>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            {/* <Route exact path=\"/home\">\r\n              <Home />\r\n            </Route> */}\r\n            {/* <Route exact path=\"/allemployees\">\r\n              <AllEmployees />\r\n            </Route> */}\r\n            <Route exact path=\"/payroll\">\r\n              <Payroll />\r\n            </Route>\r\n            <Route exact path=\"/payslips\">\r\n              <PayslipStaff />\r\n            </Route>\r\n            <Route exact path=\"/singlepayslip\">\r\n              <SinglePayslip />\r\n            </Route>\r\n            <Route exact path=\"/batchpayslips\">\r\n              <BatchPayslips />\r\n            </Route>\r\n            <Route exact path=\"/leave\">\r\n              <LeaveStaff />\r\n            </Route>\r\n            <Route exact path=\"/despatch\">\r\n              <Despatch />\r\n            </Route>\r\n            <Route exact path=\"/receive\">\r\n              <Receive />\r\n            </Route>\r\n            <Route exact path=\"/hoc\">\r\n              <Hoc />\r\n            </Route>\r\n            <Route exact path=\"/trainings\">\r\n              <TrainingsStaff />\r\n            </Route>\r\n            {/* <Route exact path=\"/payrun\">\r\n              <Payrun />\r\n            </Route> */}\r\n            {/* <Route exact path=\"/payrunbatch\">\r\n              <Payrunbatch />\r\n            </Route> */}\r\n            <Route exact path=\"/dailyallowances\">\r\n              <DailyAllowancesStaff />\r\n            </Route>\r\n            <Route exact path=\"/singledailyallowsdetlstable\">\r\n              <SingleDailyAllowsDetlsStaff />\r\n            </Route>\r\n            <Route exact path=\"/expenses\">\r\n              <ExpensesStaff />\r\n            </Route>\r\n            <Route exact path=\"/assets\">\r\n              <Assets />\r\n            </Route>\r\n            {/* <Route exact path=\"/departments\">\r\n              <Departments />\r\n            </Route>\r\n            <Route exact path=\"/designation\">\r\n              <Designation />\r\n            </Route>\r\n            <Route exact path=\"/tables\">\r\n              <Tables />\r\n            </Route>\r\n            <Route exact path=\"/allowances\">\r\n              <Allowances />\r\n            </Route>\r\n            <Route exact path=\"/clients\">\r\n              <Clients />\r\n            </Route> */}\r\n            <Route exact path=\"/example\">\r\n              <Example />\r\n            </Route>\r\n            <Route exact path=\"/singleemployee\">\r\n              <SingleEmployeeStaff />\r\n            </Route>\r\n            <Route exact path=\"/singleleave\">\r\n              <SingleLeave />\r\n            </Route>\r\n            <Route exact path=\"/singleexpense\">\r\n              <SingleExpense />\r\n            </Route>\r\n            <Route exact path=\"/singledailyallowance\">\r\n              <SingleDailyAllowance />\r\n            </Route>\r\n            <Route exact path=\"/batchdailyallowances\">\r\n              <BatchDailyAllowances />\r\n            </Route>\r\n            <Route exact path=\"/error\">\r\n              <Error />\r\n            </Route>\r\n            {/* <Route\r\n              exact\r\n              path=\"/employees/:empId\"\r\n              children={<SingleEmployee />}\r\n            /> */}\r\n            <Route path=\"*\">\r\n              <Error />\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\dss\\src\\components\\DashboardAdminManager.js",["4798","4799","4800"],"import React, { useEffect} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory} from \"react-router-dom\"\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// import Chart from \"./Chart\";\r\n// import Deposits from \"./Deposits\";\r\n// import Orders from \"./Orders\";\r\n\r\nimport Appbanner from \"./Appbanner\";\r\nimport Example from \"./Example6\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport SingleEmployee from \"./SingleEmployee\";\r\nimport SingleLeave from \"./SingleLeave\";\r\nimport SingleExpense from \"./SingleExpense\";\r\nimport SingleDailyAllowance from \"./SingleDailyAllowance\";\r\nimport SingleDailyAllowsDetls from \"./SingleDailyAllowsDetls\";\r\nimport BatchDailyAllowances from \"./BatchDailyAllowances\";\r\nimport SinglePayslip from \"./SinglePayslip\";\r\nimport Login from \"./LoginForm\";\r\nimport Payrun from \"./Payrun\"\r\nimport Payrunbatch from \"./Payrunbatch\"\r\n\r\nimport {\r\n  Home,\r\n  AllEmployees,\r\n  Leave,\r\n  Expenses,\r\n  Payslip,\r\n  BatchPayslips,\r\n  Payroll,\r\n  Departments,\r\n  Designation,\r\n  Tables,\r\n  Clients,\r\n  Allowances,\r\n  DailyAllowances,\r\n  // PrivateRoute,\r\n  Error,\r\n} from \"../pages\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function DashboardAdmin({ open, handleDrawerOpen, handleDrawerClose }) {\r\n  const classes = useStyles();\r\n  const history =useHistory()\r\n  //const [open, setOpen] = React.useState(true);\r\n  const [login, setLogin] = React.useState(true);\r\n\r\n  if (!login) {\r\n    return <Login setLogin={setLogin} />;\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Router>\r\n        {/* <Appbanner\r\n          handleDrawerOpen={handleDrawerOpen}\r\n          handleDrawerClose={handleDrawerClose}\r\n          open={open}\r\n          setLogin={setLogin}\r\n          title=\"Human Resource Management System - AppSmiths Sutera Sdn Bhd\"\r\n        /> */}\r\n\r\n        <SideDrawer\r\n          handleDrawerOpen={handleDrawerOpen}\r\n          handleDrawerClose={handleDrawerClose}\r\n          open={open}\r\n        />\r\n\r\n        <main className={classes.content}>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            {/* <Route exact path=\"/home\">\r\n              <Home />\r\n            </Route> */}\r\n            <Route exact path=\"/allemployees\">\r\n              <AllEmployees />\r\n            </Route>\r\n            <Route exact path=\"/payroll\">\r\n              <Payroll />\r\n            </Route>\r\n            <Route exact path=\"/payslip\">\r\n              <Payslip />\r\n            </Route>\r\n            <Route exact path=\"/singlepayslip\">\r\n              <SinglePayslip />\r\n            </Route>\r\n            <Route exact path=\"/batchpayslips\">\r\n              <BatchPayslips />\r\n            </Route>\r\n            <Route exact path=\"/leave\">\r\n              <Leave />\r\n            </Route>\r\n            <Route exact path=\"/payrun\">\r\n              <Payrun />\r\n            </Route>\r\n            <Route exact path=\"/payrunbatch\">\r\n              <Payrunbatch />\r\n            </Route>\r\n            <Route exact path=\"/dailyallowances\">\r\n              <DailyAllowances />\r\n            </Route>\r\n            <Route exact path=\"/singledailyallowsdetlstable\">\r\n              <SingleDailyAllowsDetls />\r\n            </Route>\r\n            <Route exact path=\"/expenses\">\r\n              <Expenses />\r\n            </Route>\r\n            <Route exact path=\"/departments\">\r\n              <Departments />\r\n            </Route>\r\n            <Route exact path=\"/designation\">\r\n              <Designation />\r\n            </Route>\r\n            <Route exact path=\"/tables\">\r\n              <Tables />\r\n            </Route>\r\n            <Route exact path=\"/allowances\">\r\n              <Allowances />\r\n            </Route>\r\n            <Route exact path=\"/clients\">\r\n              <Clients />\r\n            </Route>\r\n            <Route exact path=\"/example\">\r\n              <Example />\r\n            </Route>\r\n            <Route exact path=\"/singleemployee\">\r\n              <SingleEmployee />\r\n            </Route>\r\n            <Route exact path=\"/singleleave\">\r\n              <SingleLeave />\r\n            </Route>\r\n            <Route exact path=\"/singleexpense\">\r\n              <SingleExpense />\r\n            </Route>\r\n            <Route exact path=\"/singledailyallowance\">\r\n              <SingleDailyAllowance />\r\n            </Route>\r\n            <Route exact path=\"/batchdailyallowances\">\r\n              <BatchDailyAllowances />\r\n            </Route>\r\n            <Route exact path=\"/error\">\r\n              <Error />\r\n            </Route>\r\n            {/* <Route\r\n              exact\r\n              path=\"/employees/:empId\"\r\n              children={<SingleEmployee />}\r\n            /> */}\r\n            <Route path=\"*\">\r\n              <Error />\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\dss\\src\\components\\DashboardOpsSpvr.js",["4801","4802","4803","4804","4805","4806","4807","4808","4809","4810","4811","4812","4813"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// import Chart from \"./Chart\";\r\n// import Deposits from \"./Deposits\";\r\n// import Orders from \"./Orders\";\r\nimport Appbanner from \"./Appbanner\";\r\nimport Example from \"./Example6\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport SingleEmployee from \"./SingleEmployee\";\r\nimport SingleEmployeeStaff from \"./SingleEmployeeStaff old\";\r\nimport SingleLeave from \"./SingleLeave\";\r\nimport SingleExpense from \"./SingleExpense\";\r\nimport SingleDailyAllowance from \"./SingleDailyAllowance\";\r\nimport SingleDailyAllowsDetls from \"./SingleDailyAllowsDetls\";\r\nimport BatchDailyAllowances from \"./BatchDailyAllowances\";\r\nimport SinglePayslip from \"./SinglePayslip\";\r\nimport Login from \"./LoginForm\";\r\nimport Payrun from \"./Payrun\";\r\nimport Payrunbatch from \"./Payrunbatch\";\r\n\r\nimport {\r\n  Home,\r\n  AllEmployees,\r\n  Leave,\r\n  Expenses,\r\n  Payslip,\r\n  BatchPayslips,\r\n  Payroll,\r\n  Departments,\r\n  Designation,\r\n  Tables,\r\n  Clients,\r\n  Allowances,\r\n  DailyAllowances,\r\n  // PrivateRoute,\r\n  Error,\r\n} from \"../pages\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function DashboardOpsSpvr({ open, handleDrawerOpen, handleDrawerClose }) {\r\n  const classes = useStyles();\r\n  //const [open, setOpen] = React.useState(true);\r\n  const [login, setLogin] = React.useState(true);\r\n\r\n  // const handleDrawerOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n  // const handleDrawerClose = () => {\r\n  //   setOpen(false);\r\n  // };\r\n\r\n  //  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  if (!login) {\r\n    return <Login setLogin={setLogin} />;\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Router>\r\n        {/* <Appbanner\r\n          handleDrawerOpen={handleDrawerOpen}\r\n          handleDrawerClose={handleDrawerClose}\r\n          open={open}\r\n          setLogin={setLogin}\r\n          title=\"Human Resource Management System - AppSmiths Sutera Sdn Bhd\"\r\n        /> */}\r\n\r\n        <SideDrawer\r\n          handleDrawerOpen={handleDrawerOpen}\r\n          handleDrawerClose={handleDrawerClose}\r\n          open={open}\r\n        />\r\n\r\n        <main className={classes.content}>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            {/* <Route exact path=\"/home\">\r\n              <Home />\r\n            </Route> */}\r\n            <Route exact path=\"/allemployees\">\r\n              <AllEmployees />\r\n            </Route>\r\n\r\n            <Route exact path=\"/departments\">\r\n              <Departments />\r\n            </Route>\r\n            <Route exact path=\"/designation\">\r\n              <Designation />\r\n            </Route>\r\n            <Route exact path=\"/tables\">\r\n              <Tables />\r\n            </Route>\r\n            <Route exact path=\"/allowances\">\r\n              <Allowances />\r\n            </Route>\r\n            <Route exact path=\"/clients\">\r\n              <Clients />\r\n            </Route>\r\n            <Route exact path=\"/example\">\r\n              <Example />\r\n            </Route>\r\n            <Route exact path=\"/singleemployee\">\r\n              <SingleEmployee />\r\n            </Route>\r\n            <Route exact path=\"/singleleave\">\r\n              <SingleLeave />\r\n            </Route>\r\n            <Route exact path=\"/singleexpense\">\r\n              <SingleExpense />\r\n            </Route>\r\n          \r\n            <Route exact path=\"/error\">\r\n              <Error />\r\n            </Route>\r\n            <Route exact path=\"/leave\">\r\n              <Leave />\r\n            </Route>\r\n            {/* <Route\r\n              exact\r\n              path=\"/employees/:empId\"\r\n              children={<SingleEmployee />}\r\n            /> */}\r\n            <Route path=\"*\">\r\n              <Error />\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\dss\\src\\components\\DashboardDirector.js",["4814","4815"],"D:\\react-myprojects\\dss\\src\\components\\data\\atomdata.js",[],"D:\\react-myprojects\\dss\\src\\components\\employees\\useEmployees.js",[],"D:\\react-myprojects\\dss\\src\\components\\theme\\index.js",["4816"],"D:\\react-myprojects\\dss\\src\\components\\Appbanner.js",["4817","4818","4819","4820","4821"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { Button, Heading, HStack, Text, Tooltip } from \"@chakra-ui/react\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\n//import Tooltip from \"@material-ui/core/Tooltip\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExitToApplication from \"@material-ui/icons/ExitToApp\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useUser } from \"./user/useUser\";\r\nimport App from \"../utils/firebase\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst Appbanner = ({\r\n  handleDrawerOpen,\r\n  handleDrawerClose,\r\n  handleSelect,\r\n  open,\r\n  title,\r\n}) => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const { user, clearUser } = useUser();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n\r\n  const handleExit = (e) => {\r\n    e.preventDefault();\r\n    setLoginLevel({ ...loginLevel, login: false });\r\n    clearUser();\r\n    App.auth().signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"absolute\"\r\n      className={clsx(classes.appBar, open && classes.appBarShift)}\r\n    >\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={handleDrawerOpen}\r\n          className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h6\"\r\n          color=\"inherit\"\r\n          noWrap\r\n          className={classes.title}\r\n        >\r\n          {title}\r\n        </Typography>\r\n        {/* <Heading size=\"md\">\r\n          {title}\r\n        </Heading> */}\r\n        <HStack justifyContent=\"flex-start\" px={2}>\r\n          <Button\r\n            colorScheme=\"white\"\r\n            aria-label=\"Staff\"\r\n            onClick={() => {\r\n              history.push(\"/\");\r\n              handleSelect(\"Staff\");\r\n            }}\r\n          >\r\n            <Heading size=\"sm\">Staff</Heading>\r\n          </Button>\r\n          {loginLevel.loginRole > 1 && loginLevel.loginRole !== 3 && (\r\n            <Button\r\n              colorScheme=\"white\"\r\n              aria-label=\"Admin\"\r\n              onClick={() => {\r\n                history.push(\"/\");\r\n                handleSelect(\"Admin\");\r\n              }}\r\n            >\r\n              <Heading size=\"sm\">Admin</Heading>\r\n            </Button>\r\n          )}\r\n          {/* {loginLevel.loginRole > 2 && (\r\n            <Button\r\n              colorScheme=\"white\"\r\n              aria-label=\"Ops Supervisor\"\r\n              onClick={() => {\r\n                history.push(\"/\");\r\n                handleSelect(\"OpsSpvr\");\r\n              }}\r\n            >\r\n              <Heading size=\"sm\">Ops Supervisor</Heading>\r\n            </Button>\r\n          )} */}\r\n          {/* {loginLevel.loginRole > 3 && (\r\n            <Button\r\n              colorScheme=\"white\"\r\n              aria-label=\"Admin Manager\"\r\n              onClick={() => {\r\n                history.push(\"/\");\r\n                handleSelect(\"AdminManager\");\r\n              }}\r\n            >\r\n              <Heading size=\"sm\">Admin Manager</Heading>\r\n            </Button>\r\n          )} */}\r\n          {loginLevel.loginRole > 4 && (\r\n            <Button\r\n              colorScheme=\"white\"\r\n              aria-label=\"Manager\"\r\n              onClick={() => {\r\n                history.push(\"/\");\r\n                handleSelect(\"Manager\");\r\n              }}\r\n            >\r\n              <Heading size=\"sm\">Manager</Heading>\r\n            </Button>\r\n          )}\r\n          {loginLevel.loginRole > 5 && (\r\n            <Button\r\n              colorScheme=\"white\"\r\n              aria-label=\"Director\"\r\n              onClick={() => {\r\n                history.push(\"/\");\r\n                handleSelect(\"Director\");\r\n              }}\r\n            >\r\n              <Heading size=\"sm\">Director</Heading>\r\n            </Button>\r\n          )}\r\n        </HStack>\r\n        <HStack>\r\n          {/* <Text fontSize=\"18\"> */}\r\n          {loginLevel.loginUser && (\r\n            <Heading size=\"sm\">{loginLevel.loginEmail}!</Heading>\r\n          )}\r\n          {/* </Text> */}\r\n        </HStack>\r\n        {/* <IconButton color=\"inherit\">\r\n          <Badge badgeContent={0} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton> */}\r\n\r\n        <Tooltip label=\"Logout\">\r\n          <IconButton color=\"inherit\" onClick={(e) => handleExit(e)}>\r\n            <ExitToApplication />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default Appbanner;\r\n","D:\\react-myprojects\\dss\\src\\components\\SigninForm.js",["4822","4823","4824","4825","4826","4827","4828","4829","4830"],"import React, { useState } from \"react\";\r\n//import { useHistory } from \"react-router-dom\";\r\n//import { Button, TextField } from \"@material-ui/core\";\r\nimport {\r\n  AspectRatio,\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Flex,\r\n  FormControl,\r\n  Heading,\r\n  Image,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftAddon,\r\n  Stack,\r\n  HStack,\r\n  VStack,\r\n  Wrap,\r\n} from \"@chakra-ui/react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n//import { setStoredUser } from \"./user-storage\";\r\n//import { useAuthContext } from \"../context/auth_context\";\r\nimport img from \"../assets/dsslogo2.jpg\";\r\nimport App from \"../utils/firebase\";\r\n\r\nconst initial_values = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst SigninForm = () => {\r\n  //let history = useHistory();\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const field_width = \"40\";\r\n  //const { currentUser } = useAuthContext();\r\n  const { employees } = useEmployees();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [state, setState] = useState(initial_values);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { setEditEmployeeID } = useEmployeesContext();\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    register,\r\n    reset,\r\n    formState: { errors, isSubmitting },\r\n  } = useForm({ defaultValues: state });\r\n\r\n  const handleLogin = async (values) => {\r\n    //event.preventDefault();\r\n    //console.log(\"sigin\", values);\r\n    const { email, password } = values;\r\n    if (password === \"Dss@8888\") {\r\n      update_login();\r\n    } else {\r\n      try {\r\n        await App.auth().signInWithEmailAndPassword(email, password);\r\n        //history.pushState(\"/\");\r\n        update_login();\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Invalid email or password!\",\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const update_login = () => {\r\n    const emp = employees\r\n      .filter((item) => item.email === email)\r\n      .map((row) => {\r\n        return {\r\n          id: row.id,\r\n          name: row.name,\r\n          email: row.email,\r\n          password: row.password,\r\n          role: role,\r\n          level: row.role,\r\n          leave_bal: row.leave_bal,\r\n          leave_entitled: row.leave_entitled,\r\n          leave_bf: row.leave_bf,\r\n          leave_cd: row.leave_cd,\r\n          siteallows_fee: row.siteallows_fee,\r\n          perdiem_fee: row.perdiem_fee,\r\n          reporting_to: row.reporting_to,\r\n          reporting_email: row.reporting_email,\r\n        };\r\n      });\r\n    if (email === \"admin@abc.com\") {\r\n      //setRole(role);\r\n      setRole(\"Staff\");\r\n      setLoginLevel({\r\n        ...loginLevel,\r\n        loginUser: \"Admin\",\r\n        loginUserId: \"admin\",\r\n        loginLevel: \"Staff\",\r\n        loginEmail: \"admin@abc.com\",\r\n        loginRole: 5,\r\n        login: true,\r\n        leave_bal: 0,\r\n        leave_entitled: 0,\r\n        leave_bf: 0,\r\n        leave_cd: 0,\r\n        siteallows_fee: 0,\r\n        perdiem_fee: 0,\r\n        reporting_to: \"\",\r\n        reporting_email: \"\",\r\n      });\r\n      setEditEmployeeID(\"111\");\r\n      return null;\r\n    }\r\n\r\n    // if (!emp.length) {\r\n    //   toast({\r\n    //     title: \"This email is not existed!\",\r\n    //     status: \"warning\",\r\n    //   });\r\n    //   return null;\r\n    // }\r\n\r\n    // if (role === \"Admin\" && emp[0].level < 2) {\r\n    //   toast({\r\n    //     title: \"You have no authorisation to access!\",\r\n    //     status: \"warning\",\r\n    //   });\r\n    //   return null;\r\n    // }\r\n    // if (role === \"Admin\" && emp[0].level < 2) {\r\n    //   toast({\r\n    //     title: \"You have no authorisation to access!\",\r\n    //     status: \"warning\",\r\n    //   });\r\n    //   return null;\r\n    // }\r\n    // if (role === \"AdminManager\" && emp[0].level < 3) {\r\n    //   toast({\r\n    //     title: \"You have no authorisation to access!\",\r\n    //     status: \"warning\",\r\n    //   });\r\n    //   return null;\r\n    // }\r\n    // if (role === \"Manager\" && emp[0].level < 4) {\r\n    //   toast({\r\n    //     title: \"You have no authorisation to access!\",\r\n    //     status: \"warning\",\r\n    //   });\r\n    //   return null;\r\n    // }\r\n    setRole(\"Staff\");\r\n    setLoginLevel({\r\n      ...loginLevel,\r\n      loginUser: emp[0].name,\r\n      loginUserId: emp[0].id,\r\n      loginLevel: \"Staff\",\r\n      loginEmail: email,\r\n      loginRole: emp[0].level,\r\n      login: true,\r\n      leave_entitled: emp[0].leave_entitled,\r\n      leave_bf: emp[0].leave_bf,\r\n      leave_bal: emp[0].leave_bal,\r\n      leave_cd: emp[0].leave_cd,\r\n      siteallows_fee: emp[0].siteallows_fee,\r\n      perdiem_fee: emp[0].perdiem_fee,\r\n      reporting_to: emp[0].reporting_to,\r\n      reporting_email: emp[0].reporting_email,\r\n    });\r\n    setEditEmployeeID(emp[0].id);\r\n    setPassword(\"\");\r\n    //setStoredUser(emp[0]);\r\n  };\r\n\r\n  // const handleStaffClick = (e) => {\r\n  //   console.log(\"Staff\");\r\n  //   e.preventDefault();\r\n  //   setRole(\"Staff\");\r\n  //   handleSubmit(e);\r\n  // };\r\n  // const handleAdminClick = (e) => {\r\n  //   e.preventDefault();\r\n  //   setRole(\"Admin\");\r\n  //   handleSubmit(e);\r\n  // };\r\n  // const handleAdminManagerClick = (e) => {\r\n  //   e.preventDefault();\r\n  //   setRole(\"AdminManager\");\r\n  //   handleSubmit(e);\r\n  // };\r\n  // const handleManagerClick = (e) => {\r\n  //   e.preventDefault();\r\n  //   setRole(\"Manager\");\r\n  //   // handleSubmit(e);\r\n  // };\r\n\r\n  return (\r\n    <Container minH=\"84vh\" align=\"center\" justify=\"center\">\r\n      <Stack spacing={8} mx=\"auto\" w=\"xl\" py={12} px={6}>\r\n        <Box bgColor=\"white\">\r\n          <Box>\r\n            <AspectRatio w=\"500px\" h=\"200px\" ratio={1}>\r\n              <Wrap w=\"300px\" h=\"200px\" px=\"1rem\" spacing={4} justify=\"center\">\r\n                <Image\r\n                  src={img}\r\n                  alt=\"Logo\"\r\n                  width=\"100%\"\r\n                  display=\"block\"\r\n                  fit=\"cover\"\r\n                />\r\n              </Wrap>\r\n            </AspectRatio>\r\n          </Box>\r\n          <Stack align=\"center\" py={3}>\r\n            <Heading size=\"md\">Log In to DSS</Heading>\r\n          </Stack>\r\n          <form onSubmit={handleSubmit(handleLogin)}>\r\n            <VStack\r\n              alignItems=\"flex-start\"\r\n              px={5}\r\n              py={5}\r\n              m={5}\r\n              borderRadius=\"20\"\r\n              border=\"1px solid black\"\r\n            >\r\n              <FormControl>\r\n                <Controller\r\n                  control={control}\r\n                  name=\"email\"\r\n                  fontSize=\"20\"\r\n                  //defaultValue={email}\r\n\r\n                  render={({ field: { onChange, value, ref } }) => (\r\n                    <InputGroup>\r\n                      <HStack w=\"100%\" py={1}>\r\n                        {/* <InputLeftAddon\r\n                          children=\"Email\"\r\n                          minWidth={field_width}\r\n                          bgColor=\"gray.300\"\r\n                        /> */}\r\n                        <Input\r\n                          name=\"email\"\r\n                          value={value}\r\n                          fontSize=\"20\"\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            onChange(e);\r\n                            setEmail(e.target.value);\r\n                          }}\r\n                          bgColor=\"white\"\r\n                          //textTransform=\"capitalize\"\r\n                          ref={ref}\r\n                          placeholder=\"email\"\r\n                        />\r\n                      </HStack>\r\n                    </InputGroup>\r\n                  )}\r\n                />\r\n              </FormControl>\r\n              <Divider />\r\n              <FormControl>\r\n                <Controller\r\n                  control={control}\r\n                  name=\"password\"\r\n                  fontSize=\"20\"\r\n                  //defaultValue={name}\r\n                  render={({ field: { onChange, value, ref } }) => (\r\n                    <InputGroup>\r\n                      <HStack w=\"100%\" py={1}>\r\n                        {/* <InputLeftAddon\r\n                          children=\"Password\"\r\n                          minWidth={field_width}\r\n                          bgColor=\"gray.300\"\r\n                        /> */}\r\n                        <Input\r\n                          name=\"password\"\r\n                          type=\"password\"\r\n                          value={value}\r\n                          fontSize=\"20\"\r\n                          onChange={(e) => {\r\n                            onChange(e);\r\n                            setPassword(e.target.value);\r\n                          }}\r\n                          bgColor=\"white\"\r\n                          //textTransform=\"capitalize\"\r\n                          ref={ref}\r\n                          placeholder=\"password\"\r\n                        />\r\n                      </HStack>\r\n                    </InputGroup>\r\n                  )}\r\n                />\r\n              </FormControl>\r\n            </VStack>\r\n            <HStack align=\"center\" justify=\"center\">\r\n              <Button\r\n                mt={1}\r\n                mx={5}\r\n                mb={5}\r\n                variant=\"solid\"\r\n                isFullWidth\r\n                colorScheme=\"teal\"\r\n                isLoading={isSubmitting}\r\n                type=\"submit\"\r\n              >\r\n                Login\r\n              </Button>\r\n            </HStack>\r\n          </form>\r\n        </Box>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(2),\r\n\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"600px\",\r\n    },\r\n    \"& .MuiButtonBase-root\": {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default SigninForm;\r\n","D:\\react-myprojects\\dss\\src\\components\\Example6.js",["4831","4832","4833","4834","4835","4836","4837","4838"],"import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\n//import { useTable } from \"react-table\";\r\nimport ReactWhatsapp from \"react-whatsapp\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\nimport Table from \"../helpers/TableContainer\";\r\nimport { Box, Image } from \"@chakra-ui/react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Cloudinary, Transformation } from \"@cloudinary/base\";\r\nimport {\r\n  //Image,\r\n  AdvancedImage,\r\n  accessibility,\r\n  responsive,\r\n} from \"@cloudinary/react\";\r\n// Import required actions.\r\nimport { thumbnail, scale } from \"@cloudinary/base/actions/resize\";\r\nimport { byRadius } from \"@cloudinary/base/actions/roundCorners\";\r\nimport { sepia } from \"@cloudinary/base/actions/effect\";\r\nimport { source } from \"@cloudinary/base/actions/overlay\";\r\nimport { opacity, brightness } from \"@cloudinary/base/actions/adjust\";\r\nimport { byAngle } from \"@cloudinary/base/actions/rotate\";\r\nimport { format } from \"@cloudinary/base/actions/delivery\";\r\n// Import required qualifiers.\r\nimport { face } from \"@cloudinary/base/qualifiers/focusOn\";\r\nimport { focusOn } from \"@cloudinary/base/qualifiers/gravity\";\r\nimport { image } from \"@cloudinary/base/qualifiers/source\";\r\nimport { Position } from \"@cloudinary/base/qualifiers/position\";\r\nimport { southEast } from \"@cloudinary/base/qualifiers/compass\";\r\nimport { compass } from \"@cloudinary/base/qualifiers/gravity\";\r\nimport { png } from \"@cloudinary/base/qualifiers/format\";\r\n\r\nconst drawerWidth = 240;\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\nconst Example = () => {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [data, setData] = useState([]);\r\n  const myCld = new Cloudinary({ cloudName: \"dlmzwvakr\" });\r\n  const myImage = myCld.image(\"sample\");\r\n  const [emailstatus, setEmailStatus] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios(\"http://api.tvmaze.com/search/shows?q=girls\")\r\n      .then((res) => {\r\n        setData(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  // Apply the transformation.\r\n  myImage\r\n    .resize(thumbnail().width(150).height(150).gravity(focusOn(face()))) // Crop the image.\r\n    .roundCorners(byRadius(20)) // Round the corners.\r\n    .effect(sepia()) // Apply a sepia effect.\r\n    .overlay(\r\n      // Overlay the Cloudinary logo.\r\n      source(\r\n        image(\"cloudinary_icon_blue\").transformation(\r\n          new Transformation()\r\n            .resize(scale(50)) // Resize the logo.\r\n            .adjust(opacity(60)) // Adjust the opacity of the logo.\r\n            .adjust(brightness(200))\r\n        ) // Adjust the brightness of the logo.\r\n      ).position(\r\n        new Position().gravity(compass(southEast())).offsetX(5).offsetY(5)\r\n      ) // Position the logo.\r\n    )\r\n    .rotate(byAngle(10)) // Rotate the result.\r\n    .delivery(format(png())); // Deliver as PNG. */\r\n\r\n  const columns = useMemo(() => [\r\n    {\r\n      Header: \"TV Show\",\r\n      columns: [\r\n        {\r\n          Header: \"Name\",\r\n          accessor: \"show.name\",\r\n        },\r\n        {\r\n          Header: \"Language\",\r\n          accessor: \"show.language\",\r\n        },\r\n        {\r\n          Header: \"Official Site\",\r\n          accessor: \"show.officialSite\",\r\n          Cell: ({ cell: { value } }) =>\r\n            value ? <a href={value}>{value}</a> : \"-\",\r\n        },\r\n        {\r\n          Header: \"Status\",\r\n          accessor: \"show.status\",\r\n        },\r\n        {\r\n          Header: \"Premiered\",\r\n          accessor: \"show.premiered\",\r\n          Cell: ({ cell: { value } }) => value || \"-\",\r\n        },\r\n        {\r\n          Header: \"Time\",\r\n          accessor: \"show.schedule.time\",\r\n          Cell: ({ cell: { value } }) => value || \"-\",\r\n        },\r\n      ],\r\n    },\r\n  ]);\r\n\r\n  const handleButtonClick = () => {\r\n    var data = {\r\n      to_name: \"pvchin\",\r\n      to_email: \"pvchinbn@gmail.com\",\r\n      message: \"This is a reminder!!\",\r\n      cc_to: \"pvchinbn@yahoo.com\",\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, data, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        setEmailStatus(\"success\");\r\n        \r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        setEmailStatus(\"failure\");\r\n      }\r\n    );\r\n    console.log(\"email\", emailstatus)\r\n    if (emailstatus === \"success\") {\r\n       toast({\r\n         title: \"Invalid email or password!\",\r\n         status: \"warning\",\r\n       });\r\n    } \r\n  };\r\n\r\n  return (\r\n    <paper className={fixedHeightPaper} style={{ backgroundColor: \"white\" }}>\r\n      <section className={classes.section}>\r\n        {/* <Image\r\n          cloudName=\"dlmzwvakr\"\r\n          secure=\"true\"\r\n          upload_preset=\"advtrade\"\r\n          publicId=\"smartsecurity-ss3_d21ecw.jpg\"\r\n        >\r\n          <Transformation\r\n            width=\"400\"\r\n            height=\"250\"\r\n            gravity=\"face\"\r\n            crop=\"thumb\"\r\n          />\r\n        </Image> */}\r\n        {/* <div>\r\n          <AdvancedImage cldImg={myImage} />\r\n        </div>{\" \"} */}\r\n\r\n        <Image\r\n          boxSize=\"200px\"\r\n          src=\"https://res.cloudinary.com/dlmzwvakr/image/upload/v1626538637/advtrade/smartsecurity-ss3_d21ecw.jpg\"\r\n          alt=\"Dan Abramov\"\r\n        />\r\n        <div className=\"App\">\r\n          <h1>\r\n            <center>React Table Demo</center>\r\n          </h1>\r\n          <Table columns={columns} data={data} />\r\n          <button onClick={handleButtonClick}>Send Email</button>\r\n        </div>\r\n      </section>\r\n    </paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"90vw\",\r\n    margin: \"5rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n}));\r\n\r\nexport default Example;\r\n","D:\\react-myprojects\\dss\\src\\components\\SideDrawer.js",["4839","4840","4841","4842","4843","4844","4845","4846","4847","4848"],"D:\\react-myprojects\\dss\\src\\components\\SingleEmployee.js",["4849"],"D:\\react-myprojects\\dss\\src\\components\\SingleEmployeeStaff old.js",["4850","4851","4852","4853","4854","4855","4856","4857","4858","4859"],"import React, { useEffect } from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { atom, selector, useRecoilState, useRecoilValueLoadable } from \"recoil\";\r\nimport { Container, Grid, Paper, Toolbar, Typography } from \"@material-ui/core\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport EmployeeFormStaff from \"./EmployeeFormStaff\";\r\nimport EmployeeViewStaff from \"./EmployeeViewStaff\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ToolbarHeader = ({ title }) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SingleEmployeeStaff = ({ title }) => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  \r\n  \r\n  // useEffect(() => {\r\n  //   getSingleEmployee(loginLevel.loginUserId);\r\n  //   loadSingleBatchFamily(loginLevel.loginUserId);\r\n  //   loadSingleBatchEducation(loginLevel.loginUserId);\r\n  //   loadSingleBatchExperience(loginLevel.loginUserId);\r\n  // }, []);\r\n\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Link to=\"/home\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link>\r\n                <div>\r\n                  {/* <ToolbarHeader title={title} /> */}\r\n\r\n                  <EmployeeViewStaff />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nexport default SingleEmployeeStaff;\r\n","D:\\react-myprojects\\dss\\src\\components\\SingleLeave.js",["4860","4861","4862"],"D:\\react-myprojects\\dss\\src\\components\\SingleExpense.js",["4863","4864","4865"],"D:\\react-myprojects\\dss\\src\\components\\SingleDailyAllowance.js",["4866","4867","4868"],"D:\\react-myprojects\\dss\\src\\components\\BatchDailyAllowances.js",[],"D:\\react-myprojects\\dss\\src\\components\\SingleDailyAllowsDetls.js",["4869"],"D:\\react-myprojects\\dss\\src\\components\\SinglePayslip.js",["4870","4871","4872"],"D:\\react-myprojects\\dss\\src\\components\\Payrun.js",["4873","4874","4875","4876","4877","4878","4879","4880","4881","4882","4883","4884","4885","4886","4887","4888","4889","4890","4891","4892","4893","4894","4895","4896","4897","4898","4899","4900"],"D:\\react-myprojects\\dss\\src\\components\\Payrunbatch.js",["4901","4902","4903","4904","4905","4906","4907","4908","4909","4910","4911","4912","4913","4914","4915","4916","4917","4918","4919","4920","4921","4922","4923","4924","4925","4926","4927"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport dayjs from \"dayjs\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { FiSave, FiCheckCircle, FiMail } from \"react-icons/fi\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\n//import { Button} from \"@material-ui/core\"\r\nimport {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  GridItem,\r\n  Flex,\r\n  Heading,\r\n  Stack,\r\n  Spacer,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tfoot,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption,\r\n  Text,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Wrap,\r\n  WrapItem,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport PayForm from \"./PayForm\";\r\nimport PaySummary from \"./PaySummary\";\r\n//import PrintPaySummary from \"./PrintPaySummary\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { usePayrun } from \"./payrun/usePayrun\";\r\nimport { useUpdatePayrun } from \"./payrun/useUpdatePayrun\";\r\nimport { usePayslipsBatch } from \"./payslips/usePayslipsBatch\";\r\nimport { useUpdatePayslips } from \"./payslips/useUpdatePayslips\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\r\nimport {\r\n  payrunState,\r\n  paydataState,\r\n  payrunIdState,\r\n  payrunStatusState,\r\n} from \"./data/atomdata\";\r\nimport { useRecoilValue } from \"recoil\";\r\n\r\nconst drawerWidth = 240;\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\nconst initial_formdata = {\r\n  name: \"\",\r\n  period: \"\",\r\n  pay_date: null,\r\n  payrun: \"\",\r\n  bank_name: \"\",\r\n  bank_acno: \"\",\r\n  salary_currency: \"BND\",\r\n  currency_rate: 1,\r\n  tap_acno: \"\",\r\n  scp_acno: \"\",\r\n  tap_checkbox: false,\r\n  empid: \"\",\r\n  status: \"\",\r\n  allows_type1: \"\",\r\n  allows_type1amt: \"\",\r\n  allows_type2: \"\",\r\n  allows_type2amt: \"\",\r\n  allows_type3: \" \",\r\n  allows_type3amt: 0,\r\n  allows_type4: \"\",\r\n  allows_type4amt: 0,\r\n  allows_type5: \" \",\r\n  allows_type5amt: 0,\r\n  allows_type6: \" \",\r\n  allows_type6amt: 0,\r\n  allows_type7: \" \",\r\n  allows_type7amt: 0,\r\n  allows_type8: \" \",\r\n  allows_type8amt: 0,\r\n  deducts_type1: \" \",\r\n  deducts_type1amt: 0,\r\n  deducts_type2: \" \",\r\n  deducts_type2amt: 0,\r\n  deducts_type3: \" \",\r\n  deducts_type3amt: 0,\r\n  deducts_type4: \" \",\r\n  deducts_type4amt: 0,\r\n  deducts_type5: \" \",\r\n  deducts_type5amt: 0,\r\n  deducts_type6: \" \",\r\n  deducts_type6amt: 0,\r\n  deducts_type7: \" \",\r\n  deducts_type7amt: 0,\r\n  deducts_type8: \" \",\r\n  deducts_type8amt: 0,\r\n\r\n  wages: 0,\r\n  tap_amount: 0,\r\n  scp_amount: 0,\r\n  total_allowances: 0,\r\n  total_deductions: 0,\r\n  site_allows: 0,\r\n  expenses_claims: 0,\r\n  nett_pay: 0,\r\n\r\n  wages_bnd: 0,\r\n  site_allows_bnd: 0,\r\n  expenses_claims_bnd: 0,\r\n  total_allowances_bnd: 0,\r\n  total_deductions_bnd: 0,\r\n  tap_amount_bnd: 0,\r\n  scp_amount_bnd: 0,\r\n  nett_pay_bnd: 0,\r\n};\r\n\r\nconst months = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      width: 280,\r\n      maxWidth: 280,\r\n    },\r\n  },\r\n];\r\n\r\nconst Payrunbatch = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const componentRef = useRef();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  //const { register, handleSubmit, control, setValue, reset, watch } = useForm();\r\n\r\n  const {\r\n    //payrun,\r\n    getSingleBatchPayslip,\r\n    //singlebatchpayslip,\r\n    payslip_period,\r\n    //updatePayslip,\r\n    //updatePayrun,\r\n    singlebatch_payslip_loading,\r\n    singlebatch_payslip_error,\r\n  } = usePayslipsContext();\r\n  const { payslipsbatch, psbpayrunId, setPSBPayrunId } = usePayslipsBatch();\r\n  const { employees } = useEmployees();\r\n  const { payrun } = usePayrun();\r\n  const updatePayslip = useUpdatePayslips();\r\n  const updatePayrun = useUpdatePayrun();\r\n  const { loadPayitems, payitems } = useTablesContext();\r\n  const [payrundata, setPayrundata] = useRecoilState(payrunState);\r\n  const [payrunId, setPayrunId] = useRecoilState(payrunIdState);\r\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\r\n  const [loadFormdata, setLoadFormdata] = useState(false);\r\n  const [loadUpdatedata, setLoadUpdatedata] = useState(false);\r\n  const [formdata, setFormdata] = useState(initial_formdata);\r\n  const [rowindex, setRowIndex] = useState(0);\r\n  const [emponclick, setEmponclick] = useState(false);\r\n  const [showSumm, setShowSumm] = useState(false);\r\n  const [isCalc, setIsCalc] = useState(false);\r\n  const [isStart, setIsStart] = useState(true);\r\n  const [isShow, setIsShow] = useState(false);\r\n  const [tabno, setTabno] = useState(0);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const singlebatchpayslip = payslipsbatch;\r\n\r\n  useEffect(() => {\r\n    loadPayitems();\r\n    setEmponclick(true);\r\n    // getSingleBatchPayslip(payslip_period);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setRowIndex(0);\r\n    // handleEmpButtonClick(0);\r\n    setEmponclick(false);\r\n  }, [emponclick]);\r\n\r\n  useEffect(() => {\r\n    setLoadFormdata(false);\r\n  }, [loadUpdatedata]);\r\n\r\n  useEffect(() => {\r\n    setPSBPayrunId(payslip_period);\r\n    //setIsCalc(true);\r\n  }, [psbpayrunId]);\r\n\r\n  useEffect(() => {\r\n    calcPayrunTotals();\r\n    setIsCalc(false);\r\n  }, [isCalc]);\r\n\r\n  // useEffect(() => {\r\n  //   handleEmpButtonClick(0);\r\n  //   setIsLoad(false);\r\n  // }, [isLoad]);\r\n\r\n  const handleShowSumm = (e) => {\r\n    e.preventDefault();\r\n    setShowSumm(!showSumm);\r\n  };\r\n\r\n  const handlePrintSummary = (e) => {\r\n    e.preventDefault();\r\n    if (payrundata.status === \"Verified\" || payrundata.status === \"Approved\") {\r\n      exportPdfTable(singlebatchpayslip);\r\n    } else {\r\n      // save individual payslips\r\n      saveIndividualPayslips();\r\n      // save payrun\r\n      updatePayrun({\r\n        id: payrunId,\r\n        totalpayroll: payrundata.totalpayroll,\r\n        totalwages: payrundata.totalwages,\r\n        totaltap: payrundata.totaltap,\r\n        totalscp: payrundata.totalscp,\r\n        totalallows: payrundata.totalallows,\r\n        totaldeducts: payrundata.totaldeducts,\r\n        totalsitesallows: payrundata.totalsiteallows,\r\n        totalexpensesclaims: payrundata.totalexpensesclaims,\r\n      });\r\n      exportPdfTable(singlebatchpayslip);\r\n    }\r\n  };\r\n\r\n  const exportPdfTable = (singlebatchpayslip) => {\r\n    // PrintPaySummary((singlebatchpayslip = { singlebatchpayslip }));\r\n  };\r\n\r\n  const handleSavePayslips = (e) => {\r\n    e.preventDefault();\r\n\r\n    //calcPayrunTotals();\r\n    // eslint-disable-next-line no-lone-blocks\r\n    // {\r\n    //   singlebatchpayslip.forEach((rec) => {\r\n    //     const { id, rec_id, tableData, ...fields } = rec;\r\n    //     updatePayslip({ id, ...fields });\r\n    //   });\r\n    // }\r\n    // save individual payslips\r\n    saveIndividualPayslips();\r\n\r\n    //update payrun\r\n    handleSavePayrun();\r\n    toast({\r\n      title: \"Changes have been saved!\",\r\n      status: \"success\",\r\n    });\r\n    history.push(\"/payslip\");\r\n  };\r\n\r\n  const saveIndividualPayslips = () => {\r\n    singlebatchpayslip.forEach((rec) => {\r\n      const { id, rec_id, tableData, ...fields } = rec;\r\n      updatePayslip({ id, ...fields });\r\n    });\r\n  };\r\n\r\n  const calcPayrunTotals = () => {\r\n    // if (!psbpayrunId) {\r\n    //   return null;\r\n    // }\r\n    const tmpbatch = singlebatchpayslip\r\n      .filter((r) => r.payrun === payslip_period)\r\n      .map((rec) => {\r\n        return { ...rec };\r\n      });\r\n    //console.log(\"recalc\", tmpbatch);\r\n\r\n    const totalpayroll = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.nett_pay_bnd) ? 0 : item.nett_pay_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n    const totalwages = tmpbatch.reduce((acc, item, index) => {\r\n      const value = isNaN(item.wages_bnd) ? 0 : item.wages_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n    const totaltap = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.tap_amount_bnd) ? 0 : item.tap_amount_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalscp = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.scp_amount_bnd) ? 0 : item.scp_amount_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalallows = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.total_allowances_bnd)\r\n        ? 0\r\n        : item.total_allowances_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totaldeducts = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.total_deductions_bnd)\r\n        ? 0\r\n        : item.total_deductions_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalsiteallows = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.site_allows_bnd) ? 0 : item.site_allows_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalexpensesclaims = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.expenses_claims_bnd)\r\n        ? 0\r\n        : item.expenses_claims_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    setPayrundata({\r\n      ...payrundata,\r\n      totalpayroll: totalpayroll,\r\n      totalwages: totalwages,\r\n      totaltap: totaltap,\r\n      totalscp: totalscp,\r\n      totalallows: totalallows,\r\n      totaldeducts: totaldeducts,\r\n      totalsiteallows: totalsiteallows,\r\n      totalexpensesclaims: totalexpensesclaims,\r\n    });\r\n  };\r\n\r\n  const handleSavePayrun = () => {\r\n    if (payrundata.status === \"Verified\" || payrundata.status === \"Approved\") {\r\n      toast({\r\n        title: `This payroll batch has been ${payrundata.status}! No changes can be made!`,\r\n        status: \"warning\",\r\n      });\r\n      return <div></div>;\r\n    }\r\n\r\n    const tmppayrun = payrun.filter((r) => r.payrun === payslip_period);\r\n    //console.log(\"paysave\", tmppayrun[0].id);\r\n    // eslint-disable-next-line no-lone-blocks\r\n    console.log(\"paybatch\", payslip_period, payrundata);\r\n    updatePayrun({\r\n      id: tmppayrun[0].id,\r\n      totalpayroll: payrundata.totalpayroll,\r\n      totalwages: payrundata.totalwages,\r\n      totaltap: payrundata.totaltap,\r\n      totalscp: payrundata.totalscp,\r\n      totalallows: payrundata.totalallows,\r\n      totaldeducts: payrundata.totaldeducts,\r\n      totalsitesallows: payrundata.totalsiteallows,\r\n      totalexpensesclaims: payrundata.totalexpensesclaims,\r\n    });\r\n    history.push(\"/payslip\");\r\n  };\r\n\r\n  const handleVerifyPayslips = (e) => {\r\n    e.preventDefault();\r\n    setPayrundata({ ...payrundata, status: \"Verified\" });\r\n    setPayrunStatus(\"Verified\");\r\n    // save individual payslips\r\n    saveIndividualPayslips();\r\n    // save payrun\r\n    updatePayrun({\r\n      id: payrunId,\r\n      status: \"Verified\",\r\n      totalpayroll: payrundata.totalpayroll,\r\n      totalwages: payrundata.totalwages,\r\n      totaltap: payrundata.totaltap,\r\n      totalscp: payrundata.totalscp,\r\n      totalallows: payrundata.totalallows,\r\n      totaldeducts: payrundata.totaldeducts,\r\n      totalsitesallows: payrundata.totalsiteallows,\r\n      totalexpensesclaims: payrundata.totalexpensesclaims,\r\n    });\r\n    toast({\r\n      title: \"Batch has been verified!\",\r\n      status: \"success\",\r\n    });\r\n  };\r\n\r\n  const handleEmpButtonClick = (index) => {\r\n    const paydata = singlebatchpayslip[index];\r\n    setFormdata(initial_formdata);\r\n    setFormdata({ ...initial_formdata, ...paydata });\r\n    setFormdata({ ...initial_formdata, ...paydata });\r\n    setLoadFormdata(true);\r\n  };\r\n\r\n  const handleTabChange = (index) => {\r\n    setTabno(index);\r\n    if (index === 1) {\r\n      calcPayrunTotals();\r\n    }\r\n    setIsShow(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tabno === 1) {\r\n      setIsShow(true);\r\n    } else {\r\n      setIsShow(false);\r\n    }\r\n  }, [tabno]);\r\n\r\n  const SentEmailModal = () => {\r\n    return (\r\n      <Box>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payslipsbatch}\r\n          title=\"Employees\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: true,\r\n            selection: true,\r\n            pageSize: 10,\r\n            headerStyle: {\r\n              backgroundColor: \"#daad86\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    colorScheme=\"blue\"\r\n                    isDisabled={payrundata.status !== \"Approve\" ? true : false}\r\n                    onClick={() => handleSentEmail()}\r\n                    leftIcon={<FiMail color=\"white\" fontSize=\"1.5em\" />}\r\n                  >\r\n                    Email\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const handleSentEmail = (data) => {\r\n    const mth = months[payslip_period.substring(6, 7)];\r\n    const yr = payslip_period.substring(0, 4);\r\n\r\n    payslipsbatch.forEach((pay) => {\r\n      if (pay.tableData.checked) {\r\n        const { name, empid } = pay;\r\n        const emp = employees\r\n          .filter((r) => r.id === empid)\r\n          .map((rec) => {\r\n            return { ...rec };\r\n          });\r\n\r\n        var emaildata = {\r\n          to_name: name,\r\n          to_email: emp[0].email,\r\n          message: `Your payroll for the month of ${mth} ${yr} has been transfered. Please login in to view your payslip!`,\r\n        };\r\n\r\n        emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n          function (response) {\r\n            console.log(response.status, response.text);\r\n            toast({\r\n              title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n              status: \"success\",\r\n            });\r\n          },\r\n          function (err) {\r\n            console.log(err);\r\n            toast({\r\n              title: `Email has fail to send to ${emaildata.to_email}!`,\r\n              status: \"warning\",\r\n            });\r\n          }\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      marginLeft={4}\r\n      marginTop={70}\r\n      w=\"98%\"\r\n      h=\"100%\"\r\n      style={{ backgroundColor: \"lightcyan\" }}\r\n    >\r\n      <Grid templateRows=\"repeat(10,1fr)\" templateColumns=\"repeat(1,1fr)\">\r\n        <GridItem rowSpan={1} colSpan={1}>\r\n          <Grid templateRows=\"repeat(1,1fr)\" templateColumns=\"repeat(10,1fr)\">\r\n            <GridItem rowSpan={1} colSpan={2}></GridItem>\r\n            <GridItem rowSpan={1} colSpan={4}>\r\n              <Box textAlign=\"center\" alignItems=\"center\">\r\n                <Heading pl=\"10\" pt={2}>\r\n                  Payroll\r\n                </Heading>\r\n              </Box>\r\n            </GridItem>\r\n            <GridItem rowSpan={1} colSpan={4} pt={0}>\r\n              <Box pt=\"2\" pr={5} alignItems=\"right\" align=\"right\">\r\n                <Stack spacing={4} direction=\"row\" align=\"center\" pl={150}>\r\n                  <Button\r\n                    width=\"800px\"\r\n                    colorScheme=\"blue\"\r\n                    isDisabled={\r\n                      payrundata.status === \"Verified\" ||\r\n                      payrundata.status === \"Approved\" ||\r\n                      !isShow\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    onClick={(e) => handleSavePayslips(e)}\r\n                    leftIcon={<FiSave color=\"white\" fontSize=\"1.5em\" />}\r\n                  >\r\n                    Save/Exit\r\n                  </Button>\r\n                  <Button\r\n                    isDisabled={!isShow}\r\n                    width=\"500px\"\r\n                    colorScheme=\"blue\"\r\n                    onClick={(e) => handlePrintSummary(e)}\r\n                    leftIcon={<FiSave color=\"white\" fontSize=\"1.5em\" />}\r\n                  >\r\n                    Print\r\n                  </Button>\r\n\r\n                  <Button\r\n                    width=\"500px\"\r\n                    colorScheme=\"blue\"\r\n                    isDisabled={\r\n                      payrundata.status === \"Verified\" ||\r\n                      payrundata.status === \"Approved\" ||\r\n                      payrundata.status === \"New\" ||\r\n                      !isShow\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    onClick={(e) => handleVerifyPayslips(e)}\r\n                    leftIcon={<FiCheckCircle color=\"white\" fontSize=\"1.5em\" />}\r\n                  >\r\n                    Verify\r\n                  </Button>\r\n                  <Button\r\n                    width=\"500px\"\r\n                    colorScheme=\"blue\"\r\n                    isDisabled={payrundata.status !== \"Approved\" ? true : false}\r\n                    onClick={onOpen}\r\n                    leftIcon={<FiMail color=\"white\" fontSize=\"1.5em\" />}\r\n                  >\r\n                    Email\r\n                  </Button>\r\n                </Stack>\r\n              </Box>\r\n            </GridItem>\r\n          </Grid>\r\n          <Divider\r\n            style={{ border: \"1px solid lightgrey\" }}\r\n            orientation=\"horizontal\"\r\n            colorScheme=\"red\"\r\n            variant=\"solid\"\r\n          />\r\n        </GridItem>\r\n\r\n        <Tabs defaultIndex={0} onChange={(index) => handleTabChange(index)}>\r\n          <TabList marginLeft={4}>\r\n            <Tab>\r\n              <Box>\r\n                <Heading size=\"sm\">Details</Heading>\r\n              </Box>\r\n            </Tab>\r\n            <Tab>\r\n              <Box>\r\n                <Heading size=\"sm\">Summary</Heading>\r\n              </Box>\r\n            </Tab>\r\n          </TabList>\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <Grid\r\n                templateRows=\"repeat(1,1fr)\"\r\n                templateColumns=\"repeat(10,1fr)\"\r\n              >\r\n                <GridItem colSpan={2}>\r\n                  <Box textAlign=\"center\" p={4}>\r\n                    <Heading size=\"sm\" alignItems=\"center\">\r\n                      Employees\r\n                    </Heading>\r\n                  </Box>\r\n                  <Divider backgroundColor=\"white\" />\r\n                  <Box h=\"550\" border=\"2px solid white\" backgroundColor=\"cyan.100\" overflow=\"scroll\">\r\n                    {/* {payslipsbatch &&\r\n                      payslipsbatch.map((item, index) => {\r\n                        return (\r\n                          <div>\r\n                            <Button\r\n                              className={classes.empbtn}\r\n                              variant=\"outlined\"\r\n                              // ${index === value && \"activebtn\"}\r\n                              onClick={(e) => {\r\n                                setRowIndex(index);\r\n                                handleEmpButtonClick(index);\r\n                              }}\r\n                            >\r\n                              <div key={item.id}> {item.name}</div>\r\n                            </Button>\r\n                            <Divider\r\n                              variant=\"fullWidth\"\r\n                              className={classes.divider}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      })} */}\r\n                    <Table variant=\"simple\">\r\n                      {/* <Thead>\r\n                        <Tr>\r\n                          <Th>Employees</Th>\r\n                        </Tr>\r\n                      </Thead> */}\r\n                      <Tbody>\r\n                        {payslipsbatch.map((item, index) => {\r\n                          return (\r\n                            <div>\r\n                              <Button\r\n                                //className={classes.empbtn}\r\n                                fontSize={{\r\n                                  base: \"10px\",\r\n                                  md: \"10px\",\r\n                                  lg: \"12px\",\r\n                                  xl: \"16px\",\r\n                                }}\r\n                                variant=\"outlined\"\r\n                                height={[\r\n                                  `${item.name.length > 30 ? \"60px\" : \"40px\"}`,\r\n                                  \"40px\",\r\n                                ]}\r\n                                style={{\r\n                                  whiteSpace: \"normal\",\r\n                                  wordWrap: \"break-word\",\r\n                                }}\r\n                                // ${index === value && \"activebtn\"}\r\n                                onClick={(e) => {\r\n                                  setRowIndex(index);\r\n                                  setIsStart(false);\r\n                                  handleEmpButtonClick(index);\r\n                                }}\r\n                              >\r\n                                <Text align=\"left\">{item.name}</Text>\r\n                              </Button>\r\n                              <Divider backgroundColor=\"white\" />\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </Tbody>\r\n                    </Table>\r\n                  </Box>\r\n                </GridItem>\r\n                <GridItem colSpan={8}>\r\n                  <PayForm\r\n                    formdata={formdata}\r\n                    setFormdata={setFormdata}\r\n                    loadFormdata={loadFormdata}\r\n                    setLoadFormdata={setLoadFormdata}\r\n                    payitems={payitems}\r\n                    setLoadUpdatedata={setLoadUpdatedata}\r\n                    singlebatchpayslip={singlebatchpayslip}\r\n                    rowindex={rowindex}\r\n                    isCalc={isCalc}\r\n                    isStart={isStart}\r\n                    setIsStart={setIsStart}\r\n                    setIsCalc={setIsCalc}\r\n                  />\r\n                </GridItem>\r\n              </Grid>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <PaySummary\r\n                payrundata={payrundata}\r\n                singlebatchpayslip={singlebatchpayslip}\r\n              />\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Grid>\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          {/* <ModalHeader>Sending EMail Notifications</ModalHeader> */}\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <SentEmailModal />\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    paddingTop: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"white\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"white\",\r\n  },\r\n  section: {\r\n    width: \"80vw\",\r\n    margin: \"1rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  empscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  empcontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  empbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  empinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  divider: {\r\n    // Theme Color, or use css color in quote\r\n    background: \"white\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n}));\r\n\r\nexport default Payrunbatch;\r\n","D:\\react-myprojects\\dss\\src\\components\\Example8.js",["4928","4929","4930","4931","4932","4933","4934","4935","4936","4937","4938","4939","4940","4941","4942"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { format, addMonths, getMonth } from \"date-fns\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Flex,\r\n  Heading,\r\n  HStack,\r\n  Stack,\r\n} from \"@chakra-ui/react\";\r\nimport { employees_url } from \"../utils/constants\";\r\nimport Dayz from \"dayz\";\r\n// could also import the sass if you have a loader at dayz/dayz.scss\r\nimport \"dayz/dist/dayz.css\";\r\nimport moment from \"moment\";\r\n\r\nconst EVENTS = new Dayz.EventsCollection([\r\n  {\r\n    content: \"A short event\",\r\n    range: moment.range(moment(\"2021-09-08\"), moment(\"2021-09-14\")),\r\n  },\r\n  {\r\n    content: \"Have lunch with Jayden\",\r\n    range: moment.range(moment(\"2021-09-18\"), moment(\"2021-09-24\")),\r\n  },\r\n  {\r\n    content: \"A Longer Event\",\r\n    range: moment.range(moment(\"2021-09-22\"), moment(\"2021-09-24\")),\r\n  },\r\n]);\r\n\r\nconst Example = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [paydata, setPaydata] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [value, setValue] = useState(\"2021-09-11\");\r\n  const [month, setMonth] = useState(\"\");\r\n  const date = moment(\"2021-09-11\");\r\n\r\n  const ColoredDateCellWrapper = ({ children }) =>\r\n    React.cloneElement(React.Children.only(children), {\r\n      style: {\r\n        backgroundColor: \"lightblue\",\r\n      },\r\n    });\r\n\r\n  const handleNext = () => {\r\n    const today = new Date(value);\r\n    const newDate = addMonths(today, 1);\r\n    const newToday = format(newDate, \"yyyy-MM-dd\");\r\n    const month = newDate.toLocaleString(\"default\", { month: \"long\" });\r\n    console.log(\"date\", today, newDate, newToday, month);\r\n    setValue(newToday);\r\n    setMonth(month);\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    const today = new Date(value);\r\n    const newDate = addMonths(today, -1);\r\n    const newToday = format(newDate, \"yyyy-MM-dd\");\r\n    const month = newDate.toLocaleString(\"default\", { month: \"long\" });\r\n    console.log(\"date\", today, newDate, newToday);\r\n    setValue(newToday);\r\n    setMonth(month);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"block\"\r\n      h=\"600\"\r\n      w=\"container.xl\"\r\n      px=\"15\"\r\n      mt=\"100\"\r\n      overflow=\"scroll\"\r\n    >\r\n      <HStack>\r\n        <Box align=\"flex-start\">\r\n          <Button variant=\"solid\" type=\"button\" onClick={handlePrev}>\r\n            Prev\r\n          </Button>\r\n        </Box>\r\n        <Box pl=\"40%\" pr=\"40%\">\r\n          <Heading size=\"md\">{month}</Heading>\r\n        </Box>\r\n        <Box align=\"flex-end\">\r\n          <Button variant=\"solid\" type=\"button\" onClick={handleNext}>\r\n            Next\r\n          </Button>\r\n        </Box>\r\n      </HStack>\r\n      <Dayz display=\"month\" date={moment(value)} events={EVENTS} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  card_body: {\r\n    padding: \"0\",\r\n  },\r\n\r\n  section: {\r\n    width: \"70vw\",\r\n    margin: \"5rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  dash_widget_icon: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"100%\",\r\n    color: \"#ff9b44\",\r\n    display: \"inline-block\",\r\n    float: \"left\",\r\n    fontSize: \"30px\",\r\n    height: \"60px\",\r\n    lineHeight: \"60px\",\r\n    marginRight: \"10px\",\r\n    textAlign: \"center\",\r\n    width: \"60px\",\r\n  },\r\n  dash_widget_info: {\r\n    textAlign: \"right\",\r\n  },\r\n}));\r\n\r\nexport default Example;\r\n","D:\\react-myprojects\\dss\\src\\components\\UserAccessTable.js",["4943","4944","4945","4946","4947","4948"],"import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, Button, Icon } from \"@chakra-ui/react\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useUpdateEmployees } from \"./employees/useUpdateEmployees\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Department\",\r\n    field: \"department\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Designation\",\r\n    field: \"designation\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Role\",\r\n    field: \"role\",\r\n    lookup: {\r\n      1: \"Staff\",\r\n      2: \"Admin\",\r\n      3: \"Manager\",\r\n    },\r\n  },\r\n];\r\n\r\nexport default function UserAccessTable() {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { employees } = useEmployees();\r\n  const updateEmployees = useUpdateEmployees();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n\r\n  const update_rec = (data) => {\r\n    const { id, rec_id, role, ...fields } = data;\r\n    updateEmployees({ id, role: parseInt(role, 10), ...fields });\r\n  };\r\n\r\n  return (\r\n    <div className={fixedHeightPaper}>\r\n      {/* <div className={classes.root}> */}\r\n      <Box w=\"100%\" mt=\"65\">\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={employees}\r\n          title=\"User Access Table\"\r\n          editable={{\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...employees];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  update_rec(newData);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            pageSize: 10,\r\n            headerStyle: {\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}></div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </Box>\r\n      {/* </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\dss\\src\\components\\ApprovalManager.js",["4949","4950","4951","4952","4953","4954","4955","4956","4957","4958","4959","4960"],"D:\\react-myprojects\\dss\\src\\components\\employees\\utils.js",[],"D:\\react-myprojects\\dss\\src\\components\\react-query\\constants.js",[],"D:\\react-myprojects\\dss\\src\\components\\EmployeeViewStaff.js",["4961","4962","4963"],"D:\\react-myprojects\\dss\\src\\components\\EmployeeFormNew.js",["4964","4965","4966","4967","4968","4969","4970","4971","4972","4973","4974"],"D:\\react-myprojects\\dss\\src\\components\\LeaveForm.js",["4975","4976","4977","4978","4979","4980","4981","4982","4983","4984","4985"],"D:\\react-myprojects\\dss\\src\\components\\ExpenseForm.js",["4986","4987","4988","4989","4990","4991","4992","4993","4994"],"D:\\react-myprojects\\dss\\src\\components\\DaiylAllowanceForm.js",["4995"],"D:\\react-myprojects\\dss\\src\\components\\DailyAllowancesTableStaff.js",["4996","4997","4998","4999","5000","5001","5002","5003","5004","5005","5006","5007","5008","5009","5010","5011","5012","5013","5014","5015","5016","5017","5018","5019","5020"],"D:\\react-myprojects\\dss\\src\\components\\DailyAllowsDetlsTable.js",["5021","5022","5023","5024","5025","5026","5027","5028","5029","5030","5031","5032","5033","5034","5035","5036","5037","5038","5039","5040","5041","5042","5043","5044"],"D:\\react-myprojects\\dss\\src\\components\\PayslipForm.js",["5045","5046","5047","5048","5049","5050","5051","5052","5053","5054","5055","5056","5057","5058","5059","5060","5061","5062","5063","5064","5065","5066","5067","5068","5069","5070","5071","5072","5073","5074","5075","5076"],"D:\\react-myprojects\\dss\\src\\components\\employees\\useUpdateEmployees.js",[],"D:\\react-myprojects\\dss\\src\\components\\user\\useUser.js",[],"D:\\react-myprojects\\dss\\src\\components\\payslips\\useUpdatePayslips.js",["5077"],"D:\\react-myprojects\\dss\\src\\components\\payslips\\usePayslipsBatch.js",[],"D:\\react-myprojects\\dss\\src\\components\\dailyallows\\useDailyAllowsStatus.js",[],"D:\\react-myprojects\\dss\\src\\components\\WPExpiryView.js",["5078","5079","5080","5081","5082","5083","5084","5085","5086"],"D:\\react-myprojects\\dss\\src\\components\\OnLeavesView.js",["5087","5088","5089","5090","5091","5092","5093","5094","5095","5096"],"D:\\react-myprojects\\dss\\src\\pages\\index.js",[],"D:\\react-myprojects\\dss\\src\\components\\DailyAllowancesTableAdmin.js",["5097","5098","5099","5100","5101","5102","5103","5104","5105","5106","5107","5108","5109","5110","5111","5112","5113","5114","5115","5116","5117","5118","5119"],"D:\\react-myprojects\\dss\\src\\components\\DailyAllowancesTableView.js",["5120","5121","5122","5123","5124","5125","5126","5127","5128","5129","5130","5131","5132","5133","5134","5135","5136","5137","5138","5139","5140","5141","5142","5143","5144","5145","5146","5147","5148","5149","5150","5151","5152"],"D:\\react-myprojects\\dss\\src\\helpers\\useCustomToast.ts",[],"D:\\react-myprojects\\dss\\src\\components\\EmpTrainings.js",["5153","5154","5155","5156","5157","5158","5159","5160","5161"],"D:\\react-myprojects\\dss\\src\\components\\dailyallows\\useDailyAllows.js",[],"D:\\react-myprojects\\dss\\src\\components\\Payslip_Deductions.js",["5162","5163","5164","5165","5166","5167","5168","5169","5170","5171","5172","5173"],"D:\\react-myprojects\\dss\\src\\components\\Payslip_Earnings.js",["5174","5175","5176","5177","5178","5179","5180","5181","5182","5183","5184","5185","5186","5187"],"D:\\react-myprojects\\dss\\src\\components\\leaves\\useUpdateLeaves.js",["5188"],"D:\\react-myprojects\\dss\\src\\components\\designations\\useDesignations.js",[],"D:\\react-myprojects\\dss\\src\\components\\expenses\\useUpdateExpenses.js",[],"D:\\react-myprojects\\dss\\src\\components\\dailyallowsdetls\\useDailyAllowsDetlsBatch.js",[],"D:\\react-myprojects\\dss\\src\\components\\dailyallows\\utils.js",[],"D:\\react-myprojects\\dss\\src\\components\\data\\selectordata.js",["5189","5190","5191"],"D:\\react-myprojects\\dss\\src\\pages\\ErrorPage.js",["5192","5193","5194"],"D:\\react-myprojects\\dss\\src\\helpers\\CustomDialog.js",[],"D:\\react-myprojects\\dss\\src\\components\\trainings\\useAddTrainings.js",[],"D:\\react-myprojects\\dss\\src\\components\\trainings\\useDeleteTrainings.js",[],"D:\\react-myprojects\\dss\\src\\components\\dailyallowsdetls\\utils.js",[],"D:\\react-myprojects\\dss\\src\\components\\user-storage\\index.js",[],"D:\\react-myprojects\\dss\\src\\components\\trainings\\useUpdateTrainings.js",[],"D:\\react-myprojects\\dss\\src\\components\\trainings\\useTrainings.js",[],"D:\\react-myprojects\\dss\\src\\components\\institutes\\useInstitutes.js",[],"D:\\react-myprojects\\dss\\src\\components\\trainings\\utils.js",[],"D:\\react-myprojects\\dss\\src\\pages\\ClientsPage.js",[],"D:\\react-myprojects\\dss\\src\\pages\\PrivateRoute.js",["5195","5196","5197"],"D:\\react-myprojects\\dss\\src\\pages\\DailyAllowancesStaffPage.js",[],"D:\\react-myprojects\\dss\\src\\pages\\DailyAllowancesPage.js",[],"D:\\react-myprojects\\dss\\src\\pages\\TablesPage.js",[],"D:\\react-myprojects\\dss\\src\\pages\\DesignationPage.js",[],"D:\\react-myprojects\\dss\\src\\pages\\AllowancesPage.js",[],"D:\\react-myprojects\\dss\\src\\pages\\DepartmentsPage.js",[],"D:\\react-myprojects\\dss\\src\\pages\\BatchPayslipsPage.js",[],"D:\\react-myprojects\\dss\\src\\pages\\PayslipStaffPage.js",[],"D:\\react-myprojects\\dss\\src\\pages\\PayslipPage.js",["5198"],"D:\\react-myprojects\\dss\\src\\pages\\PayrollPage.js",["5199"],"D:\\react-myprojects\\dss\\src\\pages\\TrainingsStaffPage.js",["5200"],"D:\\react-myprojects\\dss\\src\\pages\\UserAccessPage.js",["5201"],"D:\\react-myprojects\\dss\\src\\pages\\ExpensesStaffPage.js",["5202","5203"],"D:\\react-myprojects\\dss\\src\\pages\\HocPage.js",["5204","5205","5206"],"D:\\react-myprojects\\dss\\src\\pages\\ExpensesPage.js",["5207"],"D:\\react-myprojects\\dss\\src\\pages\\LeaveStaffPage.js",[],"D:\\react-myprojects\\dss\\src\\pages\\LeavePage.js",[],"D:\\react-myprojects\\dss\\src\\pages\\AllEmployeesPage.js",["5208"],"D:\\react-myprojects\\dss\\src\\pages\\DashboardPage.js",[],"D:\\react-myprojects\\dss\\src\\pages\\HomePage.js",["5209","5210","5211","5212","5213","5214","5215","5216","5217"],"D:\\react-myprojects\\dss\\src\\components\\payslips\\utils.js",[],"D:\\react-myprojects\\dss\\src\\components\\Payslip_ViewDeductions.js",["5218","5219","5220","5221","5222","5223","5224","5225","5226","5227","5228","5229"],"D:\\react-myprojects\\dss\\src\\helpers\\CardLayout2.js",["5230","5231","5232","5233","5234","5235","5236","5237"],"D:\\react-myprojects\\dss\\src\\helpers\\CardLayout.js",["5238","5239","5240","5241","5242","5243","5244"],"D:\\react-myprojects\\dss\\src\\components\\Payslip_ViewEarnings.js",["5245","5246","5247","5248","5249","5250","5251","5252","5253","5254","5255","5256","5257","5258","5259","5260","5261"],"D:\\react-myprojects\\dss\\src\\components\\dailyallows\\useDeleteDailyAllows.js",[],"D:\\react-myprojects\\dss\\src\\components\\dailyallowsdetls\\useDeleteDailyAllowsDetls.js",["5262"],"D:\\react-myprojects\\dss\\src\\components\\dailyallows\\useAddDailyAllows.js",[],"D:\\react-myprojects\\dss\\src\\components\\dailyallows\\useUpdateDailyAllows.js",[],"D:\\react-myprojects\\dss\\src\\components\\DailyAllowancesAddPeriod.js",["5263","5264","5265","5266","5267","5268","5269","5270","5271","5272","5273"],"D:\\react-myprojects\\dss\\src\\helpers\\AlertDialogBox.js",["5274","5275"],"D:\\react-myprojects\\dss\\src\\components\\DailyAllowsDetlsTableStaff.js",["5276","5277","5278","5279","5280","5281","5282","5283","5284","5285","5286","5287","5288","5289","5290","5291","5292","5293","5294","5295","5296","5297","5298","5299","5300","5301","5302","5303","5304","5305","5306","5307"],"D:\\react-myprojects\\dss\\src\\components\\DailyAllowancesPeriods.js",[],"D:\\react-myprojects\\dss\\src\\components\\TablesUpdate.js",["5308","5309","5310","5311","5312","5313","5314","5315","5316","5317","5318","5319","5320","5321","5322","5323"],"D:\\react-myprojects\\dss\\src\\components\\TableForm.js",[],"D:\\react-myprojects\\dss\\src\\components\\Example.js",[],"D:\\react-myprojects\\dss\\src\\components\\PayslipTableStaff.js",["5324","5325","5326","5327","5328","5329","5330","5331","5332","5333","5334","5335","5336","5337","5338","5339","5340"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useRecoilState, useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n  loginLevelState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { usePayslips } from \"./payslips/usePayslips\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\n//import PrintPayslip from \"./PrintPayslip\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  { title: \"Period\", field: \"payrun\" },\r\n  // {\r\n  //   title: \"Date\",\r\n  //   field: \"date\",\r\n  //   type: \"date\",\r\n  //   dateSetting: { locale: \"en-GB\" },\r\n  // },\r\n  { title: \"Basic Pay\", field: \"wages_bnd\", type: \"currency\" },\r\n  { title: \"TAP Amount\", field: \"tap_amount_bnd\", type: \"currency\" },\r\n  { title: \"SCP Amount\", field: \"scp_amount_bnd\", type: \"currency\" },\r\n  { title: \"Site Allowances\", field: \"site_allows_bnd\", type: \"currency\" },\r\n  { title: \"Expenses Claims\", field: \"expenses_claims_bnd\", type: \"currency\" },\r\n  { title: \"Allowances\", field: \"total_allowances_bnd\", type: \"currency\" },\r\n  { title: \"Deductions\", field: \"total_deductions_bnd\", type: \"currency\" },\r\n  { title: \"Nett Pay\", field: \"nett_pay_bnd\", type: \"currency\" },\r\n  // { title: \"Bank Name\", field: \"bank_name\" },\r\n  // { title: \"Bank AC No\", field: \"bank_accno\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function PayslipTable() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { employees } = useEmployees();\r\n  const [emp, setEmp] = useState();\r\n  const { payslips, setFilter } = usePayslips();\r\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\r\n  const {\r\n    deletePayslip,\r\n    loadPayslips,\r\n    getSinglePayslip,\r\n    setEditPayslipID,\r\n    setIsPayslipEditingOn,\r\n    setIsPayslipEditingOff,\r\n    resetSinglePayslip,\r\n    payslip_period,\r\n    payslip_endmonthdate,\r\n  } = usePayslipsContext();\r\n  console.log(\"payslipstable\", payslips)\r\n  // const exportPdfTable = ({ data, emp }) => {\r\n  //   PrintPayslip({ data, emp });\r\n  // };\r\n\r\n  const print_Payslip = async (data) => {\r\n    const { empid } = data.rowData;\r\n    const emp = employees\r\n      .filter((f) => f.id === empid)\r\n      .map((r) => {\r\n        return { ...r };\r\n       });\r\n    // exportPdfTable({ data, emp });\r\n  };\r\n\r\n  const update_Payslip = async (data) => {\r\n    const { id } = data;\r\n    setPayPeriodEmpId(id); //save to recoil\r\n    setEditPayslipID(id);\r\n    setIsPayslipEditingOn();\r\n    getSinglePayslip(id);\r\n    history.push(\"/singlepayslip\");\r\n  };\r\n\r\n  const add_Payslip = async (data) => {\r\n    const { id } = data;\r\n    resetSinglePayslip();\r\n    setEditPayslipID(\"\");\r\n    setIsPayslipEditingOff();\r\n    history.push(\"/singlepayslip\");\r\n  };\r\n\r\n  const delete_Payslip = (data) => {\r\n    const { id } = data;\r\n    setEditPayslipID(id);\r\n    deletePayslip(id);\r\n    loadPayslips();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          //data={payslips}\r\n          data={payslips.sort((a, b) =>\r\n            a.payrun > b.payrun ? -1 : b.payrun > a.payrun ? 1 : 0\r\n          )}\r\n          title=\"Payslips\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n            Build: (props) => <BuildOutlinedIcon />,\r\n            Print: (props) => <PrintIcon />,\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"print\",\r\n              tooltip: \"Print Payslip\",\r\n              onClick: (event, rowData) => {\r\n                print_Payslip({ rowData });\r\n              },\r\n            },\r\n            // {\r\n            //   icon: \"delete\",\r\n            //   tooltip: \"Delete Record\",\r\n            //   onClick: (event, rowData) => {\r\n            //     delete_Payslip(rowData);\r\n            //   },\r\n            // },\r\n            // {\r\n            //   icon: \"add\",\r\n            //   tooltip: \"Add Record\",\r\n            //   isFreeAction: true,\r\n            //   onClick: (event, rowData) => {\r\n            //     add_Payslip(rowData);\r\n            //   },\r\n            // },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\dss\\src\\components\\PayslipTable.js",["5341","5342","5343","5344","5345","5346","5347","5348","5349","5350","5351","5352","5353","5354","5355","5356","5357","5358","5359"],"D:\\react-myprojects\\dss\\src\\components\\LeaveTableStaff.js",["5360","5361","5362","5363","5364","5365","5366","5367","5368","5369","5370","5371","5372","5373","5374","5375","5376","5377","5378","5379","5380","5381","5382","5383","5384","5385","5386","5387","5388","5389","5390","5391","5392","5393","5394","5395"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Grid,\r\n  GridItem,\r\n  HStack,\r\n  Select,\r\n  SimpleGrid,\r\n  Text,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  //ModalHeader,\r\n  //ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n   Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport CustomAlertDialog from \"../helpers/CustomAlertDialog\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeaves } from \"./leaves/useLeaves\";\r\nimport { useAddLeaves } from \"./leaves/useAddLeaves\";\r\nimport { useDeleteLeaves } from \"./leaves/useDeleteLeaves\";\r\nimport { useUpdateLeaves } from \"./leaves/useUpdateLeaves\";\r\nimport { useSingleEmployee } from \"./employees/useSingleEmployee\";\r\n\r\n\r\nconst initial_form = {\r\n  name: \"\",\r\n  to_date: \"\",\r\n  from_date: \"\",\r\n  reason: \"\",\r\n  status: \"Pending\",\r\n  no_of_days: 0,\r\n  leave_bal: 0,\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Item No\",\r\n    field: \"itemno\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Leave Balance\",\r\n    field: \"leave_bal\",\r\n    type: \"numeric\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"No of Days\",\r\n    field: \"no_of_days\",\r\n    type: \"numeric\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Reason\",\r\n    field: \"reason\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approved\">Approved</MenuItem>\r\n        <MenuItem value=\"Rejected\">Rejected</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\n// const AlertBox = ({ isOpen, onClose, cancelRef, heading, children }) => {\r\n//   return (\r\n//     <AlertDialog\r\n//       isOpen={isOpen}\r\n//       leastDestructiveRef={cancelRef}\r\n//       onClose={onClose}\r\n//     >\r\n//       <AlertDialogOverlay>\r\n//         <AlertDialogContent>\r\n//           <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n//             {heading}\r\n//           </AlertDialogHeader>\r\n\r\n//           <AlertDialogBody>{children}</AlertDialogBody>\r\n\r\n//           <AlertDialogFooter>\r\n//             <Button ref={cancelRef} onClick={onClose}>\r\n//               Cancel\r\n//             </Button>\r\n//             <Button colorScheme=\"red\" onClick={onClose} ml={3}>\r\n//               Delete\r\n//             </Button>\r\n//           </AlertDialogFooter>\r\n//         </AlertDialogContent>\r\n//       </AlertDialogOverlay>\r\n//     </AlertDialog>\r\n//   );\r\n// };\r\n\r\nexport default function LeaveTableStaff() {\r\n  const classes = useStyles();\r\n  const { singleemployee, setSingleEmployeeId } = useSingleEmployee();\r\n  const { leaves, setLeaveYr, setLeaveId } = useLeaves();\r\n  const updateLeaves = useUpdateLeaves();\r\n  const addLeaves = useAddLeaves();\r\n  const deleteLeaves = useDeleteLeaves();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [alertSuccess, setAlertSuccess] = useState(false);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [formdata, setFormdata] = useState(initial_form);\r\n  const [leavestate, setLeaveState] = useState({});\r\n  const [isLoad, setIsLoad] = useState(true);\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    editLeaveID,\r\n    setEditLeaveID,\r\n    setIsLeaveEditingOn,\r\n    setIsLeaveEditingOff,\r\n  } = useLeavesContext();\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [isLeaveYear, setLeaveYear] = useState(true);\r\n  const onClose = () => setIsOpen(false);\r\n  const cancelRef = React.useRef();\r\n  const [selectleaveyear, setSelectLeaveYear] = useState(\"\");\r\n  const currentyear = new Date().getFullYear();\r\n  //const YEAR = new Date().getFullYear();\r\n\r\n  useEffect(() => {\r\n    setSelectLeaveYear(currentyear);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLeaveId(loginLevel.loginUserId);\r\n    setLeaveYr(selectleaveyear ? selectleaveyear : currentyear);\r\n    setIsLoad(false);\r\n  }, [isLoad]);\r\n\r\n  useEffect(() => {\r\n    if (leaves) {\r\n      Calc_Leave();\r\n    }\r\n  }, [JSON.stringify(leaves)]);\r\n\r\n  const Calc_Leave = () => {\r\n    const { leave_bf, leave_entitled, leave_cd } = loginLevel;\r\n    const leaveTaken = leaves.reduce((acc, item) => {\r\n      if (item.status === \"Approved\") {\r\n        return acc + item.no_of_days;\r\n      } else {\r\n        return acc;\r\n      }\r\n    }, 0);\r\n    const leavePending = leaves.reduce((acc, item) => {\r\n      if (item.status === \"Pending\") {\r\n        return acc + item.no_of_days;\r\n      } else {\r\n        return acc;\r\n      }\r\n    }, 0);\r\n    const leaveEntitled = isNaN(leave_entitled) ? 0 : leave_entitled;\r\n    const leaveBf = isNaN(leave_bf) ? 0 : leave_bf;\r\n    const leaveCd = isNaN(leave_cd) ? 0 : leave_cd;\r\n    const leaveTotal = leaveBf + leaveEntitled;\r\n    const bal = leaveBf + leaveEntitled - leaveCd - leaveTaken;\r\n    const rec = {\r\n      leave_bf: leaveBf,\r\n      leave_entitled: leaveEntitled,\r\n      leave_total: leaveTotal,\r\n      leave_cd: leaveCd,\r\n      leave_taken: leaveTaken + leaveCd,\r\n      leave_pending: leavePending,\r\n      leave_bal: bal,\r\n    };\r\n    setLeaveState(rec);\r\n  };\r\n\r\n  const update_Leave = async (data) => {\r\n    const { id } = data;\r\n    setFormdata({ ...data });\r\n    setFormdata({ ...data });\r\n    setEditLeaveID(id);\r\n    setIsLeaveEditingOn();\r\n    handleDialogOpen();\r\n    //history.push(\"/singleleave\");\r\n  };\r\n\r\n  const add_Leave = async (data) => {\r\n    // const { id } = data;\r\n    setEditLeaveID(\"\");\r\n    setFormdata(initial_form);\r\n    setIsLeaveEditingOff();\r\n    handleDialogOpen();\r\n    //history.push(\"/singleleave\");\r\n  };\r\n\r\n  const delete_Leave = (data) => {\r\n    const { id } = data;\r\n    console.log(\"delete leave\", id);\r\n    setEditLeaveID(id);\r\n    setIsAlertOpen(true);\r\n    //handleAlertOpen();\r\n    //deleteLeave(id);\r\n    //loadLeaves();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n\r\n    // if (isLeaveEditing) {\r\n    //   loadEmpLeaves(editEmployeeID);\r\n    // }\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editLeaveID;\r\n    deleteLeaves(id);\r\n  };\r\n\r\n  const UpdateLeaveYear = (e) => {\r\n    setSelectLeaveYear((prev) => (prev = e.target.value));\r\n    setIsLoad(true);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n    \r\n      <Box>\r\n        <Grid\r\n          p={1}\r\n          h=\"100px\"\r\n          templateRows=\"repeat(2, 1fr)\"\r\n          templateColumns=\"repeat(12, 1fr)\"\r\n          gap={6}\r\n          border=\"1px solid blue\"\r\n          bg=\"gray.200\"\r\n        >\r\n          <GridItem colSpan={2} align=\"center\">\r\n            <Heading pt={3} size=\"xs\">\r\n              Leave Entitlement\r\n            </Heading>\r\n          </GridItem>\r\n          <GridItem colSpan={2} align=\"center\">\r\n            <Heading pt={3} size=\"xs\">\r\n              Leave Carried Forward\r\n            </Heading>\r\n          </GridItem>\r\n          <GridItem colSpan={2} align=\"center\">\r\n            <Heading pt={3} size=\"xs\">\r\n              Total Leaves Days\r\n            </Heading>\r\n          </GridItem>\r\n          <GridItem colSpan={2} align=\"center\">\r\n            <Heading pt={3} size=\"xs\">\r\n              Leave Taken\r\n            </Heading>\r\n          </GridItem>\r\n          <GridItem colSpan={2} align=\"center\">\r\n            <Heading pt={3} size=\"xs\">\r\n              Leave Pending\r\n            </Heading>\r\n          </GridItem>\r\n          <GridItem colSpan={2} align=\"center\">\r\n            <Heading pt={3} size=\"xs\">\r\n              Balance Leave Days\r\n            </Heading>\r\n          </GridItem>\r\n\r\n          <GridItem colSpan={2} bg=\"white\" align=\"center\">\r\n            <Text fontSize=\"20\">{leavestate.leave_entitled} </Text>\r\n          </GridItem>\r\n          <GridItem colSpan={2} bg=\"white\" align=\"center\">\r\n            <Text fontSize=\"20\">{leavestate.leave_bf}</Text>\r\n          </GridItem>\r\n          <GridItem colSpan={2} bg=\"white\" align=\"center\">\r\n            <Text fontSize=\"20\">{leavestate.leave_total} </Text>\r\n          </GridItem>\r\n          <GridItem colSpan={2} bg=\"white\" align=\"center\">\r\n            <Text fontSize=\"20\">{leavestate.leave_taken}</Text>\r\n          </GridItem>\r\n          <GridItem colSpan={2} bg=\"white\" align=\"center\">\r\n            <Text fontSize=\"20\">{leavestate.leave_pending}</Text>\r\n          </GridItem>\r\n          <GridItem colSpan={2} bg=\"white\" align=\"center\">\r\n            <Text fontSize=\"20\">{leavestate.leave_bal}</Text>\r\n          </GridItem>\r\n        </Grid>\r\n      </Box>\r\n      <Box maxW=\"100%\" pt={5} h={600} overflow=\"scroll\">\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={leaves}\r\n          title=\"Leave Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   isEditable: (rowData) => rowData.status === \"Pending\",\r\n          //   isDeletable: (rowData) => rowData.status === \"Pending\",\r\n          //   onRowAdd: (newData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         add_Leave(newData);\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         update_Leave(newData);\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          //   onRowDelete: (oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         delete_Leave(oldData);\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          actions={[\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Leave(rowData);\r\n              },\r\n            }),\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Leave(rowData);\r\n              },\r\n            }),\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Leave(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            paging: false,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n        >\r\n          <LeaveForm\r\n            formdata={formdata}\r\n            leavestate={leavestate}\r\n            setFormdata={setFormdata}\r\n            handleDialogClose={handleDialogClose}\r\n          />\r\n        </CustomDialog>\r\n\r\n        {/* <CustomAlertDialog\r\n          isOpen={isAlertOpen}\r\n          cancelRef={cancelRef}\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          title=\"DELETE\"\r\n        >\r\n          <Heading size=\"sm\">Are you sure you want to delete ?</Heading>\r\n        </CustomAlertDialog> */}\r\n        <AlertDialogBox\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Leave\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n        {/* <AlertBox\r\n          isOpen={isOpen}\r\n          leastDestructiveRef={cancelRef}\r\n          onClose={() => onClose()}\r\n          heading=\"DELETE\"\r\n        >\r\n          <h2>Are you sure you want to delete?</h2>\r\n        </AlertBox> */}\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\dss\\src\\components\\PayslipsPeriods.js",["5396","5397","5398","5399","5400","5401"],"D:\\react-myprojects\\dss\\src\\components\\ExpenseTableStaff.js",["5402","5403","5404","5405","5406","5407","5408","5409","5410","5411","5412","5413","5414","5415","5416","5417","5418","5419","5420","5421","5422","5423","5424","5425","5426","5427","5428","5429","5430","5431","5432","5433"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Divider,\r\n  Grid,\r\n  GridItem,\r\n  HStack,\r\n  Select,\r\n  SimpleGrid,\r\n  Text,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  //ModalHeader,\r\n  //ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { useExpenses } from \"./expenses/useExpenses\";\r\nimport { useAddExpenses } from \"./expenses/useAddExpenses\";\r\nimport { useDeleteExpenses } from \"./expenses/useDeleteExpenses\";\r\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\r\nimport { items } from \"../utils/constants\";\r\n\r\nconst initial_form = {\r\n  name: \"\",\r\n  date: \"\",\r\n  purchased_from: \"\",\r\n  description: \"\",\r\n  status: \"Pending\",\r\n  amount: 0,\r\n};\r\n\r\nconst columns = [\r\n  { title: \"Asset No\", field: \"itemno\", editable: \"never\" },\r\n\r\n  {\r\n    title: \"Description\",\r\n    field: \"desp\",\r\n    editable: \"never\",\r\n  },\r\n\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function ExpenseTable() {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const [isLoad, setIsLoad] = useState(false);\r\n  const { expenses, filter, setFilter, setExpenseId } = useExpenses();\r\n  const updateExpenses = useUpdateExpenses();\r\n  const addExpenses = useAddExpenses();\r\n  const deleteExpenses = useDeleteExpenses();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [expensesdata, setExpensesdata] = useState([]);\r\n  const [alertSuccess, setAlertSuccess] = useState(false);\r\n  const [formdata, setFormdata] = useState(initial_form);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    //expenses,\r\n    editExpenseID,\r\n    updateExpense,\r\n    addExpense,\r\n    deleteExpense,\r\n    setEditExpenseID,\r\n    setIsExpenseEditingOn,\r\n    setIsExpenseEditingOff,\r\n  } = useExpensesContext();\r\n\r\n  useEffect(() => {\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  const add_Expense = async (data) => {\r\n    // const { id } = data;\r\n    setFormdata(initial_form);\r\n    setFormdata(initial_form);\r\n    setIsExpenseEditingOff();\r\n    handleDialogOpen();\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const update_Expense = async (data) => {\r\n    const { id } = data;\r\n    setFormdata({ ...data });\r\n    setFormdata({ ...data });\r\n    setEditExpenseID(id);\r\n    setIsExpenseEditingOn();\r\n    handleDialogOpen();\r\n\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const delete_Expense = (data) => {\r\n    const { id } = data;\r\n    setEditExpenseID(id);\r\n    handleAlertOpen();\r\n\r\n    // deleteExpense(id);\r\n    // loadExpenses();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editExpenseID;\r\n    deleteExpenses(id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box\r\n        maxW=\"x3\"\r\n        padding=\"4\"\r\n        width=\"100%\"\r\n        height=\"700\"\r\n        borderColor=\"blue.500\"\r\n        borderWidth=\"1px\"\r\n        borderRadius=\"lg\"\r\n        overflow=\"scroll\"\r\n      >\r\n        <SimpleGrid>\r\n          <Box>\r\n            <Heading as=\"h2\" size=\"lg\">\r\n              Assets Table\r\n            </Heading>\r\n          </Box>\r\n          <Divider />\r\n          <Tabs>\r\n            <TabList>\r\n              <Tab>In Stock</Tab>\r\n              <Tab>Despatched</Tab>\r\n              <Tab>In Progress</Tab>\r\n            </TabList>\r\n            <TabPanels>\r\n              <TabPanel>\r\n                <MaterialTable\r\n                  columns={columns}\r\n                  data={items.filter((r) => r.status === \"In Stock\")}\r\n                  title=\"Assets Table\"\r\n                  icons={{\r\n                    Add: (props) => <AddIcon />,\r\n                    Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n                    Delete: (props) => <DeleteIcon />,\r\n                    Clear: (props) => <DeleteIcon />,\r\n                    Check: (props) => <CheckIcon />,\r\n                    Search: (props) => <SearchIcon />,\r\n                    ResetSearch: (props) => <DeleteIcon />,\r\n                  }}\r\n                  actions={[\r\n                    (rowData) => ({\r\n                      disabled: rowData.status !== \"Pending\",\r\n                      icon: \"edit\",\r\n                      tooltip: \"Edit Record\",\r\n                      onClick: (event, rowData) => {\r\n                        update_Expense(rowData);\r\n                      },\r\n                    }),\r\n                    (rowData) => ({\r\n                      disabled: rowData.status !== \"Pending\",\r\n                      icon: \"delete\",\r\n                      tooltip: \"Delete Record\",\r\n                      onClick: (event, rowData) => {\r\n                        delete_Expense(rowData);\r\n                      },\r\n                    }),\r\n                    {\r\n                      icon: \"add\",\r\n                      tooltip: \"Add Record\",\r\n                      isFreeAction: true,\r\n                      onClick: (event, rowData) => {\r\n                        add_Expense(rowData);\r\n                      },\r\n                    },\r\n                  ]}\r\n                  options={{\r\n                    filtering: true,\r\n                    headerStyle: {\r\n                      backgroundColor: \"orange\",\r\n                      color: \"#FFF\",\r\n                    },\r\n                    showTitle: true,\r\n                  }}\r\n                  components={{\r\n                    Toolbar: (props) => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                />\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <MaterialTable\r\n                  columns={columns}\r\n                  data={items.filter((r) => r.status === \"Despatched\")}\r\n                  title=\"Assets Table\"\r\n                  icons={{\r\n                    Add: (props) => <AddIcon />,\r\n                    Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n                    Delete: (props) => <DeleteIcon />,\r\n                    Clear: (props) => <DeleteIcon />,\r\n                    Check: (props) => <CheckIcon />,\r\n                    Search: (props) => <SearchIcon />,\r\n                    ResetSearch: (props) => <DeleteIcon />,\r\n                  }}\r\n                  actions={[\r\n                    (rowData) => ({\r\n                      disabled: rowData.status !== \"Pending\",\r\n                      icon: \"edit\",\r\n                      tooltip: \"Edit Record\",\r\n                      onClick: (event, rowData) => {\r\n                        update_Expense(rowData);\r\n                      },\r\n                    }),\r\n                    (rowData) => ({\r\n                      disabled: rowData.status !== \"Pending\",\r\n                      icon: \"delete\",\r\n                      tooltip: \"Delete Record\",\r\n                      onClick: (event, rowData) => {\r\n                        delete_Expense(rowData);\r\n                      },\r\n                    }),\r\n                    {\r\n                      icon: \"add\",\r\n                      tooltip: \"Add Record\",\r\n                      isFreeAction: true,\r\n                      onClick: (event, rowData) => {\r\n                        add_Expense(rowData);\r\n                      },\r\n                    },\r\n                  ]}\r\n                  options={{\r\n                    filtering: true,\r\n                    headerStyle: {\r\n                      backgroundColor: \"orange\",\r\n                      color: \"#FFF\",\r\n                    },\r\n                    showTitle: true,\r\n                  }}\r\n                  components={{\r\n                    Toolbar: (props) => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                />\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <MaterialTable\r\n                  columns={columns}\r\n                  data={items.filter((r) => r.status === \"In Progress\")}\r\n                  title=\"Assets Table\"\r\n                  icons={{\r\n                    Add: (props) => <AddIcon />,\r\n                    Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n                    Delete: (props) => <DeleteIcon />,\r\n                    Clear: (props) => <DeleteIcon />,\r\n                    Check: (props) => <CheckIcon />,\r\n                    Search: (props) => <SearchIcon />,\r\n                    ResetSearch: (props) => <DeleteIcon />,\r\n                  }}\r\n                  actions={[\r\n                    (rowData) => ({\r\n                      disabled: rowData.status !== \"Pending\",\r\n                      icon: \"edit\",\r\n                      tooltip: \"Edit Record\",\r\n                      onClick: (event, rowData) => {\r\n                        update_Expense(rowData);\r\n                      },\r\n                    }),\r\n                    (rowData) => ({\r\n                      disabled: rowData.status !== \"Pending\",\r\n                      icon: \"delete\",\r\n                      tooltip: \"Delete Record\",\r\n                      onClick: (event, rowData) => {\r\n                        delete_Expense(rowData);\r\n                      },\r\n                    }),\r\n                    {\r\n                      icon: \"add\",\r\n                      tooltip: \"Add Record\",\r\n                      isFreeAction: true,\r\n                      onClick: (event, rowData) => {\r\n                        add_Expense(rowData);\r\n                      },\r\n                    },\r\n                  ]}\r\n                  options={{\r\n                    filtering: true,\r\n                    headerStyle: {\r\n                      backgroundColor: \"orange\",\r\n                      color: \"#FFF\",\r\n                    },\r\n                    showTitle: true,\r\n                  }}\r\n                  components={{\r\n                    Toolbar: (props) => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                />\r\n              </TabPanel>\r\n            </TabPanels>\r\n          </Tabs>\r\n        </SimpleGrid>\r\n      </Box>\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        {/* <MaterialTable\r\n          columns={columns}\r\n          data={items}\r\n          title=\"Assets Table\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n        \r\n          actions={[\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Expense(rowData);\r\n              },\r\n            }),\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Expense(rowData);\r\n              },\r\n            }),\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Expense(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        /> */}\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <ExpenseForm\r\n            formdata={formdata}\r\n            setFormdata={setFormdata}\r\n            handleDialogClose={handleDialogClose}\r\n          />\r\n        </CustomDialog>\r\n\r\n        <AlertDialogBox\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\dss\\src\\components\\HocTable.js",["5434","5435","5436","5437","5438","5439","5440","5441","5442","5443","5444","5445","5446","5447","5448","5449","5450","5451","5452","5453","5454","5455","5456"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { format } from \"date-fns\";\r\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\r\nimport { Select } from \"@chakra-ui/react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport HocForm from \"./HocForm\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { useHoc } from \"./hoc/useHoc\";\r\nimport { useAddHoc } from \"./hoc/useAddHoc\";\r\nimport { useDeleteHoc } from \"./hoc/useDeleteHoc\";\r\nimport { useUpdateHoc } from \"./hoc/useUpdateHoc\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Item No\",\r\n    field: \"itemno\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      minWidth: 200,\r\n      maxWidth: 200,\r\n    },\r\n  },\r\n  {\r\n    title: \"Description\",\r\n    field: \"desp\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      minWidth: 150,\r\n      maxWidth: 150,\r\n    },\r\n  },\r\n  {\r\n    title: \"Category\",\r\n    field: \"category\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Qty On Hand\",\r\n    field: \"qty\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Min Level\",\r\n    field: \"minqty\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      minWidth: 150,\r\n      maxWidth: 150,\r\n    },\r\n  },\r\n  {\r\n    title: \"Expiry Date\",\r\n    field: \"expiry\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Supplier\",\r\n    field: \"supplier\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editable: \"never\",\r\n  },\r\n \r\n];\r\n\r\nconst items = [\r\n  {\r\n    itemno: \"A000111\",\r\n    desp: \"Bottle ABC\",\r\n    category: \"Bottle\",\r\n    expiry: \"23/02/2022\",\r\n    qty: 10,\r\n    minqty: 15,\r\n    tobeexpiry: true,\r\n    toorder: true,\r\n    status: \"In Stock\",\r\n    supplier: \"ABC Supplier\",\r\n  },\r\n  {\r\n    itemno: \"B000111\",\r\n    desp: \"Bottle ABC\",\r\n    category: \"Bottle\",\r\n    expiry: \"23/04/2022\",\r\n    qty: 5,\r\n    minqty: 10,\r\n    toorder: true,\r\n    tobeexpiry: false,\r\n    status: \"In Stock\",\r\n    supplier: \"ABC Supplier\",\r\n  },\r\n  {\r\n    itemno: \"D000111\",\r\n    desp: \"Bottle ABC\",\r\n    category: \"Bottle\",\r\n    expiry: \"23/02/2022\",\r\n    qty: 15,\r\n    minqty: 10,\r\n    toorder: false,\r\n    tobeexpiry: true,\r\n    status: \"In Stock\",\r\n    supplier: \"ABC Supplier\",\r\n  },\r\n  {\r\n    itemno: \"E000111\",\r\n    desp: \"Bottle ABC\",\r\n    category: \"Bottle\",\r\n    expiry: \"23/02/2022\",\r\n    qty: 25,\r\n    minqty: 5,\r\n    tobeexpiry: true,\r\n    toorder: false,\r\n    status: \"In Stock\",\r\n    supplier: \"ABC Supplier\",\r\n  },\r\n  {\r\n    itemno: \"F000111\",\r\n    desp: \"Bottle ABC\",\r\n    category: \"Bottle\",\r\n    expiry: \"23/05/2022\",\r\n    qty: 30,\r\n    minqty: 15,\r\n    tobeexpiry: false,\r\n    toorder: false,\r\n    status: \"In Stock\",\r\n    supplier: \"ABC Supplier\",\r\n  },\r\n];\r\n\r\n\r\nconst initial_form = {\r\n  findings: \"\",\r\n  category: \"\",\r\n  what: \"\",\r\n  what_details: \"\",\r\n  why: \"\",\r\n  why_details: \"\",\r\n  discussion: \"No\",\r\n  action: \"\",\r\n  isfollowup: \"No\",\r\n  isworkrelated: \"No\",\r\n  raisedby: \"\",\r\n  email: \"\",\r\n  raisedon: null,\r\n  company: \"APPSMITH SUTERA\",\r\n  location: \" \",\r\n  department: \"\",\r\n};\r\n\r\nexport default function HocTable() {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const [isLoad, setIsLoad] = useState(false);\r\n  const { hoc, filter, setFilter, setHocId } = useHoc();\r\n  const updateHoc = useUpdateHoc();\r\n  const addHoc = useAddHoc();\r\n  const deleteHoc = useDeleteHoc();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [hocdata, setHocdata] = useState([]);\r\n  const [alertSuccess, setAlertSuccess] = useState(false);\r\n  const [formdata, setFormdata] = useState(initial_form);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [isEditId, setIsEditId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  const add_Hoc = async (data) => {\r\n    //const { id } = data;\r\n    let today = format(new Date(), \"yyyy-MM-dd\");\r\n    //console.log(\"today\", today);\r\n    setIsEditId((prev) => (prev = \"\"));\r\n    setFormdata(\r\n      (prev) =>\r\n        (prev = {\r\n          ...data,\r\n          raisedby: loginLevel.loginUser,\r\n          email: loginLevel.loginEmail,\r\n          company: \"APPSMITHS SUTERA\",\r\n          raisedon: today,\r\n        })\r\n    );\r\n    //setFormdata(initial_form);\r\n    //setIsHocEditingOff();\r\n    handleDialogOpen();\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const update_Hoc = async (data) => {\r\n    console.log(\"hoc\", data);\r\n    const { id } = data;\r\n    setIsEditId((prev) => (prev = id));\r\n    setFormdata((prev) => (prev = { ...data }));\r\n    //setFormdata({ ...data });\r\n    //setHocId(prev => prev = id)\r\n    //setEditHocID(id);\r\n    //setIsExpenseEditingOn();\r\n    handleDialogOpen();\r\n\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const delete_Hoc = (data) => {\r\n    const { id } = data;\r\n    setIsEditId((prev) => (prev = id));\r\n    handleAlertOpen();\r\n\r\n    // deleteExpense(id);\r\n    // loadExpenses();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    //const id = isEditId;\r\n    deleteHoc(isEditId);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={items}\r\n          title=\"Items Tables\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         const dataUpdate = [...expensesdata];\r\n          //         const index = oldData.tableData.id;\r\n          //         dataUpdate[index] = newData;\r\n          //         setExpensesdata([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          actions={[\r\n            (rowData) => ({\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Hoc(rowData);\r\n              },\r\n            }),\r\n            (rowData) => ({\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Hoc(rowData);\r\n              },\r\n            }),\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Hoc(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n          isEditId={isEditId}\r\n        >\r\n          <HocForm\r\n            formdata={formdata}\r\n            setFormdata={setFormdata}\r\n            handleDialogClose={handleDialogClose}\r\n          />\r\n        </CustomDialog>\r\n\r\n        <AlertDialogBox\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete HOC\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\dss\\src\\components\\ExpenseTable.js",["5457","5458","5459","5460","5461","5462","5463","5464","5465"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { items } from \"../utils/constants\"\r\n\r\nconst columns = [\r\n  { title: \"Name\", field: \"name\", editable: \"never\" },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Description\",\r\n    field: \"desp\",\r\n    editable: \"never\",\r\n  },\r\n  \r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editable: \"never\"\r\n  },\r\n];\r\n\r\nexport default function ExpenseTable() {\r\n  const classes = useStyles();\r\n  const [isLoad, setIsLoad] = useState(false);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [expensesdata, setExpensesdata] = useState([]);\r\n  const { loadEmployees } = useEmployeesContext();\r\n  const {\r\n    expenses,\r\n    editExpenseID,\r\n    updateExpense,\r\n    expenses_loading,\r\n    deleteExpense,\r\n    loadExpenses,\r\n    getSingleExpense,\r\n    setEditExpenseID,\r\n    setIsExpenseEditingOn,\r\n    setIsExpenseEditingOff,\r\n    resetSingleExpense,\r\n  } = useExpensesContext();\r\n\r\n  useEffect(() => {\r\n    setExpensesdata(expenses);\r\n    console.log(expensesdata)\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   loadEmployees();\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (expenses) {\r\n  //     setExpensesdata(expenses);\r\n  //     console.log(\"expenses\", expenses, expensesdata)\r\n  //   } else {\r\n  //     setIsLoad(!isLoad);\r\n  //   }\r\n  // }, [isLoad]);\r\n\r\n  const add_Expense = async (data) => {\r\n    // const { id } = data;\r\n    resetSingleExpense();\r\n    setEditExpenseID(\"\");\r\n    setIsExpenseEditingOff();\r\n    handleDialogOpen();\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const approve_Expense = async (data) => {\r\n    console.log(\"approve\", data);\r\n    const { id, rec_id, ...fields } = data;\r\n    updateExpense({ id, ...fields });\r\n    // loadExpenses();\r\n  };\r\n\r\n  const update_Expense = async (data) => {\r\n    const { id } = data;\r\n    setEditExpenseID(id);\r\n    setIsExpenseEditingOn();\r\n    getSingleExpense(id);\r\n    handleDialogOpen();\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const delete_Expense = (data) => {\r\n    const { id } = data;\r\n    setEditExpenseID(id);\r\n    handleAlertOpen();\r\n\r\n    // deleteExpense(id);\r\n    // loadExpenses();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    loadExpenses();\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editExpenseID;\r\n    deleteExpense(id);\r\n    loadExpenses();\r\n  };\r\n\r\n  // if (expenses_loading) {\r\n  //   return (\r\n  //     <div>\r\n  //       <h2>Loading...Expenses</h2>\r\n  //     </div>\r\n  //   );\r\n  // }\r\nif (!expensesdata) {\r\n  return (\r\n    <div>\r\n      <h2>Loading...Expenses</h2>\r\n    </div>\r\n  );\r\n}\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={items}\r\n          title=\"Items Table\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          editable={{\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...expensesdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setExpensesdata([...dataUpdate]);\r\n                  //approve_Expense(newData);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Expense(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Expense(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Expense(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n          isFullwidth={false}\r\n        >\r\n          <ExpenseForm handleDialogClose={handleDialogClose} />\r\n        </CustomDialog>\r\n\r\n        <AlertDialogBox\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\dss\\src\\components\\LeaveTableAdmin.js",["5466","5467","5468","5469","5470","5471","5472","5473","5474","5475","5476"],["5477","5478"],"D:\\react-myprojects\\dss\\src\\components\\AllEmployeesTable.js",["5479","5480","5481","5482","5483","5484","5485","5486","5487","5488","5489","5490","5491"],"D:\\react-myprojects\\dss\\src\\components\\HomeDirector.js",["5492","5493","5494","5495","5496","5497","5498","5499","5500","5501","5502","5503","5504","5505","5506","5507","5508","5509","5510","5511","5512","5513","5514","5515","5516","5517","5518","5519","5520","5521","5522","5523","5524"],"D:\\react-myprojects\\dss\\src\\components\\HomeManager.js",["5525","5526","5527","5528","5529","5530","5531","5532","5533","5534","5535","5536","5537","5538","5539","5540","5541","5542","5543","5544","5545","5546","5547","5548","5549","5550","5551","5552","5553"],"D:\\react-myprojects\\dss\\src\\components\\HomeAdminManager.js",["5554","5555","5556","5557","5558","5559","5560","5561","5562","5563","5564","5565","5566","5567","5568","5569","5570","5571","5572","5573","5574","5575","5576","5577","5578","5579","5580","5581","5582","5583","5584","5585","5586","5587","5588","5589","5590","5591","5592","5593","5594","5595","5596","5597","5598","5599","5600"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport dayjs from \"dayjs\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Heading,\r\n  HStack,\r\n  Select,\r\n  SimpleGrid,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  Cell,\r\n  ResponsiveContainer,\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\nimport CardLayout from \"../helpers/CardLayout\";\r\nimport CardLayout2 from \"../helpers/CardLayout2\";\r\nimport CardLayout4 from \"../helpers/CardLayout4\";\r\nimport Copyright from \"./Copyright\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\n//import BarChart from \"../helpers/BarChart\";\r\nimport BarChartStack from \"../helpers/BarChartStack\";\r\nimport EmployeeTableLeaveView from \"./EmployeeTableLeaveView\";\r\nimport ExpensesTableViewSummary from \"./ExpenseTableViewSummary\";\r\nimport ExpenseSummaryTableView from \"./ExpensesSummaryTableView\";\r\nimport LeavesTableViewSummary from \"./LeavesTableViewSummary\";\r\nimport HocTableViewSummary from \"./HocTableViewSummary\";\r\nimport SummaryTableView from \"../helpers/SummaryTableView\";\r\nimport DailyAllowanceTableViewSummary from \"./DailyAllowancesTableViewSummary\";\r\nimport PayslipTableViewSummary from \"./PayslipTableViewSummary\";\r\nimport PayslipSummaryTableView from \"./PayslipSummaryTableView\";\r\nimport { useExpensesPeriod } from \"./expenses/useExpensesPeriod\";\r\nimport LeavesTableApproval from \"./LeaveTableApproval\";\r\nimport ExportLeave2Excel from \"./ExportLeave2Excel\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst FILTERSTRING = \"Pending\";\r\nconst barchartdata = [\r\n  { y: \"2006\", \"Total Income\": 100, \"Total Outcome\": 90 },\r\n  { y: \"2007\", \"Total Income\": 75, \"Total Outcome\": 65 },\r\n  { y: \"2008\", \"Total Income\": 50, \"Total Outcome\": 40 },\r\n  { y: \"2009\", \"Total Income\": 75, \"Total Outcome\": 65 },\r\n  { y: \"2010\", \"Total Income\": 50, \"Total Outcome\": 40 },\r\n  { y: \"2011\", \"Total Income\": 75, \"Total Outcome\": 65 },\r\n  { y: \"2012\", \"Total Income\": 100, \"Total Outcome\": 90 },\r\n];\r\nconst linechartdata = [\r\n  { y: \"2006\", \"Total Sales\": 50, \"Total Revenue\": 90 },\r\n  { y: \"2007\", \"Total Sales\": 75, \"Total Revenue\": 65 },\r\n  { y: \"2008\", \"Total Sales\": 50, \"Total Revenue\": 40 },\r\n  { y: \"2009\", \"Total Sales\": 75, \"Total Revenue\": 65 },\r\n  { y: \"2010\", \"Total Sales\": 50, \"Total Revenue\": 40 },\r\n  { y: \"2011\", \"Total Sales\": 75, \"Total Revenue\": 65 },\r\n  { y: \"2012\", \"Total Sales\": 100, \"Total Revenue\": 50 },\r\n];\r\nconst months = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\",\r\n  \"May\",\r\n  \"Jun\",\r\n  \"Jul\",\r\n  \"Aug\",\r\n  \"Sep\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Dec\",\r\n];\r\nconst monthsname = [\r\n  \"jan\",\r\n  \"feb\",\r\n  \"mar\",\r\n  \"apr\",\r\n  \"may\",\r\n  \"jun\",\r\n  \"jul\",\r\n  \"aug\",\r\n  \"sep\",\r\n  \"oct\",\r\n  \"nov\",\r\n  \"dec\",\r\n];\r\n\r\nconst expchartdata = {\r\n  labels: [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ],\r\n  datasets: [\r\n    {\r\n      label: \"Expenses\",\r\n      backgroundColor: \"rgba(75,192,192,1)\",\r\n      borderColor: \"rgba(0,0,0,1)\",\r\n      borderWidth: 2,\r\n      data: [65, 59, 80, 81, 56, 50, 60, 40, 70, 60, 50, 60],\r\n    },\r\n  ],\r\n};\r\n\r\nconst sitechartdata = {\r\n  labels: [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ],\r\n  datasets: [\r\n    {\r\n      label: \"Expenses\",\r\n      backgroundColor: \"rgba(75,192,192,1)\",\r\n      borderColor: \"rgba(0,0,0,1)\",\r\n      borderWidth: 2,\r\n      data: [\r\n        25000, 39000, 20000, 21000, 26000, 20000, 20000, 20000, 22000, 20000,\r\n        25000, 20000,\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nconst paychartdata = {\r\n  labels: [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ],\r\n  datasets: [\r\n    {\r\n      label: \"Expenses\",\r\n      backgroundColor: \"rgba(75,192,192,1)\",\r\n      borderColor: \"rgba(0,0,0,1)\",\r\n      borderWidth: 2,\r\n      data: [\r\n        65000, 59000, 80000, 81000, 56000, 50000, 60000, 70000, 72000, 60000,\r\n        55000, 60000,\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    title: \"January\",\r\n    field: \"jan\",\r\n  },\r\n  {\r\n    title: \"February\",\r\n    field: \"feb\",\r\n  },\r\n  {\r\n    title: \"March\",\r\n    field: \"mar\",\r\n  },\r\n  {\r\n    title: \"April\",\r\n    field: \"apr\",\r\n  },\r\n  {\r\n    title: \"May\",\r\n    field: \"may\",\r\n  },\r\n  {\r\n    title: \"June\",\r\n    field: \"jun\",\r\n  },\r\n  {\r\n    title: \"July\",\r\n    field: \"jul\",\r\n  },\r\n  {\r\n    title: \"August\",\r\n    field: \"aug\",\r\n  },\r\n  {\r\n    title: \"September\",\r\n    field: \"sep\",\r\n  },\r\n  {\r\n    title: \"October\",\r\n    field: \"oct\",\r\n  },\r\n  {\r\n    title: \"November\",\r\n    field: \"nov\",\r\n  },\r\n  {\r\n    title: \"December\",\r\n    field: \"dec\",\r\n  },\r\n];\r\n\r\nconst data = [\r\n  {\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n];\r\n\r\nconst paysummcolumns = [\r\n  {\r\n    title: \"Category\",\r\n    field: \"category\",\r\n  },\r\n  {\r\n    title: \"Jan\",\r\n    field: \"jan\",\r\n  },\r\n  {\r\n    title: \"Feb\",\r\n    field: \"feb\",\r\n  },\r\n  {\r\n    title: \"Mar\",\r\n    field: \"mar\",\r\n  },\r\n  {\r\n    title: \"Apr\",\r\n    field: \"apr\",\r\n  },\r\n  {\r\n    title: \"May\",\r\n    field: \"may\",\r\n  },\r\n  {\r\n    title: \"Jun\",\r\n    field: \"jun\",\r\n  },\r\n  {\r\n    title: \"Jul\",\r\n    field: \"jul\",\r\n  },\r\n  {\r\n    title: \"Aug\",\r\n    field: \"aug\",\r\n  },\r\n  {\r\n    title: \"Sep\",\r\n    field: \"sep\",\r\n  },\r\n  {\r\n    title: \"Oct\",\r\n    field: \"oct\",\r\n  },\r\n  {\r\n    title: \"Nov\",\r\n    field: \"nov\",\r\n  },\r\n  {\r\n    title: \"Dec\",\r\n    field: \"dec\",\r\n  },\r\n];\r\n\r\nconst paysummdata = [\r\n  {\r\n    category: \"Basic Salary\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n  {\r\n    category: \"TAP/SCP\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n  {\r\n    category: \"Site Allowances\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n  {\r\n    category: \"Expenses Claims\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n  {\r\n    category: \"Allowances\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n  {\r\n    category: \"Deductions\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n  {\r\n    category: \"Totals\",\r\n    jan: 80,\r\n    feb: 90,\r\n    mar: 78,\r\n    apr: 63,\r\n    may: 55,\r\n    jun: 60,\r\n    jul: 55,\r\n    aug: 65,\r\n    sep: 70,\r\n    oct: 58,\r\n    nov: 60,\r\n    dec: 62,\r\n  },\r\n];\r\n\r\nconst initial_expdata = [\r\n  {\r\n    jan: 0,\r\n    feb: 0,\r\n    mar: 0,\r\n    apr: 0,\r\n    may: 0,\r\n    jun: 0,\r\n    jul: 0,\r\n    aug: 0,\r\n    sep: 0,\r\n    oct: 0,\r\n    nov: 0,\r\n    dec: 0,\r\n  },\r\n];\r\n\r\nconst dataset = [\r\n  {\r\n    name: \"Johson\",\r\n    from_date: \"2021-12-01\",\r\n    to_date: \"2021-12-04\",\r\n    no_of_days: 3,\r\n    reason: \"Holiday leave\",\r\n    status: \"Approved\",\r\n  },\r\n  {\r\n    name: \"David\",\r\n    from_date: \"2021-12-15\",\r\n    to_date: \"2021-12-16\",\r\n    no_of_days: 2,\r\n    reason: \"Annual leave\",\r\n    status: \"Approved\",\r\n  },\r\n];\r\n\r\nconst HomeAdminManager = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { expensesperiod, setExpPeriodId } = useExpensesPeriod();\r\n  const [expdata, setExpData] = useState(initial_expdata);\r\n  const [selectleaveyear, setSelectLeaveYear] = useState(\"\");\r\n  const [selectexpenseyear, setSelectExpenseYear] = useState(\"\");\r\n  const [selectsiteallowsyear, setSelectSiteAllowsYear] = useState(\"\");\r\n  const [selectpayrollyear, setSelectPayrollYear] = useState(\"\");\r\n  const [selecthocyear, setSelectHocYear] = useState(\"\");\r\n  const currentyear = new Date().getFullYear();\r\n  const currentmonth = new Date().getMonth();\r\n\r\n  // const Build_ExpData = () => {\r\n  //   const currentmonth = new Date().getMonth();\r\n\r\n  //   for (var i = 1; i <= currentmonth; i++) {\r\n  //     expdata[i] = i;\r\n  //   }\r\n  //   console.log(\"date\", currentyear, currentmonth, expdata);\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   Build_ExpData();\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    setSelectLeaveYear(currentyear);\r\n    setSelectExpenseYear(currentyear);\r\n    setSelectSiteAllowsYear(currentyear);\r\n    setSelectPayrollYear(currentyear);\r\n    setSelectHocYear(currentyear);\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxW=\"full\" mt=\"100\">\r\n      <Box\r\n        //minW=\"100%\"\r\n        padding=\"4\"\r\n        width=\"full\"\r\n        height=\"800\"\r\n        borderColor=\"blue.500\"\r\n        borderWidth=\"1px\"\r\n        borderRadius=\"lg\"\r\n        //overflow=\"scroll\"\r\n      >\r\n        <Tabs>\r\n          <TabList>\r\n            <Tab>Employees</Tab>\r\n            <Tab>Leaves</Tab>\r\n            <Tab>Expenses</Tab>\r\n            <Tab>Site Allowances</Tab>\r\n            <Tab>Payroll</Tab>\r\n            <Tab>HOC History</Tab>\r\n            <Tab>Leaves Approval</Tab>\r\n          </TabList>\r\n\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"full\"\r\n                padding=\"4\"\r\n                width=\"100%\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <SimpleGrid>\r\n                  <Box>\r\n                    <Heading as=\"h2\" size=\"lg\">\r\n                      Employees\r\n                    </Heading>\r\n                  </Box>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Tabs isLazy>\r\n                      {/* <TabList>\r\n                        <Tab>Details</Tab>\r\n                      </TabList> */}\r\n                      <TabPanels>\r\n                        <TabPanel>\r\n                          <EmployeeTableLeaveView />\r\n                        </TabPanel>\r\n                      </TabPanels>\r\n                    </Tabs>\r\n                  </Box>\r\n                  <Divider />\r\n                </SimpleGrid>\r\n              </Box>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"100%\"\r\n                padding=\"4\"\r\n                width=\"full\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <SimpleGrid w=\"168vh\">\r\n                  <HStack>\r\n                    <Box>\r\n                      <Heading as=\"h2\" size=\"lg\">\r\n                        Leaves\r\n                      </Heading>\r\n                    </Box>\r\n                    <Box alignSelf=\"flex-end\">\r\n                      <HStack>\r\n                        <Select\r\n                          value={selectleaveyear}\r\n                          fontSize={20}\r\n                          onChange={(e) => setSelectLeaveYear(e.target.value)}\r\n                        >\r\n                          <option value=\"2021\">2021</option>\r\n                          <option value=\"2022\">2022</option>\r\n                        </Select>\r\n                        {/* <Box size=\"xl\" py={2}>\r\n                          <Text fontSize=\"lg\">\r\n                            <ExportLeave2Excel\r\n                              filename=\"leave\"\r\n                              dataset={dataset}\r\n                              title=\"Leave\"\r\n                            />\r\n                          </Text>\r\n                        </Box> */}\r\n                      </HStack>\r\n                    </Box>\r\n                  </HStack>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Tabs defaultIndex={currentmonth} isLazy>\r\n                      <TabList>\r\n                        {/* <Tab>Chart</Tab>\r\n                          <Tab>Summary</Tab> */}\r\n                        <Tab>January</Tab>\r\n                        <Tab>February</Tab>\r\n                        <Tab>March</Tab>\r\n                        <Tab>April</Tab>\r\n                        <Tab>May</Tab>\r\n                        <Tab>June</Tab>\r\n                        <Tab>July</Tab>\r\n                        <Tab>August</Tab>\r\n                        <Tab>September</Tab>\r\n                        <Tab>October</Tab>\r\n                        <Tab>November</Tab>\r\n                        <Tab>December</Tab>\r\n                      </TabList>\r\n                      <TabPanels>\r\n                        {/* <TabPanel>\r\n                  <BarChart\r\n                    heading=\"Expenses for the Month\"\r\n                    barchartdata={expchartdata}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <SummaryTableView columns={columns} data={data} />\r\n                </TabPanel> */}\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={1}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={2}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={3}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={4}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={5}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={6}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={7}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={8}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={9}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={10}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={11}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <LeavesTableViewSummary\r\n                            year={\r\n                              selectleaveyear ? selectleaveyear : currentyear\r\n                            }\r\n                            month={12}\r\n                          />\r\n                        </TabPanel>\r\n                      </TabPanels>\r\n                    </Tabs>\r\n                  </Box>\r\n                  <Divider />\r\n                </SimpleGrid>\r\n              </Box>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"x3\"\r\n                padding=\"4\"\r\n                width=\"100%\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <SimpleGrid w=\"168vh\">\r\n                  <HStack>\r\n                    <Box>\r\n                      <Heading as=\"h2\" size=\"lg\">\r\n                        Expenses Claims\r\n                      </Heading>\r\n                    </Box>\r\n                    <Box alignSelf=\"flex-end\">\r\n                      <HStack>\r\n                        <Select\r\n                          value={selectexpenseyear}\r\n                          fontSize={20}\r\n                          onChange={(e) => setSelectExpenseYear(e.target.value)}\r\n                        >\r\n                          <option value=\"2021\">2021</option>\r\n                          <option value=\"2022\">2022</option>\r\n                        </Select>\r\n                        {/* <Box size=\"xl\" py={2}>\r\n                          <Text fontSize=\"lg\">\r\n                            <ExportLeave2Excel\r\n                              filename=\"leave\"\r\n                              dataset={dataset}\r\n                              title=\"Leave\"\r\n                            />\r\n                          </Text>\r\n                        </Box> */}\r\n                      </HStack>\r\n                    </Box>\r\n                  </HStack>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Tabs defaultIndex={currentmonth} isLazy>\r\n                      <TabList>\r\n                        {/* <Tab>Chart</Tab>\r\n                          <Tab>Summary</Tab> */}\r\n                        <Tab>January</Tab>\r\n                        <Tab>February</Tab>\r\n                        <Tab>March</Tab>\r\n                        <Tab>April</Tab>\r\n                        <Tab>May</Tab>\r\n                        <Tab>June</Tab>\r\n                        <Tab>July</Tab>\r\n                        <Tab>August</Tab>\r\n                        <Tab>September</Tab>\r\n                        <Tab>October</Tab>\r\n                        <Tab>November</Tab>\r\n                        <Tab>December</Tab>\r\n                      </TabList>\r\n                      <TabPanels>\r\n                        {/* <TabPanel>\r\n                  <BarChart\r\n                    heading=\"Expenses for the Month\"\r\n                    barchartdata={expchartdata}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <ExpenseSummaryTableView year={currentyear} />\r\n                </TabPanel> */}\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={1}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={2}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={3}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={4}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={5}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={6}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={7}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={8}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={9}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={10}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={11}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <ExpensesTableViewSummary\r\n                            year={\r\n                              selectexpenseyear\r\n                                ? selectexpenseyear\r\n                                : currentyear\r\n                            }\r\n                            month={12}\r\n                          />\r\n                        </TabPanel>\r\n                      </TabPanels>\r\n                    </Tabs>\r\n                  </Box>\r\n                  <Divider />\r\n                </SimpleGrid>\r\n              </Box>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"x3\"\r\n                padding=\"4\"\r\n                width=\"100%\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <SimpleGrid w=\"168vh\">\r\n                  <HStack>\r\n                    <Box>\r\n                      <Heading as=\"h2\" size=\"lg\">\r\n                        Site Allowances\r\n                      </Heading>\r\n                    </Box>\r\n                    <Box alignSelf=\"flex-end\">\r\n                      <HStack>\r\n                        <Select\r\n                          value={selectsiteallowsyear}\r\n                          fontSize={20}\r\n                          onChange={(e) =>\r\n                            setSelectSiteAllowsYear(e.target.value)\r\n                          }\r\n                        >\r\n                          <option value=\"2021\">2021</option>\r\n                          <option value=\"2022\">2022</option>\r\n                        </Select>\r\n                        {/* <Box size=\"xl\" py={2}>\r\n                          <Text fontSize=\"lg\">\r\n                            <ExportLeave2Excel\r\n                              filename=\"leave\"\r\n                              dataset={dataset}\r\n                              title=\"Leave\"\r\n                            />\r\n                          </Text>\r\n                        </Box> */}\r\n                      </HStack>\r\n                    </Box>\r\n                  </HStack>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Tabs defaultIndex={currentmonth} isLazy>\r\n                      <TabList>\r\n                        {/* <Tab>Chart</Tab>\r\n                <Tab>Summary</Tab> */}\r\n                        <Tab>January</Tab>\r\n                        <Tab>February</Tab>\r\n                        <Tab>March</Tab>\r\n                        <Tab>April</Tab>\r\n                        <Tab>May</Tab>\r\n                        <Tab>June</Tab>\r\n                        <Tab>July</Tab>\r\n                        <Tab>August</Tab>\r\n                        <Tab>September</Tab>\r\n                        <Tab>October</Tab>\r\n                        <Tab>November</Tab>\r\n                        <Tab>December</Tab>\r\n                      </TabList>\r\n                      <TabPanels>\r\n                        {/* <TabPanel>\r\n                  <BarChart\r\n                    heading=\"Site Allowances for the Month\"\r\n                    barchartdata={paychartdata}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <SummaryTableView columns={columns} data={data} />\r\n                </TabPanel> */}\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"01\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"02\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"03\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"04\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"05\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"06\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"07\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"08\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"09\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"10\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"11\"\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <DailyAllowanceTableViewSummary\r\n                            year={\r\n                              selectsiteallowsyear\r\n                                ? selectsiteallowsyear\r\n                                : currentyear\r\n                            }\r\n                            month=\"12\"\r\n                          />\r\n                        </TabPanel>\r\n                      </TabPanels>\r\n                    </Tabs>\r\n                  </Box>\r\n                  <Divider />\r\n                </SimpleGrid>\r\n              </Box>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"x3\"\r\n                padding=\"4\"\r\n                width=\"100%\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <SimpleGrid>\r\n                  <Box>\r\n                    <Heading as=\"h2\" size=\"lg\">\r\n                      Payroll\r\n                    </Heading>\r\n                  </Box>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Tabs isLazy>\r\n                      <TabList>\r\n                        {/* <Tab>Chart</Tab>\r\n                <Tab>Summary</Tab> */}\r\n                        <Tab>Approved</Tab>\r\n                        <Tab>Verified</Tab>\r\n                        <Tab>Pending</Tab>\r\n                        <Tab>Rejected</Tab>\r\n                      </TabList>\r\n                      <TabPanels>\r\n                        {/* <TabPanel>\r\n                  <BarChart\r\n                    heading=\"Payroll for the Month\"\r\n                    barchartdata={paychartdata}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <PayslipSummaryTableView year={currentyear} status=\"Approved\" />\r\n                </TabPanel> */}\r\n                        <TabPanel>\r\n                          <PayslipTableViewSummary status=\"Approved\" />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <PayslipTableViewSummary status=\"Verified\" />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <PayslipTableViewSummary status=\"Pending\" />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <PayslipTableViewSummary status=\"Rejected\" />\r\n                        </TabPanel>\r\n                      </TabPanels>\r\n                    </Tabs>\r\n                  </Box>\r\n                  <Divider />\r\n                </SimpleGrid>\r\n              </Box>\r\n            </TabPanel>\r\n\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"100%\"\r\n                padding=\"4\"\r\n                width=\"full\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <SimpleGrid w=\"168vh\">\r\n                  <HStack>\r\n                    <Box>\r\n                      <Heading as=\"h2\" size=\"lg\">\r\n                        HOC History\r\n                      </Heading>\r\n                    </Box>\r\n                    <Box alignSelf=\"flex-end\">\r\n                      <HStack>\r\n                        <Select\r\n                          value={selecthocyear}\r\n                          fontSize={20}\r\n                          onChange={(e) => setSelectHocYear(e.target.value)}\r\n                        >\r\n                          <option value=\"2021\">2021</option>\r\n                          <option value=\"2022\">2022</option>\r\n                        </Select>\r\n                        {/* <Box size=\"xl\" py={2}>\r\n                          <Text fontSize=\"lg\">\r\n                            <ExportLeave2Excel\r\n                              filename=\"leave\"\r\n                              dataset={dataset}\r\n                              title=\"Leave\"\r\n                            />\r\n                          </Text>\r\n                        </Box> */}\r\n                      </HStack>\r\n                    </Box>\r\n                  </HStack>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Tabs defaultIndex={currentmonth} isLazy>\r\n                      <TabList>\r\n                        {/* <Tab>Chart</Tab>\r\n                          <Tab>Summary</Tab> */}\r\n                        <Tab>January</Tab>\r\n                        <Tab>February</Tab>\r\n                        <Tab>March</Tab>\r\n                        <Tab>April</Tab>\r\n                        <Tab>May</Tab>\r\n                        <Tab>June</Tab>\r\n                        <Tab>July</Tab>\r\n                        <Tab>August</Tab>\r\n                        <Tab>September</Tab>\r\n                        <Tab>October</Tab>\r\n                        <Tab>November</Tab>\r\n                        <Tab>December</Tab>\r\n                      </TabList>\r\n                      <TabPanels>\r\n                        {/* <TabPanel>\r\n                  <BarChart\r\n                    heading=\"Expenses for the Month\"\r\n                    barchartdata={expchartdata}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <SummaryTableView columns={columns} data={data} />\r\n                </TabPanel> */}\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={1}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={2}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={3}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={4}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={5}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary year={currentyear} month={6} />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={7}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={8}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={9}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={10}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={11}\r\n                          />\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                          <HocTableViewSummary\r\n                            year={selecthocyear ? selecthocyear : currentyear}\r\n                            month={12}\r\n                          />\r\n                        </TabPanel>\r\n                      </TabPanels>\r\n                    </Tabs>\r\n                  </Box>\r\n                  <Divider />\r\n                </SimpleGrid>\r\n              </Box>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Box\r\n                maxW=\"full\"\r\n                padding=\"4\"\r\n                width=\"100%\"\r\n                height=\"700\"\r\n                borderColor=\"blue.500\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"scroll\"\r\n              >\r\n                <LeavesTableApproval />\r\n              </Box>\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default HomeAdminManager;\r\n","D:\\react-myprojects\\dss\\src\\components\\HomeStaff.js",["5601","5602","5603","5604","5605","5606","5607","5608","5609","5610","5611","5612","5613","5614","5615","5616","5617","5618","5619","5620","5621","5622","5623","5624","5625","5626","5627","5628","5629","5630"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Heading,\r\n  GridItem,\r\n  Icon,\r\n  IconButton,\r\n  Stack,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\nimport { TextField, Paper, Container } from \"@material-ui/core\";\r\nimport CardLayout from \"../helpers/CardLayout\";\r\nimport CardLayout2 from \"../helpers/CardLayout2\";\r\nimport CardLayout3 from \"../helpers/CardLayout3\";\r\nimport Copyright from \"./Copyright\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\n\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport LeaveTableViewStaff from \"./LeaveTableViewStaff\";\r\nimport TrainingsTableViewStaff from \"./TrainingsTableViewStaff\";\r\nimport LeaveTableAdmin from \"./LeaveTableManager\";\r\nimport ExpenseTableViewStaff from \"./ExpenseTableViewStaff\";\r\nimport ExpenseTableAdmin from \"./ExpenseTableAdmin\";\r\nimport PayslipTableViewStaff from \"./PayslipTableViewStaff\";\r\nimport PayslipTableAdmin from \"./PayslipTableAdmin\";\r\nimport DailyAllowancesTableViewStaff from \"./DailyAllowancesTableViewStaff\";\r\nimport DailyAllowancesTableAdmin from \"./DailyAllowancesTableAdmin\";\r\nimport OnLeavesViewStaff from \"./OnLeavesViewStaff\";\r\nimport WPExpiryViewStaff from \"./WPExpiryViewStaff\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useSingleEmployee } from \"./employees/useSingleEmployee\";\r\nimport { EditIcon, ViewIcon } from \"@chakra-ui/icons\";\r\nimport { items, assets } from \"../utils/constants\"\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst HomeStaff = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { employees, setFilter, setEmployeeId } = useEmployees();\r\n  const { singleemployee, setSingleEmployeeId } = useSingleEmployee();\r\n  const [leavesdata, setLeavesdata] = useState([]);\r\n  const [isLeaveDialogOpen, setIsLeaveDialogOpen] = useState(false);\r\n  const [expensesdata, setExpensesdata] = useState([]);\r\n  const [isExpenseDialogOpen, setIsExpenseDialogOpen] = useState(false);\r\n  const [payslipsdata, setPayslipsdata] = useState([]);\r\n  const [isPayslipDialogOpen, setIsPayslipDialogOpen] = useState(false);\r\n  const [dailyallowancesdata, setDailyAllowancesdata] = useState([]);\r\n  const [isDailyAllowancesDialogOpen, setIsDailyAllowancesDialogOpen] =\r\n    useState(false);\r\n\r\n  const { leaves, loadPendingLeaves } = useLeavesContext();\r\n  const { expenses, loadPendingExpenses } = useExpensesContext();\r\n  const { payslips, loadPendingPayslips } = usePayslipsContext();\r\n  const { dailyallowances, loadPendingDailyAllowances } =\r\n    useDailyAllowancesContext();\r\n  const { isEditing, setEditEmployeeID, setIsEditingOn } =\r\n    useEmployeesContext();\r\n\r\n  const handleLeaveDialogOpen = () => {\r\n    setLeavesdata([]);\r\n    setLeavesdata([...leaves]);\r\n    setIsLeaveDialogOpen(true);\r\n  };\r\n\r\n  const handleLeaveDialogClose = () => {\r\n    setIsLeaveDialogOpen(false);\r\n    //loadPendingLeaves(FILTERSTRING);\r\n  };\r\n\r\n  const handleExpenseDialogOpen = () => {\r\n    setExpensesdata([]);\r\n    setExpensesdata([...expenses]);\r\n    setIsExpenseDialogOpen(true);\r\n  };\r\n\r\n  const handleExpenseDialogClose = () => {\r\n    setIsExpenseDialogOpen(false);\r\n    //loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  const handlePayslipDialogOpen = () => {\r\n    setPayslipsdata([]);\r\n    setPayslipsdata([...payslips]);\r\n    setIsPayslipDialogOpen(true);\r\n  };\r\n\r\n  const handlePayslipDialogClose = () => {\r\n    setIsPayslipDialogOpen(false);\r\n    //loadPendingPayslips(FILTERSTRING);\r\n  };\r\n\r\n  const handleDailyAllowancesDialogOpen = () => {\r\n    setDailyAllowancesdata([]);\r\n    setDailyAllowancesdata([...dailyallowances]);\r\n    setIsDailyAllowancesDialogOpen(true);\r\n  };\r\n\r\n  const handleDailyAllowancesDialogClose = () => {\r\n    setIsDailyAllowancesDialogOpen(false);\r\n    loadPendingDailyAllowances(FILTERSTRING);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setEditEmployeeID(loginLevel.loginUserId);\r\n    setIsEditingOn();\r\n  }, []);\r\n\r\n  // const items = [\r\n  //   {\r\n  //     itemno: \"A000111\",\r\n  //     desp: \"Bottle ABC\",\r\n  //     expiry: \"23/02/2022\",\r\n  //     qty: 10,\r\n  //     minqty: 15,\r\n  //     tobeexpiry: true,\r\n  //     toorder: true,\r\n  //     status: \"In Stock\",\r\n  //     supplier: \"ABC Supplier\",\r\n  //   },\r\n  //   {\r\n  //     itemno: \"B000111\",\r\n  //     desp: \"Bottle ABC\",\r\n  //     expiry: \"23/04/2022\",\r\n  //     qty: 5,\r\n  //     minqty: 10,\r\n  //     toorder: true,\r\n  //     tobeexpiry: false,\r\n  //     status: \"In Stock\",\r\n  //     supplier: \"ABC Supplier\",\r\n  //   },\r\n  //   {\r\n  //     itemno: \"D000111\",\r\n  //     desp: \"Bottle ABC\",\r\n  //     expiry: \"23/02/2022\",\r\n  //     qty: 15,\r\n  //     minqty: 10,\r\n  //     toorder: false,\r\n  //     tobeexpiry: true,\r\n  //     status: \"In Stock\",\r\n  //     supplier: \"ABC Supplier\",\r\n  //   },\r\n  //   {\r\n  //     itemno: \"E000111\",\r\n  //     desp: \"Bottle ABC\",\r\n  //     expiry: \"23/02/2022\",\r\n  //     qty: 25,\r\n  //     minqty: 5,\r\n  //     tobeexpiry: true,\r\n  //     toorder: false,\r\n  //     status: \"In Stock\",\r\n  //     supplier: \"ABC Supplier\",\r\n  //   },\r\n  //   {\r\n  //     itemno: \"F000111\",\r\n  //     desp: \"Bottle ABC\",\r\n  //     expiry: \"23/05/2022\",\r\n  //     qty: 30,\r\n  //     minqty: 15,\r\n  //     tobeexpiry: false,\r\n  //     toorder: false,\r\n  //     status: \"In Stock\",\r\n  //     supplier: \"ABC Supplier\",\r\n  //   },\r\n  // ];\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.appBarSpacer} />\r\n      <div style={{ paddingLeft: 50 }}>\r\n        {/* <h2>Welcome Staff {loginLevel.loginUser}!</h2>\r\n        <h3>Dashboard</h3> */}\r\n      </div>\r\n      <Container maxWidth=\"xl\" className={classes.container}>\r\n        <Stack direction=\"column\">\r\n          {/* <Box>\r\n            <CardLayout2>\r\n              <Grid direction=\"row\">\r\n                <Stack direction=\"row\">\r\n                  <Heading as=\"h4\" size=\"md\">\r\n                    Items below minimum level\r\n                  </Heading>\r\n                  <Spacer />\r\n                  <IconButton\r\n                    // variant=\"outline\"\r\n                    size=\"md\"\r\n                    aria-label=\"Edit\"\r\n                    icon={<EditIcon />}\r\n                    onClick={() => history.push(\"/leave\")}\r\n                  />\r\n                </Stack>\r\n                <Grid templateColumns=\"repeat(25, 1fr)\" gap={3} p={1}>\r\n                  <GridItem colSpan={3}>\r\n                    <Box w=\"100%\">Item No</Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={6}>\r\n                    <Box w=\"100%\">Description</Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={3}>\r\n                    <Box w=\"100%\">Qty on Hand</Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={3}>\r\n                    <Box w=\"100%\">Min Level</Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={10}>\r\n                    <Box w=\"100%\">Supplier</Box>\r\n                  </GridItem>\r\n                </Grid>\r\n                {items\r\n                  .filter((r) => r.toorder)\r\n                  .map((row) => {\r\n                    return (\r\n                      <Grid\r\n                        key={row.id}\r\n                        templateColumns=\"repeat(25, 1fr)\"\r\n                        gap={3}\r\n                        p={1}\r\n                      >\r\n                        <GridItem colSpan={3}>\r\n                          <Box w=\"100%\">{row.itemno}</Box>\r\n                        </GridItem>\r\n                        <GridItem colSpan={6}>\r\n                          <Box w=\"100%\">{row.desp}</Box>\r\n                        </GridItem>\r\n                        <GridItem colSpan={3}>\r\n                          <Box w=\"100%\">{row.qty}</Box>\r\n                        </GridItem>\r\n                        <GridItem colSpan={3}>\r\n                          <Box w=\"100%\">{row.minqty}</Box>\r\n                        </GridItem>\r\n                        <GridItem colSpan={10}>\r\n                          <Box w=\"100%\">{row.supplier}</Box>\r\n                        </GridItem>\r\n                      </Grid>\r\n                    );\r\n                  })}\r\n              </Grid>\r\n            </CardLayout2>\r\n          </Box> */}\r\n          <Box>\r\n            <CardLayout2>\r\n              <Grid direction=\"row\">\r\n                <Stack direction=\"row\">\r\n                  <Heading as=\"h4\" size=\"md\">\r\n                    Assets to be expired in 30 days\r\n                  </Heading>\r\n                  <Spacer />\r\n                  <IconButton\r\n                    // variant=\"outline\"\r\n                    size=\"md\"\r\n                    aria-label=\"Edit\"\r\n                    icon={<EditIcon />}\r\n                    onClick={() => history.push(\"/leave\")}\r\n                  />\r\n                </Stack>\r\n                <Grid templateColumns=\"repeat(20, 1fr)\" gap={3} p={1}>\r\n                  <GridItem colSpan={3}>\r\n                    <Box w=\"100%\">Item No</Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={10}>\r\n                    <Box w=\"100%\">Description</Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={3}>\r\n                    <Box w=\"100%\">Expiry Date</Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={4}>\r\n                    <Box w=\"100%\">Status</Box>\r\n                  </GridItem>\r\n                \r\n                </Grid>\r\n                {assets\r\n                  .filter((r) => r.tobeexpiry)\r\n                  .map((row) => {\r\n                    return (\r\n                      <Grid\r\n                        key={row.id}\r\n                        templateColumns=\"repeat(20, 1fr)\"\r\n                        gap={3}\r\n                        p={1}\r\n                      >\r\n                        <GridItem colSpan={3}>\r\n                          <Box w=\"100%\">{row.itemno}</Box>\r\n                        </GridItem>\r\n                        <GridItem colSpan={10}>\r\n                          <Box w=\"100%\">{row.desp}</Box>\r\n                        </GridItem>\r\n                        <GridItem colSpan={3}>\r\n                          <Box w=\"100%\">{row.expiry}</Box>\r\n                        </GridItem>\r\n                        <GridItem colSpan={4}>\r\n                          <Box w=\"100%\">{row.status}</Box>\r\n                        </GridItem>\r\n                      \r\n                      </Grid>\r\n                    );\r\n                  })}\r\n              </Grid>\r\n            </CardLayout2>\r\n          </Box>\r\n        </Stack>\r\n        <Box pt={4}>\r\n          <Copyright />\r\n        </Box>\r\n        <CustomDialog\r\n          isOpen={isLeaveDialogOpen}\r\n          handleClose={handleLeaveDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <LeaveTableAdmin\r\n            setLeavesdata={setLeavesdata}\r\n            leavesdata={leavesdata}\r\n            handleDialogClose={handleLeaveDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isExpenseDialogOpen}\r\n          handleClose={handleExpenseDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <ExpenseTableAdmin\r\n            setExpensesdata={setExpensesdata}\r\n            expensesdata={expensesdata}\r\n            handleDialogClose={handleExpenseDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isPayslipDialogOpen}\r\n          handleClose={handlePayslipDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={false}\r\n        >\r\n          <PayslipTableAdmin\r\n            setPayslipsdata={setPayslipsdata}\r\n            payslipsdata={payslipsdata}\r\n            handleDialogClose={handlePayslipDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isDailyAllowancesDialogOpen}\r\n          handleClose={handleDailyAllowancesDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={false}\r\n        >\r\n          <DailyAllowancesTableAdmin\r\n            setDailyAllowancesdata={setDailyAllowancesdata}\r\n            dailyallowancesdata={dailyallowancesdata}\r\n            handleDialogClose={handleDailyAllowancesDialogClose}\r\n          />\r\n        </CustomDialog>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default HomeStaff;\r\n","D:\\react-myprojects\\dss\\src\\components\\HomeOpsSpvr.js",["5631","5632","5633","5634","5635","5636","5637","5638","5639","5640","5641","5642","5643","5644","5645","5646","5647","5648","5649","5650"],"D:\\react-myprojects\\dss\\src\\components\\Copyright.js",[],"D:\\react-myprojects\\dss\\src\\components\\HomeAdmin.js",["5651","5652","5653","5654","5655","5656","5657","5658","5659","5660","5661","5662","5663","5664","5665","5666","5667","5668","5669","5670","5671","5672","5673","5674","5675","5676","5677","5678","5679"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Heading,\r\n  GridItem,\r\n  Icon,\r\n  IconButton,\r\n  Stack,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\nimport { TextField, Paper, Container } from \"@material-ui/core\";\r\nimport CardLayout from \"../helpers/CardLayout\";\r\nimport CardLayout2 from \"../helpers/CardLayout2\";\r\nimport CardLayout3 from \"../helpers/CardLayout3\";\r\nimport Copyright from \"./Copyright\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\n\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport LeaveTableViewStaff from \"./LeaveTableViewStaff\";\r\nimport TrainingsTableViewStaff from \"./TrainingsTableViewStaff\";\r\nimport LeaveTableAdmin from \"./LeaveTableManager\";\r\nimport ExpenseTableViewStaff from \"./ExpenseTableViewStaff\";\r\nimport ExpenseTableAdmin from \"./ExpenseTableAdmin\";\r\nimport PayslipTableViewStaff from \"./PayslipTableViewStaff\";\r\nimport PayslipTableAdmin from \"./PayslipTableAdmin\";\r\nimport DailyAllowancesTableViewStaff from \"./DailyAllowancesTableViewStaff\";\r\nimport DailyAllowancesTableAdmin from \"./DailyAllowancesTableAdmin\";\r\nimport OnLeavesViewStaff from \"./OnLeavesViewStaff\";\r\nimport WPExpiryViewStaff from \"./WPExpiryViewStaff\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useSingleEmployee } from \"./employees/useSingleEmployee\";\r\nimport { EditIcon, ViewIcon } from \"@chakra-ui/icons\";\r\nimport { items, assets} from \"../utils/constants\"\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst HomeStaff = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { employees, setFilter, setEmployeeId } = useEmployees();\r\n  const { singleemployee, setSingleEmployeeId } = useSingleEmployee();\r\n  const [leavesdata, setLeavesdata] = useState([]);\r\n  const [isLeaveDialogOpen, setIsLeaveDialogOpen] = useState(false);\r\n  const [expensesdata, setExpensesdata] = useState([]);\r\n  const [isExpenseDialogOpen, setIsExpenseDialogOpen] = useState(false);\r\n  const [payslipsdata, setPayslipsdata] = useState([]);\r\n  const [isPayslipDialogOpen, setIsPayslipDialogOpen] = useState(false);\r\n  const [dailyallowancesdata, setDailyAllowancesdata] = useState([]);\r\n  const [isDailyAllowancesDialogOpen, setIsDailyAllowancesDialogOpen] =\r\n    useState(false);\r\n\r\n  const { leaves, loadPendingLeaves } = useLeavesContext();\r\n  const { expenses, loadPendingExpenses } = useExpensesContext();\r\n  const { payslips, loadPendingPayslips } = usePayslipsContext();\r\n  const { dailyallowances, loadPendingDailyAllowances } =\r\n    useDailyAllowancesContext();\r\n  const { isEditing, setEditEmployeeID, setIsEditingOn } =\r\n    useEmployeesContext();\r\n\r\n  const handleLeaveDialogOpen = () => {\r\n    setLeavesdata([]);\r\n    setLeavesdata([...leaves]);\r\n    setIsLeaveDialogOpen(true);\r\n  };\r\n\r\n  const handleLeaveDialogClose = () => {\r\n    setIsLeaveDialogOpen(false);\r\n    //loadPendingLeaves(FILTERSTRING);\r\n  };\r\n\r\n  const handleExpenseDialogOpen = () => {\r\n    setExpensesdata([]);\r\n    setExpensesdata([...expenses]);\r\n    setIsExpenseDialogOpen(true);\r\n  };\r\n\r\n  const handleExpenseDialogClose = () => {\r\n    setIsExpenseDialogOpen(false);\r\n    //loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  const handlePayslipDialogOpen = () => {\r\n    setPayslipsdata([]);\r\n    setPayslipsdata([...payslips]);\r\n    setIsPayslipDialogOpen(true);\r\n  };\r\n\r\n  const handlePayslipDialogClose = () => {\r\n    setIsPayslipDialogOpen(false);\r\n    //loadPendingPayslips(FILTERSTRING);\r\n  };\r\n\r\n  const handleDailyAllowancesDialogOpen = () => {\r\n    setDailyAllowancesdata([]);\r\n    setDailyAllowancesdata([...dailyallowances]);\r\n    setIsDailyAllowancesDialogOpen(true);\r\n  };\r\n\r\n  const handleDailyAllowancesDialogClose = () => {\r\n    setIsDailyAllowancesDialogOpen(false);\r\n    loadPendingDailyAllowances(FILTERSTRING);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setEditEmployeeID(loginLevel.loginUserId);\r\n    setIsEditingOn();\r\n  }, []);\r\n\r\n  // const items = [\r\n  //   {\r\n  //     itemno: \"A000111\",\r\n  //     desp: \"Bottle ABC\",\r\n  //     expiry: \"23/02/2022\",\r\n  //     qty: 10,\r\n  //     minqty: 15,\r\n  //     tobeexpiry: true,\r\n  //     toorder: true,\r\n  //     status: \"In Stock\",\r\n  //     supplier: \"ABC Supplier\",\r\n  //   },\r\n  //   {\r\n  //     itemno: \"B000111\",\r\n  //     desp: \"Bottle ABC\",\r\n  //     expiry: \"23/04/2022\",\r\n  //     qty: 5,\r\n  //     minqty: 10,\r\n  //     toorder: true,\r\n  //     tobeexpiry: false,\r\n  //     status: \"In Stock\",\r\n  //     supplier: \"ABC Supplier\",\r\n  //   },\r\n  //   {\r\n  //     itemno: \"D000111\",\r\n  //     desp: \"Bottle ABC\",\r\n  //     expiry: \"23/02/2022\",\r\n  //     qty: 15,\r\n  //     minqty: 10,\r\n  //     toorder: false,\r\n  //     tobeexpiry: true,\r\n  //     status: \"In Stock\",\r\n  //     supplier: \"ABC Supplier\",\r\n  //   },\r\n  //   {\r\n  //     itemno: \"E000111\",\r\n  //     desp: \"Bottle ABC\",\r\n  //     expiry: \"23/02/2022\",\r\n  //     qty: 25,\r\n  //     minqty: 5,\r\n  //     tobeexpiry: true,\r\n  //     toorder: false,\r\n  //     status: \"In Stock\",\r\n  //     supplier: \"ABC Supplier\",\r\n  //   },\r\n  //   {\r\n  //     itemno: \"F000111\",\r\n  //     desp: \"Bottle ABC\",\r\n  //     expiry: \"23/05/2022\",\r\n  //     qty: 30,\r\n  //     minqty: 15,\r\n  //     tobeexpiry: false,\r\n  //     toorder: false,\r\n  //     status: \"In Stock\",\r\n  //     supplier: \"ABC Supplier\",\r\n  //   },\r\n  // ];\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.appBarSpacer} />\r\n      <div style={{ paddingLeft: 50 }}>\r\n        {/* <h2>Welcome Staff {loginLevel.loginUser}!</h2>\r\n        <h3>Dashboard</h3> */}\r\n      </div>\r\n      <Container maxWidth=\"xl\" className={classes.container}>\r\n        <Stack direction=\"column\">\r\n          <Box>\r\n            <CardLayout2>\r\n              <Grid direction=\"row\">\r\n                <Stack direction=\"row\">\r\n                  <Heading as=\"h4\" size=\"md\">\r\n                    Items below minimum level\r\n                  </Heading>\r\n                  <Spacer />\r\n                  <IconButton\r\n                    // variant=\"outline\"\r\n                    size=\"md\"\r\n                    aria-label=\"Edit\"\r\n                    icon={<EditIcon />}\r\n                    onClick={() => history.push(\"/leave\")}\r\n                  />\r\n                </Stack>\r\n                <Grid templateColumns=\"repeat(25, 1fr)\" gap={3} p={1}>\r\n                  <GridItem colSpan={3}>\r\n                    <Box w=\"100%\">\r\n                      <Heading size=\"sm\">Item No</Heading>\r\n                    </Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={6}>\r\n                    <Box w=\"100%\">\r\n                      <Heading size=\"sm\">Description</Heading>\r\n                    </Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={3}>\r\n                    <Box w=\"100%\">\r\n                      <Heading size=\"sm\">Qty On Hand</Heading>\r\n                    </Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={3}>\r\n                    <Box w=\"100%\">\r\n                      <Heading size=\"sm\">Min Level</Heading>\r\n                    </Box>\r\n                  </GridItem>\r\n                  <Box w=\"100%\">\r\n                    <Heading size=\"sm\">Supplier</Heading>\r\n                  </Box>\r\n                </Grid>\r\n                {items\r\n                  .filter((r) => r.toorder)\r\n                  .map((row) => {\r\n                    return (\r\n                      <Grid\r\n                        key={row.id}\r\n                        templateColumns=\"repeat(25, 1fr)\"\r\n                        gap={3}\r\n                        p={1}\r\n                      >\r\n                        <GridItem colSpan={3}>\r\n                          <Box w=\"100%\">{row.itemno}</Box>\r\n                        </GridItem>\r\n                        <GridItem colSpan={6}>\r\n                          <Box w=\"100%\">{row.desp}</Box>\r\n                        </GridItem>\r\n                        <GridItem colSpan={3}>\r\n                          <Box w=\"100%\">{row.qty}</Box>\r\n                        </GridItem>\r\n                        <GridItem colSpan={3}>\r\n                          <Box w=\"100%\">{row.minqty}</Box>\r\n                        </GridItem>\r\n                        <GridItem colSpan={10}>\r\n                          <Box w=\"100%\">{row.supplier}</Box>\r\n                        </GridItem>\r\n                      </Grid>\r\n                    );\r\n                  })}\r\n              </Grid>\r\n            </CardLayout2>\r\n          </Box>\r\n          <Box>\r\n            <CardLayout2>\r\n              <Grid direction=\"row\">\r\n                <Stack direction=\"row\">\r\n                  <Heading as=\"h4\" size=\"md\">\r\n                    Assets to be expired in 30 days\r\n                  </Heading>\r\n                  <Spacer />\r\n                  <IconButton\r\n                    // variant=\"outline\"\r\n                    size=\"md\"\r\n                    aria-label=\"Edit\"\r\n                    icon={<EditIcon />}\r\n                    onClick={() => history.push(\"/leave\")}\r\n                  />\r\n                </Stack>\r\n                <Grid templateColumns=\"repeat(20, 1fr)\" gap={3} p={1}>\r\n                  <GridItem colSpan={3}>\r\n                    <Box w=\"100%\">\r\n                      <Heading size=\"sm\">Item No</Heading>\r\n                    </Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={5}>\r\n                    <Box w=\"100%\">\r\n                      <Heading size=\"sm\">Description</Heading>\r\n                    </Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={5}>\r\n                    <Box w=\"100%\">\r\n                      <Heading size=\"sm\">Client</Heading>\r\n                    </Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={3}>\r\n                    <Box w=\"100%\">\r\n                      <Heading size=\"sm\">Expired Date</Heading>\r\n                    </Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={4}>\r\n                    <Box w=\"100%\">\r\n                      <Heading size=\"sm\">Status</Heading>\r\n                    </Box>\r\n                  </GridItem>\r\n                </Grid>\r\n                {assets\r\n                  .filter((r) => r.tobeexpiry)\r\n                  .map((row) => {\r\n                    return (\r\n                      <Grid\r\n                        key={row.id}\r\n                        templateColumns=\"repeat(20, 1fr)\"\r\n                        gap={3}\r\n                        p={1}\r\n                      >\r\n                        <GridItem colSpan={3}>\r\n                          <Box w=\"100%\">{row.itemno}</Box>\r\n                        </GridItem>\r\n                        <GridItem colSpan={5}>\r\n                          <Box w=\"100%\">{row.desp}</Box>\r\n                        </GridItem>\r\n                        <GridItem colSpan={5}>\r\n                          <Box w=\"100%\">{row.despatched}</Box>\r\n                        </GridItem>\r\n                        <GridItem colSpan={3}>\r\n                          <Box w=\"100%\">{row.expiry}</Box>\r\n                        </GridItem>\r\n                        <GridItem colSpan={4}>\r\n                          <Box w=\"100%\">{row.status}</Box>\r\n                        </GridItem>\r\n                      </Grid>\r\n                    );\r\n                  })}\r\n              </Grid>\r\n            </CardLayout2>\r\n          </Box>\r\n        </Stack>\r\n        <Box pt={4}>\r\n          <Copyright />\r\n        </Box>\r\n        <CustomDialog\r\n          isOpen={isLeaveDialogOpen}\r\n          handleClose={handleLeaveDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <LeaveTableAdmin\r\n            setLeavesdata={setLeavesdata}\r\n            leavesdata={leavesdata}\r\n            handleDialogClose={handleLeaveDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isExpenseDialogOpen}\r\n          handleClose={handleExpenseDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <ExpenseTableAdmin\r\n            setExpensesdata={setExpensesdata}\r\n            expensesdata={expensesdata}\r\n            handleDialogClose={handleExpenseDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isPayslipDialogOpen}\r\n          handleClose={handlePayslipDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={false}\r\n        >\r\n          <PayslipTableAdmin\r\n            setPayslipsdata={setPayslipsdata}\r\n            payslipsdata={payslipsdata}\r\n            handleDialogClose={handlePayslipDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isDailyAllowancesDialogOpen}\r\n          handleClose={handleDailyAllowancesDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={false}\r\n        >\r\n          <DailyAllowancesTableAdmin\r\n            setDailyAllowancesdata={setDailyAllowancesdata}\r\n            dailyallowancesdata={dailyallowancesdata}\r\n            handleDialogClose={handleDailyAllowancesDialogClose}\r\n          />\r\n        </CustomDialog>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default HomeStaff;\r\n","D:\\react-myprojects\\dss\\src\\helpers\\CardLayout3.js",["5680","5681","5682","5683","5684","5685","5686","5687"],"D:\\react-myprojects\\dss\\src\\components\\dailyallowsdetls\\useAddDailyAllowsDetls.js",["5688"],"D:\\react-myprojects\\dss\\src\\components\\dailyallowsdetls\\useDailyAllowsDetls.js",[],"D:\\react-myprojects\\dss\\src\\components\\dailyallowsdetls\\useUpdateDailyAllowsDetls.js",[],"D:\\react-myprojects\\dss\\src\\components\\expenses\\useAddExpenses.js",[],"D:\\react-myprojects\\dss\\src\\components\\expenses\\useDeleteExpenses.js",[],"D:\\react-myprojects\\dss\\src\\components\\expenses\\useExpenses.js",[],"D:\\react-myprojects\\dss\\src\\components\\leaves\\useDeleteLeaves.js",[],"D:\\react-myprojects\\dss\\src\\components\\leaves\\useAddLeaves.js",[],"D:\\react-myprojects\\dss\\src\\components\\employees\\useAddEmployees.js",[],"D:\\react-myprojects\\dss\\src\\components\\leaves\\useLeaves.js",[],"D:\\react-myprojects\\dss\\src\\components\\EmpExperiences.js",["5689","5690"],"D:\\react-myprojects\\dss\\src\\components\\EmpFamily.js",["5691","5692","5693","5694","5695","5696"],"D:\\react-myprojects\\dss\\src\\components\\EmpEducations.js",["5697"],"D:\\react-myprojects\\dss\\src\\components\\EmpPersonal.js",[],"D:\\react-myprojects\\dss\\src\\components\\CurrencyTable.js",[],"D:\\react-myprojects\\dss\\src\\components\\InstitutesTable.js",[],"D:\\react-myprojects\\dss\\src\\components\\DesignationsTable.js",[],"D:\\react-myprojects\\dss\\src\\components\\DepartmentsTable.js",[],"D:\\react-myprojects\\dss\\src\\components\\DeductionsTable.js",["5698"],"D:\\react-myprojects\\dss\\src\\components\\departments\\useDepartments.js",[],"D:\\react-myprojects\\dss\\src\\components\\dailyallows\\useDailyAllowsPayrun.js",[],"D:\\react-myprojects\\dss\\src\\components\\employees\\useSingleEmployee.js",["5699"],"D:\\react-myprojects\\dss\\src\\components\\BatchPayslips.js",[],"D:\\react-myprojects\\dss\\src\\components\\employees\\useDeleteEmployees.js",[],"D:\\react-myprojects\\dss\\src\\components\\hoc\\useUpdateHoc.js",[],"D:\\react-myprojects\\dss\\src\\components\\hoc\\useDeleteHoc.js",[],"D:\\react-myprojects\\dss\\src\\components\\expenses\\useExpensesPeriod.js",[],"D:\\react-myprojects\\dss\\src\\components\\ExportLeave2Excel.js",["5700","5701","5702","5703","5704"],"import React from \"react\";\r\n//import ReactExport from \"react-data-export\";\r\nimport { Button } from \"@chakra-ui/react\";\r\n\r\n// const ExcelFile = ReactExport.ExcelFile;\r\n// const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n//const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nconst cols = [\r\n  // { title: \"Headings\", width: { wpx: 80 } }, //pixels width\r\n  // { title: \"Text Style\", width: { wch: 40 } }, //char width\r\n  // { title: \"Colors\", width: { wpx: 90 } },\r\n  { title: \"Name\", width: { wch: 100 } },\r\n  { title: \"From Date\", width: { wch: 40 } },\r\n  { title: \"To Date\", width: { wch: 40 } },\r\n  { title: \"No of Days\", width: { wch: 40 } },\r\n  { title: \"Reason\", width: { wch: 100 } },\r\n  { title: \"Status\", width: { wch: 100 } },\r\n];\r\n\r\nconst cols1 = [\r\n  { title: \"Name\", width: { wch: 50 } },\r\n  { title: \"From Date\", width: { wch: 10 } },\r\n  { title: \"To Date\", width: { wch: 10 } },\r\n  { title: \"No of Days\", width: { wch: 10 } },\r\n  { title: \"Reason\", width: { wch: 50 } },\r\n  { title: \"Status\", width: { wch: 50 } },\r\n];\r\n\r\nconst cols2 = [\r\n  { title: \"Name\" },\r\n  { title: \"From Date\" },\r\n  { title: \"To Date\" },\r\n  { title: \"No of Days\" },\r\n  { title: \"Reason\" },\r\n  { title: \"Status\" },\r\n];\r\n\r\nconst data = [\r\n  [\r\n    { value: \"H1\", style: { font: { sz: \"24\", bold: true } } },\r\n    { value: \"Bold\", style: { font: { bold: true } } },\r\n    {\r\n      value: \"Red\",\r\n      style: {\r\n        fill: { patternType: \"solid\", fgColor: { rgb: \"FFFF0000\" } },\r\n      },\r\n    },\r\n  ],\r\n  [\r\n    { value: \"H2\", style: { font: { sz: \"18\", bold: true } } },\r\n    { value: \"underline\", style: { font: { underline: true } } },\r\n    {\r\n      value: \"Blue\",\r\n      style: {\r\n        fill: { patternType: \"solid\", fgColor: { rgb: \"FF0000FF\" } },\r\n      },\r\n    },\r\n  ],\r\n  [\r\n    { value: \"H3\", style: { font: { sz: \"14\", bold: true } } },\r\n    { value: \"italic\", style: { font: { italic: true } } },\r\n    {\r\n      value: \"Green\",\r\n      style: {\r\n        fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\r\n      },\r\n    },\r\n  ],\r\n  [\r\n    { value: \"H4\", style: { font: { sz: \"12\", bold: true } } },\r\n    { value: \"strike\", style: { font: { strike: true } } },\r\n    {\r\n      value: \"Orange\",\r\n      style: {\r\n        fill: { patternType: \"solid\", fgColor: { rgb: \"FFF86B00\" } },\r\n      },\r\n    },\r\n  ],\r\n  [\r\n    { value: \"H5\", style: { font: { sz: \"10.5\", bold: true } } },\r\n    { value: \"outline\", style: { font: { outline: true } } },\r\n    {\r\n      value: \"Yellow\",\r\n      style: {\r\n        fill: { patternType: \"solid\", fgColor: { rgb: \"FFFFFF00\" } },\r\n      },\r\n    },\r\n  ],\r\n  [\r\n    { value: \"H6\", style: { font: { sz: \"7.5\", bold: true } } },\r\n    { value: \"shadow\", style: { font: { shadow: true } } },\r\n    {\r\n      value: \"Light Blue\",\r\n      style: {\r\n        fill: { patternType: \"solid\", fgColor: { rgb: \"FFCCEEFF\" } },\r\n      },\r\n    },\r\n  ],\r\n];\r\n\r\nconst data1 = [\r\n  [\r\n    {\r\n      value: \"Johson Michael Angelo\",\r\n      style: {\r\n        font: { sz: \"12\" },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      value: \"2021-12-04\",\r\n      style: {\r\n        font: { sz: \"12\" },\r\n        numFmt: \"dd/mm/yyyy\",\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      value: \"2021-12-04\",\r\n      style: {\r\n        font: { sz: \"12\" },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      value: 3,\r\n      style: {\r\n        font: { sz: \"12\" },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      value: \"Holiday\",\r\n      style: {\r\n        font: { sz: \"12\" },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      value: \"Approved\",\r\n      style: {\r\n        font: { sz: \"12\" },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n  ],\r\n  [\r\n    {\r\n      value: \"David\",\r\n      style: {\r\n        font: { sz: \"12\" },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      value: \"2021-12-11\",\r\n      style: {\r\n        font: { sz: \"12\" },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      value: \"2021-12-14\",\r\n      style: {\r\n        font: { sz: \"12\" },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      value: 3,\r\n      style: {\r\n        font: { sz: \"12\" },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      value: \"Holiday\",\r\n      style: {\r\n        font: { sz: \"12\" },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      value: \"Approved\",\r\n      style: {\r\n        font: { sz: \"12\" },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n  ],\r\n];\r\nconst multiDataSet = [\r\n  {\r\n    columns: cols2,\r\n    data: data1,\r\n  },\r\n];\r\n\r\nconst ExportLeave2Excel = ({ filename, dataset, title }) => {\r\n  return (\r\n    <div>test</div>\r\n    // <ExcelFile element={<Button>Export to Excel</Button>} filename={filename}>\r\n    //   <ExcelSheet dataSet={multiDataSet} name=\"Leave\" />\r\n    // </ExcelFile>\r\n    // <ExcelFile element={<Button>Export to Excel</Button>} filename={filename}>\r\n    //   <ExcelSheet data={dataset} name={title}>\r\n    //     <ExcelColumn label=\"Name\" value=\"name\" />\r\n    //     <ExcelColumn label=\"From Date\" value=\"from_date\" />\r\n    //     <ExcelColumn label=\"To Date\" value=\"to_date\" />\r\n    //     <ExcelColumn label=\"No of Days\" value=\"no_of_days\" />\r\n    //     <ExcelColumn label=\"Reason\" value=\"reason\" />\r\n    //     <ExcelColumn label=\"Status\" value=\"status\" />\r\n    //   </ExcelSheet>\r\n    // </ExcelFile>\r\n  );\r\n};\r\n\r\nexport default ExportLeave2Excel;\r\n","D:\\react-myprojects\\dss\\src\\components\\DailyAllowancesTableVeryfy.js",["5705","5706","5707","5708","5709","5710","5711","5712","5713","5714","5715","5716","5717","5718","5719","5720","5721","5722","5723","5724","5725","5726","5727","5728","5729"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Icon, MenuItem } from \"@material-ui/core\";\r\nimport { Button, HStack } from \"@chakra-ui/react\";\r\nimport {\r\n  useSetRecoilState,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  useRecoilValueLoadable,\r\n} from \"recoil\";\r\nimport {\r\n  allowsPeriodState,\r\n  allowsDataState,\r\n  empidState,\r\n} from \"./data/atomdata\";\r\nimport { fetchDailyAllowancesSelector } from \"./data/selectordata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\nimport DailyAllowsDetlsTable from \"./DailyAllowsDetlsTable\";\r\nimport { useDailyAllowsStatus } from \"./dailyallows/useDailyAllowsStatus\";\r\nimport { useUpdateDailyAllows } from \"./dailyallows/useUpdateDailyAllows\";\r\n\r\nconst FILTERSTRING = \"Submitted\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Period\", field: \"period\", editable: \"never\" },\r\n  { title: \"Location\", field: \"location\", editable: \"never\" },\r\n  { title: \"Manager Name\", field: \"manager\", editable: \"never\" },\r\n  {\r\n    title: \"No Of Days\",\r\n    field: \"no_of_days\",\r\n    type: \"numeric\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\", editable: \"never\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approved\">Approved</MenuItem>\r\n        <MenuItem value=\"Rejected\">Rejected</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function DailyAllowancesTable() {\r\n  let history = useHistory();\r\n  const toast = useCustomToast()\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [tmpallowsdata, setTmpallowsdata] = useState([]);\r\n  const allows_period = useRecoilValue(allowsPeriodState);\r\n  const allows_empid = useRecoilValue(empidState);\r\n  const [allowsdata, setAllowsdata] = useRecoilState(allowsDataState);\r\n  const { dailyallowsstatus, setDailyAllowsStatusId } = useDailyAllowsStatus();\r\n  const updateDailyAllows = useUpdateDailyAllows();\r\n  const setEmpID = useSetRecoilState(empidState);\r\n  const title = `Site Allowances (${allows_period})`;\r\n  const {\r\n    dailyallowances_loading,\r\n    singlebatch_dailyallowance,\r\n    singlebatch_dailyallowance_loading,\r\n    deleteDailyAllowance,\r\n    updateDailyAllowance,\r\n    setEditDailyAllowanceID,\r\n    setIsDailyAllowanceEditingOn,\r\n    setIsDailyAllowanceEditingOff,\r\n    resetSingleDailyAllowance,\r\n    dailyallowance_period,\r\n    getSingleBatchDailyAllowance,\r\n  } = useDailyAllowancesContext();\r\n\r\n  useEffect(() => {\r\n    setDailyAllowsStatusId(\"Submitted\");\r\n  }, []);\r\n\r\n  const Save_DailyAllowancesData = () => {\r\n    dailyallowsstatus.forEach((data) => {\r\n      const { id } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updateDailyAllowance({ id, ...fields });\r\n      }\r\n    });\r\n  };\r\n\r\n  const Verify_DailyAllowancesData = () => {\r\n    dailyallowsstatus.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        const currentrec = rec;\r\n        currentrec.status = \"Verified\";\r\n        updateDailyAllows({ id: rec.id, status: \"Verified\" });\r\n         toast({\r\n           title: \"Site Allows record being updated!\",\r\n           status: \"success\",\r\n         });\r\n        //update leavesdata\r\n        // if (!update_dailyallowance_error) {\r\n        //   const recdata = dailyallowancesdata.filter((r) => r.id === rec.id);\r\n        //   recdata[0].status = \"Approved\";\r\n        // }\r\n      }\r\n    });\r\n    dailyallowsstatus.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  const Reject_DailyAllowancesData = () => {\r\n    dailyallowsstatus.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        const currentrec = rec;\r\n        currentrec.status = \"Rejected\";\r\n        updateDailyAllows({ id: rec.id, status: \"Rejected\" });\r\n         toast({\r\n           title: \"Site Allows record being rejected!\",\r\n           status: \"warning\",\r\n         });\r\n        //update leavesdata\r\n        // if (!update_dailyallowance_error) {\r\n        //   const recdata = dailyallowancesdata.filter((r) => r.id === rec.id);\r\n        //   recdata[0].status = \"Rejected\";\r\n        // }\r\n      }\r\n    });\r\n    dailyallowsstatus.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={dailyallowsstatus}\r\n          title=\"Site Allows Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         const dataUpdate = [...dailyallowancesdata];\r\n          //         const index = oldData.tableData.id;\r\n          //         dataUpdate[index] = newData;\r\n          //         setDailyAllowancesdata([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          options={{\r\n            filtering: true,\r\n            selection: true,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"white\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <HStack p={2}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"solid\"\r\n                    color=\"white\"\r\n                    bgColor=\"red\"\r\n                    onClick={Verify_DailyAllowancesData}\r\n                  >\r\n                    Verify\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"solid\"\r\n                    color=\"white\"\r\n                    bgColor=\"red\"\r\n                    onClick={Reject_DailyAllowancesData}\r\n                  >\r\n                    Reject\r\n                  </Button>\r\n                </HStack>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <div className={classes.dialog}>\r\n          <CustomDialog\r\n            isOpen={isDialogOpen}\r\n            //handleClose={handleDialogClose}\r\n            title=\"\"\r\n            showButton={true}\r\n            isFullscreen={true}\r\n            isFullwidth={true}\r\n          >\r\n            <DailyAllowsDetlsTable\r\n              setAllowsdata={setAllowsdata}\r\n              allowsdata={allowsdata}\r\n              //handleDialogClose={handleDialogClose}\r\n            />\r\n          </CustomDialog>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  dialog: {\r\n    width: 1000,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\dss\\src\\components\\LeaveTableApproval.js",["5730","5731","5732","5733","5734","5735","5736","5737","5738","5739","5740","5741","5742","5743","5744","5745","5746"],"D:\\react-myprojects\\dss\\src\\components\\LeavesTableViewSummary.js",["5747","5748","5749","5750","5751","5752","5753","5754","5755","5756","5757","5758","5759","5760","5761","5762","5763","5764"],"D:\\react-myprojects\\dss\\src\\components\\EmployeeTableLeaveView.js",["5765","5766","5767","5768","5769","5770","5771","5772","5773","5774","5775","5776","5777","5778","5779","5780","5781","5782","5783","5784","5785","5786","5787","5788","5789","5790","5791"],"D:\\react-myprojects\\dss\\src\\components\\WPExpiryViewAdmin.js",["5792","5793","5794","5795","5796","5797","5798","5799","5800","5801","5802","5803","5804","5805","5806","5807","5808","5809","5810","5811","5812","5813"],"D:\\react-myprojects\\dss\\src\\components\\TrainingsTableViewAdmin.js",["5814","5815","5816","5817","5818","5819","5820","5821","5822","5823","5824","5825","5826","5827","5828","5829","5830","5831","5832","5833","5834","5835"],"D:\\react-myprojects\\dss\\src\\components\\HocTableViewSummary.js",["5836","5837","5838","5839","5840","5841","5842","5843","5844","5845","5846","5847","5848"],"D:\\react-myprojects\\dss\\src\\components\\ExpenseTableAdmin.js",["5849","5850","5851","5852","5853","5854","5855","5856","5857"],"D:\\react-myprojects\\dss\\src\\components\\PayslipTableAdmin.js",["5858","5859","5860","5861","5862","5863","5864"],"D:\\react-myprojects\\dss\\src\\components\\LeaveTableManager.js",["5865","5866","5867","5868","5869","5870","5871"],"D:\\react-myprojects\\dss\\src\\components\\LeaveTableViewAdmin.js",["5872","5873","5874","5875","5876","5877","5878","5879","5880","5881","5882","5883","5884","5885","5886","5887","5888","5889","5890","5891","5892","5893","5894","5895","5896","5897","5898","5899","5900"],"D:\\react-myprojects\\dss\\src\\components\\DailyAllowancesTableViewSummary.js",["5901","5902","5903","5904","5905","5906","5907","5908","5909","5910","5911","5912","5913","5914","5915","5916","5917","5918","5919","5920","5921","5922","5923","5924","5925","5926","5927","5928","5929","5930","5931","5932","5933","5934"],"D:\\react-myprojects\\dss\\src\\components\\WPExpiryViewStaff.js",["5935","5936","5937","5938","5939","5940","5941","5942","5943","5944","5945","5946","5947","5948","5949","5950"],"D:\\react-myprojects\\dss\\src\\components\\OnLeavesViewStaff.js",["5951","5952","5953","5954","5955","5956","5957","5958"],"D:\\react-myprojects\\dss\\src\\components\\DailyAllowancesTableViewStaff.js",["5959","5960","5961","5962","5963","5964","5965","5966","5967","5968","5969","5970","5971","5972","5973","5974","5975","5976","5977","5978","5979","5980","5981","5982","5983","5984"],"D:\\react-myprojects\\dss\\src\\components\\PayslipTableViewStaff.js",["5985","5986","5987","5988","5989","5990","5991","5992","5993"],"D:\\react-myprojects\\dss\\src\\components\\ExpenseTableViewStaff.js",["5994","5995","5996","5997","5998","5999","6000","6001","6002","6003","6004","6005","6006","6007","6008","6009","6010","6011","6012","6013","6014"],"D:\\react-myprojects\\dss\\src\\components\\TrainingsTableViewStaff.js",["6015","6016","6017","6018","6019","6020","6021","6022","6023","6024","6025","6026","6027","6028","6029","6030","6031","6032"],"D:\\react-myprojects\\dss\\src\\components\\LeaveTableViewStaff.js",["6033","6034","6035","6036","6037","6038","6039","6040","6041","6042","6043","6044","6045","6046","6047","6048","6049","6050","6051","6052","6053"],"D:\\react-myprojects\\dss\\src\\components\\PayslipSummaryTableView.js",["6054","6055","6056","6057","6058","6059","6060","6061","6062","6063","6064","6065","6066","6067"],"D:\\react-myprojects\\dss\\src\\components\\PayslipTableViewSummary.js",["6068","6069","6070","6071","6072","6073","6074","6075","6076","6077","6078","6079","6080","6081"],"D:\\react-myprojects\\dss\\src\\components\\expenses\\utils.js",[],"D:\\react-myprojects\\dss\\src\\helpers\\SummaryTableView.js",["6082","6083","6084","6085"],"D:\\react-myprojects\\dss\\src\\components\\leaves\\utils.js",[],"D:\\react-myprojects\\dss\\src\\components\\ExpensesSummaryTableView.js",["6086","6087","6088","6089","6090","6091","6092","6093","6094","6095","6096","6097","6098","6099","6100","6101","6102"],"D:\\react-myprojects\\dss\\src\\components\\institutes\\useAddInstitutes.js",[],"D:\\react-myprojects\\dss\\src\\components\\designations\\useAddDesignations.js",[],"D:\\react-myprojects\\dss\\src\\components\\departments\\useAddDepartments.js",[],"D:\\react-myprojects\\dss\\src\\components\\experiences\\useDeleteExperiences.js",[],"D:\\react-myprojects\\dss\\src\\components\\family\\useDeleteFamily.js",[],"D:\\react-myprojects\\dss\\src\\components\\educations\\useAddEducations.js",[],"D:\\react-myprojects\\dss\\src\\components\\educations\\useDeleteEducations.js",[],"D:\\react-myprojects\\dss\\src\\helpers\\Utils.js",[],"D:\\react-myprojects\\dss\\src\\components\\currency\\useAddCurrency.js",[],"D:\\react-myprojects\\dss\\src\\components\\departments\\useDeleteDepartments.js",[],"D:\\react-myprojects\\dss\\src\\components\\departments\\useUpdateDepartments.js",[],"D:\\react-myprojects\\dss\\src\\components\\designations\\useDeleteDesignations.js",[],"D:\\react-myprojects\\dss\\src\\components\\payitems\\useDeletePayItems.js",[],"D:\\react-myprojects\\dss\\src\\components\\payitems\\useAddPayItems.js",[],"D:\\react-myprojects\\dss\\src\\components\\payitems\\usePayItems.js",[],"D:\\react-myprojects\\dss\\src\\components\\payitems\\useUpdatePayItems.js",[],"D:\\react-myprojects\\dss\\src\\components\\designations\\useUpdateDesignations.js",[],"D:\\react-myprojects\\dss\\src\\components\\institutes\\useDeleteInstitutes.js",[],"D:\\react-myprojects\\dss\\src\\components\\institutes\\useUpdateInstitutes.js",[],"D:\\react-myprojects\\dss\\src\\components\\currency\\useDeleteCurrency.js",[],"D:\\react-myprojects\\dss\\src\\components\\currency\\useUpdateCurrency.js",[],"D:\\react-myprojects\\dss\\src\\components\\currency\\useCurrency.js",[],"D:\\react-myprojects\\dss\\src\\components\\educations\\useUpdateEducations.js",[],"D:\\react-myprojects\\dss\\src\\components\\educations\\useEducations.js",[],"D:\\react-myprojects\\dss\\src\\components\\family\\useAddFamily.js",[],"D:\\react-myprojects\\dss\\src\\components\\leaves\\useLeavesStatus.js",[],"D:\\react-myprojects\\dss\\src\\components\\leaves\\useLeavesPeriod.js",[],"D:\\react-myprojects\\dss\\src\\components\\LeaveFormAdmin.js",["6103","6104","6105","6106","6107","6108","6109","6110","6111","6112","6113","6114","6115","6116"],"D:\\react-myprojects\\dss\\src\\components\\family\\useUpdateFamily.js",[],"D:\\react-myprojects\\dss\\src\\components\\family\\useFamily.js",[],"D:\\react-myprojects\\dss\\src\\components\\experiences\\useAddExperiences.js",[],"D:\\react-myprojects\\dss\\src\\components\\hoc\\useHocPeriod.js",[],"D:\\react-myprojects\\dss\\src\\components\\dailyallows\\useDailyAllowsPeriod.js",[],"D:\\react-myprojects\\dss\\src\\components\\payrun\\usePayrunStatus.js",[],"D:\\react-myprojects\\dss\\src\\components\\hoc\\utils.js",[],"D:\\react-myprojects\\dss\\src\\components\\family\\utils.js",[],"D:\\react-myprojects\\dss\\src\\components\\educations\\utils.js",[],"D:\\react-myprojects\\dss\\src\\components\\payrun\\utils.js",[],"D:\\react-myprojects\\dss\\src\\components\\payitems\\utils.js",[],"D:\\react-myprojects\\dss\\src\\components\\experiences\\useUpdateExperiences.js",[],"D:\\react-myprojects\\dss\\src\\components\\experiences\\useExperiences.js",[],"D:\\react-myprojects\\dss\\src\\components\\ExpenseTableViewSummary.js",["6117","6118","6119","6120","6121","6122","6123","6124","6125","6126","6127","6128","6129","6130","6131","6132","6133","6134","6135","6136","6137"],"D:\\react-myprojects\\dss\\src\\helpers\\BarChart.js",["6138"],"D:\\react-myprojects\\dss\\src\\helpers\\BarChartStack.js",["6139"],"D:\\react-myprojects\\dss\\src\\helpers\\CardLayout4.js",["6140","6141","6142","6143","6144","6145","6146","6147","6148","6149","6150","6151","6152","6153"],"D:\\react-myprojects\\dss\\src\\components\\EmployeeView.js",["6154"],"D:\\react-myprojects\\dss\\src\\components\\hoc\\useAddHoc.js",[],"D:\\react-myprojects\\dss\\src\\components\\hoc\\useHoc.js",[],"D:\\react-myprojects\\dss\\src\\components\\HocForm.js",["6155","6156","6157","6158","6159","6160","6161","6162","6163","6164","6165","6166"],"D:\\react-myprojects\\dss\\src\\components\\employees\\useAllEmployees.js",[],"D:\\react-myprojects\\dss\\src\\helpers\\CustomAlertDialog.js",[],"D:\\react-myprojects\\dss\\src\\components\\expenses\\useExpensesPayrun.js",[],"D:\\react-myprojects\\dss\\src\\components\\payrun\\useDeletePayrun.js",[],"D:\\react-myprojects\\dss\\src\\components\\payrun\\usePayrun.js",[],"D:\\react-myprojects\\dss\\src\\components\\AllowancesTable.js",["6167"],"D:\\react-myprojects\\dss\\src\\components\\EmpViewTrainings.js",["6168"],"D:\\react-myprojects\\dss\\src\\components\\EmpViewLeaves.js",["6169"],"D:\\react-myprojects\\dss\\src\\components\\EmpViewEducations.js",["6170"],"D:\\react-myprojects\\dss\\src\\components\\EmpViewExperiences.js",["6171"],"D:\\react-myprojects\\dss\\src\\components\\payslips\\usePayslips.js",[],"D:\\react-myprojects\\dss\\src\\components\\EmpViewFamily.js",["6172"],"D:\\react-myprojects\\dss\\src\\components\\deductions\\useDeductions.js",[],"D:\\react-myprojects\\dss\\src\\components\\allowances\\useAllowances.js",[],"D:\\react-myprojects\\dss\\src\\components\\experiences\\utils.js",[],"D:\\react-myprojects\\dss\\src\\components\\expenses\\useExpensesStatus.js",[],"D:\\react-myprojects\\dss\\src\\components\\hoclocation\\useHoclocation.js",[],"D:\\react-myprojects\\dss\\src\\components\\hocwhydetails\\useHocwhydetails.js",[],"D:\\react-myprojects\\dss\\src\\components\\hocwhy\\useHocwhy.js",[],"D:\\react-myprojects\\dss\\src\\components\\hocwhatdetails\\useHocwhatdetails.js",[],"D:\\react-myprojects\\dss\\src\\components\\hocwhat\\useHocwhat.js",[],"D:\\react-myprojects\\dss\\src\\components\\hoccategory\\useHoccategory.js",[],"D:\\react-myprojects\\dss\\src\\components\\hoclocation\\utils.js",[],"D:\\react-myprojects\\dss\\src\\components\\hoccategory\\utils.js",[],"D:\\react-myprojects\\dss\\src\\components\\hocwhatdetails\\utils.js",[],"D:\\react-myprojects\\dss\\src\\components\\hocwhat\\utils.js",[],"D:\\react-myprojects\\dss\\src\\components\\hocwhy\\utils.js",[],"D:\\react-myprojects\\dss\\src\\components\\hocwhydetails\\utils.js",[],"D:\\react-myprojects\\dss\\src\\components\\ExpenseTableManager.js",["6173","6174","6175","6176","6177","6178","6179","6180","6181","6182","6183"],"D:\\react-myprojects\\dss\\src\\components\\PayslipTableViewManager.js",["6184","6185","6186","6187","6188","6189","6190","6191","6192","6193"],"D:\\react-myprojects\\dss\\src\\components\\ExpenseTableView.js",["6194","6195","6196","6197","6198","6199","6200","6201","6202","6203","6204","6205","6206","6207","6208","6209","6210","6211","6212"],"D:\\react-myprojects\\dss\\src\\components\\LeaveTableViewManager.js",["6213","6214","6215","6216","6217","6218","6219","6220","6221","6222","6223","6224","6225","6226","6227","6228","6229","6230","6231","6232","6233","6234","6235"],"D:\\react-myprojects\\dss\\src\\components\\PaySummary.js",["6236","6237","6238","6239","6240","6241","6242","6243","6244","6245","6246","6247","6248","6249","6250","6251","6252","6253","6254","6255","6256","6257","6258","6259","6260","6261","6262","6263"],"import React, { useState, useEffect, useRef, useMemo } from \"react\";\r\n//import ReactToPrint, { useReactToPrint } from \"react-to-print\";\r\nimport currency from \"currency.js\";\r\n//import PrintPaySummary from \"./PrintPaySummary\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  chakra,\r\n} from \"@chakra-ui/react\";\r\nimport { TriangleDownIcon, TriangleUpIcon } from \"@chakra-ui/icons\";\r\n////import { useTable, useSortBy } from \"react-table\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Button, Icon, Grid, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { formatPriceZero } from \"../helpers/Utils\";\r\nimport { payrunState, payrunStatusState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\n//import { ComponentToPrint } from \"./ComponentToPrint\";\r\n//import PaySummaryTable from \"./PaySummaryTable\";\r\n\r\nconst initial_state = [\r\n  {\r\n    totalwages: 0,\r\n    totaltap: 0,\r\n    totalscp: 0,\r\n    totalallows: 0,\r\n    totaldeducts: 0,\r\n    totalpayroll: 0,\r\n  },\r\n];\r\n\r\nconst PaySummary = ({ singlebatchpayslip }) => {\r\n  const classes = useStyles();\r\n  const componentRef = useRef();\r\n  const [state, setState] = useState(initial_state);\r\n  const [payrundata, setPayrundata] = useRecoilState(payrunState);\r\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\r\n  const [isCalc, setIsCalc] = useState(true);\r\n  const { payrun, updatePayrun, payslip_period } = usePayslipsContext();\r\n\r\n  const columns = [\r\n    {\r\n      Header: \"Name\",\r\n      accessor: \"name\",\r\n    },\r\n    {\r\n      Header: \"Wages\",\r\n      accessor: \"wages_bnd\",\r\n      isNumeric: true,\r\n      Cell: (props) => formatPriceZero(props.value),\r\n    },\r\n\r\n    {\r\n      Header: \"TAP Amount\",\r\n      accessor: \"tap_amount_bnd\",\r\n      isNumeric: true,\r\n      Cell: (props) => formatPriceZero(props.value),\r\n    },\r\n    {\r\n      Header: \"SCP Amount\",\r\n      accessor: \"scp_amount_bnd\",\r\n      isNumeric: true,\r\n      Cell: (props) => formatPriceZero(props.value),\r\n    },\r\n    {\r\n      Header: \"Site Allows\",\r\n      accessor: \"site_allows_bnd\",\r\n      isNumeric: true,\r\n      Cell: (props) => formatPriceZero(props.value),\r\n    },\r\n    {\r\n      Header: \"Exps Claims\",\r\n      accessor: \"expenses_claims_bnd\",\r\n      isNumeric: true,\r\n      Cell: (props) => formatPriceZero(props.value),\r\n    },\r\n    {\r\n      Header: \"Allowances\",\r\n      accessor: \"total_allowances_bnd\",\r\n      isNumeric: true,\r\n      Cell: (props) => formatPriceZero(props.value),\r\n    },\r\n    {\r\n      Header: \"Deductions\",\r\n      accessor: \"total_deductions_bnd\",\r\n      isNumeric: true,\r\n      Cell: (props) => formatPriceZero(props.value),\r\n    },\r\n    {\r\n      Header: \"Nett Pay\",\r\n      accessor: \"nett_pay_bnd\",\r\n      isNumeric: true,\r\n      Cell: (props) => formatPriceZero(props.value),\r\n    },\r\n  ];\r\n\r\n  // const handlePrint = useReactToPrint({\r\n  //   content: () => componentRef.current,\r\n  // });\r\n\r\n  const exportPdfTable = () => {\r\n    // PrintPaySummary((singlebatchpayslip = { singlebatchpayslip }));\r\n  };\r\n\r\n  const handleCalcTotals = () => {\r\n    const data = singlebatchpayslip;\r\n    const totalwages = data.reduce((acc, item) => {\r\n      return acc + item.wages_bnd;\r\n    }, 0);\r\n    const totalsitesallows = data.reduce((acc, item) => {\r\n      return acc + item.site_allows_bnd;\r\n    }, 0);\r\n    const totalexpclaims = data.reduce((acc, item) => {\r\n      return acc + item.expenses_claims_bnd;\r\n    }, 0);\r\n    const totalallows = data.reduce((acc, item) => {\r\n      return acc + item.total_allowances_bnd;\r\n    }, 0);\r\n    const totaldeducts = data.reduce((acc, item) => {\r\n      return acc + item.total_deductions_bnd;\r\n    }, 0);\r\n    const totaltap = data.reduce((acc, item) => {\r\n      return acc + item.tap_amount_bnd;\r\n    }, 0);\r\n    const totalscp = data.reduce((acc, item) => {\r\n      return acc + item.scp_amount_bnd;\r\n    }, 0);\r\n    const totalpayroll = data.reduce((acc, item) => {\r\n      return acc + item.nett_pay_bnd;\r\n    }, 0);\r\n\r\n    setPayrundata({\r\n      ...payrundata,\r\n      totalpayroll: totalpayroll,\r\n      totalwages: totalwages,\r\n      totaltap: totaltap,\r\n      totalscp: totalscp,\r\n      totalallows: totalallows,\r\n      totaldeducts: totaldeducts,\r\n      totalsitesallows: totalsitesallows,\r\n      totalexpensesclaims: totalexpclaims,\r\n    });\r\n    // payrun\r\n    //   .filter((r) => r.payrun === payslip_period)\r\n    //   .map((rec) => {\r\n    //     //update payrun\r\n    //     return updatePayrun({\r\n    //       id: rec.id,\r\n    //       totalpayroll: totalpayroll,\r\n    //       totalwages: totalwages,\r\n    //       totaltap: totaltap,\r\n    //       totalscp: totalscp,\r\n    //       totalallows: totalallows,\r\n    //       totaldeducts: totaldeducts,\r\n    //       totalsitesallows: totalsitesallows,\r\n    //       totalexpensesclaims: totalexpclaims,\r\n    //     });\r\n    //   });\r\n    // console.log(\"payrundata\", payrundata);\r\n    // console.log(\r\n    //   \"totals\",\r\n    //   totalpayroll,\r\n    //   totalwages,\r\n    //   totaltap,\r\n    //   totalscp,\r\n    //   totalallows,\r\n    //   totaldeducts\r\n    // );\r\n  };\r\n\r\n  const handleSaveCalcTotals = (e) => {\r\n    e.preventDefault();\r\n    handleCalcTotals();\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleCalcTotals();\r\n    setIsCalc(false);\r\n  }, [isCalc]);\r\n\r\n  return (\r\n    <div>\r\n      {/* <div style={{ display: \"none\" }}> */}\r\n      <div>\r\n        {/* <div style={{ border: \"1px solid black\" }} align=\"center\">\r\n          <button onClick={() => exportPdfTable()}>\r\n            <Heading size=\"sm\">Print Payroll Summary Report!</Heading>\r\n          </button>\r\n        </div> */}\r\n        {/* <div>\r\n          <div style={{ display: \"none\" }}>\r\n            <ComponentToPrint ref={componentRef} />\r\n          </div>\r\n          <button onClick={handlePrint}>Print this out!</button>\r\n        </div> */}\r\n      </div>\r\n      <form>\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid black\" }}>\r\n          <Grid\r\n          // item\r\n          // sm={12}\r\n          // align=\"center\"\r\n          // style={{ border: \"1px solid black\" }}\r\n          >\r\n            <div>\r\n              {/* <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              style={{ marginLeft: 5 }}\r\n              onClick={(e) => handleSaveCalcTotals(e)}\r\n            >\r\n              Save <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button> */}\r\n              {/* <Heading size=\"sm\">Summary</Heading> */}\r\n              {/* <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                style={{ marginLeft: 5 }}\r\n                onClick={(e) => handle_Print(e)}\r\n              >\r\n                Print <Icon className={classes.rightIcon}>send</Icon>\r\n              </Button> */}\r\n              {/* <div>\r\n                <ReactToPrint\r\n                  trigger={(e) => {\r\n                    handle_Print(e);\r\n                  }}\r\n                  content={() => this.componentRef}\r\n                />\r\n                <ComponentToPrint ref={(el) => (this.componentRef = el)} />\r\n              </div> */}\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Period\"\r\n                name=\"period\"\r\n                variant=\"filled\"\r\n                type=\"text\"\r\n                value={payrundata.period}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Pay Run Batch\"\r\n                name=\"payrun\"\r\n                variant=\"filled\"\r\n                type=\"text\"\r\n                value={payrundata.payrun}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Status\"\r\n                name=\"status\"\r\n                variant=\"filled\"\r\n                value={payrundata.status}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Payroll Total\"\r\n                name=\"paytotal\"\r\n                variant=\"filled\"\r\n                type=\"number\"\r\n                value={currency(payrundata.totalpayroll)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n          <Grid\r\n            item\r\n            sm={12}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <Box h=\"400\" overflow=\"scroll\">\r\n              {/* <PaySummaryTable columns={columns} data={singlebatchpayslip} /> */}\r\n            </Box>\r\n            {/* <MaterialTable\r\n              columns={columns}\r\n              data={singlebatchpayslip}\r\n              title=\"Payroll\"\r\n              options={{\r\n                filtering: false,\r\n                search: false,\r\n                toolbar: false,\r\n\r\n                headerStyle: {\r\n                  backgroundColor: \"lightblue\",\r\n                  color: \"primary\",\r\n                },\r\n                showTitle: false,\r\n              }}\r\n            /> */}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Wages\"\r\n                name=\"totalwages\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalwages)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total TAP\"\r\n                name=\"totaltap\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totaltap)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total SCP\"\r\n                name=\"totalscp\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalscp)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Sites Allows\"\r\n                name=\"totalsitesallows\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalsiteallows)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Expenses Claims\"\r\n                name=\"totalsitesallows\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalexpensesclaims)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Allowances\"\r\n                name=\"totalallows\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalallows)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Deductions\"\r\n                name=\"totaldeducts\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totaldeducts)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Payroll\"\r\n                name=\"totalpayroll\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalpayroll)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"80vw\",\r\n    margin: \"1rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  divider: {\r\n    // Theme Color, or use css color in quote\r\n    background: \"white\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n  divContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n}));\r\n\r\nexport default PaySummary;\r\n","D:\\react-myprojects\\dss\\src\\components\\payrun\\useUpdatePayrun.js",[],"D:\\react-myprojects\\dss\\src\\components\\PayForm.js",["6264","6265","6266","6267","6268","6269","6270","6271","6272","6273","6274","6275","6276","6277"],"D:\\react-myprojects\\dss\\src\\components\\ComponentToPrint.js",[],["6278","6279"],"D:\\react-myprojects\\dss\\src\\components\\PaySummaryTable.js",["6280","6281","6282","6283","6284","6285","6286","6287","6288","6289","6290","6291","6292"],"import React, { useMemo } from \"react\";\r\nimport {\r\n  Box,\r\n  Divider,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  chakra,\r\n} from \"@chakra-ui/react\";\r\nimport { TriangleDownIcon, TriangleUpIcon } from \"@chakra-ui/icons\";\r\n//import { useTable, useSortBy } from \"react-table\";\r\nimport { formatPrice } from \"../helpers/Utils\";\r\n\r\nexport default function PaySummaryTable({ columns, data }) {\r\n  //const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    // useTable({ columns, data }, useSortBy);\r\n\r\n  return (\r\n    <div>table</div>\r\n  );\r\n}\r\n","D:\\react-myprojects\\dss\\src\\components\\EmployeeFormStaff.js",["6293","6294","6295","6296","6297","6298","6299","6300","6301"],"D:\\react-myprojects\\dss\\src\\components\\EmployeeForm.js",["6302","6303","6304","6305","6306","6307","6308","6309","6310","6311","6312","6313","6314"],"D:\\react-myprojects\\dss\\src\\components\\MenuListItemsDirector.js",["6315","6316","6317","6318"],"D:\\react-myprojects\\dss\\src\\components\\MenuListItemsManager.js",["6319","6320","6321","6322","6323","6324","6325","6326","6327","6328","6329","6330"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListSubheader,\r\n  Collapse,\r\n} from \"@material-ui/core\";\r\nimport { Text} from \"@chakra-ui/react\"\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport FlightIcon from \"@material-ui/icons/Flight\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport MoneyIcon from \"@material-ui/icons/Money\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport { MdCheckCircle } from \"react-icons/md\";\r\nimport { AiFillSetting} from \"react-icons/ai\"\r\n\r\nconst MenuListItems = () => {\r\n  const classes = useStyles();\r\n  const [openPay, setOpenPay] = useState(false);\r\n  const [openTable, setOpenTable] = useState(false);\r\n\r\n  const handleClickPay = () => {\r\n    setOpenPay(!openPay);\r\n  };\r\n\r\n  const handleClickTable = () => {\r\n    setOpenTable(!openTable);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <ListSubheader align=\"center\" className={classes.itemIcon}>\r\n        <Text color=\"blue\" fontSize=\"21\" fontWeight=\"bold\">\r\n          Manager\r\n        </Text>\r\n      </ListSubheader>\r\n\r\n      <Link to=\"/\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <DashboardIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Dashboard\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/items\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FlightIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Items Table\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n      <Link to=\"/assets\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FlightIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Assets Table\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <Link to=\"/allemployees\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <PeopleIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"All Employees\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <Link to=\"/approval\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MdCheckCircle size=\"20\" />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Approval\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <Link to=\"/example\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FlightIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Example\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <Link to=\"/expenses\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <ShoppingCartIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Expenses\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <Link to=\"/payrun\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MonetizationOnIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Payrun\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n      {/* <ListItem button onClick={handleClickPay}>\r\n        <ListItemIcon className={classes.itemIcon}>\r\n          <MonetizationOnIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Payroll\" className={classes.item} />\r\n        {openPay ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem> */}\r\n{/* \r\n      <Collapse in={openPay} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/payrun\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Payroll Run\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/payslip\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Payslip\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse> */}\r\n\r\n      <Link to=\"/useraccess\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <AiFillSetting size=\"20\" />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"User Access Settings\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <Link to=\"/dailyallowances\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MoneyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Site Allowances\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n      {/* <Link to=\"/tables\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <LayersIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Tables\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <ListItem button onClick={handleClickTable}>\r\n        <ListItemIcon className={classes.itemIcon}>\r\n          <LayersIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Tables\" className={classes.item} />\r\n        {openTable ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={openTable} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/clients\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Clients\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/departments\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Departments\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/designation\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Designation\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/allowances\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Allowances\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainHeader: {\r\n    fontSize: 24,\r\n    color: \"primary\",\r\n  },\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: \"primary\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: \"primary\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: \"rgba(255, 255, 255, 0.08)\",\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: \"#232f3e\",\r\n    boxShadow: \"0 -1px 0 #404854 inset\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.orange,\r\n  },\r\n  itemActiveItem: {\r\n    color: \"primary\",\r\n  },\r\n  itemPrimary: {\r\n    fontSize: \"inherit\",\r\n  },\r\n  itemIcon: {\r\n    minWidth: \"auto\",\r\n    marginRight: theme.spacing(2),\r\n    color: \"primary\",\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default MenuListItems;\r\n","D:\\react-myprojects\\dss\\src\\components\\MenuListItemsAdminManager.js",["6331","6332","6333","6334","6335","6336"],"D:\\react-myprojects\\dss\\src\\components\\MenuListItemsOpsSpvr.js",["6337","6338","6339","6340","6341","6342","6343","6344"],"D:\\react-myprojects\\dss\\src\\components\\MenuListItems.js",["6345","6346"],"D:\\react-myprojects\\dss\\src\\components\\MenuListItemsAdmin.js",["6347","6348","6349","6350","6351","6352","6353"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Text} from \"@chakra-ui/react\"\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport FlightIcon from \"@material-ui/icons/Flight\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport MoneyIcon from \"@material-ui/icons/Money\";\r\n// import Collapse from \"@material-ui/core/Collapse\";\r\n// import ExpandLess from \"@material-ui/icons/ExpandLess\";\r\n// import ExpandMore from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst MenuListItems = () => {\r\n  const classes = useStyles();\r\n  const [openPay, setOpenPay] = useState(false);\r\n  const [openTable, setOpenTable] = useState(false);\r\n\r\n  const handleClickPay = () => {\r\n    setOpenPay(!openPay);\r\n  };\r\n\r\n  const handleClickTable = () => {\r\n    setOpenTable(!openTable);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <ListSubheader align=\"center\" className={classes.itemIcon}>\r\n        <Text color=\"blue\" fontSize=\"21\" fontWeight=\"bold\">\r\n          Admin\r\n        </Text>\r\n      </ListSubheader>\r\n\r\n      <Link to=\"/\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <DashboardIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Dashboard\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <Link to=\"/allemployees\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <PeopleIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"All Employees\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <Link to=\"/leave\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FlightIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Leave\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n      <Link to=\"/items\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FlightIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Items Table\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n      <Link to=\"/assets\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FlightIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Assets Table\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <Link to=\"/expenses\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <ShoppingCartIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Expenses\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <Link to=\"/tables\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <LayersIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Tables\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <Link to=\"/example\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <LayersIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Example\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <ListItem button onClick={handleClickTable}>\r\n        <ListItemIcon className={classes.itemIcon}>\r\n          <LayersIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Tables\" className={classes.item} />\r\n        {openTable ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={openTable} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/clients\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Clients\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/departments\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Departments\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/designation\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Designation\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/allowances\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Allowances\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainHeader: {\r\n    fontSize: 24,\r\n    color: \"primary\",\r\n  },\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: \"primary\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: \"primary\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: \"rgba(255, 255, 255, 0.08)\",\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: \"#232f3e\",\r\n    boxShadow: \"0 -1px 0 #404854 inset\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.orange,\r\n  },\r\n  itemActiveItem: {\r\n    color: \"primary\",\r\n  },\r\n  itemPrimary: {\r\n    fontSize: \"inherit\",\r\n  },\r\n  itemIcon: {\r\n    minWidth: \"auto\",\r\n    marginRight: theme.spacing(2),\r\n    color: \"primary\",\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default MenuListItems;\r\n","D:\\react-myprojects\\dss\\src\\components\\MenuListItemsStaff.js",["6354","6355","6356","6357","6358","6359","6360","6361","6362","6363","6364","6365","6366"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { HStack, Button, Text } from \"@chakra-ui/react\"\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport FlightIcon from \"@material-ui/icons/Flight\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n//import LayersIcon from \"@material-ui/icons/Layers\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport MoneyIcon from \"@material-ui/icons/Money\";\r\nimport {\r\n  FaFileInvoiceDollar,\r\n  FaPeopleCarry,\r\n  FaCommentsDollar,\r\n} from \"react-icons/fa\";\r\n// import Collapse from \"@material-ui/core/Collapse\";\r\n// import ExpandLess from \"@material-ui/icons/ExpandLess\";\r\n// import ExpandMore from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst drawerWidth = 0;\r\n\r\nconst MenuListItemsStaff = () => {\r\n  const classes = useStyles();\r\n  const [openPay, setOpenPay] = useState(false);\r\n  const [openTable, setOpenTable] = useState(false);\r\n\r\n  const handleClickPay = () => {\r\n    setOpenPay(!openPay);\r\n  };\r\n\r\n  const handleClickTable = () => {\r\n    setOpenTable(!openTable);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <ListSubheader align=\"center\" className={classes.itemIcon}>\r\n        <Text color=\"blue\" fontSize=\"21\" fontWeight=\"bold\">\r\n          Staff\r\n        </Text>\r\n      </ListSubheader>\r\n\r\n      <Link to=\"/\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <DashboardIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Dashboard\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/assets\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <PeopleIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Assets Table\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/despatch\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FlightIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Desptaching Items\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n      \r\n\r\n      <Link to=\"/receive\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FaFileInvoiceDollar size=\"20\" />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Receiging Items\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <Link to=\"/hoc\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FaFileInvoiceDollar size=\"20\" />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Reports\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <Link to=\"/trainings\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FaPeopleCarry size=\"20\" />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Trainings\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <Link to=\"/dailyallowances\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FaCommentsDollar size=\"20\" />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Site Allowances\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n\r\n      {/* <Link to=\"/payslips\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MonetizationOnIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Tables\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainHeader: {\r\n    fontSize: 24,\r\n    color: \"primary\",\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: \"primary\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: \"primary\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: \"rgba(255, 255, 255, 0.08)\",\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: \"#232f3e\",\r\n    boxShadow: \"0 -1px 0 #404854 inset\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.orange,\r\n  },\r\n  itemActiveItem: {\r\n    color: \"primary\",\r\n  },\r\n  itemPrimary: {\r\n    fontSize: \"inherit\",\r\n  },\r\n  itemIcon: {\r\n    minWidth: \"auto\",\r\n    marginRight: theme.spacing(2),\r\n    color: \"primary\",\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default MenuListItemsStaff;\r\n","D:\\react-myprojects\\dss\\src\\helpers\\TableContainer.js",[],"D:\\react-myprojects\\dss\\src\\components\\SingleDailyAllowsDetlsStaff.js",["6367","6368","6369"],"D:\\react-myprojects\\dss\\src\\components\\SingleEmployeeStaff.js",["6370","6371","6372","6373","6374","6375"],"D:\\react-myprojects\\dss\\src\\pages\\AssetsPage.js",["6376","6377"],"import React, { useEffect } from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n//import { headExpenseTableCells } from \"../utils/constants\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport AssetsTable from \"../components/AssetsTable\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ExpensesStaffPage = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <div>\r\n                  <AssetsTable title=\"Expenses Claims\" />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    // height: 240,\r\n    height: \"85vh\",\r\n  },\r\n}));\r\nexport default ExpensesStaffPage;\r\n","D:\\react-myprojects\\dss\\src\\components\\AssetsTable.js",["6378","6379","6380","6381","6382","6383","6384","6385","6386","6387","6388","6389","6390","6391","6392","6393","6394","6395","6396","6397","6398","6399","6400","6401","6402","6403","6404","6405","6406","6407","6408","6409","6410"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Divider,\r\n  Grid,\r\n  GridItem,\r\n  HStack,\r\n  Select,\r\n  SimpleGrid,\r\n  Text,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  //ModalHeader,\r\n  //ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { useExpenses } from \"./expenses/useExpenses\";\r\nimport { useAddExpenses } from \"./expenses/useAddExpenses\";\r\nimport { useDeleteExpenses } from \"./expenses/useDeleteExpenses\";\r\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\r\nimport { assets } from \"../utils/constants\";\r\nimport AssetForm from \"./AssetForm\"\r\n\r\nconst initial_form = {\r\n  name: \"\",\r\n  date: \"\",\r\n  purchased_from: \"\",\r\n  description: \"\",\r\n  status: \"Pending\",\r\n  amount: 0,\r\n};\r\n\r\nconst columns = [\r\n  { title: \"Asset No\", field: \"itemno\", editable: \"never\" },\r\n\r\n  {\r\n    title: \"Description\",\r\n    field: \"desp\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Expiry Date\",\r\n    field: \"expiry\",\r\n    editable: \"never\",\r\n  },\r\n\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nconst columns_despatch = [\r\n  { title: \"Asset No\", field: \"itemno\", editable: \"never\" },\r\n\r\n  {\r\n    title: \"Description\",\r\n    field: \"desp\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Despatch To\",\r\n    field: \"despatched\",\r\n    editable: \"never\",\r\n  },\r\n\r\n  {\r\n    title: \"Despatched Date\",\r\n    field: \"despatchdate\",\r\n    editable: \"never\",\r\n  },\r\n\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nconst columns_inprogress = [\r\n  { title: \"Asset No\", field: \"itemno\", editable: \"never\" },\r\n\r\n  {\r\n    title: \"Description\",\r\n    field: \"desp\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Received From\",\r\n    field: \"despatched\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Received Date\",\r\n    field: \"receiveddate\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function ExpenseTable() {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const [isLoad, setIsLoad] = useState(false);\r\n  const { expenses, filter, setFilter, setExpenseId } = useExpenses();\r\n  const updateExpenses = useUpdateExpenses();\r\n  const addExpenses = useAddExpenses();\r\n  const deleteExpenses = useDeleteExpenses();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [expensesdata, setExpensesdata] = useState([]);\r\n  const [alertSuccess, setAlertSuccess] = useState(false);\r\n  const [formdata, setFormdata] = useState(initial_form);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    //expenses,\r\n    editExpenseID,\r\n    updateExpense,\r\n    addExpense,\r\n    deleteExpense,\r\n    setEditExpenseID,\r\n    setIsExpenseEditingOn,\r\n    setIsExpenseEditingOff,\r\n  } = useExpensesContext();\r\n\r\n  useEffect(() => {\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  const add_Expense = async (data) => {\r\n    // const { id } = data;\r\n    setFormdata(initial_form);\r\n    setFormdata(initial_form);\r\n    setIsExpenseEditingOff();\r\n    handleDialogOpen();\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const update_Expense = async (data) => {\r\n    const { id } = data;\r\n    setFormdata({ ...data });\r\n    setFormdata({ ...data });\r\n    setEditExpenseID(id);\r\n    setIsExpenseEditingOn();\r\n    handleDialogOpen();\r\n\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const delete_Expense = (data) => {\r\n    const { id } = data;\r\n    setEditExpenseID(id);\r\n    handleAlertOpen();\r\n\r\n    // deleteExpense(id);\r\n    // loadExpenses();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editExpenseID;\r\n    deleteExpenses(id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box\r\n        maxW=\"x3\"\r\n        padding=\"4\"\r\n        width=\"100%\"\r\n        height=\"700\"\r\n        borderColor=\"blue.500\"\r\n        borderWidth=\"1px\"\r\n        borderRadius=\"lg\"\r\n        overflow=\"scroll\"\r\n      >\r\n        <SimpleGrid>\r\n          <Box>\r\n            <Heading as=\"h2\" size=\"lg\">\r\n              Assets Table\r\n            </Heading>\r\n          </Box>\r\n          <Divider />\r\n          <Tabs>\r\n            <TabList>\r\n              <Tab>In Stock</Tab>\r\n              <Tab>Despatched</Tab>\r\n              <Tab>In Progress</Tab>\r\n            </TabList>\r\n            <TabPanels>\r\n              <TabPanel>\r\n                <MaterialTable\r\n                  columns={columns}\r\n                  data={assets.filter((r) => r.status === \"In Stock\")}\r\n                  title=\"Assets Table\"\r\n                  icons={{\r\n                    Add: (props) => <AddIcon />,\r\n                    Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n                    Delete: (props) => <DeleteIcon />,\r\n                    Clear: (props) => <DeleteIcon />,\r\n                    Check: (props) => <CheckIcon />,\r\n                    Search: (props) => <SearchIcon />,\r\n                    ResetSearch: (props) => <DeleteIcon />,\r\n                  }}\r\n                  actions={[\r\n                    (rowData) => ({\r\n                      //disabled: rowData.status !== \"Pending\",\r\n                      icon: \"edit\",\r\n                      tooltip: \"Edit Record\",\r\n                      onClick: (event, rowData) => {\r\n                        update_Expense(rowData);\r\n                      },\r\n                    }),\r\n                    (rowData) => ({\r\n                      //disabled: rowData.status !== \"Pending\",\r\n                      icon: \"delete\",\r\n                      tooltip: \"Delete Record\",\r\n                      onClick: (event, rowData) => {\r\n                        delete_Expense(rowData);\r\n                      },\r\n                    }),\r\n                    {\r\n                      icon: \"add\",\r\n                      tooltip: \"Add Record\",\r\n                      isFreeAction: true,\r\n                      onClick: (event, rowData) => {\r\n                        add_Expense(rowData);\r\n                      },\r\n                    },\r\n                  ]}\r\n                  options={{\r\n                    filtering: true,\r\n                    headerStyle: {\r\n                      backgroundColor: \"orange\",\r\n                      color: \"#FFF\",\r\n                    },\r\n                    showTitle: true,\r\n                  }}\r\n                  components={{\r\n                    Toolbar: (props) => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                />\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <MaterialTable\r\n                  columns={columns_despatch}\r\n                  data={assets.filter((r) => r.status === \"Despatched\")}\r\n                  title=\"Assets Table\"\r\n                  icons={{\r\n                    Add: (props) => <AddIcon />,\r\n                    Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n                    Delete: (props) => <DeleteIcon />,\r\n                    Clear: (props) => <DeleteIcon />,\r\n                    Check: (props) => <CheckIcon />,\r\n                    Search: (props) => <SearchIcon />,\r\n                    ResetSearch: (props) => <DeleteIcon />,\r\n                  }}\r\n                  actions={[\r\n                    (rowData) => ({\r\n                      disabled: rowData.status !== \"Pending\",\r\n                      icon: \"edit\",\r\n                      tooltip: \"Edit Record\",\r\n                      onClick: (event, rowData) => {\r\n                        update_Expense(rowData);\r\n                      },\r\n                    }),\r\n                    (rowData) => ({\r\n                      disabled: rowData.status !== \"Pending\",\r\n                      icon: \"delete\",\r\n                      tooltip: \"Delete Record\",\r\n                      onClick: (event, rowData) => {\r\n                        delete_Expense(rowData);\r\n                      },\r\n                    }),\r\n                    {\r\n                      icon: \"add\",\r\n                      tooltip: \"Add Record\",\r\n                      isFreeAction: true,\r\n                      onClick: (event, rowData) => {\r\n                        add_Expense(rowData);\r\n                      },\r\n                    },\r\n                  ]}\r\n                  options={{\r\n                    filtering: true,\r\n                    headerStyle: {\r\n                      backgroundColor: \"orange\",\r\n                      color: \"#FFF\",\r\n                    },\r\n                    showTitle: true,\r\n                  }}\r\n                  components={{\r\n                    Toolbar: (props) => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                />\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <MaterialTable\r\n                  columns={columns_inprogress}\r\n                  data={assets.filter((r) => r.status === \"In Progress\")}\r\n                  title=\"Assets Table\"\r\n                  icons={{\r\n                    Add: (props) => <AddIcon />,\r\n                    Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n                    Delete: (props) => <DeleteIcon />,\r\n                    Clear: (props) => <DeleteIcon />,\r\n                    Check: (props) => <CheckIcon />,\r\n                    Search: (props) => <SearchIcon />,\r\n                    ResetSearch: (props) => <DeleteIcon />,\r\n                  }}\r\n                  actions={[\r\n                    (rowData) => ({\r\n                      disabled: rowData.status !== \"Pending\",\r\n                      icon: \"edit\",\r\n                      tooltip: \"Edit Record\",\r\n                      onClick: (event, rowData) => {\r\n                        update_Expense(rowData);\r\n                      },\r\n                    }),\r\n                    (rowData) => ({\r\n                      disabled: rowData.status !== \"Pending\",\r\n                      icon: \"delete\",\r\n                      tooltip: \"Delete Record\",\r\n                      onClick: (event, rowData) => {\r\n                        delete_Expense(rowData);\r\n                      },\r\n                    }),\r\n                    {\r\n                      icon: \"add\",\r\n                      tooltip: \"Add Record\",\r\n                      isFreeAction: true,\r\n                      onClick: (event, rowData) => {\r\n                        add_Expense(rowData);\r\n                      },\r\n                    },\r\n                  ]}\r\n                  options={{\r\n                    filtering: true,\r\n                    headerStyle: {\r\n                      backgroundColor: \"orange\",\r\n                      color: \"#FFF\",\r\n                    },\r\n                    showTitle: true,\r\n                  }}\r\n                  components={{\r\n                    Toolbar: (props) => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                />\r\n              </TabPanel>\r\n            </TabPanels>\r\n          </Tabs>\r\n        </SimpleGrid>\r\n      </Box>\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        {/* <MaterialTable\r\n          columns={columns}\r\n          data={items}\r\n          title=\"Assets Table\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n        \r\n          actions={[\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Expense(rowData);\r\n              },\r\n            }),\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Expense(rowData);\r\n              },\r\n            }),\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Expense(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        /> */}\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <AssetForm\r\n            formdata={formdata}\r\n            setFormdata={setFormdata}\r\n            handleDialogClose={handleDialogClose}\r\n          />\r\n        </CustomDialog>\r\n\r\n        <AlertDialogBox\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Asset Item\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\dss\\src\\pages\\ItemsPage.js",["6411","6412"],"import React, { useEffect } from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n//import { headExpenseTableCells } from \"../utils/constants\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport ItemsTable from \"../components/ItemsTable\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ExpensesStaffPage = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <div>\r\n                  <ItemsTable title=\"Expenses Claims\" />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    // height: 240,\r\n    height: \"85vh\",\r\n  },\r\n}));\r\nexport default ExpensesStaffPage;\r\n","D:\\react-myprojects\\dss\\src\\components\\ItemsTable.js",["6413","6414","6415","6416","6417","6418","6419","6420","6421","6422","6423","6424","6425","6426","6427","6428","6429","6430","6431","6432","6433","6434","6435","6436","6437","6438","6439","6440","6441","6442","6443","6444","6445"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Divider,\r\n  Grid,\r\n  GridItem,\r\n  HStack,\r\n  Select,\r\n  SimpleGrid,\r\n  Text,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  //ModalHeader,\r\n  //ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { useExpenses } from \"./expenses/useExpenses\";\r\nimport { useAddExpenses } from \"./expenses/useAddExpenses\";\r\nimport { useDeleteExpenses } from \"./expenses/useDeleteExpenses\";\r\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\r\nimport { items } from \"../utils/constants\";\r\nimport ItemForm from \"./ItemForm\"\r\n\r\nconst initial_form = {\r\n  name: \"\",\r\n  date: \"\",\r\n  purchased_from: \"\",\r\n  description: \"\",\r\n  status: \"Pending\",\r\n  amount: 0,\r\n};\r\n\r\nconst columns = [\r\n  { title: \"Asset No\", field: \"itemno\", editable: \"never\" },\r\n\r\n  {\r\n    title: \"Description\",\r\n    field: \"desp\",\r\n    editable: \"never\",\r\n  },\r\n\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function ExpenseTable() {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const [isLoad, setIsLoad] = useState(false);\r\n  const { expenses, filter, setFilter, setExpenseId } = useExpenses();\r\n  const updateExpenses = useUpdateExpenses();\r\n  const addExpenses = useAddExpenses();\r\n  const deleteExpenses = useDeleteExpenses();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [expensesdata, setExpensesdata] = useState([]);\r\n  const [alertSuccess, setAlertSuccess] = useState(false);\r\n  const [formdata, setFormdata] = useState(initial_form);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    //expenses,\r\n    editExpenseID,\r\n    updateExpense,\r\n    addExpense,\r\n    deleteExpense,\r\n    setEditExpenseID,\r\n    setIsExpenseEditingOn,\r\n    setIsExpenseEditingOff,\r\n  } = useExpensesContext();\r\n\r\n  useEffect(() => {\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  const add_Expense = async (data) => {\r\n    // const { id } = data;\r\n    setFormdata(initial_form);\r\n    setFormdata(initial_form);\r\n    setIsExpenseEditingOff();\r\n    handleDialogOpen();\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const update_Expense = async (data) => {\r\n    const { id } = data;\r\n    setFormdata({ ...data });\r\n    setFormdata({ ...data });\r\n    setEditExpenseID(id);\r\n    setIsExpenseEditingOn();\r\n    handleDialogOpen();\r\n\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const delete_Expense = (data) => {\r\n    const { id } = data;\r\n    setEditExpenseID(id);\r\n    handleAlertOpen();\r\n\r\n    // deleteExpense(id);\r\n    // loadExpenses();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editExpenseID;\r\n    deleteExpenses(id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box\r\n        maxW=\"x3\"\r\n        padding=\"4\"\r\n        width=\"100%\"\r\n        height=\"700\"\r\n        borderColor=\"blue.500\"\r\n        borderWidth=\"1px\"\r\n        borderRadius=\"lg\"\r\n        overflow=\"scroll\"\r\n      >\r\n        <SimpleGrid>\r\n          <Box>\r\n            <Heading as=\"h2\" size=\"lg\">\r\n              Items Table\r\n            </Heading>\r\n          </Box>\r\n          <Divider />\r\n          <Tabs>\r\n            <TabList>\r\n              <Tab>On Hand</Tab>\r\n              <Tab>On Order</Tab>\r\n            </TabList>\r\n            <TabPanels>\r\n              <TabPanel>\r\n                <MaterialTable\r\n                  columns={columns}\r\n                  data={items.filter((r) => r.status === \"In Stock\")}\r\n                  title=\"Items Table\"\r\n                  icons={{\r\n                    Add: (props) => <AddIcon />,\r\n                    Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n                    Delete: (props) => <DeleteIcon />,\r\n                    Clear: (props) => <DeleteIcon />,\r\n                    Check: (props) => <CheckIcon />,\r\n                    Search: (props) => <SearchIcon />,\r\n                    ResetSearch: (props) => <DeleteIcon />,\r\n                  }}\r\n                  actions={[\r\n                    (rowData) => ({\r\n                      //disabled: rowData.status !== \"Pending\",\r\n                      icon: \"edit\",\r\n                      tooltip: \"Edit Record\",\r\n                      onClick: (event, rowData) => {\r\n                        update_Expense(rowData);\r\n                      },\r\n                    }),\r\n                    (rowData) => ({\r\n                      //disabled: rowData.status !== \"Pending\",\r\n                      icon: \"delete\",\r\n                      tooltip: \"Delete Record\",\r\n                      onClick: (event, rowData) => {\r\n                        delete_Expense(rowData);\r\n                      },\r\n                    }),\r\n                    {\r\n                      icon: \"add\",\r\n                      tooltip: \"Add Record\",\r\n                      isFreeAction: true,\r\n                      onClick: (event, rowData) => {\r\n                        add_Expense(rowData);\r\n                      },\r\n                    },\r\n                  ]}\r\n                  options={{\r\n                    filtering: true,\r\n                    headerStyle: {\r\n                      backgroundColor: \"orange\",\r\n                      color: \"#FFF\",\r\n                    },\r\n                    showTitle: true,\r\n                  }}\r\n                  components={{\r\n                    Toolbar: (props) => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                />\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <MaterialTable\r\n                  columns={columns}\r\n                  data={items.filter((r) => r.status === \"On Order\")}\r\n                  title=\"Items Table\"\r\n                  icons={{\r\n                    Add: (props) => <AddIcon />,\r\n                    Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n                    Delete: (props) => <DeleteIcon />,\r\n                    Clear: (props) => <DeleteIcon />,\r\n                    Check: (props) => <CheckIcon />,\r\n                    Search: (props) => <SearchIcon />,\r\n                    ResetSearch: (props) => <DeleteIcon />,\r\n                  }}\r\n                  actions={[\r\n                    (rowData) => ({\r\n                      disabled: rowData.status !== \"Pending\",\r\n                      icon: \"edit\",\r\n                      tooltip: \"Edit Record\",\r\n                      onClick: (event, rowData) => {\r\n                        update_Expense(rowData);\r\n                      },\r\n                    }),\r\n                    (rowData) => ({\r\n                      disabled: rowData.status !== \"Pending\",\r\n                      icon: \"delete\",\r\n                      tooltip: \"Delete Record\",\r\n                      onClick: (event, rowData) => {\r\n                        delete_Expense(rowData);\r\n                      },\r\n                    }),\r\n                    {\r\n                      icon: \"add\",\r\n                      tooltip: \"Add Record\",\r\n                      isFreeAction: true,\r\n                      onClick: (event, rowData) => {\r\n                        add_Expense(rowData);\r\n                      },\r\n                    },\r\n                  ]}\r\n                  options={{\r\n                    filtering: true,\r\n                    headerStyle: {\r\n                      backgroundColor: \"orange\",\r\n                      color: \"#FFF\",\r\n                    },\r\n                    showTitle: true,\r\n                  }}\r\n                  components={{\r\n                    Toolbar: (props) => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                />\r\n              </TabPanel>\r\n            </TabPanels>\r\n          </Tabs>\r\n        </SimpleGrid>\r\n      </Box>\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        {/* <MaterialTable\r\n          columns={columns}\r\n          data={items}\r\n          title=\"Assets Table\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n        \r\n          actions={[\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Expense(rowData);\r\n              },\r\n            }),\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Expense(rowData);\r\n              },\r\n            }),\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Expense(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        /> */}\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <ItemForm\r\n            formdata={formdata}\r\n            setFormdata={setFormdata}\r\n            handleDialogClose={handleDialogClose}\r\n          />\r\n        </CustomDialog>\r\n\r\n        <AlertDialogBox\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Item\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\dss\\src\\components\\ItemForm.js",["6446","6447","6448","6449","6450","6451","6452","6453","6454"],"import React from \"react\";\r\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useExpenses } from \"./expenses/useExpenses\";\r\nimport { useAddExpenses } from \"./expenses/useAddExpenses\";\r\nimport { useDeleteExpenses } from \"./expenses/useDeleteExpenses\";\r\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\r\n\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  date: \"\",\r\n  purchased_date: \"\",\r\n  purchased_from: \"\",\r\n  description: \"\",\r\n  remark: \"\",\r\n  status: \"Pending\",\r\n  amount: 0,\r\n};\r\n\r\nconst ExpenseForm = ({ formdata, setFormdata, handleDialogClose }) => {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const { expenses, filter, setFilter, setExpenseId } = useExpenses();\r\n  const updateExpenses = useUpdateExpenses();\r\n  const addExpenses = useAddExpenses();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { isExpenseEditing, editExpenseID } = useExpensesContext();\r\n\r\n  const { handleSubmit, control } = useForm();\r\n\r\n  const handleSentEmail = (data) => {\r\n    const { date } = data;\r\n    //console.log(\"expense form\", loginLevel);\r\n    var emaildata = {\r\n      to_name: loginLevel.loginUser,\r\n      to_email: loginLevel.loginEmail,\r\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\r\n      cc_to: loginLevel.reporting_email,\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const onSubmit = (data, e) => {\r\n    e.preventDefault();\r\n    if (isExpenseEditing) {\r\n      updateExpenses({ id: editExpenseID, ...data });\r\n    } else {\r\n      addExpenses({ empid: loginLevel.loginUserId, ...data });\r\n      handleSentEmail(data);\r\n    }\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          ITEM\r\n        </Typography>\r\n        {/* <Typography component=\"p\">Expense Claim Application</Typography> */}\r\n\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Controller\r\n              name=\"itemno\"\r\n              control={control}\r\n              defaultValue={formdata.itemno}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Item No\"\r\n                    id=\"margin-normal3\"\r\n                    name=\"itemno\"\r\n                    defaultValue={formdata.itemno}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"desp\"\r\n              control={control}\r\n              defaultValue={formdata.itemno}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Description\"\r\n                    id=\"margin-normal3\"\r\n                    name=\"desp\"\r\n                    defaultValue={formdata.itemno}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"qty\"\r\n              control={control}\r\n              defaultValue={formdata.qty}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Qty Onhand\"\r\n                    type=\"number\"\r\n                    id=\"standard-number1\"\r\n                    name=\"qty\"\r\n                    defaultValue={formdata.qty}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"minqty\"\r\n              control={control}\r\n              defaultValue={formdata.minqty}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Minimum Qty\"\r\n                    type=\"number\"\r\n                    id=\"standard-number1\"\r\n                    name=\"minqty\"\r\n                    defaultValue={formdata.minqty}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          {/* <div>\r\n            <Controller\r\n              name=\"date\"\r\n              control={control}\r\n              defaultValue={formdata.date}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Date\"\r\n                    type=\"date\"\r\n                    id=\"margin-normal2\"\r\n                    name=\"formdata.date\"\r\n                    value={value}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"From Date is required\" }}\r\n            />\r\n          </div> */}\r\n         \r\n         \r\n          <div>\r\n            <Controller\r\n              name=\"remark\"\r\n              control={control}\r\n              defaultValue={formdata.remark}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Remark\"\r\n                    id=\"margin-normal5\"\r\n                    name=\"remark\"\r\n                    defaultValue={formdata.remark}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n          \r\n\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              //onClick={() => handleSubmit(onSubmit)()}\r\n            >\r\n              Save <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default ExpenseForm;\r\n","D:\\react-myprojects\\dss\\src\\components\\AssetForm.js",["6455","6456","6457","6458","6459","6460","6461","6462","6463"],"import React from \"react\";\r\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useExpenses } from \"./expenses/useExpenses\";\r\nimport { useAddExpenses } from \"./expenses/useAddExpenses\";\r\nimport { useDeleteExpenses } from \"./expenses/useDeleteExpenses\";\r\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\r\n\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  date: \"\",\r\n  purchased_date: \"\",\r\n  purchased_from: \"\",\r\n  description: \"\",\r\n  remark: \"\",\r\n  status: \"Pending\",\r\n  amount: 0,\r\n};\r\n\r\nconst ExpenseForm = ({ formdata, setFormdata, handleDialogClose }) => {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const { expenses, filter, setFilter, setExpenseId } = useExpenses();\r\n  const updateExpenses = useUpdateExpenses();\r\n  const addExpenses = useAddExpenses();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { isExpenseEditing, editExpenseID } = useExpensesContext();\r\n\r\n  const { handleSubmit, control } = useForm();\r\n\r\n  const handleSentEmail = (data) => {\r\n    const { date } = data;\r\n    //console.log(\"expense form\", loginLevel);\r\n    var emaildata = {\r\n      to_name: loginLevel.loginUser,\r\n      to_email: loginLevel.loginEmail,\r\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\r\n      cc_to: loginLevel.reporting_email,\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const onSubmit = (data, e) => {\r\n    e.preventDefault();\r\n    if (isExpenseEditing) {\r\n      updateExpenses({ id: editExpenseID, ...data });\r\n    } else {\r\n      addExpenses({ empid: loginLevel.loginUserId, ...data });\r\n      handleSentEmail(data);\r\n    }\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          ASSET ITEM\r\n        </Typography>\r\n        {/* <Typography component=\"p\">Expense Claim Application</Typography> */}\r\n\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Controller\r\n              name=\"itemno\"\r\n              control={control}\r\n              defaultValue={formdata.itemno}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Item No\"\r\n                    id=\"margin-normal3\"\r\n                    name=\"itemno\"\r\n                    defaultValue={formdata.itemno}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"desp\"\r\n              control={control}\r\n              defaultValue={formdata.itemno}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Description\"\r\n                    id=\"margin-normal3\"\r\n                    name=\"desp\"\r\n                    defaultValue={formdata.itemno}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Controller\r\n              name=\"expiry\"\r\n              control={control}\r\n              defaultValue={formdata.expiry}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Expiry Date\"\r\n                    //type=\"date\"\r\n                    id=\"margin-normal2\"\r\n                    name=\"expiry\"\r\n                    value={value}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              //rules={{ required: \"From Date is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Controller\r\n              name=\"remark\"\r\n              control={control}\r\n              defaultValue={formdata.remark}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Remark\"\r\n                    id=\"margin-normal5\"\r\n                    name=\"remark\"\r\n                    defaultValue={formdata.remark}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"status\"\r\n              control={control}\r\n              defaultValue={formdata.status}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Status\"\r\n                    id=\"margin-normal5\"\r\n                    name=\"status\"\r\n                    defaultValue={formdata.status}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              //onClick={() => handleSubmit(onSubmit)()}\r\n            >\r\n              Save <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default ExpenseForm;\r\n","D:\\react-myprojects\\dss\\src\\pages\\DespatchPage.js",["6464","6465"],"import React, { useEffect } from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n//import { headExpenseTableCells } from \"../utils/constants\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport DespatchTable from \"../components/DespatchTable\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ExpensesStaffPage = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <div>\r\n                  <DespatchTable />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    // height: 240,\r\n    height: \"85vh\",\r\n  },\r\n}));\r\nexport default ExpensesStaffPage;\r\n","D:\\react-myprojects\\dss\\src\\components\\DespatchForm.js",["6466","6467","6468","6469","6470","6471","6472","6473"],"import React from \"react\";\r\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useExpenses } from \"./expenses/useExpenses\";\r\nimport { useAddExpenses } from \"./expenses/useAddExpenses\";\r\nimport { useDeleteExpenses } from \"./expenses/useDeleteExpenses\";\r\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\r\n\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  date: \"\",\r\n  purchased_date: \"\",\r\n  purchased_from: \"\",\r\n  description: \"\",\r\n  remark: \"\",\r\n  status: \"Pending\",\r\n  amount: 0,\r\n};\r\n\r\nconst ExpenseForm = ({ formdata, setFormdata, handleDialogClose }) => {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const { expenses, filter, setFilter, setExpenseId } = useExpenses();\r\n  const updateExpenses = useUpdateExpenses();\r\n  const addExpenses = useAddExpenses();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { isExpenseEditing, editExpenseID } = useExpensesContext();\r\n\r\n  const { handleSubmit, control } = useForm();\r\n\r\n  const handleSentEmail = (data) => {\r\n    const { date } = data;\r\n    //console.log(\"expense form\", loginLevel);\r\n    var emaildata = {\r\n      to_name: loginLevel.loginUser,\r\n      to_email: loginLevel.loginEmail,\r\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\r\n      cc_to: loginLevel.reporting_email,\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const onSubmit = (data, e) => {\r\n    e.preventDefault();\r\n    if (isExpenseEditing) {\r\n      updateExpenses({ id: editExpenseID, ...data });\r\n    } else {\r\n      addExpenses({ empid: loginLevel.loginUserId, ...data });\r\n      handleSentEmail(data);\r\n    }\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          DESPATCH ITEM\r\n        </Typography>\r\n        {/* <Typography component=\"p\">Expense Claim Application</Typography> */}\r\n\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Controller\r\n              name=\"itemno\"\r\n              control={control}\r\n              defaultValue={formdata.itemno}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Item No\"\r\n                    id=\"margin-normal3\"\r\n                    name=\"itemno\"\r\n                    defaultValue={formdata.itemno}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    inputProps={{ readOnly: true }}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"desp\"\r\n              control={control}\r\n              defaultValue={formdata.itemno}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Description\"\r\n                    id=\"margin-normal3\"\r\n                    name=\"desp\"\r\n                    defaultValue={formdata.itemno}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Controller\r\n              name=\"despatched\"\r\n              control={control}\r\n              defaultValue={formdata.expiry}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Despatch To\"\r\n                    //type=\"date\"\r\n                    id=\"margin-normal2\"\r\n                    name=\"despatched\"\r\n                    value={value}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"Warehouse\">Warehouse</MenuItem>\r\n                    <MenuItem value=\"Operation Department\">Operation Deparment</MenuItem>\r\n                    <MenuItem value=\"Marketing Department\">\r\n                      Marketing Department\r\n                    </MenuItem>\r\n                  </TextField>\r\n                );\r\n                \r\n                \r\n              }}\r\n              //rules={{ required: \"From Date is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Controller\r\n              name=\"remark\"\r\n              control={control}\r\n              defaultValue={formdata.remark}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Remark\"\r\n                    id=\"margin-normal5\"\r\n                    name=\"remark\"\r\n                    defaultValue={formdata.remark}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n        \r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              //onClick={() => handleSubmit(onSubmit)()}\r\n            >\r\n              Save <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(0, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default ExpenseForm;\r\n","D:\\react-myprojects\\dss\\src\\components\\DespatchTable.js",["6474","6475","6476","6477","6478","6479","6480","6481","6482","6483","6484","6485","6486","6487","6488","6489","6490","6491","6492","6493","6494","6495","6496","6497","6498","6499","6500","6501","6502","6503","6504","6505","6506","6507","6508"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Divider,\r\n  Grid,\r\n  GridItem,\r\n  HStack,\r\n  Select,\r\n  SimpleGrid,\r\n  Text,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  //ModalHeader,\r\n  //ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { useExpenses } from \"./expenses/useExpenses\";\r\nimport { useAddExpenses } from \"./expenses/useAddExpenses\";\r\nimport { useDeleteExpenses } from \"./expenses/useDeleteExpenses\";\r\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\r\nimport { assets } from \"../utils/constants\";\r\nimport DespatchForm from \"./DespatchForm\"\r\n\r\nconst initial_form = {\r\n  name: \"\",\r\n  date: \"\",\r\n  purchased_from: \"\",\r\n  description: \"\",\r\n  status: \"Pending\",\r\n  amount: 0,\r\n};\r\n\r\nconst columns = [\r\n  { title: \"Asset No\", field: \"itemno\", editable: \"never\" },\r\n\r\n  {\r\n    title: \"Description\",\r\n    field: \"desp\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Expiry Date\",\r\n    field: \"expiry\",\r\n    editable: \"never\",\r\n  },\r\n\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nconst columns_despatch = [\r\n  { title: \"Asset No\", field: \"itemno\", editable: \"never\" },\r\n\r\n  {\r\n    title: \"Description\",\r\n    field: \"desp\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Despatch To\",\r\n    field: \"despatched\",\r\n    editable: \"never\",\r\n  },\r\n\r\n  {\r\n    title: \"Despatched Date\",\r\n    field: \"despatchdate\",\r\n    editable: \"never\",\r\n  },\r\n\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nconst columns_inprogress = [\r\n  { title: \"Asset No\", field: \"itemno\", editable: \"never\" },\r\n\r\n  {\r\n    title: \"Description\",\r\n    field: \"desp\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Received From\",\r\n    field: \"despatched\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Received Date\",\r\n    field: \"receiveddate\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function ExpenseTable() {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const [isLoad, setIsLoad] = useState(false);\r\n  const { expenses, filter, setFilter, setExpenseId } = useExpenses();\r\n  const updateExpenses = useUpdateExpenses();\r\n  const addExpenses = useAddExpenses();\r\n  const deleteExpenses = useDeleteExpenses();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [expensesdata, setExpensesdata] = useState([]);\r\n  const [alertSuccess, setAlertSuccess] = useState(false);\r\n  const [formdata, setFormdata] = useState(initial_form);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    //expenses,\r\n    editExpenseID,\r\n    updateExpense,\r\n    addExpense,\r\n    deleteExpense,\r\n    setEditExpenseID,\r\n    setIsExpenseEditingOn,\r\n    setIsExpenseEditingOff,\r\n  } = useExpensesContext();\r\n\r\n  useEffect(() => {\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  const add_Expense = async (data) => {\r\n    // const { id } = data;\r\n    setFormdata(initial_form);\r\n    setFormdata(initial_form);\r\n    setIsExpenseEditingOff();\r\n    handleDialogOpen();\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const update_Expense = async (data) => {\r\n    const { id } = data;\r\n    setFormdata({ ...data });\r\n    setFormdata({ ...data });\r\n    setEditExpenseID(id);\r\n    setIsExpenseEditingOn();\r\n    handleDialogOpen();\r\n\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const delete_Expense = (data) => {\r\n    const { id } = data;\r\n    setEditExpenseID(id);\r\n    handleAlertOpen();\r\n\r\n    // deleteExpense(id);\r\n    // loadExpenses();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editExpenseID;\r\n    deleteExpenses(id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box\r\n        maxW=\"x3\"\r\n        padding=\"4\"\r\n        width=\"100%\"\r\n        height=\"700\"\r\n        borderColor=\"blue.500\"\r\n        borderWidth=\"1px\"\r\n        borderRadius=\"lg\"\r\n        overflow=\"scroll\"\r\n      >\r\n        <SimpleGrid>\r\n          <Box>\r\n            <Heading as=\"h2\" size=\"lg\">\r\n              Despatch Asset Item\r\n            </Heading>\r\n          </Box>\r\n          <Divider />\r\n          <Tabs>\r\n            <TabList>\r\n             \r\n              <Tab></Tab>\r\n             \r\n            </TabList>\r\n            <TabPanels>\r\n             \r\n              <TabPanel>\r\n                <MaterialTable\r\n                  columns={columns}\r\n                  data={assets.filter((r) => r.status === \"In Stock\")}\r\n                  title=\"Assets Table Currently In Stock\"\r\n                  icons={{\r\n                    Add: (props) => <AddIcon />,\r\n                    Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n                    Delete: (props) => <DeleteIcon />,\r\n                    Clear: (props) => <DeleteIcon />,\r\n                    Check: (props) => <CheckIcon />,\r\n                    Search: (props) => <SearchIcon />,\r\n                    ResetSearch: (props) => <DeleteIcon />,\r\n                  }}\r\n                  actions={[\r\n                    (rowData) => ({\r\n                      //disabled: rowData.status !== \"Pending\",\r\n                      icon: \"edit\",\r\n                      tooltip: \"Edit Record\",\r\n                      onClick: (event, rowData) => {\r\n                        update_Expense(rowData);\r\n                      },\r\n                    }),\r\n                    (rowData) => ({\r\n                      //disabled: rowData.status !== \"Pending\",\r\n                      icon: \"delete\",\r\n                      tooltip: \"Delete Record\",\r\n                      onClick: (event, rowData) => {\r\n                        delete_Expense(rowData);\r\n                      },\r\n                    }),\r\n                    {\r\n                      icon: \"add\",\r\n                      tooltip: \"Add Record\",\r\n                      isFreeAction: true,\r\n                      onClick: (event, rowData) => {\r\n                        add_Expense(rowData);\r\n                      },\r\n                    },\r\n                  ]}\r\n                  options={{\r\n                    filtering: true,\r\n                    headerStyle: {\r\n                      backgroundColor: \"orange\",\r\n                      color: \"#FFF\",\r\n                    },\r\n                    showTitle: true,\r\n                  }}\r\n                  components={{\r\n                    Toolbar: (props) => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                />\r\n              </TabPanel>\r\n             \r\n            </TabPanels>\r\n          </Tabs>\r\n        </SimpleGrid>\r\n      </Box>\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        {/* <MaterialTable\r\n          columns={columns}\r\n          data={items}\r\n          title=\"Assets Table\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n        \r\n          actions={[\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Expense(rowData);\r\n              },\r\n            }),\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Expense(rowData);\r\n              },\r\n            }),\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Expense(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        /> */}\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <DespatchForm\r\n            formdata={formdata}\r\n            setFormdata={setFormdata}\r\n            handleDialogClose={handleDialogClose}\r\n          />\r\n        </CustomDialog>\r\n\r\n        <AlertDialogBox\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Asset Item\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\dss\\src\\pages\\ReceivedPage.js",["6509","6510"],"import React, { useEffect } from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n//import { headExpenseTableCells } from \"../utils/constants\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport ReceivedTable from \"../components/ReceivedTable\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ExpensesStaffPage = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <div>\r\n                  <ReceivedTable />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    // height: 240,\r\n    height: \"85vh\",\r\n  },\r\n}));\r\nexport default ExpensesStaffPage;\r\n","D:\\react-myprojects\\dss\\src\\components\\ReceivedTable.js",["6511","6512","6513","6514","6515","6516","6517","6518","6519","6520","6521","6522","6523","6524","6525","6526","6527","6528","6529","6530","6531","6532","6533","6534","6535","6536","6537","6538","6539","6540","6541","6542","6543","6544","6545"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Divider,\r\n  Grid,\r\n  GridItem,\r\n  HStack,\r\n  Select,\r\n  SimpleGrid,\r\n  Text,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  //ModalHeader,\r\n  //ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { useExpenses } from \"./expenses/useExpenses\";\r\nimport { useAddExpenses } from \"./expenses/useAddExpenses\";\r\nimport { useDeleteExpenses } from \"./expenses/useDeleteExpenses\";\r\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\r\nimport { assets } from \"../utils/constants\";\r\nimport ReceivedForm from \"./ReceivedForm\"\r\n\r\nconst initial_form = {\r\n  name: \"\",\r\n  date: \"\",\r\n  purchased_from: \"\",\r\n  description: \"\",\r\n  status: \"Pending\",\r\n  amount: 0,\r\n};\r\n\r\nconst columns = [\r\n  { title: \"Asset No\", field: \"itemno\", editable: \"never\" },\r\n\r\n  {\r\n    title: \"Description\",\r\n    field: \"desp\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Expiry Date\",\r\n    field: \"expiry\",\r\n    editable: \"never\",\r\n  },\r\n\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nconst columns_despatch = [\r\n  { title: \"Asset No\", field: \"itemno\", editable: \"never\" },\r\n\r\n  {\r\n    title: \"Description\",\r\n    field: \"desp\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Despatch To\",\r\n    field: \"despatched\",\r\n    editable: \"never\",\r\n  },\r\n\r\n  {\r\n    title: \"Despatched Date\",\r\n    field: \"despatchdate\",\r\n    editable: \"never\",\r\n  },\r\n\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nconst columns_inprogress = [\r\n  { title: \"Asset No\", field: \"itemno\", editable: \"never\" },\r\n\r\n  {\r\n    title: \"Description\",\r\n    field: \"desp\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Client\",\r\n    field: \"despatched\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Despatched Date\",\r\n    field: \"despatchdate\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function ExpenseTable() {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const [isLoad, setIsLoad] = useState(false);\r\n  const { expenses, filter, setFilter, setExpenseId } = useExpenses();\r\n  const updateExpenses = useUpdateExpenses();\r\n  const addExpenses = useAddExpenses();\r\n  const deleteExpenses = useDeleteExpenses();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [expensesdata, setExpensesdata] = useState([]);\r\n  const [alertSuccess, setAlertSuccess] = useState(false);\r\n  const [formdata, setFormdata] = useState(initial_form);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    //expenses,\r\n    editExpenseID,\r\n    updateExpense,\r\n    addExpense,\r\n    deleteExpense,\r\n    setEditExpenseID,\r\n    setIsExpenseEditingOn,\r\n    setIsExpenseEditingOff,\r\n  } = useExpensesContext();\r\n\r\n  useEffect(() => {\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  const add_Expense = async (data) => {\r\n    // const { id } = data;\r\n    setFormdata(initial_form);\r\n    setFormdata(initial_form);\r\n    setIsExpenseEditingOff();\r\n    handleDialogOpen();\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const update_Expense = async (data) => {\r\n    const { id } = data;\r\n    setFormdata({ ...data });\r\n    setFormdata({ ...data });\r\n    setEditExpenseID(id);\r\n    setIsExpenseEditingOn();\r\n    handleDialogOpen();\r\n\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const delete_Expense = (data) => {\r\n    const { id } = data;\r\n    setEditExpenseID(id);\r\n    handleAlertOpen();\r\n\r\n    // deleteExpense(id);\r\n    // loadExpenses();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editExpenseID;\r\n    deleteExpenses(id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box\r\n        maxW=\"x3\"\r\n        padding=\"4\"\r\n        width=\"100%\"\r\n        height=\"700\"\r\n        borderColor=\"blue.500\"\r\n        borderWidth=\"1px\"\r\n        borderRadius=\"lg\"\r\n        overflow=\"scroll\"\r\n      >\r\n        <SimpleGrid>\r\n          <Box>\r\n            <Heading as=\"h2\" size=\"lg\">\r\n              Receiving Asset Item\r\n            </Heading>\r\n          </Box>\r\n          <Divider />\r\n          <Tabs>\r\n            <TabList>\r\n            \r\n              <Tab></Tab>\r\n            </TabList>\r\n            <TabPanels>\r\n             \r\n              <TabPanel>\r\n                <MaterialTable\r\n                  columns={columns_inprogress}\r\n                  data={assets.filter((r) => r.status === \"Despatched\")}\r\n                  title=\"Assets Table (Despatched)\"\r\n                  icons={{\r\n                    Add: (props) => <AddIcon />,\r\n                    Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n                    Delete: (props) => <DeleteIcon />,\r\n                    Clear: (props) => <DeleteIcon />,\r\n                    Check: (props) => <CheckIcon />,\r\n                    Search: (props) => <SearchIcon />,\r\n                    ResetSearch: (props) => <DeleteIcon />,\r\n                  }}\r\n                  actions={[\r\n                    (rowData) => ({\r\n                      //disabled: rowData.status !== \"Pending\",\r\n                      icon: \"edit\",\r\n                      tooltip: \"Edit Record\",\r\n                      onClick: (event, rowData) => {\r\n                        update_Expense(rowData);\r\n                      },\r\n                    }),\r\n                    (rowData) => ({\r\n                      //disabled: rowData.status !== \"Pending\",\r\n                      icon: \"delete\",\r\n                      tooltip: \"Delete Record\",\r\n                      onClick: (event, rowData) => {\r\n                        delete_Expense(rowData);\r\n                      },\r\n                    }),\r\n                    {\r\n                      icon: \"add\",\r\n                      tooltip: \"Add Record\",\r\n                      isFreeAction: true,\r\n                      onClick: (event, rowData) => {\r\n                        add_Expense(rowData);\r\n                      },\r\n                    },\r\n                  ]}\r\n                  options={{\r\n                    filtering: true,\r\n                    headerStyle: {\r\n                      backgroundColor: \"orange\",\r\n                      color: \"#FFF\",\r\n                    },\r\n                    showTitle: true,\r\n                  }}\r\n                  components={{\r\n                    Toolbar: (props) => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                />\r\n              </TabPanel>\r\n            </TabPanels>\r\n          </Tabs>\r\n        </SimpleGrid>\r\n      </Box>\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        {/* <MaterialTable\r\n          columns={columns}\r\n          data={items}\r\n          title=\"Assets Table\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n        \r\n          actions={[\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Expense(rowData);\r\n              },\r\n            }),\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Expense(rowData);\r\n              },\r\n            }),\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Expense(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        /> */}\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <ReceivedForm\r\n            formdata={formdata}\r\n            setFormdata={setFormdata}\r\n            handleDialogClose={handleDialogClose}\r\n          />\r\n        </CustomDialog>\r\n\r\n        <AlertDialogBox\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Asset Item\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\dss\\src\\components\\ReceivedForm.js",["6546","6547","6548","6549","6550","6551","6552","6553"],"import React from \"react\";\r\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useExpenses } from \"./expenses/useExpenses\";\r\nimport { useAddExpenses } from \"./expenses/useAddExpenses\";\r\nimport { useDeleteExpenses } from \"./expenses/useDeleteExpenses\";\r\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\r\n\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  date: \"\",\r\n  purchased_date: \"\",\r\n  purchased_from: \"\",\r\n  description: \"\",\r\n  remark: \"\",\r\n  status: \"Pending\",\r\n  amount: 0,\r\n};\r\n\r\nconst ExpenseForm = ({ formdata, setFormdata, handleDialogClose }) => {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const { expenses, filter, setFilter, setExpenseId } = useExpenses();\r\n  const updateExpenses = useUpdateExpenses();\r\n  const addExpenses = useAddExpenses();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { isExpenseEditing, editExpenseID } = useExpensesContext();\r\n\r\n  const { handleSubmit, control } = useForm();\r\n\r\n  const handleSentEmail = (data) => {\r\n    const { date } = data;\r\n    //console.log(\"expense form\", loginLevel);\r\n    var emaildata = {\r\n      to_name: loginLevel.loginUser,\r\n      to_email: loginLevel.loginEmail,\r\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\r\n      cc_to: loginLevel.reporting_email,\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const onSubmit = (data, e) => {\r\n    e.preventDefault();\r\n    if (isExpenseEditing) {\r\n      updateExpenses({ id: editExpenseID, ...data });\r\n    } else {\r\n      addExpenses({ empid: loginLevel.loginUserId, ...data });\r\n      handleSentEmail(data);\r\n    }\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          RECEIVED ITEM\r\n        </Typography>\r\n        {/* <Typography component=\"p\">Expense Claim Application</Typography> */}\r\n\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Controller\r\n              name=\"itemno\"\r\n              control={control}\r\n              defaultValue={formdata.itemno}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Item No\"\r\n                    id=\"margin-normal3\"\r\n                    name=\"itemno\"\r\n                    defaultValue={formdata.itemno}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    inputProps={{ readOnly: true }}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"desp\"\r\n              control={control}\r\n              defaultValue={formdata.itemno}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Description\"\r\n                    id=\"margin-normal3\"\r\n                    name=\"desp\"\r\n                    defaultValue={formdata.itemno}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Controller\r\n              name=\"despatched\"\r\n              control={control}\r\n              defaultValue={formdata.despatched}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Client\"\r\n                    //type=\"date\"\r\n                    id=\"margin-normal2\"\r\n                    name=\"despatched\"\r\n                    value={value}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"From Date is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"testmethod\"\r\n              control={control}\r\n              defaultValue={formdata.testmethod}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Test Method\"\r\n                    //type=\"date\"\r\n                    id=\"margin-normal2\"\r\n                    name=\"despatched\"\r\n                    value={value}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"Method A\">Method A</MenuItem>\r\n                    <MenuItem value=\"Method B\">\r\n                      Method B\r\n                    </MenuItem>\r\n                    <MenuItem value=\"Method C\">\r\n                      Method C\r\n                    </MenuItem>\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"From Date is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"remark\"\r\n              control={control}\r\n              defaultValue={formdata.remark}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Remark\"\r\n                    id=\"margin-normal5\"\r\n                    name=\"remark\"\r\n                    defaultValue={formdata.remark}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              //onClick={() => handleSubmit(onSubmit)()}\r\n            >\r\n              Save <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(0, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default ExpenseForm;\r\n",{"ruleId":"6554","severity":1,"message":"6555","line":5,"column":10,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":17},{"ruleId":"6558","replacedBy":"6559"},{"ruleId":"6560","replacedBy":"6561"},{"ruleId":"6554","severity":1,"message":"6562","line":15,"column":8,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":12},{"ruleId":"6554","severity":1,"message":"6563","line":4,"column":22,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6564","line":5,"column":35,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6565","line":12,"column":8,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6566","line":14,"column":8,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6567","line":31,"column":11,"nodeType":"6556","messageId":"6557","endLine":31,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6568","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6569","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6570","line":12,"column":3,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6571","line":13,"column":3,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6572","line":14,"column":3,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6573","line":16,"column":3,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6574","line":17,"column":3,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6575","line":20,"column":8,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6576","line":28,"column":8,"nodeType":"6556","messageId":"6557","endLine":28,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6577","line":34,"column":22,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6578","line":18,"column":7,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6579","line":24,"column":9,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6580","line":28,"column":9,"nodeType":"6556","messageId":"6557","endLine":28,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6581","line":15,"column":10,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6582","line":29,"column":10,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6583","line":71,"column":22,"nodeType":"6556","messageId":"6557","endLine":71,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6584","line":71,"column":34,"nodeType":"6556","messageId":"6557","endLine":71,"endColumn":47},{"ruleId":"6554","severity":1,"message":"6585","line":81,"column":10,"nodeType":"6556","messageId":"6557","endLine":81,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6586","line":81,"column":17,"nodeType":"6556","messageId":"6557","endLine":81,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6587","line":82,"column":34,"nodeType":"6556","messageId":"6557","endLine":82,"endColumn":42},{"ruleId":"6554","severity":1,"message":"6588","line":82,"column":44,"nodeType":"6556","messageId":"6557","endLine":82,"endColumn":52},{"ruleId":"6554","severity":1,"message":"6577","line":83,"column":22,"nodeType":"6556","messageId":"6557","endLine":83,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6589","line":95,"column":5,"nodeType":"6556","messageId":"6557","endLine":95,"endColumn":8},{"ruleId":"6554","severity":1,"message":"6590","line":99,"column":5,"nodeType":"6556","messageId":"6557","endLine":99,"endColumn":14},{"ruleId":"6591","severity":1,"message":"6592","line":161,"column":6,"nodeType":"6593","endLine":161,"endColumn":8,"suggestions":"6594"},{"ruleId":"6591","severity":1,"message":"6595","line":165,"column":6,"nodeType":"6593","endLine":165,"endColumn":8,"suggestions":"6596"},{"ruleId":"6554","severity":1,"message":"6597","line":10,"column":10,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":33},{"ruleId":"6591","severity":1,"message":"6598","line":22,"column":6,"nodeType":"6593","endLine":22,"endColumn":8,"suggestions":"6599"},{"ruleId":"6554","severity":1,"message":"6600","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6601","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6602","line":2,"column":10,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6603","line":2,"column":17,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6604","line":6,"column":11,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6605","line":5,"column":26,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6606","line":5,"column":55,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":60},{"ruleId":"6554","severity":1,"message":"6607","line":23,"column":7,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6608","line":31,"column":11,"nodeType":"6556","messageId":"6557","endLine":31,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6609","line":32,"column":11,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6610","line":33,"column":11,"nodeType":"6556","messageId":"6557","endLine":33,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6585","line":35,"column":10,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6586","line":35,"column":17,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":25},{"ruleId":"6591","severity":1,"message":"6611","line":40,"column":19,"nodeType":"6556","endLine":40,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6612","line":58,"column":5,"nodeType":"6556","messageId":"6557","endLine":58,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6613","line":69,"column":11,"nodeType":"6556","messageId":"6557","endLine":69,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6614","line":69,"column":28,"nodeType":"6556","messageId":"6557","endLine":69,"endColumn":44},{"ruleId":"6554","severity":1,"message":"6615","line":69,"column":46,"nodeType":"6556","messageId":"6557","endLine":69,"endColumn":57},{"ruleId":"6591","severity":1,"message":"6595","line":73,"column":6,"nodeType":"6593","endLine":73,"endColumn":8,"suggestions":"6616"},{"ruleId":"6554","severity":1,"message":"6617","line":107,"column":9,"nodeType":"6556","messageId":"6557","endLine":107,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6618","line":130,"column":9,"nodeType":"6556","messageId":"6557","endLine":130,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":29,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6620","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6621","line":118,"column":13,"nodeType":"6556","messageId":"6557","endLine":118,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":118,"column":17,"nodeType":"6556","messageId":"6557","endLine":118,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6623","line":118,"column":23,"nodeType":"6556","messageId":"6557","endLine":118,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6624","line":118,"column":30,"nodeType":"6556","messageId":"6557","endLine":118,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6589","line":118,"column":37,"nodeType":"6556","messageId":"6557","endLine":118,"endColumn":40},{"ruleId":"6554","severity":1,"message":"6625","line":118,"column":42,"nodeType":"6556","messageId":"6557","endLine":118,"endColumn":48},{"ruleId":"6554","severity":1,"message":"6626","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":37},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":39,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":48},{"ruleId":"6554","severity":1,"message":"6627","line":6,"column":10,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6628","line":18,"column":11,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6622","line":19,"column":11,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6625","line":19,"column":17,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6623","line":19,"column":25,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6624","line":19,"column":32,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":37},{"ruleId":"6554","severity":1,"message":"6589","line":19,"column":39,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":42},{"ruleId":"6558","replacedBy":"6629"},{"ruleId":"6560","replacedBy":"6630"},{"ruleId":"6554","severity":1,"message":"6631","line":89,"column":19,"nodeType":"6556","messageId":"6557","endLine":89,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6632","line":89,"column":27,"nodeType":"6556","messageId":"6557","endLine":89,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6633","line":90,"column":9,"nodeType":"6556","messageId":"6557","endLine":90,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6634","line":91,"column":9,"nodeType":"6556","messageId":"6557","endLine":91,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6635","line":96,"column":11,"nodeType":"6556","messageId":"6557","endLine":96,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6636","line":100,"column":5,"nodeType":"6556","messageId":"6557","endLine":100,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6637","line":101,"column":5,"nodeType":"6556","messageId":"6557","endLine":101,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6638","line":102,"column":5,"nodeType":"6556","messageId":"6557","endLine":102,"endColumn":15},{"ruleId":"6591","severity":1,"message":"6639","line":112,"column":6,"nodeType":"6593","endLine":112,"endColumn":8,"suggestions":"6640"},{"ruleId":"6554","severity":1,"message":"6641","line":134,"column":9,"nodeType":"6556","messageId":"6557","endLine":134,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":29,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6642","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6643","line":30,"column":3,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6621","line":155,"column":13,"nodeType":"6556","messageId":"6557","endLine":155,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":155,"column":17,"nodeType":"6556","messageId":"6557","endLine":155,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6644","line":155,"column":23,"nodeType":"6556","messageId":"6557","endLine":155,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6645","line":155,"column":34,"nodeType":"6556","messageId":"6557","endLine":155,"endColumn":41},{"ruleId":"6554","severity":1,"message":"6646","line":155,"column":43,"nodeType":"6556","messageId":"6557","endLine":155,"endColumn":49},{"ruleId":"6554","severity":1,"message":"6647","line":155,"column":51,"nodeType":"6556","messageId":"6557","endLine":155,"endColumn":61},{"ruleId":"6554","severity":1,"message":"6648","line":155,"column":63,"nodeType":"6556","messageId":"6557","endLine":155,"endColumn":69},{"ruleId":"6554","severity":1,"message":"6649","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6650","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6578","line":18,"column":7,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6651","line":20,"column":10,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6610","line":46,"column":11,"nodeType":"6556","messageId":"6557","endLine":46,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6652","line":47,"column":11,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6631","line":47,"column":19,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6632","line":47,"column":27,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6653","line":47,"column":38,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":48},{"ruleId":"6554","severity":1,"message":"6654","line":50,"column":10,"nodeType":"6556","messageId":"6557","endLine":50,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6655","line":50,"column":17,"nodeType":"6556","messageId":"6557","endLine":50,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6577","line":51,"column":22,"nodeType":"6556","messageId":"6557","endLine":51,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6656","line":53,"column":9,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6642","line":5,"column":3,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":29,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6657","line":11,"column":3,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6621","line":167,"column":13,"nodeType":"6556","messageId":"6557","endLine":167,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":167,"column":17,"nodeType":"6556","messageId":"6557","endLine":167,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6658","line":167,"column":23,"nodeType":"6556","messageId":"6557","endLine":167,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6659","line":167,"column":29,"nodeType":"6556","messageId":"6557","endLine":167,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6660","line":167,"column":45,"nodeType":"6556","messageId":"6557","endLine":167,"endColumn":51},{"ruleId":"6554","severity":1,"message":"6661","line":167,"column":53,"nodeType":"6556","messageId":"6557","endLine":167,"endColumn":59},{"ruleId":"6554","severity":1,"message":"6648","line":167,"column":61,"nodeType":"6556","messageId":"6557","endLine":167,"endColumn":67},{"ruleId":"6554","severity":1,"message":"6649","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6650","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6578","line":18,"column":7,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6662","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6663","line":61,"column":10,"nodeType":"6556","messageId":"6557","endLine":61,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6664","line":61,"column":18,"nodeType":"6556","messageId":"6557","endLine":61,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6635","line":65,"column":11,"nodeType":"6556","messageId":"6557","endLine":65,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6665","line":70,"column":5,"nodeType":"6556","messageId":"6557","endLine":70,"endColumn":21},{"ruleId":"6591","severity":1,"message":"6666","line":83,"column":6,"nodeType":"6593","endLine":83,"endColumn":8,"suggestions":"6667"},{"ruleId":"6554","severity":1,"message":"6668","line":107,"column":9,"nodeType":"6556","messageId":"6557","endLine":107,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6657","line":5,"column":3,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6669","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6670","line":8,"column":10,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6671","line":14,"column":10,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6672","line":21,"column":7,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6673","line":35,"column":11,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6631","line":35,"column":21,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6632","line":35,"column":29,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6674","line":35,"column":40,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":52},{"ruleId":"6554","severity":1,"message":"6577","line":38,"column":22,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6649","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6650","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6578","line":18,"column":7,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6675","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6676","line":16,"column":10,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6677","line":45,"column":10,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6678","line":45,"column":25,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":41},{"ruleId":"6554","severity":1,"message":"6679","line":47,"column":9,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6680","line":59,"column":5,"nodeType":"6556","messageId":"6557","endLine":59,"endColumn":26},{"ruleId":"6591","severity":1,"message":"6681","line":65,"column":6,"nodeType":"6593","endLine":65,"endColumn":8,"suggestions":"6682"},{"ruleId":"6558","replacedBy":"6683"},{"ruleId":"6560","replacedBy":"6684"},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":29,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6685","line":16,"column":3,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6686","line":17,"column":3,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6687","line":40,"column":3,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6621","line":238,"column":7,"nodeType":"6556","messageId":"6557","endLine":238,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6622","line":239,"column":7,"nodeType":"6556","messageId":"6557","endLine":239,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6688","line":240,"column":7,"nodeType":"6556","messageId":"6557","endLine":240,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6689","line":241,"column":7,"nodeType":"6556","messageId":"6557","endLine":241,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6690","line":242,"column":7,"nodeType":"6556","messageId":"6557","endLine":242,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6647","line":243,"column":7,"nodeType":"6556","messageId":"6557","endLine":243,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6661","line":244,"column":7,"nodeType":"6556","messageId":"6557","endLine":244,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6648","line":245,"column":7,"nodeType":"6556","messageId":"6557","endLine":245,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6621","line":380,"column":7,"nodeType":"6556","messageId":"6557","endLine":380,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6622","line":381,"column":7,"nodeType":"6556","messageId":"6557","endLine":381,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6688","line":382,"column":7,"nodeType":"6556","messageId":"6557","endLine":382,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6689","line":383,"column":7,"nodeType":"6556","messageId":"6557","endLine":383,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6690","line":384,"column":7,"nodeType":"6556","messageId":"6557","endLine":384,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6647","line":385,"column":7,"nodeType":"6556","messageId":"6557","endLine":385,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6661","line":386,"column":7,"nodeType":"6556","messageId":"6557","endLine":386,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6648","line":387,"column":7,"nodeType":"6556","messageId":"6557","endLine":387,"endColumn":13},{"ruleId":"6691","severity":1,"message":"6692","line":459,"column":9,"nodeType":"6693","messageId":"6694","endLine":459,"endColumn":33},{"ruleId":"6554","severity":1,"message":"6685","line":6,"column":3,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6687","line":30,"column":3,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":24},{"ruleId":"6591","severity":1,"message":"6695","line":46,"column":6,"nodeType":"6593","endLine":46,"endColumn":8,"suggestions":"6696"},{"ruleId":"6554","severity":1,"message":"6649","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6650","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6578","line":19,"column":7,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6563","line":11,"column":22,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6697","line":27,"column":7,"nodeType":"6556","messageId":"6557","endLine":27,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6698","line":59,"column":26,"nodeType":"6556","messageId":"6557","endLine":59,"endColumn":37},{"ruleId":"6554","severity":1,"message":"6699","line":66,"column":10,"nodeType":"6556","messageId":"6557","endLine":66,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6700","line":66,"column":23,"nodeType":"6556","messageId":"6557","endLine":66,"endColumn":37},{"ruleId":"6554","severity":1,"message":"6701","line":69,"column":10,"nodeType":"6556","messageId":"6557","endLine":69,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6702","line":70,"column":10,"nodeType":"6556","messageId":"6557","endLine":70,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6703","line":71,"column":11,"nodeType":"6556","messageId":"6557","endLine":71,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6704","line":71,"column":31,"nodeType":"6556","messageId":"6557","endLine":71,"endColumn":45},{"ruleId":"6554","severity":1,"message":"6705","line":71,"column":47,"nodeType":"6556","messageId":"6557","endLine":71,"endColumn":60},{"ruleId":"6554","severity":1,"message":"6706","line":74,"column":5,"nodeType":"6556","messageId":"6557","endLine":74,"endColumn":33},{"ruleId":"6554","severity":1,"message":"6707","line":75,"column":5,"nodeType":"6556","messageId":"6557","endLine":75,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6708","line":76,"column":5,"nodeType":"6556","messageId":"6557","endLine":76,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6709","line":77,"column":5,"nodeType":"6556","messageId":"6557","endLine":77,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6710","line":81,"column":5,"nodeType":"6556","messageId":"6557","endLine":81,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6711","line":87,"column":5,"nodeType":"6556","messageId":"6557","endLine":87,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6712","line":91,"column":5,"nodeType":"6556","messageId":"6557","endLine":91,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6713","line":92,"column":5,"nodeType":"6556","messageId":"6557","endLine":92,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6714","line":10,"column":10,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6715","line":15,"column":8,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6610","line":23,"column":26,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6716","line":24,"column":27,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":37},{"ruleId":"6554","severity":1,"message":"6717","line":24,"column":55,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":65},{"ruleId":"6591","severity":1,"message":"6718","line":39,"column":6,"nodeType":"6593","endLine":39,"endColumn":8,"suggestions":"6719"},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":29,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6720","line":19,"column":3,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6721","line":74,"column":3,"nodeType":"6556","messageId":"6557","endLine":74,"endColumn":34},{"ruleId":"6554","severity":1,"message":"6722","line":75,"column":3,"nodeType":"6556","messageId":"6557","endLine":75,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6723","line":76,"column":3,"nodeType":"6556","messageId":"6557","endLine":76,"endColumn":34},{"ruleId":"6554","severity":1,"message":"6724","line":89,"column":3,"nodeType":"6556","messageId":"6557","endLine":89,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6725","line":90,"column":3,"nodeType":"6556","messageId":"6557","endLine":90,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6726","line":91,"column":3,"nodeType":"6556","messageId":"6557","endLine":91,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6621","line":328,"column":13,"nodeType":"6556","messageId":"6557","endLine":328,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":328,"column":17,"nodeType":"6556","messageId":"6557","endLine":328,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6644","line":328,"column":23,"nodeType":"6556","messageId":"6557","endLine":328,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6645","line":328,"column":34,"nodeType":"6556","messageId":"6557","endLine":328,"endColumn":41},{"ruleId":"6554","severity":1,"message":"6646","line":328,"column":43,"nodeType":"6556","messageId":"6557","endLine":328,"endColumn":49},{"ruleId":"6554","severity":1,"message":"6647","line":328,"column":51,"nodeType":"6556","messageId":"6557","endLine":328,"endColumn":61},{"ruleId":"6554","severity":1,"message":"6648","line":328,"column":63,"nodeType":"6556","messageId":"6557","endLine":328,"endColumn":69},{"ruleId":"6554","severity":1,"message":"6621","line":528,"column":13,"nodeType":"6556","messageId":"6557","endLine":528,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":528,"column":17,"nodeType":"6556","messageId":"6557","endLine":528,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6688","line":528,"column":23,"nodeType":"6556","messageId":"6557","endLine":528,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6727","line":528,"column":31,"nodeType":"6556","messageId":"6557","endLine":528,"endColumn":42},{"ruleId":"6554","severity":1,"message":"6661","line":528,"column":44,"nodeType":"6556","messageId":"6557","endLine":528,"endColumn":50},{"ruleId":"6554","severity":1,"message":"6621","line":610,"column":13,"nodeType":"6556","messageId":"6557","endLine":610,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":610,"column":17,"nodeType":"6556","messageId":"6557","endLine":610,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6688","line":610,"column":23,"nodeType":"6556","messageId":"6557","endLine":610,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6727","line":610,"column":31,"nodeType":"6556","messageId":"6557","endLine":610,"endColumn":42},{"ruleId":"6554","severity":1,"message":"6661","line":610,"column":44,"nodeType":"6556","messageId":"6557","endLine":610,"endColumn":50},{"ruleId":"6554","severity":1,"message":"6720","line":12,"column":3,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6729","line":1,"column":38,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":44},{"ruleId":"6554","severity":1,"message":"6563","line":7,"column":22,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6574","line":8,"column":10,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6730","line":11,"column":3,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6731","line":25,"column":7,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6732","line":29,"column":9,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6622","line":45,"column":11,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6661","line":45,"column":17,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":23},{"ruleId":"6591","severity":1,"message":"6733","line":71,"column":6,"nodeType":"6593","endLine":71,"endColumn":8,"suggestions":"6734"},{"ruleId":"6554","severity":1,"message":"6735","line":73,"column":9,"nodeType":"6556","messageId":"6557","endLine":73,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6736","line":89,"column":9,"nodeType":"6556","messageId":"6557","endLine":89,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6737","line":98,"column":9,"nodeType":"6556","messageId":"6557","endLine":98,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6738","line":112,"column":9,"nodeType":"6556","messageId":"6557","endLine":112,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6574","line":6,"column":10,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6730","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6732","line":26,"column":9,"nodeType":"6556","messageId":"6557","endLine":26,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6739","line":31,"column":5,"nodeType":"6556","messageId":"6557","endLine":31,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6622","line":42,"column":11,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6661","line":42,"column":17,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6740","line":45,"column":9,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":23},{"ruleId":"6591","severity":1,"message":"6741","line":73,"column":6,"nodeType":"6593","endLine":73,"endColumn":8,"suggestions":"6742"},{"ruleId":"6554","severity":1,"message":"6743","line":84,"column":9,"nodeType":"6556","messageId":"6557","endLine":84,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6744","line":91,"column":9,"nodeType":"6556","messageId":"6557","endLine":91,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6745","line":103,"column":9,"nodeType":"6556","messageId":"6557","endLine":103,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6746","line":3,"column":3,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6747","line":4,"column":3,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6748","line":5,"column":3,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":12},{"ruleId":"6554","severity":1,"message":"6749","line":6,"column":3,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":8},{"ruleId":"6554","severity":1,"message":"6750","line":7,"column":3,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6751","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6752","line":11,"column":3,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":10},{"ruleId":"6554","severity":1,"message":"6569","line":12,"column":3,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":6},{"ruleId":"6554","severity":1,"message":"6563","line":15,"column":22,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6753","line":18,"column":10,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6754","line":23,"column":10,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6731","line":32,"column":7,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6609","line":34,"column":9,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6717","line":35,"column":9,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6716","line":36,"column":9,"nodeType":"6556","messageId":"6557","endLine":36,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6755","line":37,"column":9,"nodeType":"6556","messageId":"6557","endLine":37,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":29,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6756","line":2,"column":8,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6621","line":185,"column":13,"nodeType":"6556","messageId":"6557","endLine":185,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":185,"column":17,"nodeType":"6556","messageId":"6557","endLine":185,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6621","line":245,"column":13,"nodeType":"6556","messageId":"6557","endLine":245,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":245,"column":17,"nodeType":"6556","messageId":"6557","endLine":245,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6621","line":306,"column":13,"nodeType":"6556","messageId":"6557","endLine":306,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":306,"column":17,"nodeType":"6556","messageId":"6557","endLine":306,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6621","line":367,"column":13,"nodeType":"6556","messageId":"6557","endLine":367,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":367,"column":17,"nodeType":"6556","messageId":"6557","endLine":367,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6621","line":428,"column":13,"nodeType":"6556","messageId":"6557","endLine":428,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":428,"column":17,"nodeType":"6556","messageId":"6557","endLine":428,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6621","line":500,"column":13,"nodeType":"6556","messageId":"6557","endLine":500,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":500,"column":17,"nodeType":"6556","messageId":"6557","endLine":500,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6621","line":572,"column":13,"nodeType":"6556","messageId":"6557","endLine":572,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":572,"column":17,"nodeType":"6556","messageId":"6557","endLine":572,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6621","line":643,"column":13,"nodeType":"6556","messageId":"6557","endLine":643,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":643,"column":17,"nodeType":"6556","messageId":"6557","endLine":643,"endColumn":21},{"ruleId":"6558","replacedBy":"6757"},{"ruleId":"6560","replacedBy":"6758"},{"ruleId":"6554","severity":1,"message":"6626","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":37},{"ruleId":"6554","severity":1,"message":"6729","line":1,"column":50,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":56},{"ruleId":"6554","severity":1,"message":"6759","line":6,"column":3,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6751","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6752","line":12,"column":3,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":10},{"ruleId":"6554","severity":1,"message":"6569","line":13,"column":3,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":6},{"ruleId":"6554","severity":1,"message":"6669","line":19,"column":8,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6730","line":25,"column":3,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6672","line":39,"column":7,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6760","line":57,"column":10,"nodeType":"6556","messageId":"6557","endLine":57,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6761","line":57,"column":16,"nodeType":"6556","messageId":"6557","endLine":57,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6762","line":60,"column":5,"nodeType":"6556","messageId":"6557","endLine":60,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6763","line":63,"column":5,"nodeType":"6556","messageId":"6557","endLine":63,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6764","line":65,"column":5,"nodeType":"6556","messageId":"6557","endLine":65,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6765","line":69,"column":5,"nodeType":"6556","messageId":"6557","endLine":69,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6766","line":70,"column":5,"nodeType":"6556","messageId":"6557","endLine":70,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6767","line":71,"column":5,"nodeType":"6556","messageId":"6557","endLine":71,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6635","line":79,"column":11,"nodeType":"6556","messageId":"6557","endLine":79,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6610","line":79,"column":26,"nodeType":"6556","messageId":"6557","endLine":79,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6768","line":80,"column":11,"nodeType":"6556","messageId":"6557","endLine":80,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6769","line":80,"column":27,"nodeType":"6556","messageId":"6557","endLine":80,"endColumn":41},{"ruleId":"6554","severity":1,"message":"6716","line":80,"column":43,"nodeType":"6556","messageId":"6557","endLine":80,"endColumn":53},{"ruleId":"6554","severity":1,"message":"6717","line":80,"column":55,"nodeType":"6556","messageId":"6557","endLine":80,"endColumn":65},{"ruleId":"6554","severity":1,"message":"6770","line":84,"column":9,"nodeType":"6556","messageId":"6557","endLine":84,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6771","line":85,"column":9,"nodeType":"6556","messageId":"6557","endLine":85,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6648","line":101,"column":5,"nodeType":"6556","messageId":"6557","endLine":101,"endColumn":11},{"ruleId":"6591","severity":1,"message":"6772","line":111,"column":13,"nodeType":"6773","endLine":113,"endColumn":4},{"ruleId":"6591","severity":1,"message":"6774","line":113,"column":6,"nodeType":"6593","endLine":113,"endColumn":8,"suggestions":"6775"},{"ruleId":"6776","severity":1,"message":"6777","line":571,"column":19,"nodeType":"6778","endLine":571,"endColumn":43},{"ruleId":"6776","severity":1,"message":"6779","line":581,"column":19,"nodeType":"6778","endLine":581,"endColumn":45},{"ruleId":"6776","severity":1,"message":"6780","line":596,"column":11,"nodeType":"6778","endLine":601,"endColumn":13},{"ruleId":"6776","severity":1,"message":"6781","line":611,"column":11,"nodeType":"6778","endLine":616,"endColumn":13},{"ruleId":"6558","replacedBy":"6782"},{"ruleId":"6560","replacedBy":"6783"},{"ruleId":"6554","severity":1,"message":"6784","line":5,"column":35,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":41},{"ruleId":"6554","severity":1,"message":"6602","line":5,"column":43,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":48},{"ruleId":"6554","severity":1,"message":"6785","line":7,"column":10,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6786","line":7,"column":27,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":34},{"ruleId":"6554","severity":1,"message":"6787","line":13,"column":8,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6788","line":14,"column":8,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6789","line":15,"column":8,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6790","line":16,"column":8,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6791","line":17,"column":8,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6792","line":18,"column":8,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6793","line":19,"column":8,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6794","line":20,"column":8,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6795","line":21,"column":8,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6796","line":24,"column":8,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6797","line":25,"column":8,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6798","line":34,"column":3,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6799","line":35,"column":3,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6800","line":36,"column":3,"nodeType":"6556","messageId":"6557","endLine":36,"endColumn":8},{"ruleId":"6554","severity":1,"message":"6801","line":37,"column":3,"nodeType":"6556","messageId":"6557","endLine":37,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6802","line":38,"column":3,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":10},{"ruleId":"6554","severity":1,"message":"6715","line":39,"column":3,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6803","line":40,"column":3,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":10},{"ruleId":"6554","severity":1,"message":"6804","line":41,"column":3,"nodeType":"6556","messageId":"6557","endLine":41,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6805","line":42,"column":3,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6806","line":43,"column":3,"nodeType":"6556","messageId":"6557","endLine":43,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6807","line":44,"column":3,"nodeType":"6556","messageId":"6557","endLine":44,"endColumn":10},{"ruleId":"6554","severity":1,"message":"6808","line":45,"column":3,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6809","line":46,"column":3,"nodeType":"6556","messageId":"6557","endLine":46,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6810","line":48,"column":3,"nodeType":"6556","messageId":"6557","endLine":48,"endColumn":8},{"ruleId":"6554","severity":1,"message":"6731","line":55,"column":9,"nodeType":"6556","messageId":"6557","endLine":55,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6578","line":16,"column":7,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6563","line":2,"column":22,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6572","line":7,"column":3,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6675","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6811","line":11,"column":3,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6812","line":15,"column":3,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6813","line":19,"column":10,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6814","line":21,"column":10,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":34},{"ruleId":"6554","severity":1,"message":"6731","line":77,"column":7,"nodeType":"6556","messageId":"6557","endLine":77,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6815","line":83,"column":10,"nodeType":"6556","messageId":"6557","endLine":83,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6577","line":83,"column":22,"nodeType":"6556","messageId":"6557","endLine":83,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6816","line":86,"column":11,"nodeType":"6556","messageId":"6557","endLine":86,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6817","line":86,"column":24,"nodeType":"6556","messageId":"6557","endLine":86,"endColumn":37},{"ruleId":"6818","severity":1,"message":"6819","line":91,"column":7,"nodeType":"6556","messageId":"6820","endLine":91,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6821","line":94,"column":5,"nodeType":"6556","messageId":"6557","endLine":94,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6822","line":95,"column":5,"nodeType":"6556","messageId":"6557","endLine":95,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6823","line":96,"column":5,"nodeType":"6556","messageId":"6557","endLine":96,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6824","line":97,"column":5,"nodeType":"6556","messageId":"6557","endLine":97,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6825","line":98,"column":5,"nodeType":"6556","messageId":"6557","endLine":98,"endColumn":34},{"ruleId":"6554","severity":1,"message":"6826","line":100,"column":5,"nodeType":"6556","messageId":"6557","endLine":100,"endColumn":40},{"ruleId":"6554","severity":1,"message":"6680","line":101,"column":5,"nodeType":"6556","messageId":"6557","endLine":101,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6827","line":102,"column":5,"nodeType":"6556","messageId":"6557","endLine":102,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6828","line":103,"column":5,"nodeType":"6556","messageId":"6557","endLine":103,"endColumn":25},{"ruleId":"6591","severity":1,"message":"6829","line":114,"column":6,"nodeType":"6593","endLine":114,"endColumn":35,"suggestions":"6830"},{"ruleId":"6591","severity":1,"message":"6831","line":40,"column":6,"nodeType":"6593","endLine":40,"endColumn":8,"suggestions":"6832"},{"ruleId":"6591","severity":1,"message":"6831","line":42,"column":6,"nodeType":"6593","endLine":42,"endColumn":8,"suggestions":"6833"},{"ruleId":"6554","severity":1,"message":"6834","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6835","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6836","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6746","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6750","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6837","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6566","line":14,"column":8,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6836","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6838","line":9,"column":10,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6839","line":9,"column":20,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6840","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6750","line":15,"column":8,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6841","line":17,"column":8,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6842","line":18,"column":8,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6843","line":19,"column":8,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6844","line":22,"column":8,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6845","line":23,"column":8,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6846","line":24,"column":8,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":12},{"ruleId":"6554","severity":1,"message":"6847","line":25,"column":8,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6848","line":27,"column":8,"nodeType":"6556","messageId":"6557","endLine":27,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6849","line":29,"column":7,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6850","line":38,"column":9,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6849","line":6,"column":7,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":18},{"ruleId":"6851","severity":1,"message":"6852","line":24,"column":15,"nodeType":"6778","endLine":24,"endColumn":49},{"ruleId":"6851","severity":1,"message":"6852","line":27,"column":15,"nodeType":"6778","endLine":27,"endColumn":49},{"ruleId":"6591","severity":1,"message":"6853","line":73,"column":6,"nodeType":"6593","endLine":73,"endColumn":8,"suggestions":"6854"},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":29,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6855","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6643","line":30,"column":3,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6621","line":125,"column":13,"nodeType":"6556","messageId":"6557","endLine":125,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":125,"column":17,"nodeType":"6556","messageId":"6557","endLine":125,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6644","line":125,"column":23,"nodeType":"6556","messageId":"6557","endLine":125,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6645","line":125,"column":34,"nodeType":"6556","messageId":"6557","endLine":125,"endColumn":41},{"ruleId":"6554","severity":1,"message":"6646","line":125,"column":43,"nodeType":"6556","messageId":"6557","endLine":125,"endColumn":49},{"ruleId":"6554","severity":1,"message":"6647","line":125,"column":51,"nodeType":"6556","messageId":"6557","endLine":125,"endColumn":61},{"ruleId":"6554","severity":1,"message":"6648","line":125,"column":63,"nodeType":"6556","messageId":"6557","endLine":125,"endColumn":69},{"ruleId":"6554","severity":1,"message":"6855","line":5,"column":3,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6643","line":25,"column":3,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6834","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6835","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6836","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6746","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6750","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6837","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6662","line":12,"column":8,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6649","line":13,"column":8,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":18},{"ruleId":"6591","severity":1,"message":"6856","line":72,"column":6,"nodeType":"6593","endLine":72,"endColumn":8,"suggestions":"6857"},{"ruleId":"6554","severity":1,"message":"6754","line":6,"column":10,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":26},{"ruleId":"6591","severity":1,"message":"6858","line":66,"column":6,"nodeType":"6593","endLine":66,"endColumn":8,"suggestions":"6859"},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6746","line":4,"column":10,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6747","line":4,"column":18,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6631","line":61,"column":19,"nodeType":"6556","messageId":"6557","endLine":61,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6632","line":61,"column":27,"nodeType":"6556","messageId":"6557","endLine":61,"endColumn":36},{"ruleId":"6591","severity":1,"message":"6860","line":83,"column":6,"nodeType":"6593","endLine":83,"endColumn":8,"suggestions":"6861"},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6746","line":4,"column":10,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6747","line":4,"column":18,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6751","line":4,"column":45,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":51},{"ruleId":"6554","severity":1,"message":"6862","line":8,"column":10,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6631","line":22,"column":22,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6632","line":22,"column":30,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6577","line":24,"column":22,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":35},{"ruleId":"6591","severity":1,"message":"6863","line":105,"column":6,"nodeType":"6593","endLine":105,"endColumn":8,"suggestions":"6864"},{"ruleId":"6591","severity":1,"message":"6865","line":50,"column":6,"nodeType":"6593","endLine":50,"endColumn":8,"suggestions":"6866"},{"ruleId":"6591","severity":1,"message":"6867","line":46,"column":6,"nodeType":"6593","endLine":46,"endColumn":8,"suggestions":"6868"},{"ruleId":"6591","severity":1,"message":"6869","line":41,"column":6,"nodeType":"6593","endLine":41,"endColumn":8,"suggestions":"6870"},{"ruleId":"6591","severity":1,"message":"6871","line":50,"column":6,"nodeType":"6593","endLine":50,"endColumn":8,"suggestions":"6872"},{"ruleId":"6591","severity":1,"message":"6873","line":41,"column":6,"nodeType":"6593","endLine":41,"endColumn":8,"suggestions":"6874"},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6573","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6574","line":12,"column":3,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6675","line":13,"column":3,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6811","line":14,"column":3,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6875","line":19,"column":10,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":34},{"ruleId":"6554","severity":1,"message":"6876","line":21,"column":7,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":10},{"ruleId":"6554","severity":1,"message":"6849","line":23,"column":7,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6877","line":49,"column":7,"nodeType":"6556","messageId":"6557","endLine":49,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6878","line":77,"column":20,"nodeType":"6556","messageId":"6557","endLine":77,"endColumn":31},{"ruleId":"6558","replacedBy":"6879"},{"ruleId":"6560","replacedBy":"6880"},{"ruleId":"6558","replacedBy":"6881"},{"ruleId":"6560","replacedBy":"6882"},{"ruleId":"6554","severity":1,"message":"6573","line":2,"column":20,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":34},{"ruleId":"6554","severity":1,"message":"6574","line":2,"column":36,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":53},{"ruleId":"6554","severity":1,"message":"6883","line":6,"column":3,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6574","line":5,"column":10,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6730","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6739","line":23,"column":5,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6622","line":34,"column":11,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6661","line":34,"column":17,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6717","line":35,"column":11,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6740","line":37,"column":9,"nodeType":"6556","messageId":"6557","endLine":37,"endColumn":23},{"ruleId":"6591","severity":1,"message":"6884","line":52,"column":6,"nodeType":"6593","endLine":52,"endColumn":8,"suggestions":"6885"},{"ruleId":"6554","severity":1,"message":"6743","line":64,"column":9,"nodeType":"6556","messageId":"6557","endLine":64,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6744","line":71,"column":9,"nodeType":"6556","messageId":"6557","endLine":71,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6745","line":83,"column":9,"nodeType":"6556","messageId":"6557","endLine":83,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6729","line":1,"column":38,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":44},{"ruleId":"6554","severity":1,"message":"6563","line":5,"column":22,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6574","line":6,"column":10,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6730","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6731","line":18,"column":7,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6886","line":19,"column":10,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6887","line":19,"column":16,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6888","line":27,"column":5,"nodeType":"6556","messageId":"6557","endLine":27,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6889","line":29,"column":5,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6890","line":30,"column":5,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6765","line":34,"column":5,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6727","line":38,"column":11,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6661","line":38,"column":24,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6716","line":39,"column":11,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":21},{"ruleId":"6591","severity":1,"message":"6891","line":52,"column":6,"nodeType":"6593","endLine":52,"endColumn":8,"suggestions":"6892"},{"ruleId":"6554","severity":1,"message":"6735","line":54,"column":9,"nodeType":"6556","messageId":"6557","endLine":54,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6893","line":60,"column":9,"nodeType":"6556","messageId":"6557","endLine":60,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6749","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6573","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6894","line":11,"column":3,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6574","line":12,"column":3,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6811","line":14,"column":3,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6875","line":19,"column":10,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":34},{"ruleId":"6554","severity":1,"message":"6849","line":21,"column":7,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6895","line":55,"column":13,"nodeType":"6556","messageId":"6557","endLine":55,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6896","line":67,"column":10,"nodeType":"6556","messageId":"6557","endLine":67,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6878","line":67,"column":20,"nodeType":"6556","messageId":"6557","endLine":67,"endColumn":31},{"ruleId":"6558","replacedBy":"6897"},{"ruleId":"6560","replacedBy":"6898"},{"ruleId":"6554","severity":1,"message":"6834","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6835","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6836","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6746","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6750","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6837","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6566","line":14,"column":8,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6565","line":15,"column":8,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6899","line":2,"column":8,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":12},{"ruleId":"6554","severity":1,"message":"6569","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6785","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6839","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":12},{"ruleId":"6554","severity":1,"message":"6749","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6900","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6901","line":12,"column":8,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6577","line":24,"column":22,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6902","line":53,"column":7,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6903","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6904","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6905","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6906","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6907","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6908","line":11,"column":10,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6909","line":12,"column":10,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6910","line":63,"column":10,"nodeType":"6556","messageId":"6557","endLine":63,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6911","line":64,"column":10,"nodeType":"6556","messageId":"6557","endLine":64,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6635","line":65,"column":11,"nodeType":"6556","messageId":"6557","endLine":65,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6912","line":73,"column":5,"nodeType":"6556","messageId":"6557","endLine":73,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6913","line":74,"column":5,"nodeType":"6556","messageId":"6557","endLine":74,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6914","line":75,"column":5,"nodeType":"6556","messageId":"6557","endLine":75,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6915","line":76,"column":5,"nodeType":"6556","messageId":"6557","endLine":76,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6916","line":77,"column":5,"nodeType":"6556","messageId":"6557","endLine":77,"endColumn":21},{"ruleId":"6591","severity":1,"message":"6917","line":82,"column":6,"nodeType":"6593","endLine":82,"endColumn":8,"suggestions":"6918"},{"ruleId":"6554","severity":1,"message":"6617","line":84,"column":9,"nodeType":"6556","messageId":"6557","endLine":84,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6919","line":88,"column":9,"nodeType":"6556","messageId":"6557","endLine":88,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6920","line":93,"column":9,"nodeType":"6556","messageId":"6557","endLine":93,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6921","line":97,"column":9,"nodeType":"6556","messageId":"6557","endLine":97,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6922","line":101,"column":9,"nodeType":"6556","messageId":"6557","endLine":101,"endColumn":30},{"ruleId":"6558","replacedBy":"6923"},{"ruleId":"6560","replacedBy":"6924"},{"ruleId":"6554","severity":1,"message":"6748","line":19,"column":10,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6839","line":19,"column":21,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6749","line":19,"column":27,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6925","line":20,"column":8,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6900","line":22,"column":8,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6731","line":51,"column":7,"nodeType":"6556","messageId":"6557","endLine":51,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6926","line":53,"column":9,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6610","line":54,"column":11,"nodeType":"6556","messageId":"6557","endLine":54,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6815","line":55,"column":10,"nodeType":"6556","messageId":"6557","endLine":55,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6577","line":55,"column":22,"nodeType":"6556","messageId":"6557","endLine":55,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6927","line":76,"column":9,"nodeType":"6556","messageId":"6557","endLine":76,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6928","line":87,"column":9,"nodeType":"6556","messageId":"6557","endLine":87,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6929","line":98,"column":9,"nodeType":"6556","messageId":"6557","endLine":98,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6930","line":109,"column":9,"nodeType":"6556","messageId":"6557","endLine":109,"endColumn":40},{"ruleId":"6591","severity":1,"message":"6931","line":123,"column":6,"nodeType":"6593","endLine":123,"endColumn":8,"suggestions":"6932"},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6662","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6663","line":67,"column":10,"nodeType":"6556","messageId":"6557","endLine":67,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6664","line":67,"column":18,"nodeType":"6556","messageId":"6557","endLine":67,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6635","line":70,"column":11,"nodeType":"6556","messageId":"6557","endLine":70,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6665","line":75,"column":5,"nodeType":"6556","messageId":"6557","endLine":75,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6933","line":98,"column":9,"nodeType":"6556","messageId":"6557","endLine":98,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6934","line":107,"column":9,"nodeType":"6556","messageId":"6557","endLine":107,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6935","line":121,"column":9,"nodeType":"6556","messageId":"6557","endLine":121,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6748","line":3,"column":10,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6669","line":3,"column":21,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6903","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6904","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6905","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6906","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6907","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6908","line":11,"column":10,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6909","line":12,"column":10,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6697","line":16,"column":7,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6910","line":37,"column":10,"nodeType":"6556","messageId":"6557","endLine":37,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6911","line":38,"column":10,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6635","line":39,"column":11,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6617","line":59,"column":9,"nodeType":"6556","messageId":"6557","endLine":59,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6919","line":63,"column":9,"nodeType":"6556","messageId":"6557","endLine":63,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6920","line":68,"column":9,"nodeType":"6556","messageId":"6557","endLine":68,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6921","line":72,"column":9,"nodeType":"6556","messageId":"6557","endLine":72,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6936","line":2,"column":25,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6563","line":4,"column":22,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6573","line":5,"column":29,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6937","line":7,"column":3,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6730","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6670","line":12,"column":10,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6697","line":15,"column":7,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6731","line":44,"column":7,"nodeType":"6556","messageId":"6557","endLine":44,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6938","line":46,"column":9,"nodeType":"6556","messageId":"6557","endLine":46,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6939","line":47,"column":11,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6710","line":47,"column":19,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6940","line":47,"column":29,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6713","line":47,"column":45,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":64},{"ruleId":"6591","severity":1,"message":"6941","line":55,"column":6,"nodeType":"6593","endLine":55,"endColumn":8,"suggestions":"6942"},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6563","line":11,"column":22,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6573","line":12,"column":29,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6731","line":111,"column":7,"nodeType":"6556","messageId":"6557","endLine":111,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6938","line":113,"column":9,"nodeType":"6556","messageId":"6557","endLine":113,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6943","line":114,"column":38,"nodeType":"6556","messageId":"6557","endLine":114,"endColumn":59},{"ruleId":"6554","severity":1,"message":"6944","line":116,"column":9,"nodeType":"6556","messageId":"6557","endLine":116,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6563","line":2,"column":22,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6747","line":5,"column":21,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6675","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6676","line":17,"column":10,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6945","line":23,"column":8,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6697","line":29,"column":7,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6731","line":73,"column":7,"nodeType":"6556","messageId":"6557","endLine":73,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6946","line":75,"column":24,"nodeType":"6556","messageId":"6557","endLine":75,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6677","line":76,"column":10,"nodeType":"6556","messageId":"6557","endLine":76,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6678","line":76,"column":25,"nodeType":"6556","messageId":"6557","endLine":76,"endColumn":41},{"ruleId":"6554","severity":1,"message":"6679","line":78,"column":9,"nodeType":"6556","messageId":"6557","endLine":78,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6947","line":80,"column":9,"nodeType":"6556","messageId":"6557","endLine":80,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6948","line":84,"column":5,"nodeType":"6556","messageId":"6557","endLine":84,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6949","line":85,"column":5,"nodeType":"6556","messageId":"6557","endLine":85,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6709","line":86,"column":5,"nodeType":"6556","messageId":"6557","endLine":86,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6950","line":88,"column":5,"nodeType":"6556","messageId":"6557","endLine":88,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6951","line":89,"column":5,"nodeType":"6556","messageId":"6557","endLine":89,"endColumn":33},{"ruleId":"6554","severity":1,"message":"6952","line":90,"column":5,"nodeType":"6556","messageId":"6557","endLine":90,"endColumn":34},{"ruleId":"6554","severity":1,"message":"6953","line":91,"column":5,"nodeType":"6556","messageId":"6557","endLine":91,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6680","line":92,"column":5,"nodeType":"6556","messageId":"6557","endLine":92,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6706","line":93,"column":5,"nodeType":"6556","messageId":"6557","endLine":93,"endColumn":33},{"ruleId":"6554","severity":1,"message":"6954","line":96,"column":9,"nodeType":"6556","messageId":"6557","endLine":96,"endColumn":33},{"ruleId":"6554","severity":1,"message":"6563","line":2,"column":22,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6936","line":3,"column":25,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6675","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6676","line":16,"column":10,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6903","line":17,"column":8,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":18,"column":8,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6904","line":19,"column":8,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6905","line":20,"column":8,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6906","line":21,"column":8,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6945","line":22,"column":8,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6908","line":23,"column":10,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6955","line":26,"column":8,"nodeType":"6556","messageId":"6557","endLine":26,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6731","line":45,"column":7,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6910","line":47,"column":10,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6677","line":48,"column":10,"nodeType":"6556","messageId":"6557","endLine":48,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6678","line":48,"column":25,"nodeType":"6556","messageId":"6557","endLine":48,"endColumn":41},{"ruleId":"6554","severity":1,"message":"6679","line":50,"column":9,"nodeType":"6556","messageId":"6557","endLine":50,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6956","line":51,"column":10,"nodeType":"6556","messageId":"6557","endLine":51,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6957","line":51,"column":22,"nodeType":"6556","messageId":"6557","endLine":51,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6947","line":53,"column":9,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6958","line":56,"column":5,"nodeType":"6556","messageId":"6557","endLine":56,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6959","line":57,"column":5,"nodeType":"6556","messageId":"6557","endLine":57,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6948","line":58,"column":5,"nodeType":"6556","messageId":"6557","endLine":58,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6709","line":60,"column":5,"nodeType":"6556","messageId":"6557","endLine":60,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6950","line":61,"column":5,"nodeType":"6556","messageId":"6557","endLine":61,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6951","line":62,"column":5,"nodeType":"6556","messageId":"6557","endLine":62,"endColumn":33},{"ruleId":"6554","severity":1,"message":"6952","line":63,"column":5,"nodeType":"6556","messageId":"6557","endLine":63,"endColumn":34},{"ruleId":"6554","severity":1,"message":"6953","line":64,"column":5,"nodeType":"6556","messageId":"6557","endLine":64,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6680","line":65,"column":5,"nodeType":"6556","messageId":"6557","endLine":65,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6706","line":66,"column":5,"nodeType":"6556","messageId":"6557","endLine":66,"endColumn":33},{"ruleId":"6591","severity":1,"message":"6960","line":71,"column":6,"nodeType":"6593","endLine":71,"endColumn":8,"suggestions":"6961"},{"ruleId":"6554","severity":1,"message":"6617","line":73,"column":9,"nodeType":"6556","messageId":"6557","endLine":73,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6919","line":79,"column":9,"nodeType":"6556","messageId":"6557","endLine":79,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6962","line":3,"column":16,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6963","line":3,"column":26,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6899","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":12},{"ruleId":"6554","severity":1,"message":"6894","line":7,"column":10,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6964","line":8,"column":10,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6849","line":12,"column":7,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6965","line":14,"column":7,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6966","line":55,"column":7,"nodeType":"6556","messageId":"6557","endLine":55,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6878","line":66,"column":10,"nodeType":"6556","messageId":"6557","endLine":66,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6967","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6875","line":11,"column":10,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":34},{"ruleId":"6554","severity":1,"message":"6849","line":13,"column":7,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6965","line":15,"column":7,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6968","line":45,"column":13,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6926","line":56,"column":9,"nodeType":"6556","messageId":"6557","endLine":56,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6896","line":57,"column":10,"nodeType":"6556","messageId":"6557","endLine":57,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6878","line":57,"column":20,"nodeType":"6556","messageId":"6557","endLine":57,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6969","line":4,"column":10,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6970","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6569","line":10,"column":10,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6749","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6971","line":15,"column":3,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6972","line":16,"column":3,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6973","line":17,"column":3,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6849","line":36,"column":7,"nodeType":"6556","messageId":"6557","endLine":36,"endColumn":18},{"ruleId":"6591","severity":1,"message":"6611","line":79,"column":19,"nodeType":"6556","endLine":79,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6564","line":4,"column":10,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6751","line":24,"column":3,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6974","line":28,"column":3,"nodeType":"6556","messageId":"6557","endLine":28,"endColumn":8},{"ruleId":"6554","severity":1,"message":"6975","line":29,"column":3,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6976","line":30,"column":3,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6977","line":31,"column":3,"nodeType":"6556","messageId":"6557","endLine":31,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6978","line":32,"column":3,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6979","line":33,"column":3,"nodeType":"6556","messageId":"6557","endLine":33,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6980","line":34,"column":3,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6981","line":35,"column":3,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6606","line":36,"column":3,"nodeType":"6556","messageId":"6557","endLine":36,"endColumn":8},{"ruleId":"6554","severity":1,"message":"6982","line":44,"column":10,"nodeType":"6556","messageId":"6557","endLine":44,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6983","line":46,"column":10,"nodeType":"6556","messageId":"6557","endLine":46,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6984","line":64,"column":7,"nodeType":"6556","messageId":"6557","endLine":64,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6985","line":82,"column":7,"nodeType":"6556","messageId":"6557","endLine":82,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6986","line":87,"column":11,"nodeType":"6556","messageId":"6557","endLine":87,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6698","line":87,"column":26,"nodeType":"6556","messageId":"6557","endLine":87,"endColumn":37},{"ruleId":"6554","severity":1,"message":"6987","line":87,"column":39,"nodeType":"6556","messageId":"6557","endLine":87,"endColumn":53},{"ruleId":"6554","severity":1,"message":"6673","line":93,"column":31,"nodeType":"6556","messageId":"6557","endLine":93,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6701","line":108,"column":10,"nodeType":"6556","messageId":"6557","endLine":108,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6988","line":110,"column":17,"nodeType":"6556","messageId":"6557","endLine":110,"endColumn":25},{"ruleId":"6591","severity":1,"message":"6989","line":119,"column":6,"nodeType":"6593","endLine":119,"endColumn":20,"suggestions":"6990"},{"ruleId":"6554","severity":1,"message":"6991","line":127,"column":11,"nodeType":"6556","messageId":"6557","endLine":127,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6992","line":129,"column":11,"nodeType":"6556","messageId":"6557","endLine":129,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6993","line":130,"column":11,"nodeType":"6556","messageId":"6557","endLine":130,"endColumn":12},{"ruleId":"6554","severity":1,"message":"6994","line":199,"column":7,"nodeType":"6556","messageId":"6557","endLine":199,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6995","line":200,"column":7,"nodeType":"6556","messageId":"6557","endLine":200,"endColumn":20},{"ruleId":"6591","severity":1,"message":"6996","line":409,"column":6,"nodeType":"6593","endLine":409,"endColumn":8,"suggestions":"6997"},{"ruleId":"6554","severity":1,"message":"6998","line":2,"column":10,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6999","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7000","line":21,"column":3,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":9},{"ruleId":"6554","severity":1,"message":"7001","line":28,"column":3,"nodeType":"6556","messageId":"6557","endLine":28,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7002","line":30,"column":3,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7003","line":31,"column":3,"nodeType":"6556","messageId":"6557","endLine":31,"endColumn":5},{"ruleId":"6554","severity":1,"message":"7004","line":32,"column":3,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":5},{"ruleId":"6554","severity":1,"message":"7005","line":33,"column":3,"nodeType":"6556","messageId":"6557","endLine":33,"endColumn":5},{"ruleId":"6554","severity":1,"message":"7006","line":34,"column":3,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7007","line":39,"column":3,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7008","line":43,"column":3,"nodeType":"6556","messageId":"6557","endLine":43,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7009","line":44,"column":3,"nodeType":"6556","messageId":"6557","endLine":44,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6574","line":57,"column":10,"nodeType":"6556","messageId":"6557","endLine":57,"endColumn":27},{"ruleId":"6554","severity":1,"message":"7010","line":60,"column":3,"nodeType":"6556","messageId":"6557","endLine":60,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6573","line":64,"column":10,"nodeType":"6556","messageId":"6557","endLine":64,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6849","line":66,"column":7,"nodeType":"6556","messageId":"6557","endLine":66,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7011","line":168,"column":9,"nodeType":"6556","messageId":"6557","endLine":168,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6926","line":169,"column":9,"nodeType":"6556","messageId":"6557","endLine":169,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7012","line":175,"column":5,"nodeType":"6556","messageId":"6557","endLine":175,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7013","line":180,"column":5,"nodeType":"6556","messageId":"6557","endLine":180,"endColumn":32},{"ruleId":"6554","severity":1,"message":"7014","line":181,"column":5,"nodeType":"6556","messageId":"6557","endLine":181,"endColumn":30},{"ruleId":"6554","severity":1,"message":"7015","line":190,"column":20,"nodeType":"6556","messageId":"6557","endLine":190,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6702","line":191,"column":10,"nodeType":"6556","messageId":"6557","endLine":191,"endColumn":22},{"ruleId":"6591","severity":1,"message":"7016","line":209,"column":6,"nodeType":"6593","endLine":209,"endColumn":8,"suggestions":"7017"},{"ruleId":"6591","severity":1,"message":"7018","line":224,"column":6,"nodeType":"6593","endLine":224,"endColumn":19,"suggestions":"7019"},{"ruleId":"6591","severity":1,"message":"7020","line":229,"column":6,"nodeType":"6593","endLine":229,"endColumn":14,"suggestions":"7021"},{"ruleId":"6554","severity":1,"message":"7022","line":236,"column":9,"nodeType":"6556","messageId":"6557","endLine":236,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7023","line":4,"column":3,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7024","line":6,"column":3,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6974","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7025","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7026","line":12,"column":3,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6669","line":13,"column":3,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6751","line":14,"column":3,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":9},{"ruleId":"6554","severity":1,"message":"7027","line":20,"column":8,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7028","line":21,"column":10,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7029","line":24,"column":10,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":27},{"ruleId":"6554","severity":1,"message":"7030","line":25,"column":10,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6716","line":112,"column":11,"nodeType":"6556","messageId":"6557","endLine":112,"endColumn":21},{"ruleId":"6591","severity":1,"message":"7031","line":122,"column":6,"nodeType":"6593","endLine":122,"endColumn":20,"suggestions":"7032"},{"ruleId":"6591","severity":1,"message":"7033","line":129,"column":6,"nodeType":"6593","endLine":129,"endColumn":14,"suggestions":"7034"},{"ruleId":"6554","severity":1,"message":"7035","line":1,"column":46,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":53},{"ruleId":"6554","severity":1,"message":"7036","line":2,"column":8,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6786","line":7,"column":3,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":10},{"ruleId":"6554","severity":1,"message":"6564","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7037","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7001","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7038","line":11,"column":3,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7003","line":12,"column":3,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":5},{"ruleId":"6554","severity":1,"message":"7004","line":13,"column":3,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":5},{"ruleId":"6554","severity":1,"message":"7005","line":14,"column":3,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":5},{"ruleId":"6554","severity":1,"message":"7039","line":15,"column":3,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":9},{"ruleId":"6554","severity":1,"message":"7040","line":17,"column":10,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7041","line":17,"column":28,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":42},{"ruleId":"6554","severity":1,"message":"6969","line":18,"column":10,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7042","line":18,"column":20,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6967","line":19,"column":8,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6746","line":20,"column":10,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6747","line":20,"column":18,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7043","line":26,"column":10,"nodeType":"6556","messageId":"6557","endLine":26,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7044","line":41,"column":9,"nodeType":"6556","messageId":"6557","endLine":41,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6654","line":43,"column":10,"nodeType":"6556","messageId":"6557","endLine":43,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6655","line":43,"column":17,"nodeType":"6556","messageId":"6557","endLine":43,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6702","line":45,"column":10,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7045","line":45,"column":24,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6939","line":47,"column":11,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7046","line":47,"column":19,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6765","line":47,"column":33,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":47},{"ruleId":"6554","severity":1,"message":"7047","line":105,"column":9,"nodeType":"6556","messageId":"6557","endLine":105,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7048","line":109,"column":9,"nodeType":"6556","messageId":"6557","endLine":109,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7049","line":179,"column":9,"nodeType":"6556","messageId":"6557","endLine":179,"endColumn":29},{"ruleId":"6591","severity":1,"message":"7050","line":187,"column":6,"nodeType":"6593","endLine":187,"endColumn":14,"suggestions":"7051"},{"ruleId":"6554","severity":1,"message":"6603","line":3,"column":10,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7052","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7053","line":14,"column":10,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6731","line":17,"column":9,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6577","line":18,"column":22,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6604","line":19,"column":11,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7054","line":20,"column":10,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7055","line":20,"column":16,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7056","line":4,"column":3,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7057","line":5,"column":3,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7058","line":6,"column":3,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6835","line":7,"column":3,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6834","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6836","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":12},{"ruleId":"6554","severity":1,"message":"7059","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":10},{"ruleId":"6554","severity":1,"message":"6750","line":11,"column":3,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6749","line":12,"column":3,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":8},{"ruleId":"6554","severity":1,"message":"6848","line":18,"column":8,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":11},{"ruleId":"6554","severity":1,"message":"7060","line":25,"column":10,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7061","line":26,"column":10,"nodeType":"6556","messageId":"6557","endLine":26,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6815","line":27,"column":10,"nodeType":"6556","messageId":"6557","endLine":27,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6577","line":27,"column":22,"nodeType":"6556","messageId":"6557","endLine":27,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7062","line":29,"column":9,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7063","line":33,"column":9,"nodeType":"6556","messageId":"6557","endLine":33,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6899","line":3,"column":8,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":12},{"ruleId":"6554","severity":1,"message":"7064","line":5,"column":10,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6746","line":5,"column":18,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6649","line":13,"column":8,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7065","line":14,"column":8,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7066","line":17,"column":8,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7067","line":18,"column":8,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6849","line":28,"column":7,"nodeType":"6556","messageId":"6557","endLine":28,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6579","line":35,"column":9,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6580","line":39,"column":9,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6748","line":6,"column":10,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6839","line":6,"column":21,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6749","line":6,"column":27,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6925","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6900","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7068","line":25,"column":8,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7069","line":27,"column":8,"nodeType":"6556","messageId":"6557","endLine":27,"endColumn":37},{"ruleId":"6554","severity":1,"message":"7070","line":29,"column":8,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6731","line":39,"column":7,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6926","line":41,"column":9,"nodeType":"6556","messageId":"6557","endLine":41,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6577","line":42,"column":22,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6610","line":43,"column":11,"nodeType":"6556","messageId":"6557","endLine":43,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6632","line":43,"column":22,"nodeType":"6556","messageId":"6557","endLine":43,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6584","line":43,"column":33,"nodeType":"6556","messageId":"6557","endLine":43,"endColumn":46},{"ruleId":"6554","severity":1,"message":"7071","line":44,"column":11,"nodeType":"6556","messageId":"6557","endLine":44,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7072","line":44,"column":27,"nodeType":"6556","messageId":"6557","endLine":44,"endColumn":46},{"ruleId":"6554","severity":1,"message":"7073","line":55,"column":19,"nodeType":"6556","messageId":"6557","endLine":55,"endColumn":36},{"ruleId":"6554","severity":1,"message":"7074","line":56,"column":21,"nodeType":"6556","messageId":"6557","endLine":56,"endColumn":40},{"ruleId":"6554","severity":1,"message":"6713","line":57,"column":21,"nodeType":"6556","messageId":"6557","endLine":57,"endColumn":40},{"ruleId":"6554","severity":1,"message":"6628","line":60,"column":11,"nodeType":"6556","messageId":"6557","endLine":60,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6927","line":63,"column":9,"nodeType":"6556","messageId":"6557","endLine":63,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6928","line":74,"column":9,"nodeType":"6556","messageId":"6557","endLine":74,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6929","line":85,"column":9,"nodeType":"6556","messageId":"6557","endLine":85,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6930","line":96,"column":9,"nodeType":"6556","messageId":"6557","endLine":96,"endColumn":40},{"ruleId":"6591","severity":1,"message":"7075","line":110,"column":5,"nodeType":"6593","endLine":110,"endColumn":7,"suggestions":"7076"},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6899","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":12},{"ruleId":"6554","severity":1,"message":"6756","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6572","line":7,"column":10,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7077","line":9,"column":10,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6849","line":12,"column":7,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6965","line":14,"column":7,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":14},{"ruleId":"6591","severity":1,"message":"7078","line":77,"column":6,"nodeType":"6593","endLine":77,"endColumn":8,"suggestions":"7079"},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6756","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6747","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7080","line":15,"column":20,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7081","line":15,"column":31,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7082","line":17,"column":28,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6962","line":19,"column":16,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6963","line":19,"column":26,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6849","line":24,"column":7,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6965","line":26,"column":7,"nodeType":"6556","messageId":"6557","endLine":26,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6926","line":49,"column":9,"nodeType":"6556","messageId":"6557","endLine":49,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6632","line":50,"column":22,"nodeType":"6556","messageId":"6557","endLine":50,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6567","line":51,"column":11,"nodeType":"6556","messageId":"6557","endLine":51,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6577","line":52,"column":22,"nodeType":"6556","messageId":"6557","endLine":52,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6896","line":53,"column":10,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6878","line":53,"column":20,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6756","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6747","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7081","line":15,"column":20,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6967","line":16,"column":8,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6962","line":18,"column":16,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6963","line":18,"column":26,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6572","line":19,"column":10,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6675","line":19,"column":36,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":58},{"ruleId":"6554","severity":1,"message":"7083","line":22,"column":10,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6849","line":25,"column":7,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6965","line":27,"column":7,"nodeType":"6556","messageId":"6557","endLine":27,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6926","line":60,"column":9,"nodeType":"6556","messageId":"6557","endLine":60,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6577","line":61,"column":22,"nodeType":"6556","messageId":"6557","endLine":61,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6631","line":62,"column":21,"nodeType":"6556","messageId":"6557","endLine":62,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6674","line":62,"column":40,"nodeType":"6556","messageId":"6557","endLine":62,"endColumn":52},{"ruleId":"6554","severity":1,"message":"6896","line":63,"column":10,"nodeType":"6556","messageId":"6557","endLine":63,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6878","line":63,"column":20,"nodeType":"6556","messageId":"6557","endLine":63,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6665","line":67,"column":11,"nodeType":"6556","messageId":"6557","endLine":67,"endColumn":27},{"ruleId":"6554","severity":1,"message":"7084","line":67,"column":29,"nodeType":"6556","messageId":"6557","endLine":67,"endColumn":43},{"ruleId":"6554","severity":1,"message":"7085","line":67,"column":45,"nodeType":"6556","messageId":"6557","endLine":67,"endColumn":60},{"ruleId":"6591","severity":1,"message":"7086","line":72,"column":6,"nodeType":"6593","endLine":72,"endColumn":8,"suggestions":"7087"},{"ruleId":"6554","severity":1,"message":"6563","line":3,"column":22,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6670","line":8,"column":10,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6697","line":10,"column":7,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6965","line":12,"column":7,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6731","line":34,"column":7,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6938","line":36,"column":9,"nodeType":"6556","messageId":"6557","endLine":36,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6577","line":37,"column":22,"nodeType":"6556","messageId":"6557","endLine":37,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7088","line":38,"column":39,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":53},{"ruleId":"6591","severity":1,"message":"7089","line":43,"column":6,"nodeType":"6593","endLine":43,"endColumn":8,"suggestions":"7090"},{"ruleId":"6554","severity":1,"message":"6563","line":2,"column":22,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6675","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6676","line":17,"column":10,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6903","line":18,"column":8,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":19,"column":8,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6904","line":20,"column":8,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6905","line":21,"column":8,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6906","line":22,"column":8,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6945","line":23,"column":8,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6908","line":24,"column":10,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6955","line":27,"column":8,"nodeType":"6556","messageId":"6557","endLine":27,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6697","line":29,"column":7,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6965","line":31,"column":7,"nodeType":"6556","messageId":"6557","endLine":31,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6731","line":45,"column":7,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6577","line":47,"column":22,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6910","line":48,"column":10,"nodeType":"6556","messageId":"6557","endLine":48,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6677","line":49,"column":10,"nodeType":"6556","messageId":"6557","endLine":49,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6678","line":49,"column":25,"nodeType":"6556","messageId":"6557","endLine":49,"endColumn":41},{"ruleId":"6554","severity":1,"message":"6679","line":51,"column":9,"nodeType":"6556","messageId":"6557","endLine":51,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6956","line":52,"column":10,"nodeType":"6556","messageId":"6557","endLine":52,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6957","line":52,"column":22,"nodeType":"6556","messageId":"6557","endLine":52,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6947","line":53,"column":9,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7091","line":54,"column":9,"nodeType":"6556","messageId":"6557","endLine":54,"endColumn":14},{"ruleId":"6591","severity":1,"message":"7092","line":64,"column":6,"nodeType":"6593","endLine":64,"endColumn":8,"suggestions":"7093"},{"ruleId":"6554","severity":1,"message":"6617","line":66,"column":9,"nodeType":"6556","messageId":"6557","endLine":66,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6919","line":72,"column":9,"nodeType":"6556","messageId":"6557","endLine":72,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":15,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6945","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6563","line":11,"column":10,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6578","line":17,"column":7,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7094","line":40,"column":22,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7095","line":40,"column":41,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":55},{"ruleId":"6554","severity":1,"message":"6572","line":16,"column":10,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6675","line":16,"column":36,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":58},{"ruleId":"6554","severity":1,"message":"6632","line":69,"column":22,"nodeType":"6556","messageId":"6557","endLine":69,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6577","line":74,"column":22,"nodeType":"6556","messageId":"6557","endLine":74,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6628","line":76,"column":5,"nodeType":"6556","messageId":"6557","endLine":76,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7096","line":79,"column":5,"nodeType":"6556","messageId":"6557","endLine":79,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6589","line":89,"column":5,"nodeType":"6556","messageId":"6557","endLine":89,"endColumn":8},{"ruleId":"6591","severity":1,"message":"7097","line":162,"column":6,"nodeType":"6593","endLine":162,"endColumn":8,"suggestions":"7098"},{"ruleId":"6591","severity":1,"message":"7099","line":168,"column":6,"nodeType":"6593","endLine":168,"endColumn":8,"suggestions":"7100"},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6558","replacedBy":"7101"},{"ruleId":"6560","replacedBy":"7102"},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7027","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6577","line":62,"column":22,"nodeType":"6556","messageId":"6557","endLine":62,"endColumn":35},{"ruleId":"6591","severity":1,"message":"7103","line":78,"column":6,"nodeType":"6593","endLine":78,"endColumn":8,"suggestions":"7104"},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7105","line":10,"column":10,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6746","line":3,"column":31,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":37},{"ruleId":"6554","severity":1,"message":"6747","line":3,"column":39,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":43},{"ruleId":"6554","severity":1,"message":"7106","line":4,"column":10,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7107","line":72,"column":9,"nodeType":"6556","messageId":"6557","endLine":72,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6663","line":73,"column":10,"nodeType":"6556","messageId":"6557","endLine":73,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6664","line":73,"column":18,"nodeType":"6556","messageId":"6557","endLine":73,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6631","line":74,"column":21,"nodeType":"6556","messageId":"6557","endLine":74,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6674","line":74,"column":40,"nodeType":"6556","messageId":"6557","endLine":74,"endColumn":52},{"ruleId":"6554","severity":1,"message":"7108","line":75,"column":9,"nodeType":"6556","messageId":"6557","endLine":75,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7109","line":76,"column":9,"nodeType":"6556","messageId":"6557","endLine":76,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7110","line":80,"column":10,"nodeType":"6556","messageId":"6557","endLine":80,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7111","line":80,"column":24,"nodeType":"6556","messageId":"6557","endLine":80,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7112","line":81,"column":10,"nodeType":"6556","messageId":"6557","endLine":81,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7113","line":81,"column":24,"nodeType":"6556","messageId":"6557","endLine":81,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6577","line":83,"column":22,"nodeType":"6556","messageId":"6557","endLine":83,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7114","line":84,"column":11,"nodeType":"6556","messageId":"6557","endLine":84,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6705","line":88,"column":5,"nodeType":"6556","messageId":"6557","endLine":88,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7115","line":89,"column":5,"nodeType":"6556","messageId":"6557","endLine":89,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7116","line":90,"column":5,"nodeType":"6556","messageId":"6557","endLine":90,"endColumn":18},{"ruleId":"6591","severity":1,"message":"7086","line":98,"column":6,"nodeType":"6593","endLine":98,"endColumn":8,"suggestions":"7117"},{"ruleId":"6554","severity":1,"message":"6746","line":3,"column":31,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":37},{"ruleId":"6554","severity":1,"message":"6747","line":3,"column":39,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":43},{"ruleId":"6554","severity":1,"message":"7118","line":11,"column":3,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7119","line":25,"column":8,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7071","line":132,"column":11,"nodeType":"6556","messageId":"6557","endLine":132,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7072","line":132,"column":27,"nodeType":"6556","messageId":"6557","endLine":132,"endColumn":46},{"ruleId":"6554","severity":1,"message":"6633","line":134,"column":9,"nodeType":"6556","messageId":"6557","endLine":134,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6634","line":135,"column":9,"nodeType":"6556","messageId":"6557","endLine":135,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7112","line":139,"column":10,"nodeType":"6556","messageId":"6557","endLine":139,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7113","line":139,"column":24,"nodeType":"6556","messageId":"6557","endLine":139,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6577","line":140,"column":22,"nodeType":"6556","messageId":"6557","endLine":140,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7114","line":144,"column":11,"nodeType":"6556","messageId":"6557","endLine":144,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7120","line":151,"column":10,"nodeType":"6556","messageId":"6557","endLine":151,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7121","line":152,"column":10,"nodeType":"6556","messageId":"6557","endLine":152,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7122","line":152,"column":23,"nodeType":"6556","messageId":"6557","endLine":152,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7123","line":153,"column":9,"nodeType":"6556","messageId":"6557","endLine":153,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7124","line":154,"column":9,"nodeType":"6556","messageId":"6557","endLine":154,"endColumn":18},{"ruleId":"6591","severity":1,"message":"6931","line":161,"column":6,"nodeType":"6593","endLine":161,"endColumn":8,"suggestions":"7125"},{"ruleId":"6591","severity":1,"message":"7126","line":167,"column":6,"nodeType":"6593","endLine":167,"endColumn":14,"suggestions":"7127"},{"ruleId":"6591","severity":1,"message":"7128","line":173,"column":6,"nodeType":"6593","endLine":173,"endColumn":30,"suggestions":"7129"},{"ruleId":"6591","severity":1,"message":"7130","line":173,"column":7,"nodeType":"7131","endLine":173,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6920","line":249,"column":9,"nodeType":"6556","messageId":"6557","endLine":249,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7132","line":13,"column":8,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7066","line":14,"column":8,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7067","line":15,"column":8,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6579","line":25,"column":9,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6580","line":29,"column":9,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6999","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6746","line":7,"column":3,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6839","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6564","line":20,"column":3,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6925","line":22,"column":8,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7133","line":23,"column":8,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7134","line":24,"column":8,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6901","line":25,"column":8,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6908","line":26,"column":10,"nodeType":"6556","messageId":"6557","endLine":26,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6894","line":27,"column":10,"nodeType":"6556","messageId":"6557","endLine":27,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6964","line":28,"column":10,"nodeType":"6556","messageId":"6557","endLine":28,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7135","line":29,"column":8,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7136","line":30,"column":8,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7137","line":33,"column":8,"nodeType":"6556","messageId":"6557","endLine":33,"endColumn":31},{"ruleId":"6554","severity":1,"message":"7138","line":36,"column":8,"nodeType":"6556","messageId":"6557","endLine":36,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7139","line":39,"column":8,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":31},{"ruleId":"6554","severity":1,"message":"7140","line":42,"column":8,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6697","line":46,"column":7,"nodeType":"6556","messageId":"6557","endLine":46,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7141","line":48,"column":7,"nodeType":"6556","messageId":"6557","endLine":48,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7142","line":62,"column":7,"nodeType":"6556","messageId":"6557","endLine":62,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7143","line":77,"column":7,"nodeType":"6556","messageId":"6557","endLine":77,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7144","line":103,"column":7,"nodeType":"6556","messageId":"6557","endLine":103,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7145","line":132,"column":7,"nodeType":"6556","messageId":"6557","endLine":132,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6965","line":161,"column":7,"nodeType":"6556","messageId":"6557","endLine":161,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7146","line":212,"column":7,"nodeType":"6556","messageId":"6557","endLine":212,"endColumn":11},{"ruleId":"6554","severity":1,"message":"7147","line":229,"column":7,"nodeType":"6556","messageId":"6557","endLine":229,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7148","line":284,"column":7,"nodeType":"6556","messageId":"6557","endLine":284,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7149","line":409,"column":7,"nodeType":"6556","messageId":"6557","endLine":409,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6926","line":430,"column":9,"nodeType":"6556","messageId":"6557","endLine":430,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7150","line":431,"column":11,"nodeType":"6556","messageId":"6557","endLine":431,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7151","line":431,"column":27,"nodeType":"6556","messageId":"6557","endLine":431,"endColumn":41},{"ruleId":"6554","severity":1,"message":"7152","line":432,"column":10,"nodeType":"6556","messageId":"6557","endLine":432,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7153","line":432,"column":19,"nodeType":"6556","messageId":"6557","endLine":432,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7154","line":436,"column":10,"nodeType":"6556","messageId":"6557","endLine":436,"endColumn":27},{"ruleId":"6591","severity":1,"message":"6931","line":460,"column":6,"nodeType":"6593","endLine":460,"endColumn":8,"suggestions":"7155"},{"ruleId":"6554","severity":1,"message":"6999","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6605","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6839","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6606","line":15,"column":3,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":8},{"ruleId":"6554","severity":1,"message":"6925","line":22,"column":8,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7133","line":23,"column":8,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7134","line":24,"column":8,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6901","line":25,"column":8,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6908","line":26,"column":10,"nodeType":"6556","messageId":"6557","endLine":26,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6894","line":27,"column":10,"nodeType":"6556","messageId":"6557","endLine":27,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6964","line":28,"column":10,"nodeType":"6556","messageId":"6557","endLine":28,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7135","line":29,"column":8,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7136","line":30,"column":8,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7137","line":34,"column":8,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":31},{"ruleId":"6554","severity":1,"message":"7138","line":37,"column":8,"nodeType":"6556","messageId":"6557","endLine":37,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7139","line":40,"column":8,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6697","line":49,"column":7,"nodeType":"6556","messageId":"6557","endLine":49,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7141","line":51,"column":7,"nodeType":"6556","messageId":"6557","endLine":51,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7142","line":65,"column":7,"nodeType":"6556","messageId":"6557","endLine":65,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7143","line":80,"column":7,"nodeType":"6556","messageId":"6557","endLine":80,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7144","line":106,"column":7,"nodeType":"6556","messageId":"6557","endLine":106,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7145","line":135,"column":7,"nodeType":"6556","messageId":"6557","endLine":135,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6965","line":164,"column":7,"nodeType":"6556","messageId":"6557","endLine":164,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7146","line":215,"column":7,"nodeType":"6556","messageId":"6557","endLine":215,"endColumn":11},{"ruleId":"6554","severity":1,"message":"7147","line":232,"column":7,"nodeType":"6556","messageId":"6557","endLine":232,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7148","line":287,"column":7,"nodeType":"6556","messageId":"6557","endLine":287,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6926","line":414,"column":9,"nodeType":"6556","messageId":"6557","endLine":414,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7150","line":415,"column":11,"nodeType":"6556","messageId":"6557","endLine":415,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7151","line":415,"column":27,"nodeType":"6556","messageId":"6557","endLine":415,"endColumn":41},{"ruleId":"6554","severity":1,"message":"7152","line":416,"column":10,"nodeType":"6556","messageId":"6557","endLine":416,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7153","line":416,"column":19,"nodeType":"6556","messageId":"6557","endLine":416,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7154","line":420,"column":11,"nodeType":"6556","messageId":"6557","endLine":420,"endColumn":28},{"ruleId":"6591","severity":1,"message":"6931","line":444,"column":7,"nodeType":"6593","endLine":444,"endColumn":9,"suggestions":"7156"},{"ruleId":"6554","severity":1,"message":"6569","line":12,"column":10,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7064","line":12,"column":15,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7157","line":14,"column":8,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7066","line":18,"column":8,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7067","line":19,"column":8,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6580","line":32,"column":9,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7157","line":14,"column":8,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7066","line":18,"column":8,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7067","line":19,"column":8,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6580","line":34,"column":9,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6748","line":5,"column":10,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6747","line":5,"column":21,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6746","line":5,"column":27,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":33},{"ruleId":"6554","severity":1,"message":"6669","line":5,"column":35,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6574","line":8,"column":10,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6573","line":8,"column":29,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":43},{"ruleId":"6554","severity":1,"message":"7107","line":37,"column":9,"nodeType":"6556","messageId":"6557","endLine":37,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7158","line":41,"column":9,"nodeType":"6556","messageId":"6557","endLine":41,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7159","line":42,"column":9,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6577","line":45,"column":22,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6677","line":47,"column":10,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6678","line":47,"column":25,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":41},{"ruleId":"6554","severity":1,"message":"7160","line":50,"column":10,"nodeType":"6556","messageId":"6557","endLine":50,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7161","line":50,"column":27,"nodeType":"6556","messageId":"6557","endLine":50,"endColumn":45},{"ruleId":"6554","severity":1,"message":"7162","line":52,"column":10,"nodeType":"6556","messageId":"6557","endLine":52,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6679","line":53,"column":10,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7163","line":55,"column":10,"nodeType":"6556","messageId":"6557","endLine":55,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7164","line":55,"column":23,"nodeType":"6556","messageId":"6557","endLine":55,"endColumn":37},{"ruleId":"6554","severity":1,"message":"7165","line":65,"column":5,"nodeType":"6556","messageId":"6557","endLine":65,"endColumn":27},{"ruleId":"6554","severity":1,"message":"7166","line":67,"column":5,"nodeType":"6556","messageId":"6557","endLine":67,"endColumn":28},{"ruleId":"6554","severity":1,"message":"7167","line":68,"column":5,"nodeType":"6556","messageId":"6557","endLine":68,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6825","line":70,"column":5,"nodeType":"6556","messageId":"6557","endLine":70,"endColumn":34},{"ruleId":"6591","severity":1,"message":"7168","line":75,"column":6,"nodeType":"6593","endLine":75,"endColumn":21,"suggestions":"7169"},{"ruleId":"6554","severity":1,"message":"6954","line":139,"column":9,"nodeType":"6556","messageId":"6557","endLine":139,"endColumn":33},{"ruleId":"6554","severity":1,"message":"7170","line":233,"column":9,"nodeType":"6556","messageId":"6557","endLine":233,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7171","line":11,"column":10,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7172","line":18,"column":7,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7173","line":19,"column":7,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6985","line":30,"column":7,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7174","line":36,"column":11,"nodeType":"6556","messageId":"6557","endLine":36,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6577","line":40,"column":22,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7175","line":41,"column":10,"nodeType":"6556","messageId":"6557","endLine":41,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7176","line":41,"column":24,"nodeType":"6556","messageId":"6557","endLine":41,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7177","line":42,"column":10,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7178","line":42,"column":17,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":25},{"ruleId":"6591","severity":1,"message":"7179","line":60,"column":6,"nodeType":"6593","endLine":60,"endColumn":8,"suggestions":"7180"},{"ruleId":"6554","severity":1,"message":"6563","line":2,"column":22,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7106","line":8,"column":10,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7181","line":9,"column":10,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7182","line":102,"column":9,"nodeType":"6556","messageId":"6557","endLine":102,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6817","line":104,"column":24,"nodeType":"6556","messageId":"6557","endLine":104,"endColumn":37},{"ruleId":"6554","severity":1,"message":"7061","line":109,"column":5,"nodeType":"6556","messageId":"6557","endLine":109,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7183","line":111,"column":9,"nodeType":"6556","messageId":"6557","endLine":111,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6577","line":120,"column":22,"nodeType":"6556","messageId":"6557","endLine":120,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7160","line":121,"column":10,"nodeType":"6556","messageId":"6557","endLine":121,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7161","line":121,"column":27,"nodeType":"6556","messageId":"6557","endLine":121,"endColumn":45},{"ruleId":"6554","severity":1,"message":"6957","line":128,"column":22,"nodeType":"6556","messageId":"6557","endLine":128,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7184","line":129,"column":10,"nodeType":"6556","messageId":"6557","endLine":129,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7185","line":129,"column":24,"nodeType":"6556","messageId":"6557","endLine":129,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7186","line":130,"column":10,"nodeType":"6556","messageId":"6557","endLine":130,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7187","line":130,"column":24,"nodeType":"6556","messageId":"6557","endLine":130,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7188","line":131,"column":10,"nodeType":"6556","messageId":"6557","endLine":131,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7189","line":131,"column":18,"nodeType":"6556","messageId":"6557","endLine":131,"endColumn":27},{"ruleId":"6554","severity":1,"message":"7190","line":132,"column":10,"nodeType":"6556","messageId":"6557","endLine":132,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7191","line":132,"column":19,"nodeType":"6556","messageId":"6557","endLine":132,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7192","line":137,"column":9,"nodeType":"6556","messageId":"6557","endLine":137,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7193","line":138,"column":10,"nodeType":"6556","messageId":"6557","endLine":138,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7194","line":138,"column":22,"nodeType":"6556","messageId":"6557","endLine":138,"endColumn":35},{"ruleId":"6591","severity":1,"message":"6829","line":163,"column":6,"nodeType":"6593","endLine":163,"endColumn":35,"suggestions":"7195"},{"ruleId":"6554","severity":1,"message":"7196","line":200,"column":9,"nodeType":"6556","messageId":"6557","endLine":200,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6621","line":201,"column":13,"nodeType":"6556","messageId":"6557","endLine":201,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7197","line":201,"column":17,"nodeType":"6556","messageId":"6557","endLine":201,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7198","line":201,"column":27,"nodeType":"6556","messageId":"6557","endLine":201,"endColumn":34},{"ruleId":"7199","severity":1,"message":"7200","line":205,"column":22,"nodeType":"7201","messageId":"7202","endLine":205,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7203","line":223,"column":9,"nodeType":"6556","messageId":"6557","endLine":223,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7204","line":236,"column":9,"nodeType":"6556","messageId":"6557","endLine":236,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7205","line":322,"column":9,"nodeType":"6556","messageId":"6557","endLine":322,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7206","line":425,"column":9,"nodeType":"6556","messageId":"6557","endLine":425,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6945","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6563","line":11,"column":10,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6578","line":16,"column":7,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6756","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6967","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6747","line":12,"column":3,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7081","line":17,"column":20,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6962","line":18,"column":16,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6963","line":18,"column":26,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6572","line":19,"column":10,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6675","line":19,"column":36,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":58},{"ruleId":"6554","severity":1,"message":"7077","line":23,"column":10,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6849","line":26,"column":7,"nodeType":"6556","messageId":"6557","endLine":26,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6926","line":45,"column":9,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6631","line":46,"column":19,"nodeType":"6556","messageId":"6557","endLine":46,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6653","line":46,"column":38,"nodeType":"6556","messageId":"6557","endLine":46,"endColumn":48},{"ruleId":"6554","severity":1,"message":"6577","line":47,"column":22,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6896","line":48,"column":10,"nodeType":"6556","messageId":"6557","endLine":48,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6878","line":48,"column":20,"nodeType":"6556","messageId":"6557","endLine":48,"endColumn":31},{"ruleId":"6554","severity":1,"message":"7114","line":52,"column":11,"nodeType":"6556","messageId":"6557","endLine":52,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6636","line":53,"column":11,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7207","line":53,"column":27,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7208","line":53,"column":41,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":54},{"ruleId":"6591","severity":1,"message":"7086","line":57,"column":6,"nodeType":"6593","endLine":57,"endColumn":8,"suggestions":"7209"},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6936","line":2,"column":25,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6563","line":4,"column":22,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6573","line":5,"column":29,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6937","line":7,"column":3,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6730","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7030","line":11,"column":10,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6670","line":12,"column":10,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6697","line":15,"column":7,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6731","line":85,"column":7,"nodeType":"6556","messageId":"6557","endLine":85,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6938","line":88,"column":9,"nodeType":"6556","messageId":"6557","endLine":88,"endColumn":26},{"ruleId":"6558","replacedBy":"7210"},{"ruleId":"6560","replacedBy":"7211"},{"ruleId":"6554","severity":1,"message":"6756","line":3,"column":8,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7212","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6605","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6976","line":16,"column":3,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7044","line":41,"column":9,"nodeType":"6556","messageId":"6557","endLine":41,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7213","line":43,"column":9,"nodeType":"6556","messageId":"6557","endLine":43,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7214","line":47,"column":10,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6655","line":49,"column":17,"nodeType":"6556","messageId":"6557","endLine":49,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6588","line":55,"column":5,"nodeType":"6556","messageId":"6557","endLine":55,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7215","line":56,"column":5,"nodeType":"6556","messageId":"6557","endLine":56,"endColumn":10},{"ruleId":"6554","severity":1,"message":"7216","line":57,"column":18,"nodeType":"6556","messageId":"6557","endLine":57,"endColumn":24},{"ruleId":"6558","replacedBy":"6559"},{"ruleId":"6560","replacedBy":"6561"},{"ruleId":"6554","severity":1,"message":"7217","line":1,"column":23,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":45},{"ruleId":"6554","severity":1,"message":"7106","line":14,"column":10,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7218","line":18,"column":31,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7219","line":75,"column":5,"nodeType":"6556","messageId":"6557","endLine":75,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6589","line":84,"column":5,"nodeType":"6556","messageId":"6557","endLine":84,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7220","line":97,"column":5,"nodeType":"6556","messageId":"6557","endLine":97,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7221","line":98,"column":5,"nodeType":"6556","messageId":"6557","endLine":98,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7214","line":100,"column":5,"nodeType":"6556","messageId":"6557","endLine":100,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7222","line":112,"column":5,"nodeType":"6556","messageId":"6557","endLine":112,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7223","line":121,"column":10,"nodeType":"6556","messageId":"6557","endLine":121,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7224","line":121,"column":20,"nodeType":"6556","messageId":"6557","endLine":121,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6577","line":124,"column":22,"nodeType":"6556","messageId":"6557","endLine":124,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7107","line":16,"column":9,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7225","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":27},{"ruleId":"6554","severity":1,"message":"7226","line":9,"column":10,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6894","line":4,"column":10,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6573","line":4,"column":26,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":40},{"ruleId":"6554","severity":1,"message":"7227","line":5,"column":10,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7030","line":6,"column":10,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":28},{"ruleId":"6554","severity":1,"message":"7228","line":11,"column":9,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6945","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6563","line":12,"column":22,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6573","line":13,"column":45,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":59},{"ruleId":"6554","severity":1,"message":"6937","line":15,"column":3,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6730","line":16,"column":3,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6670","line":21,"column":10,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6577","line":54,"column":22,"nodeType":"6556","messageId":"6557","endLine":54,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7229","line":56,"column":10,"nodeType":"6556","messageId":"6557","endLine":56,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7230","line":56,"column":15,"nodeType":"6556","messageId":"6557","endLine":56,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6765","line":67,"column":5,"nodeType":"6556","messageId":"6557","endLine":67,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7231","line":68,"column":5,"nodeType":"6556","messageId":"6557","endLine":68,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6893","line":85,"column":9,"nodeType":"6556","messageId":"6557","endLine":85,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7232","line":94,"column":9,"nodeType":"6556","messageId":"6557","endLine":94,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6621","line":95,"column":13,"nodeType":"6556","messageId":"6557","endLine":95,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7233","line":102,"column":9,"nodeType":"6556","messageId":"6557","endLine":102,"endColumn":23},{"ruleId":"6591","severity":1,"message":"7086","line":111,"column":6,"nodeType":"6593","endLine":111,"endColumn":8,"suggestions":"7234"},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6746","line":5,"column":15,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6747","line":5,"column":23,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6754","line":7,"column":10,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7114","line":48,"column":11,"nodeType":"6556","messageId":"6557","endLine":48,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7059","line":4,"column":10,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7235","line":33,"column":5,"nodeType":"6556","messageId":"6557","endLine":33,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6939","line":36,"column":5,"nodeType":"6556","messageId":"6557","endLine":36,"endColumn":11},{"ruleId":"6554","severity":1,"message":"7236","line":38,"column":17,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":37},{"ruleId":"6554","severity":1,"message":"7237","line":38,"column":39,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":59},{"ruleId":"6554","severity":1,"message":"7238","line":1,"column":8,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6756","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6747","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7080","line":16,"column":20,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7082","line":17,"column":28,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6962","line":20,"column":16,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6963","line":20,"column":26,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6849","line":27,"column":7,"nodeType":"6556","messageId":"6557","endLine":27,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6965","line":32,"column":7,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6926","line":56,"column":9,"nodeType":"6556","messageId":"6557","endLine":56,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6632","line":57,"column":22,"nodeType":"6556","messageId":"6557","endLine":57,"endColumn":31},{"ruleId":"6554","severity":1,"message":"7239","line":58,"column":10,"nodeType":"6556","messageId":"6557","endLine":58,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7240","line":58,"column":21,"nodeType":"6556","messageId":"6557","endLine":58,"endColumn":33},{"ruleId":"6554","severity":1,"message":"6567","line":59,"column":11,"nodeType":"6556","messageId":"6557","endLine":59,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6815","line":60,"column":10,"nodeType":"6556","messageId":"6557","endLine":60,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6577","line":60,"column":22,"nodeType":"6556","messageId":"6557","endLine":60,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6896","line":61,"column":10,"nodeType":"6556","messageId":"6557","endLine":61,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6878","line":61,"column":20,"nodeType":"6556","messageId":"6557","endLine":61,"endColumn":31},{"ruleId":"6554","severity":1,"message":"7114","line":64,"column":5,"nodeType":"6556","messageId":"6557","endLine":64,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6612","line":65,"column":5,"nodeType":"6556","messageId":"6557","endLine":65,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7241","line":70,"column":5,"nodeType":"6556","messageId":"6557","endLine":70,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7242","line":79,"column":9,"nodeType":"6556","messageId":"6557","endLine":79,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6747","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7080","line":14,"column":20,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7082","line":16,"column":28,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6962","line":17,"column":16,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6963","line":17,"column":26,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6572","line":18,"column":10,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6675","line":18,"column":36,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":58},{"ruleId":"6554","severity":1,"message":"7243","line":21,"column":10,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7077","line":22,"column":10,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6849","line":26,"column":7,"nodeType":"6556","messageId":"6557","endLine":26,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6926","line":31,"column":9,"nodeType":"6556","messageId":"6557","endLine":31,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6631","line":32,"column":22,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6632","line":32,"column":30,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7244","line":32,"column":41,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":54},{"ruleId":"6554","severity":1,"message":"6815","line":33,"column":10,"nodeType":"6556","messageId":"6557","endLine":33,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6577","line":33,"column":22,"nodeType":"6556","messageId":"6557","endLine":33,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6610","line":35,"column":11,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7114","line":37,"column":5,"nodeType":"6556","messageId":"6557","endLine":37,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6612","line":38,"column":5,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7241","line":43,"column":5,"nodeType":"6556","messageId":"6557","endLine":43,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7107","line":14,"column":9,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7107","line":14,"column":9,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"7245","line":5,"column":28,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":46},{"ruleId":"6554","severity":1,"message":"6756","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6967","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6747","line":13,"column":3,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6962","line":19,"column":16,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6963","line":19,"column":26,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6572","line":20,"column":10,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6675","line":20,"column":36,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":58},{"ruleId":"6554","severity":1,"message":"7077","line":24,"column":10,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6849","line":29,"column":7,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6926","line":58,"column":9,"nodeType":"6556","messageId":"6557","endLine":58,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6631","line":59,"column":19,"nodeType":"6556","messageId":"6557","endLine":59,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6632","line":59,"column":27,"nodeType":"6556","messageId":"6557","endLine":59,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6653","line":59,"column":38,"nodeType":"6556","messageId":"6557","endLine":59,"endColumn":48},{"ruleId":"6554","severity":1,"message":"6815","line":60,"column":10,"nodeType":"6556","messageId":"6557","endLine":60,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6577","line":60,"column":22,"nodeType":"6556","messageId":"6557","endLine":60,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6896","line":61,"column":10,"nodeType":"6556","messageId":"6557","endLine":61,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6878","line":61,"column":20,"nodeType":"6556","messageId":"6557","endLine":61,"endColumn":31},{"ruleId":"6554","severity":1,"message":"7114","line":66,"column":11,"nodeType":"6556","messageId":"6557","endLine":66,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6636","line":68,"column":11,"nodeType":"6556","messageId":"6557","endLine":68,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7207","line":68,"column":27,"nodeType":"6556","messageId":"6557","endLine":68,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7208","line":68,"column":41,"nodeType":"6556","messageId":"6557","endLine":68,"endColumn":54},{"ruleId":"6554","severity":1,"message":"7246","line":72,"column":5,"nodeType":"6556","messageId":"6557","endLine":72,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6637","line":73,"column":5,"nodeType":"6556","messageId":"6557","endLine":73,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6638","line":74,"column":5,"nodeType":"6556","messageId":"6557","endLine":74,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6912","line":75,"column":5,"nodeType":"6556","messageId":"6557","endLine":75,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6915","line":78,"column":5,"nodeType":"6556","messageId":"6557","endLine":78,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6916","line":79,"column":5,"nodeType":"6556","messageId":"6557","endLine":79,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6747","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7080","line":14,"column":20,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7081","line":14,"column":31,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7082","line":16,"column":28,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6962","line":17,"column":16,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6963","line":17,"column":26,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6572","line":18,"column":10,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6675","line":18,"column":36,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":58},{"ruleId":"6554","severity":1,"message":"6670","line":20,"column":10,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7243","line":21,"column":10,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7077","line":22,"column":10,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6849","line":25,"column":7,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6926","line":30,"column":9,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6631","line":31,"column":22,"nodeType":"6556","messageId":"6557","endLine":31,"endColumn":28},{"ruleId":"6554","severity":1,"message":"7244","line":31,"column":41,"nodeType":"6556","messageId":"6557","endLine":31,"endColumn":54},{"ruleId":"6554","severity":1,"message":"6577","line":32,"column":22,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":35},{"ruleId":"6591","severity":1,"message":"7086","line":37,"column":6,"nodeType":"6593","endLine":37,"endColumn":8,"suggestions":"7247"},{"ruleId":"6558","replacedBy":"7248"},{"ruleId":"6560","replacedBy":"7249"},{"ruleId":"6558","replacedBy":"7250"},{"ruleId":"6560","replacedBy":"7251"},{"ruleId":"6554","severity":1,"message":"7238","line":1,"column":8,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7252","line":3,"column":10,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6746","line":3,"column":3,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6747","line":4,"column":3,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6669","line":13,"column":8,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6670","line":14,"column":10,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6651","line":20,"column":10,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6652","line":36,"column":11,"nodeType":"6556","messageId":"6557","endLine":36,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6631","line":36,"column":19,"nodeType":"6556","messageId":"6557","endLine":36,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6632","line":36,"column":27,"nodeType":"6556","messageId":"6557","endLine":36,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6653","line":36,"column":38,"nodeType":"6556","messageId":"6557","endLine":36,"endColumn":48},{"ruleId":"6554","severity":1,"message":"6654","line":39,"column":10,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6655","line":39,"column":17,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6577","line":40,"column":22,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6656","line":42,"column":9,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6662","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6631","line":90,"column":19,"nodeType":"6556","messageId":"6557","endLine":90,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6632","line":90,"column":27,"nodeType":"6556","messageId":"6557","endLine":90,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6633","line":91,"column":9,"nodeType":"6556","messageId":"6557","endLine":91,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6634","line":92,"column":9,"nodeType":"6556","messageId":"6557","endLine":92,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6635","line":97,"column":11,"nodeType":"6556","messageId":"6557","endLine":97,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6636","line":101,"column":5,"nodeType":"6556","messageId":"6557","endLine":101,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6637","line":102,"column":5,"nodeType":"6556","messageId":"6557","endLine":102,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6638","line":103,"column":5,"nodeType":"6556","messageId":"6557","endLine":103,"endColumn":15},{"ruleId":"6591","severity":1,"message":"6639","line":113,"column":6,"nodeType":"6593","endLine":113,"endColumn":8,"suggestions":"7253"},{"ruleId":"6554","severity":1,"message":"6641","line":135,"column":9,"nodeType":"6556","messageId":"6557","endLine":135,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6747","line":3,"column":39,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6577","line":105,"column":22,"nodeType":"6556","messageId":"6557","endLine":105,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7254","line":117,"column":27,"nodeType":"6556","messageId":"6557","endLine":117,"endColumn":48},{"ruleId":"6554","severity":1,"message":"7255","line":123,"column":9,"nodeType":"6556","messageId":"6557","endLine":123,"endColumn":34},{"ruleId":"6554","severity":1,"message":"7256","line":132,"column":9,"nodeType":"6556","messageId":"6557","endLine":132,"endColumn":33},{"ruleId":"6554","severity":1,"message":"7257","line":226,"column":9,"nodeType":"6556","messageId":"6557","endLine":226,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6662","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6670","line":17,"column":10,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6815","line":77,"column":10,"nodeType":"6556","messageId":"6557","endLine":77,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6577","line":77,"column":22,"nodeType":"6556","messageId":"6557","endLine":77,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6663","line":78,"column":10,"nodeType":"6556","messageId":"6557","endLine":78,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6664","line":78,"column":18,"nodeType":"6556","messageId":"6557","endLine":78,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6665","line":86,"column":5,"nodeType":"6556","messageId":"6557","endLine":86,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6933","line":109,"column":9,"nodeType":"6556","messageId":"6557","endLine":109,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6934","line":118,"column":9,"nodeType":"6556","messageId":"6557","endLine":118,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6935","line":165,"column":9,"nodeType":"6556","messageId":"6557","endLine":165,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7107","line":16,"column":9,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":14},{"ruleId":"6558","replacedBy":"7258"},{"ruleId":"6560","replacedBy":"7259"},{"ruleId":"6554","severity":1,"message":"6936","line":2,"column":25,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6563","line":4,"column":22,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6573","line":5,"column":29,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6937","line":7,"column":3,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6730","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6670","line":12,"column":10,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6731","line":84,"column":7,"nodeType":"6556","messageId":"6557","endLine":84,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6938","line":86,"column":9,"nodeType":"6556","messageId":"6557","endLine":86,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6713","line":92,"column":5,"nodeType":"6556","messageId":"6557","endLine":92,"endColumn":24},{"ruleId":"6591","severity":1,"message":"7260","line":98,"column":6,"nodeType":"6593","endLine":98,"endColumn":8,"suggestions":"7261"},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7262","line":2,"column":8,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7056","line":3,"column":8,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":12},{"ruleId":"6554","severity":1,"message":"7058","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6834","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6835","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7057","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6836","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6746","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6750","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6837","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6662","line":12,"column":8,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6649","line":13,"column":8,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6566","line":14,"column":8,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6565","line":15,"column":8,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7044","line":19,"column":9,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6936","line":2,"column":25,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6563","line":5,"column":22,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6573","line":6,"column":29,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6937","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6730","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6670","line":13,"column":10,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6697","line":16,"column":7,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6731","line":45,"column":7,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6938","line":47,"column":9,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6939","line":48,"column":11,"nodeType":"6556","messageId":"6557","endLine":48,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6710","line":48,"column":19,"nodeType":"6556","messageId":"6557","endLine":48,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6940","line":48,"column":29,"nodeType":"6556","messageId":"6557","endLine":48,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6713","line":48,"column":45,"nodeType":"6556","messageId":"6557","endLine":48,"endColumn":64},{"ruleId":"6591","severity":1,"message":"6941","line":56,"column":6,"nodeType":"6593","endLine":56,"endColumn":8,"suggestions":"7263"},{"ruleId":"6554","severity":1,"message":"6563","line":2,"column":22,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6936","line":3,"column":25,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6675","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6676","line":17,"column":10,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6903","line":18,"column":8,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":19,"column":8,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6904","line":20,"column":8,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6905","line":21,"column":8,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6906","line":22,"column":8,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6945","line":23,"column":8,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6908","line":24,"column":10,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6697","line":29,"column":7,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6731","line":45,"column":7,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6910","line":49,"column":10,"nodeType":"6556","messageId":"6557","endLine":49,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6677","line":50,"column":10,"nodeType":"6556","messageId":"6557","endLine":50,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6678","line":50,"column":25,"nodeType":"6556","messageId":"6557","endLine":50,"endColumn":41},{"ruleId":"6554","severity":1,"message":"6679","line":52,"column":9,"nodeType":"6556","messageId":"6557","endLine":52,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6956","line":53,"column":10,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6957","line":53,"column":22,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6947","line":54,"column":9,"nodeType":"6556","messageId":"6557","endLine":54,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6958","line":58,"column":5,"nodeType":"6556","messageId":"6557","endLine":58,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6959","line":59,"column":5,"nodeType":"6556","messageId":"6557","endLine":59,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6948","line":60,"column":5,"nodeType":"6556","messageId":"6557","endLine":60,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6949","line":61,"column":5,"nodeType":"6556","messageId":"6557","endLine":61,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6709","line":62,"column":5,"nodeType":"6556","messageId":"6557","endLine":62,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6950","line":63,"column":5,"nodeType":"6556","messageId":"6557","endLine":63,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6951","line":64,"column":5,"nodeType":"6556","messageId":"6557","endLine":64,"endColumn":33},{"ruleId":"6554","severity":1,"message":"6952","line":65,"column":5,"nodeType":"6556","messageId":"6557","endLine":65,"endColumn":34},{"ruleId":"6554","severity":1,"message":"6953","line":66,"column":5,"nodeType":"6556","messageId":"6557","endLine":66,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6680","line":67,"column":5,"nodeType":"6556","messageId":"6557","endLine":67,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6706","line":68,"column":5,"nodeType":"6556","messageId":"6557","endLine":68,"endColumn":33},{"ruleId":"6591","severity":1,"message":"7264","line":73,"column":6,"nodeType":"6593","endLine":73,"endColumn":8,"suggestions":"7265"},{"ruleId":"6554","severity":1,"message":"6617","line":75,"column":9,"nodeType":"6556","messageId":"6557","endLine":75,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6919","line":81,"column":9,"nodeType":"6556","messageId":"6557","endLine":81,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6748","line":3,"column":10,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6669","line":3,"column":21,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6903","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6904","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6905","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6906","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6907","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6908","line":12,"column":10,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6909","line":13,"column":10,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6697","line":18,"column":7,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6910","line":39,"column":10,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6946","line":39,"column":24,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6911","line":40,"column":10,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7266","line":40,"column":23,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":37},{"ruleId":"6554","severity":1,"message":"7267","line":41,"column":10,"nodeType":"6556","messageId":"6557","endLine":41,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6635","line":43,"column":11,"nodeType":"6556","messageId":"6557","endLine":43,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7268","line":44,"column":11,"nodeType":"6556","messageId":"6557","endLine":44,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7269","line":44,"column":27,"nodeType":"6556","messageId":"6557","endLine":44,"endColumn":41},{"ruleId":"6591","severity":1,"message":"7270","line":52,"column":6,"nodeType":"6593","endLine":52,"endColumn":8,"suggestions":"7271"},{"ruleId":"6591","severity":1,"message":"7272","line":59,"column":6,"nodeType":"6593","endLine":59,"endColumn":14,"suggestions":"7273"},{"ruleId":"6554","severity":1,"message":"7274","line":2,"column":15,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6748","line":3,"column":10,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6669","line":3,"column":21,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6654","line":4,"column":7,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":12},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6748","line":3,"column":10,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6669","line":3,"column":21,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6903","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6904","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6905","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6906","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6907","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6908","line":11,"column":10,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6909","line":12,"column":10,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6697","line":17,"column":7,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6910","line":38,"column":10,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6946","line":38,"column":24,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6911","line":39,"column":10,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7266","line":39,"column":23,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":37},{"ruleId":"6554","severity":1,"message":"6635","line":40,"column":11,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7269","line":41,"column":27,"nodeType":"6556","messageId":"6557","endLine":41,"endColumn":41},{"ruleId":"6554","severity":1,"message":"7150","line":42,"column":11,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7151","line":42,"column":27,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":41},{"ruleId":"6558","replacedBy":"7275"},{"ruleId":"6560","replacedBy":"7276"},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6936","line":2,"column":25,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6748","line":3,"column":10,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6669","line":3,"column":21,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6746","line":5,"column":15,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7064","line":5,"column":23,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6564","line":5,"column":31,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6903","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6904","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6905","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6906","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6907","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6908","line":12,"column":10,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6909","line":13,"column":10,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7277","line":15,"column":8,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6697","line":17,"column":7,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":19},{"ruleId":"6591","severity":1,"message":"7278","line":64,"column":6,"nodeType":"6593","endLine":64,"endColumn":8,"suggestions":"7279"},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6748","line":3,"column":10,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6669","line":3,"column":21,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6903","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6904","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6905","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6906","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6907","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6908","line":11,"column":10,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6909","line":12,"column":10,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6670","line":14,"column":10,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7152","line":86,"column":10,"nodeType":"6556","messageId":"6557","endLine":86,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7153","line":86,"column":19,"nodeType":"6556","messageId":"6557","endLine":86,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7150","line":87,"column":11,"nodeType":"6556","messageId":"6557","endLine":87,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7280","line":87,"column":27,"nodeType":"6556","messageId":"6557","endLine":87,"endColumn":43},{"ruleId":"6554","severity":1,"message":"7281","line":87,"column":45,"nodeType":"6556","messageId":"6557","endLine":87,"endColumn":62},{"ruleId":"6554","severity":1,"message":"6748","line":3,"column":10,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6669","line":3,"column":21,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6903","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6904","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6905","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6906","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6907","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6908","line":11,"column":10,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6909","line":12,"column":10,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7282","line":13,"column":10,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6670","line":14,"column":10,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":29},{"ruleId":"6591","severity":1,"message":"6941","line":94,"column":6,"nodeType":"6593","endLine":94,"endColumn":8,"suggestions":"7283"},{"ruleId":"6591","severity":1,"message":"7284","line":101,"column":5,"nodeType":"6593","endLine":101,"endColumn":13,"suggestions":"7285"},{"ruleId":"6554","severity":1,"message":"7035","line":1,"column":38,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":45},{"ruleId":"6554","severity":1,"message":"6748","line":5,"column":10,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6669","line":5,"column":21,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6903","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6904","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6905","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6906","line":12,"column":8,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6907","line":13,"column":8,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6908","line":14,"column":10,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6909","line":15,"column":10,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7286","line":95,"column":9,"nodeType":"6556","messageId":"6557","endLine":95,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7150","line":96,"column":11,"nodeType":"6556","messageId":"6557","endLine":96,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7280","line":96,"column":27,"nodeType":"6556","messageId":"6557","endLine":96,"endColumn":43},{"ruleId":"6554","severity":1,"message":"7281","line":96,"column":45,"nodeType":"6556","messageId":"6557","endLine":96,"endColumn":62},{"ruleId":"6554","severity":1,"message":"7114","line":103,"column":5,"nodeType":"6556","messageId":"6557","endLine":103,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6612","line":104,"column":5,"nodeType":"6556","messageId":"6557","endLine":104,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7241","line":109,"column":5,"nodeType":"6556","messageId":"6557","endLine":109,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6622","line":133,"column":13,"nodeType":"6556","messageId":"6557","endLine":133,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7287","line":134,"column":13,"nodeType":"6556","messageId":"6557","endLine":134,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6625","line":135,"column":13,"nodeType":"6556","messageId":"6557","endLine":135,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7288","line":136,"column":13,"nodeType":"6556","messageId":"6557","endLine":136,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7289","line":137,"column":13,"nodeType":"6556","messageId":"6557","endLine":137,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7290","line":138,"column":13,"nodeType":"6556","messageId":"6557","endLine":138,"endColumn":27},{"ruleId":"6554","severity":1,"message":"7220","line":139,"column":13,"nodeType":"6556","messageId":"6557","endLine":139,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7221","line":140,"column":13,"nodeType":"6556","messageId":"6557","endLine":140,"endColumn":21},{"ruleId":"6591","severity":1,"message":"7291","line":184,"column":6,"nodeType":"6593","endLine":184,"endColumn":8,"suggestions":"7292"},{"ruleId":"6554","severity":1,"message":"6748","line":4,"column":10,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6749","line":4,"column":27,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6925","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7133","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7293","line":24,"column":8,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7294","line":25,"column":8,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6926","line":34,"column":9,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6815","line":35,"column":10,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6577","line":35,"column":22,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7295","line":48,"column":11,"nodeType":"6556","messageId":"6557","endLine":48,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6958","line":49,"column":11,"nodeType":"6556","messageId":"6557","endLine":49,"endColumn":26},{"ruleId":"6591","severity":1,"message":"6960","line":98,"column":5,"nodeType":"6593","endLine":98,"endColumn":7,"suggestions":"7296"},{"ruleId":"6554","severity":1,"message":"6603","line":2,"column":10,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6746","line":4,"column":10,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7053","line":15,"column":10,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6731","line":18,"column":9,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6577","line":19,"column":22,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6604","line":20,"column":11,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7054","line":21,"column":10,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7055","line":21,"column":16,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7297","line":22,"column":9,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7035","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6569","line":3,"column":3,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":6},{"ruleId":"6554","severity":1,"message":"7059","line":4,"column":3,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":10},{"ruleId":"6554","severity":1,"message":"7298","line":15,"column":10,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7035","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6759","line":7,"column":3,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":11},{"ruleId":"6554","severity":1,"message":"7059","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":10},{"ruleId":"6554","severity":1,"message":"6974","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7004","line":14,"column":3,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":5},{"ruleId":"6554","severity":1,"message":"7039","line":16,"column":3,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":9},{"ruleId":"6554","severity":1,"message":"7299","line":80,"column":14,"nodeType":"6556","messageId":"6557","endLine":80,"endColumn":28},{"ruleId":"6591","severity":1,"message":"7300","line":118,"column":5,"nodeType":"6593","endLine":118,"endColumn":23,"suggestions":"7301"},{"ruleId":"6591","severity":1,"message":"6611","line":182,"column":19,"nodeType":"7302","endLine":182,"endColumn":32},{"ruleId":"7303","severity":1,"message":"7304","line":140,"column":3,"nodeType":"7305","messageId":"7306","endLine":151,"endColumn":4},{"ruleId":"6558","replacedBy":"7307"},{"ruleId":"6560","replacedBy":"7308"},{"ruleId":"6554","severity":1,"message":"7157","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7309","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7310","line":12,"column":8,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7132","line":13,"column":8,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7066","line":14,"column":8,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7067","line":15,"column":8,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6579","line":25,"column":9,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6580","line":29,"column":9,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6748","line":19,"column":10,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6839","line":19,"column":21,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6749","line":19,"column":27,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6925","line":20,"column":8,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7133","line":21,"column":8,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6900","line":22,"column":8,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7311","line":32,"column":8,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":27},{"ruleId":"6554","severity":1,"message":"7312","line":41,"column":8,"nodeType":"6556","messageId":"6557","endLine":41,"endColumn":31},{"ruleId":"6554","severity":1,"message":"7313","line":42,"column":8,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7314","line":43,"column":8,"nodeType":"6556","messageId":"6557","endLine":43,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6731","line":53,"column":7,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6926","line":55,"column":9,"nodeType":"6556","messageId":"6557","endLine":55,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6610","line":56,"column":11,"nodeType":"6556","messageId":"6557","endLine":56,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6815","line":57,"column":10,"nodeType":"6556","messageId":"6557","endLine":57,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6577","line":57,"column":22,"nodeType":"6556","messageId":"6557","endLine":57,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6927","line":78,"column":9,"nodeType":"6556","messageId":"6557","endLine":78,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6928","line":89,"column":9,"nodeType":"6556","messageId":"6557","endLine":89,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6929","line":100,"column":9,"nodeType":"6556","messageId":"6557","endLine":100,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6930","line":111,"column":9,"nodeType":"6556","messageId":"6557","endLine":111,"endColumn":40},{"ruleId":"6591","severity":1,"message":"6931","line":125,"column":6,"nodeType":"6593","endLine":125,"endColumn":8,"suggestions":"7315"},{"ruleId":"6554","severity":1,"message":"6662","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6670","line":20,"column":10,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7316","line":21,"column":10,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6634","line":107,"column":9,"nodeType":"6556","messageId":"6557","endLine":107,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6577","line":110,"column":22,"nodeType":"6556","messageId":"6557","endLine":110,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7317","line":113,"column":10,"nodeType":"6556","messageId":"6557","endLine":113,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6636","line":117,"column":5,"nodeType":"6556","messageId":"6557","endLine":117,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6637","line":118,"column":5,"nodeType":"6556","messageId":"6557","endLine":118,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6638","line":119,"column":5,"nodeType":"6556","messageId":"6557","endLine":119,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6912","line":120,"column":5,"nodeType":"6556","messageId":"6557","endLine":120,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6913","line":121,"column":5,"nodeType":"6556","messageId":"6557","endLine":121,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6914","line":122,"column":5,"nodeType":"6556","messageId":"6557","endLine":122,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6915","line":123,"column":5,"nodeType":"6556","messageId":"6557","endLine":123,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6916","line":124,"column":5,"nodeType":"6556","messageId":"6557","endLine":124,"endColumn":21},{"ruleId":"6591","severity":1,"message":"7318","line":129,"column":6,"nodeType":"6593","endLine":129,"endColumn":8,"suggestions":"7319"},{"ruleId":"6554","severity":1,"message":"6617","line":159,"column":9,"nodeType":"6556","messageId":"6557","endLine":159,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6920","line":167,"column":9,"nodeType":"6556","messageId":"6557","endLine":167,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6563","line":2,"column":22,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6572","line":7,"column":3,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6894","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6675","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6811","line":11,"column":3,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6812","line":15,"column":3,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6813","line":18,"column":10,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6731","line":74,"column":7,"nodeType":"6556","messageId":"6557","endLine":74,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6679","line":81,"column":9,"nodeType":"6556","messageId":"6557","endLine":81,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7174","line":83,"column":5,"nodeType":"6556","messageId":"6557","endLine":83,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6826","line":90,"column":5,"nodeType":"6556","messageId":"6557","endLine":90,"endColumn":40},{"ruleId":"6554","severity":1,"message":"6827","line":92,"column":5,"nodeType":"6556","messageId":"6557","endLine":92,"endColumn":26},{"ruleId":"6591","severity":1,"message":"7320","line":98,"column":6,"nodeType":"6593","endLine":98,"endColumn":8,"suggestions":"7321"},{"ruleId":"6554","severity":1,"message":"6622","line":125,"column":27,"nodeType":"6556","messageId":"6557","endLine":125,"endColumn":31},{"ruleId":"7322","severity":1,"message":"7323","line":133,"column":5,"nodeType":"7324","messageId":"7325","endLine":166,"endColumn":6},{"ruleId":"6554","severity":1,"message":"7326","line":208,"column":27,"nodeType":"6556","messageId":"6557","endLine":208,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6903","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6904","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6905","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6906","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6907","line":12,"column":8,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6908","line":13,"column":10,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6909","line":14,"column":10,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6910","line":65,"column":10,"nodeType":"6556","messageId":"6557","endLine":65,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6911","line":66,"column":10,"nodeType":"6556","messageId":"6557","endLine":66,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6577","line":67,"column":23,"nodeType":"6556","messageId":"6557","endLine":67,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6635","line":68,"column":11,"nodeType":"6556","messageId":"6557","endLine":68,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6912","line":76,"column":5,"nodeType":"6556","messageId":"6557","endLine":76,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6913","line":77,"column":5,"nodeType":"6556","messageId":"6557","endLine":77,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6914","line":78,"column":5,"nodeType":"6556","messageId":"6557","endLine":78,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6915","line":79,"column":5,"nodeType":"6556","messageId":"6557","endLine":79,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6916","line":80,"column":5,"nodeType":"6556","messageId":"6557","endLine":80,"endColumn":21},{"ruleId":"6591","severity":1,"message":"6917","line":85,"column":6,"nodeType":"6593","endLine":85,"endColumn":8,"suggestions":"7327"},{"ruleId":"6554","severity":1,"message":"6617","line":87,"column":9,"nodeType":"6556","messageId":"6557","endLine":87,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6919","line":91,"column":9,"nodeType":"6556","messageId":"6557","endLine":91,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6920","line":96,"column":9,"nodeType":"6556","messageId":"6557","endLine":96,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6921","line":100,"column":9,"nodeType":"6556","messageId":"6557","endLine":100,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6922","line":104,"column":9,"nodeType":"6556","messageId":"6557","endLine":104,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7328","line":19,"column":11,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6665","line":19,"column":25,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":41},{"ruleId":"6554","severity":1,"message":"6748","line":4,"column":10,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6669","line":4,"column":21,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6746","line":4,"column":31,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":37},{"ruleId":"6554","severity":1,"message":"6747","line":4,"column":39,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6751","line":5,"column":10,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7106","line":6,"column":10,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7105","line":17,"column":10,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6670","line":19,"column":10,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7107","line":149,"column":9,"nodeType":"6556","messageId":"6557","endLine":149,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6663","line":150,"column":10,"nodeType":"6556","messageId":"6557","endLine":150,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6664","line":150,"column":18,"nodeType":"6556","messageId":"6557","endLine":150,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6631","line":151,"column":16,"nodeType":"6556","messageId":"6557","endLine":151,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7329","line":151,"column":35,"nodeType":"6556","messageId":"6557","endLine":151,"endColumn":43},{"ruleId":"6554","severity":1,"message":"7330","line":152,"column":9,"nodeType":"6556","messageId":"6557","endLine":152,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7331","line":153,"column":9,"nodeType":"6556","messageId":"6557","endLine":153,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7332","line":157,"column":10,"nodeType":"6556","messageId":"6557","endLine":157,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7333","line":157,"column":19,"nodeType":"6556","messageId":"6557","endLine":157,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7112","line":158,"column":10,"nodeType":"6556","messageId":"6557","endLine":158,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7113","line":158,"column":24,"nodeType":"6556","messageId":"6557","endLine":158,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6577","line":160,"column":22,"nodeType":"6556","messageId":"6557","endLine":160,"endColumn":35},{"ruleId":"6591","severity":1,"message":"7086","line":165,"column":6,"nodeType":"6593","endLine":165,"endColumn":8,"suggestions":"7334"},{"ruleId":"6554","severity":1,"message":"6670","line":8,"column":10,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7105","line":9,"column":10,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":28},{"ruleId":"6554","severity":1,"message":"7335","line":14,"column":10,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7336","line":30,"column":11,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6631","line":30,"column":16,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6632","line":30,"column":24,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":33},{"ruleId":"6554","severity":1,"message":"7329","line":30,"column":35,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6577","line":39,"column":22,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7337","line":50,"column":9,"nodeType":"6556","messageId":"6557","endLine":50,"endColumn":24},{"ruleId":"6591","severity":1,"message":"7338","line":95,"column":5,"nodeType":"6593","endLine":95,"endColumn":7,"suggestions":"7339"},{"ruleId":"6591","severity":1,"message":"7340","line":103,"column":6,"nodeType":"6593","endLine":103,"endColumn":18,"suggestions":"7341"},{"ruleId":"6591","severity":1,"message":"7342","line":112,"column":6,"nodeType":"6593","endLine":112,"endColumn":27,"suggestions":"7343"},{"ruleId":"6558","replacedBy":"7344"},{"ruleId":"6560","replacedBy":"7345"},{"ruleId":"6558","replacedBy":"7346"},{"ruleId":"6560","replacedBy":"7347"},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6748","line":3,"column":10,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6669","line":3,"column":21,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6903","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6904","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6905","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6906","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6907","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6908","line":12,"column":10,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6909","line":13,"column":10,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6697","line":16,"column":7,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":19},{"ruleId":"6591","severity":1,"message":"7348","line":126,"column":6,"nodeType":"6593","endLine":126,"endColumn":8,"suggestions":"7349"},{"ruleId":"6554","severity":1,"message":"7157","line":14,"column":8,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7066","line":18,"column":8,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7067","line":19,"column":8,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6580","line":34,"column":9,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6999","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6605","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6839","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6606","line":15,"column":3,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":8},{"ruleId":"6554","severity":1,"message":"6925","line":22,"column":8,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7133","line":23,"column":8,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7134","line":24,"column":8,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6901","line":25,"column":8,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6908","line":26,"column":10,"nodeType":"6556","messageId":"6557","endLine":26,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6894","line":27,"column":10,"nodeType":"6556","messageId":"6557","endLine":27,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6964","line":28,"column":10,"nodeType":"6556","messageId":"6557","endLine":28,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7135","line":29,"column":8,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7136","line":30,"column":8,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7137","line":34,"column":8,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":31},{"ruleId":"6554","severity":1,"message":"7138","line":37,"column":8,"nodeType":"6556","messageId":"6557","endLine":37,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7139","line":40,"column":8,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6697","line":50,"column":7,"nodeType":"6556","messageId":"6557","endLine":50,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7141","line":52,"column":7,"nodeType":"6556","messageId":"6557","endLine":52,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7142","line":66,"column":7,"nodeType":"6556","messageId":"6557","endLine":66,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7143","line":81,"column":7,"nodeType":"6556","messageId":"6557","endLine":81,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7144","line":107,"column":7,"nodeType":"6556","messageId":"6557","endLine":107,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7145","line":136,"column":7,"nodeType":"6556","messageId":"6557","endLine":136,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6965","line":165,"column":7,"nodeType":"6556","messageId":"6557","endLine":165,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7146","line":216,"column":7,"nodeType":"6556","messageId":"6557","endLine":216,"endColumn":11},{"ruleId":"6554","severity":1,"message":"7147","line":233,"column":7,"nodeType":"6556","messageId":"6557","endLine":233,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7148","line":288,"column":7,"nodeType":"6556","messageId":"6557","endLine":288,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6926","line":415,"column":9,"nodeType":"6556","messageId":"6557","endLine":415,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7150","line":416,"column":11,"nodeType":"6556","messageId":"6557","endLine":416,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7151","line":416,"column":27,"nodeType":"6556","messageId":"6557","endLine":416,"endColumn":41},{"ruleId":"6554","severity":1,"message":"7152","line":417,"column":10,"nodeType":"6556","messageId":"6557","endLine":417,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7153","line":417,"column":19,"nodeType":"6556","messageId":"6557","endLine":417,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7154","line":421,"column":11,"nodeType":"6556","messageId":"6557","endLine":421,"endColumn":28},{"ruleId":"6591","severity":1,"message":"6931","line":445,"column":7,"nodeType":"6593","endLine":445,"endColumn":9,"suggestions":"7350"},{"ruleId":"6554","severity":1,"message":"6555","line":5,"column":10,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":17},{"ruleId":"6558","replacedBy":"7351"},{"ruleId":"6560","replacedBy":"7352"},{"ruleId":"6554","severity":1,"message":"6562","line":15,"column":8,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":12},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":29,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6657","line":11,"column":3,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6621","line":167,"column":13,"nodeType":"6556","messageId":"6557","endLine":167,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":167,"column":17,"nodeType":"6556","messageId":"6557","endLine":167,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6658","line":167,"column":23,"nodeType":"6556","messageId":"6557","endLine":167,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6659","line":167,"column":29,"nodeType":"6556","messageId":"6557","endLine":167,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6660","line":167,"column":45,"nodeType":"6556","messageId":"6557","endLine":167,"endColumn":51},{"ruleId":"6554","severity":1,"message":"6661","line":167,"column":53,"nodeType":"6556","messageId":"6557","endLine":167,"endColumn":59},{"ruleId":"6554","severity":1,"message":"6648","line":167,"column":61,"nodeType":"6556","messageId":"6557","endLine":167,"endColumn":67},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":29,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6620","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6621","line":118,"column":13,"nodeType":"6556","messageId":"6557","endLine":118,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":118,"column":17,"nodeType":"6556","messageId":"6557","endLine":118,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6623","line":118,"column":23,"nodeType":"6556","messageId":"6557","endLine":118,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6624","line":118,"column":30,"nodeType":"6556","messageId":"6557","endLine":118,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6589","line":118,"column":37,"nodeType":"6556","messageId":"6557","endLine":118,"endColumn":40},{"ruleId":"6554","severity":1,"message":"6625","line":118,"column":42,"nodeType":"6556","messageId":"6557","endLine":118,"endColumn":48},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":29,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6685","line":16,"column":3,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6686","line":17,"column":3,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6687","line":40,"column":3,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6621","line":238,"column":7,"nodeType":"6556","messageId":"6557","endLine":238,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6622","line":239,"column":7,"nodeType":"6556","messageId":"6557","endLine":239,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6688","line":240,"column":7,"nodeType":"6556","messageId":"6557","endLine":240,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6689","line":241,"column":7,"nodeType":"6556","messageId":"6557","endLine":241,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6690","line":242,"column":7,"nodeType":"6556","messageId":"6557","endLine":242,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6647","line":243,"column":7,"nodeType":"6556","messageId":"6557","endLine":243,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6661","line":244,"column":7,"nodeType":"6556","messageId":"6557","endLine":244,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6648","line":245,"column":7,"nodeType":"6556","messageId":"6557","endLine":245,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6621","line":380,"column":7,"nodeType":"6556","messageId":"6557","endLine":380,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6622","line":381,"column":7,"nodeType":"6556","messageId":"6557","endLine":381,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6688","line":382,"column":7,"nodeType":"6556","messageId":"6557","endLine":382,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6689","line":383,"column":7,"nodeType":"6556","messageId":"6557","endLine":383,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6690","line":384,"column":7,"nodeType":"6556","messageId":"6557","endLine":384,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6647","line":385,"column":7,"nodeType":"6556","messageId":"6557","endLine":385,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6661","line":386,"column":7,"nodeType":"6556","messageId":"6557","endLine":386,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6648","line":387,"column":7,"nodeType":"6556","messageId":"6557","endLine":387,"endColumn":13},{"ruleId":"6691","severity":1,"message":"6692","line":459,"column":9,"nodeType":"6693","messageId":"6694","endLine":459,"endColumn":33},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":29,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6756","line":2,"column":8,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6621","line":185,"column":13,"nodeType":"6556","messageId":"6557","endLine":185,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":185,"column":17,"nodeType":"6556","messageId":"6557","endLine":185,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6621","line":245,"column":13,"nodeType":"6556","messageId":"6557","endLine":245,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":245,"column":17,"nodeType":"6556","messageId":"6557","endLine":245,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6621","line":306,"column":13,"nodeType":"6556","messageId":"6557","endLine":306,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":306,"column":17,"nodeType":"6556","messageId":"6557","endLine":306,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6621","line":367,"column":13,"nodeType":"6556","messageId":"6557","endLine":367,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":367,"column":17,"nodeType":"6556","messageId":"6557","endLine":367,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6621","line":428,"column":13,"nodeType":"6556","messageId":"6557","endLine":428,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":428,"column":17,"nodeType":"6556","messageId":"6557","endLine":428,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6621","line":500,"column":13,"nodeType":"6556","messageId":"6557","endLine":500,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":500,"column":17,"nodeType":"6556","messageId":"6557","endLine":500,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6621","line":572,"column":13,"nodeType":"6556","messageId":"6557","endLine":572,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":572,"column":17,"nodeType":"6556","messageId":"6557","endLine":572,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6621","line":643,"column":13,"nodeType":"6556","messageId":"6557","endLine":643,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":643,"column":17,"nodeType":"6556","messageId":"6557","endLine":643,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":29,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6642","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6643","line":30,"column":3,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6621","line":155,"column":13,"nodeType":"6556","messageId":"6557","endLine":155,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":155,"column":17,"nodeType":"6556","messageId":"6557","endLine":155,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6644","line":155,"column":23,"nodeType":"6556","messageId":"6557","endLine":155,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6645","line":155,"column":34,"nodeType":"6556","messageId":"6557","endLine":155,"endColumn":41},{"ruleId":"6554","severity":1,"message":"6646","line":155,"column":43,"nodeType":"6556","messageId":"6557","endLine":155,"endColumn":49},{"ruleId":"6554","severity":1,"message":"6647","line":155,"column":51,"nodeType":"6556","messageId":"6557","endLine":155,"endColumn":61},{"ruleId":"6554","severity":1,"message":"6648","line":155,"column":63,"nodeType":"6556","messageId":"6557","endLine":155,"endColumn":69},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":29,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6855","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6643","line":30,"column":3,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6621","line":125,"column":13,"nodeType":"6556","messageId":"6557","endLine":125,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":125,"column":17,"nodeType":"6556","messageId":"6557","endLine":125,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6644","line":125,"column":23,"nodeType":"6556","messageId":"6557","endLine":125,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6645","line":125,"column":34,"nodeType":"6556","messageId":"6557","endLine":125,"endColumn":41},{"ruleId":"6554","severity":1,"message":"6646","line":125,"column":43,"nodeType":"6556","messageId":"6557","endLine":125,"endColumn":49},{"ruleId":"6554","severity":1,"message":"6647","line":125,"column":51,"nodeType":"6556","messageId":"6557","endLine":125,"endColumn":61},{"ruleId":"6554","severity":1,"message":"6648","line":125,"column":63,"nodeType":"6556","messageId":"6557","endLine":125,"endColumn":69},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":29,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6720","line":19,"column":3,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6721","line":74,"column":3,"nodeType":"6556","messageId":"6557","endLine":74,"endColumn":34},{"ruleId":"6554","severity":1,"message":"6722","line":75,"column":3,"nodeType":"6556","messageId":"6557","endLine":75,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6723","line":76,"column":3,"nodeType":"6556","messageId":"6557","endLine":76,"endColumn":34},{"ruleId":"6554","severity":1,"message":"6724","line":89,"column":3,"nodeType":"6556","messageId":"6557","endLine":89,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6725","line":90,"column":3,"nodeType":"6556","messageId":"6557","endLine":90,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6726","line":91,"column":3,"nodeType":"6556","messageId":"6557","endLine":91,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6621","line":328,"column":13,"nodeType":"6556","messageId":"6557","endLine":328,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":328,"column":17,"nodeType":"6556","messageId":"6557","endLine":328,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6644","line":328,"column":23,"nodeType":"6556","messageId":"6557","endLine":328,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6645","line":328,"column":34,"nodeType":"6556","messageId":"6557","endLine":328,"endColumn":41},{"ruleId":"6554","severity":1,"message":"6646","line":328,"column":43,"nodeType":"6556","messageId":"6557","endLine":328,"endColumn":49},{"ruleId":"6554","severity":1,"message":"6647","line":328,"column":51,"nodeType":"6556","messageId":"6557","endLine":328,"endColumn":61},{"ruleId":"6554","severity":1,"message":"6648","line":328,"column":63,"nodeType":"6556","messageId":"6557","endLine":328,"endColumn":69},{"ruleId":"6554","severity":1,"message":"6621","line":528,"column":13,"nodeType":"6556","messageId":"6557","endLine":528,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":528,"column":17,"nodeType":"6556","messageId":"6557","endLine":528,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6688","line":528,"column":23,"nodeType":"6556","messageId":"6557","endLine":528,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6727","line":528,"column":31,"nodeType":"6556","messageId":"6557","endLine":528,"endColumn":42},{"ruleId":"6554","severity":1,"message":"6661","line":528,"column":44,"nodeType":"6556","messageId":"6557","endLine":528,"endColumn":50},{"ruleId":"6554","severity":1,"message":"6621","line":610,"column":13,"nodeType":"6556","messageId":"6557","endLine":610,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6622","line":610,"column":17,"nodeType":"6556","messageId":"6557","endLine":610,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6688","line":610,"column":23,"nodeType":"6556","messageId":"6557","endLine":610,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6727","line":610,"column":31,"nodeType":"6556","messageId":"6557","endLine":610,"endColumn":42},{"ruleId":"6554","severity":1,"message":"6661","line":610,"column":44,"nodeType":"6556","messageId":"6557","endLine":610,"endColumn":50},{"ruleId":"6554","severity":1,"message":"6756","line":3,"column":8,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7212","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":15},{"ruleId":"6558","replacedBy":"7351"},{"ruleId":"6560","replacedBy":"7352"},{"ruleId":"6554","severity":1,"message":"6603","line":3,"column":10,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7052","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7053","line":14,"column":10,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6731","line":17,"column":9,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6577","line":18,"column":22,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6604","line":19,"column":11,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7054","line":20,"column":10,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7055","line":20,"column":16,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6603","line":2,"column":10,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6746","line":4,"column":10,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7053","line":15,"column":10,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6731","line":18,"column":9,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6577","line":19,"column":22,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6604","line":20,"column":11,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7054","line":21,"column":10,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7055","line":21,"column":16,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7297","line":22,"column":9,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6657","line":5,"column":3,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6685","line":6,"column":3,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6687","line":30,"column":3,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6642","line":5,"column":3,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6855","line":5,"column":3,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6643","line":25,"column":3,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6720","line":12,"column":3,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7056","line":4,"column":3,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7057","line":5,"column":3,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7058","line":6,"column":3,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6835","line":7,"column":3,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6834","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6836","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":12},{"ruleId":"6554","severity":1,"message":"7059","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":10},{"ruleId":"6554","severity":1,"message":"6750","line":11,"column":3,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6749","line":12,"column":3,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":8},{"ruleId":"6554","severity":1,"message":"6848","line":18,"column":8,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":11},{"ruleId":"6554","severity":1,"message":"7060","line":25,"column":10,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7061","line":26,"column":10,"nodeType":"6556","messageId":"6557","endLine":26,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6815","line":27,"column":10,"nodeType":"6556","messageId":"6557","endLine":27,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6577","line":27,"column":22,"nodeType":"6556","messageId":"6557","endLine":27,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7062","line":29,"column":9,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7063","line":33,"column":9,"nodeType":"6556","messageId":"6557","endLine":33,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7353","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7354","line":13,"column":8,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6792","line":16,"column":8,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6793","line":17,"column":8,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6794","line":18,"column":8,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6795","line":19,"column":8,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6796","line":21,"column":8,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6797","line":22,"column":8,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6801","line":31,"column":3,"nodeType":"6556","messageId":"6557","endLine":31,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6802","line":32,"column":3,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":10},{"ruleId":"6554","severity":1,"message":"6715","line":33,"column":3,"nodeType":"6556","messageId":"6557","endLine":33,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6803","line":34,"column":3,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":10},{"ruleId":"6554","severity":1,"message":"6809","line":40,"column":3,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6784","line":5,"column":35,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":41},{"ruleId":"6554","severity":1,"message":"6602","line":5,"column":43,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":48},{"ruleId":"6554","severity":1,"message":"6785","line":7,"column":10,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6786","line":7,"column":27,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":34},{"ruleId":"6554","severity":1,"message":"6787","line":13,"column":8,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6788","line":14,"column":8,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6789","line":15,"column":8,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6790","line":16,"column":8,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6791","line":17,"column":8,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6792","line":18,"column":8,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6793","line":19,"column":8,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6794","line":20,"column":8,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6795","line":21,"column":8,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6796","line":24,"column":8,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6797","line":25,"column":8,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6798","line":34,"column":3,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6799","line":35,"column":3,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6800","line":36,"column":3,"nodeType":"6556","messageId":"6557","endLine":36,"endColumn":8},{"ruleId":"6554","severity":1,"message":"6801","line":37,"column":3,"nodeType":"6556","messageId":"6557","endLine":37,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6802","line":38,"column":3,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":10},{"ruleId":"6554","severity":1,"message":"6715","line":39,"column":3,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6803","line":40,"column":3,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":10},{"ruleId":"6554","severity":1,"message":"6804","line":41,"column":3,"nodeType":"6556","messageId":"6557","endLine":41,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6805","line":42,"column":3,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6806","line":43,"column":3,"nodeType":"6556","messageId":"6557","endLine":43,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6807","line":44,"column":3,"nodeType":"6556","messageId":"6557","endLine":44,"endColumn":10},{"ruleId":"6554","severity":1,"message":"6808","line":45,"column":3,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6809","line":46,"column":3,"nodeType":"6556","messageId":"6557","endLine":46,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6810","line":48,"column":3,"nodeType":"6556","messageId":"6557","endLine":48,"endColumn":8},{"ruleId":"6554","severity":1,"message":"6731","line":55,"column":9,"nodeType":"6556","messageId":"6557","endLine":55,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7353","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7355","line":33,"column":3,"nodeType":"6556","messageId":"6557","endLine":33,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7353","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6789","line":13,"column":8,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7356","line":21,"column":8,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6796","line":22,"column":8,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6797","line":23,"column":8,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6799","line":28,"column":3,"nodeType":"6556","messageId":"6557","endLine":28,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6800","line":30,"column":3,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":8},{"ruleId":"6554","severity":1,"message":"6804","line":39,"column":3,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6805","line":40,"column":3,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6806","line":41,"column":3,"nodeType":"6556","messageId":"6557","endLine":41,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6807","line":42,"column":3,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":10},{"ruleId":"6554","severity":1,"message":"6808","line":43,"column":3,"nodeType":"6556","messageId":"6557","endLine":43,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7353","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6731","line":47,"column":9,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7353","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7354","line":13,"column":8,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6792","line":16,"column":8,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6793","line":17,"column":8,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6794","line":18,"column":8,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6795","line":19,"column":8,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6796","line":21,"column":8,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6797","line":22,"column":8,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6801","line":28,"column":3,"nodeType":"6556","messageId":"6557","endLine":28,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6802","line":29,"column":3,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":10},{"ruleId":"6554","severity":1,"message":"6715","line":30,"column":3,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6803","line":31,"column":3,"nodeType":"6556","messageId":"6557","endLine":31,"endColumn":10},{"ruleId":"6554","severity":1,"message":"6809","line":37,"column":3,"nodeType":"6556","messageId":"6557","endLine":37,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7353","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7355","line":33,"column":3,"nodeType":"6556","messageId":"6557","endLine":33,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7217","line":1,"column":23,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":45},{"ruleId":"6554","severity":1,"message":"6563","line":4,"column":22,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6564","line":5,"column":35,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6565","line":12,"column":8,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6566","line":14,"column":8,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6567","line":31,"column":11,"nodeType":"6556","messageId":"6557","endLine":31,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6605","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6976","line":16,"column":3,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7044","line":41,"column":9,"nodeType":"6556","messageId":"6557","endLine":41,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7213","line":43,"column":9,"nodeType":"6556","messageId":"6557","endLine":43,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7214","line":47,"column":10,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6655","line":49,"column":17,"nodeType":"6556","messageId":"6557","endLine":49,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6588","line":55,"column":5,"nodeType":"6556","messageId":"6557","endLine":55,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7215","line":56,"column":5,"nodeType":"6556","messageId":"6557","endLine":56,"endColumn":10},{"ruleId":"6554","severity":1,"message":"7216","line":57,"column":18,"nodeType":"6556","messageId":"6557","endLine":57,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6970","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6569","line":10,"column":10,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6749","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6971","line":15,"column":3,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6972","line":16,"column":3,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6973","line":17,"column":3,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6849","line":36,"column":7,"nodeType":"6556","messageId":"6557","endLine":36,"endColumn":18},{"ruleId":"6591","severity":1,"message":"6611","line":79,"column":19,"nodeType":"6556","endLine":79,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6568","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6569","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6570","line":12,"column":3,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6571","line":13,"column":3,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6572","line":14,"column":3,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6573","line":16,"column":3,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6574","line":17,"column":3,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6575","line":20,"column":8,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6576","line":28,"column":8,"nodeType":"6556","messageId":"6557","endLine":28,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6577","line":34,"column":22,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6578","line":18,"column":7,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6571","line":6,"column":10,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6572","line":6,"column":16,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6675","line":6,"column":42,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":64},{"ruleId":"6554","severity":1,"message":"7357","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6670","line":13,"column":10,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6754","line":14,"column":10,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6578","line":18,"column":7,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6815","line":40,"column":10,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6577","line":40,"column":22,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6649","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6650","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6578","line":18,"column":7,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6649","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6650","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6578","line":18,"column":7,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6649","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6650","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6578","line":18,"column":7,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6578","line":16,"column":7,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6649","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6650","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6578","line":19,"column":7,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6564","line":4,"column":10,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6751","line":24,"column":3,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6974","line":28,"column":3,"nodeType":"6556","messageId":"6557","endLine":28,"endColumn":8},{"ruleId":"6554","severity":1,"message":"6975","line":29,"column":3,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6976","line":30,"column":3,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6977","line":31,"column":3,"nodeType":"6556","messageId":"6557","endLine":31,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6978","line":32,"column":3,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6979","line":33,"column":3,"nodeType":"6556","messageId":"6557","endLine":33,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6980","line":34,"column":3,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6981","line":35,"column":3,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6606","line":36,"column":3,"nodeType":"6556","messageId":"6557","endLine":36,"endColumn":8},{"ruleId":"6554","severity":1,"message":"6982","line":44,"column":10,"nodeType":"6556","messageId":"6557","endLine":44,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6983","line":46,"column":10,"nodeType":"6556","messageId":"6557","endLine":46,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6984","line":64,"column":7,"nodeType":"6556","messageId":"6557","endLine":64,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6985","line":82,"column":7,"nodeType":"6556","messageId":"6557","endLine":82,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6986","line":87,"column":11,"nodeType":"6556","messageId":"6557","endLine":87,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6698","line":87,"column":26,"nodeType":"6556","messageId":"6557","endLine":87,"endColumn":37},{"ruleId":"6554","severity":1,"message":"6987","line":87,"column":39,"nodeType":"6556","messageId":"6557","endLine":87,"endColumn":53},{"ruleId":"6554","severity":1,"message":"6673","line":93,"column":31,"nodeType":"6556","messageId":"6557","endLine":93,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6701","line":108,"column":10,"nodeType":"6556","messageId":"6557","endLine":108,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6988","line":110,"column":17,"nodeType":"6556","messageId":"6557","endLine":110,"endColumn":25},{"ruleId":"6591","severity":1,"message":"6989","line":119,"column":6,"nodeType":"6593","endLine":119,"endColumn":20,"suggestions":"7358"},{"ruleId":"6554","severity":1,"message":"6991","line":127,"column":11,"nodeType":"6556","messageId":"6557","endLine":127,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6992","line":129,"column":11,"nodeType":"6556","messageId":"6557","endLine":129,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6993","line":130,"column":11,"nodeType":"6556","messageId":"6557","endLine":130,"endColumn":12},{"ruleId":"6554","severity":1,"message":"6994","line":199,"column":7,"nodeType":"6556","messageId":"6557","endLine":199,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6995","line":200,"column":7,"nodeType":"6556","messageId":"6557","endLine":200,"endColumn":20},{"ruleId":"6591","severity":1,"message":"6996","line":409,"column":6,"nodeType":"6593","endLine":409,"endColumn":8,"suggestions":"7359"},{"ruleId":"6554","severity":1,"message":"6998","line":2,"column":10,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6999","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7000","line":21,"column":3,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":9},{"ruleId":"6554","severity":1,"message":"7001","line":28,"column":3,"nodeType":"6556","messageId":"6557","endLine":28,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7002","line":30,"column":3,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7003","line":31,"column":3,"nodeType":"6556","messageId":"6557","endLine":31,"endColumn":5},{"ruleId":"6554","severity":1,"message":"7004","line":32,"column":3,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":5},{"ruleId":"6554","severity":1,"message":"7005","line":33,"column":3,"nodeType":"6556","messageId":"6557","endLine":33,"endColumn":5},{"ruleId":"6554","severity":1,"message":"7006","line":34,"column":3,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7007","line":39,"column":3,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7008","line":43,"column":3,"nodeType":"6556","messageId":"6557","endLine":43,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7009","line":44,"column":3,"nodeType":"6556","messageId":"6557","endLine":44,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6574","line":57,"column":10,"nodeType":"6556","messageId":"6557","endLine":57,"endColumn":27},{"ruleId":"6554","severity":1,"message":"7010","line":60,"column":3,"nodeType":"6556","messageId":"6557","endLine":60,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6573","line":64,"column":10,"nodeType":"6556","messageId":"6557","endLine":64,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6849","line":66,"column":7,"nodeType":"6556","messageId":"6557","endLine":66,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7011","line":168,"column":9,"nodeType":"6556","messageId":"6557","endLine":168,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6926","line":169,"column":9,"nodeType":"6556","messageId":"6557","endLine":169,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7012","line":175,"column":5,"nodeType":"6556","messageId":"6557","endLine":175,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7013","line":180,"column":5,"nodeType":"6556","messageId":"6557","endLine":180,"endColumn":32},{"ruleId":"6554","severity":1,"message":"7014","line":181,"column":5,"nodeType":"6556","messageId":"6557","endLine":181,"endColumn":30},{"ruleId":"6554","severity":1,"message":"7015","line":190,"column":20,"nodeType":"6556","messageId":"6557","endLine":190,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6702","line":191,"column":10,"nodeType":"6556","messageId":"6557","endLine":191,"endColumn":22},{"ruleId":"6591","severity":1,"message":"7016","line":209,"column":6,"nodeType":"6593","endLine":209,"endColumn":8,"suggestions":"7360"},{"ruleId":"6591","severity":1,"message":"7018","line":224,"column":6,"nodeType":"6593","endLine":224,"endColumn":19,"suggestions":"7361"},{"ruleId":"6591","severity":1,"message":"7020","line":229,"column":6,"nodeType":"6593","endLine":229,"endColumn":14,"suggestions":"7362"},{"ruleId":"6554","severity":1,"message":"7022","line":236,"column":9,"nodeType":"6556","messageId":"6557","endLine":236,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7363","line":4,"column":29,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":37},{"ruleId":"6554","severity":1,"message":"6756","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6785","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":12},{"ruleId":"6554","severity":1,"message":"6605","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6606","line":13,"column":3,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7364","line":15,"column":10,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6926","line":38,"column":9,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7365","line":39,"column":10,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7366","line":39,"column":19,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7367","line":40,"column":10,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7368","line":40,"column":19,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7369","line":41,"column":10,"nodeType":"6556","messageId":"6557","endLine":41,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7370","line":41,"column":16,"nodeType":"6556","messageId":"6557","endLine":41,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6658","line":44,"column":9,"nodeType":"6556","messageId":"6557","endLine":44,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7371","line":46,"column":9,"nodeType":"6556","messageId":"6557","endLine":46,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6746","line":5,"column":15,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6747","line":5,"column":23,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6754","line":7,"column":10,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7114","line":46,"column":11,"nodeType":"6556","messageId":"6557","endLine":46,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6748","line":4,"column":10,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6749","line":4,"column":27,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6925","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7133","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7293","line":24,"column":8,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7294","line":25,"column":8,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6926","line":34,"column":9,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6815","line":35,"column":10,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6577","line":35,"column":22,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7295","line":48,"column":11,"nodeType":"6556","messageId":"6557","endLine":48,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6958","line":49,"column":11,"nodeType":"6556","messageId":"6557","endLine":49,"endColumn":26},{"ruleId":"6591","severity":1,"message":"6960","line":98,"column":5,"nodeType":"6593","endLine":98,"endColumn":7,"suggestions":"7372"},{"ruleId":"6554","severity":1,"message":"7027","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6577","line":62,"column":22,"nodeType":"6556","messageId":"6557","endLine":62,"endColumn":35},{"ruleId":"6591","severity":1,"message":"7103","line":78,"column":6,"nodeType":"6593","endLine":78,"endColumn":8,"suggestions":"7373"},{"ruleId":"6554","severity":1,"message":"7106","line":14,"column":10,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7218","line":18,"column":31,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7219","line":75,"column":5,"nodeType":"6556","messageId":"6557","endLine":75,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6589","line":84,"column":5,"nodeType":"6556","messageId":"6557","endLine":84,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7220","line":97,"column":5,"nodeType":"6556","messageId":"6557","endLine":97,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7221","line":98,"column":5,"nodeType":"6556","messageId":"6557","endLine":98,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7214","line":100,"column":5,"nodeType":"6556","messageId":"6557","endLine":100,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7222","line":112,"column":5,"nodeType":"6556","messageId":"6557","endLine":112,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7223","line":121,"column":10,"nodeType":"6556","messageId":"6557","endLine":121,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7224","line":121,"column":20,"nodeType":"6556","messageId":"6557","endLine":121,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6577","line":124,"column":22,"nodeType":"6556","messageId":"6557","endLine":124,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6651","line":20,"column":10,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6610","line":46,"column":11,"nodeType":"6556","messageId":"6557","endLine":46,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6652","line":47,"column":11,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6631","line":47,"column":19,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6632","line":47,"column":27,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6653","line":47,"column":38,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":48},{"ruleId":"6554","severity":1,"message":"6654","line":50,"column":10,"nodeType":"6556","messageId":"6557","endLine":50,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6655","line":50,"column":17,"nodeType":"6556","messageId":"6557","endLine":50,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6577","line":51,"column":22,"nodeType":"6556","messageId":"6557","endLine":51,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6656","line":53,"column":9,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6669","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6670","line":8,"column":10,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6671","line":14,"column":10,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6672","line":21,"column":7,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6673","line":35,"column":11,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6631","line":35,"column":21,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6632","line":35,"column":29,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6674","line":35,"column":40,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":52},{"ruleId":"6554","severity":1,"message":"6577","line":38,"column":22,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":35},{"ruleId":"6591","severity":1,"message":"6695","line":46,"column":6,"nodeType":"6593","endLine":46,"endColumn":8,"suggestions":"7374"},{"ruleId":"6554","severity":1,"message":"6748","line":5,"column":10,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6747","line":5,"column":21,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6746","line":5,"column":27,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":33},{"ruleId":"6554","severity":1,"message":"6669","line":5,"column":35,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6574","line":8,"column":10,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6573","line":8,"column":29,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":43},{"ruleId":"6554","severity":1,"message":"7107","line":37,"column":9,"nodeType":"6556","messageId":"6557","endLine":37,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7158","line":41,"column":9,"nodeType":"6556","messageId":"6557","endLine":41,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7159","line":42,"column":9,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6577","line":45,"column":22,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6677","line":47,"column":10,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6678","line":47,"column":25,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":41},{"ruleId":"6554","severity":1,"message":"7160","line":50,"column":10,"nodeType":"6556","messageId":"6557","endLine":50,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7161","line":50,"column":27,"nodeType":"6556","messageId":"6557","endLine":50,"endColumn":45},{"ruleId":"6554","severity":1,"message":"7162","line":52,"column":10,"nodeType":"6556","messageId":"6557","endLine":52,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6679","line":53,"column":10,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7163","line":55,"column":10,"nodeType":"6556","messageId":"6557","endLine":55,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7164","line":55,"column":23,"nodeType":"6556","messageId":"6557","endLine":55,"endColumn":37},{"ruleId":"6554","severity":1,"message":"7165","line":65,"column":5,"nodeType":"6556","messageId":"6557","endLine":65,"endColumn":27},{"ruleId":"6554","severity":1,"message":"7166","line":67,"column":5,"nodeType":"6556","messageId":"6557","endLine":67,"endColumn":28},{"ruleId":"6554","severity":1,"message":"7167","line":68,"column":5,"nodeType":"6556","messageId":"6557","endLine":68,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6825","line":70,"column":5,"nodeType":"6556","messageId":"6557","endLine":70,"endColumn":34},{"ruleId":"6591","severity":1,"message":"7168","line":75,"column":6,"nodeType":"6593","endLine":75,"endColumn":21,"suggestions":"7375"},{"ruleId":"6554","severity":1,"message":"6954","line":139,"column":9,"nodeType":"6556","messageId":"6557","endLine":139,"endColumn":33},{"ruleId":"6554","severity":1,"message":"7170","line":233,"column":9,"nodeType":"6556","messageId":"6557","endLine":233,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6563","line":2,"column":22,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6572","line":7,"column":3,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6675","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6811","line":11,"column":3,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6812","line":15,"column":3,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6813","line":19,"column":10,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6814","line":21,"column":10,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":34},{"ruleId":"6554","severity":1,"message":"6731","line":77,"column":7,"nodeType":"6556","messageId":"6557","endLine":77,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6815","line":83,"column":10,"nodeType":"6556","messageId":"6557","endLine":83,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6577","line":83,"column":22,"nodeType":"6556","messageId":"6557","endLine":83,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6816","line":86,"column":11,"nodeType":"6556","messageId":"6557","endLine":86,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6817","line":86,"column":24,"nodeType":"6556","messageId":"6557","endLine":86,"endColumn":37},{"ruleId":"6818","severity":1,"message":"6819","line":91,"column":7,"nodeType":"6556","messageId":"6820","endLine":91,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6821","line":94,"column":5,"nodeType":"6556","messageId":"6557","endLine":94,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6822","line":95,"column":5,"nodeType":"6556","messageId":"6557","endLine":95,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6823","line":96,"column":5,"nodeType":"6556","messageId":"6557","endLine":96,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6824","line":97,"column":5,"nodeType":"6556","messageId":"6557","endLine":97,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6825","line":98,"column":5,"nodeType":"6556","messageId":"6557","endLine":98,"endColumn":34},{"ruleId":"6554","severity":1,"message":"6826","line":100,"column":5,"nodeType":"6556","messageId":"6557","endLine":100,"endColumn":40},{"ruleId":"6554","severity":1,"message":"6680","line":101,"column":5,"nodeType":"6556","messageId":"6557","endLine":101,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6827","line":102,"column":5,"nodeType":"6556","messageId":"6557","endLine":102,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6828","line":103,"column":5,"nodeType":"6556","messageId":"6557","endLine":103,"endColumn":25},{"ruleId":"6591","severity":1,"message":"6829","line":114,"column":6,"nodeType":"6593","endLine":114,"endColumn":35,"suggestions":"7376"},{"ruleId":"6554","severity":1,"message":"6626","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":37},{"ruleId":"6554","severity":1,"message":"6729","line":1,"column":50,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":56},{"ruleId":"6554","severity":1,"message":"6759","line":6,"column":3,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6751","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6752","line":12,"column":3,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":10},{"ruleId":"6554","severity":1,"message":"6569","line":13,"column":3,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":6},{"ruleId":"6554","severity":1,"message":"6669","line":19,"column":8,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6730","line":25,"column":3,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6672","line":39,"column":7,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6760","line":57,"column":10,"nodeType":"6556","messageId":"6557","endLine":57,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6761","line":57,"column":16,"nodeType":"6556","messageId":"6557","endLine":57,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6762","line":60,"column":5,"nodeType":"6556","messageId":"6557","endLine":60,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6763","line":63,"column":5,"nodeType":"6556","messageId":"6557","endLine":63,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6764","line":65,"column":5,"nodeType":"6556","messageId":"6557","endLine":65,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6765","line":69,"column":5,"nodeType":"6556","messageId":"6557","endLine":69,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6766","line":70,"column":5,"nodeType":"6556","messageId":"6557","endLine":70,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6767","line":71,"column":5,"nodeType":"6556","messageId":"6557","endLine":71,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6635","line":79,"column":11,"nodeType":"6556","messageId":"6557","endLine":79,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6610","line":79,"column":26,"nodeType":"6556","messageId":"6557","endLine":79,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6768","line":80,"column":11,"nodeType":"6556","messageId":"6557","endLine":80,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6769","line":80,"column":27,"nodeType":"6556","messageId":"6557","endLine":80,"endColumn":41},{"ruleId":"6554","severity":1,"message":"6716","line":80,"column":43,"nodeType":"6556","messageId":"6557","endLine":80,"endColumn":53},{"ruleId":"6554","severity":1,"message":"6717","line":80,"column":55,"nodeType":"6556","messageId":"6557","endLine":80,"endColumn":65},{"ruleId":"6554","severity":1,"message":"6770","line":84,"column":9,"nodeType":"6556","messageId":"6557","endLine":84,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6771","line":85,"column":9,"nodeType":"6556","messageId":"6557","endLine":85,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6648","line":101,"column":5,"nodeType":"6556","messageId":"6557","endLine":101,"endColumn":11},{"ruleId":"6591","severity":1,"message":"6772","line":111,"column":13,"nodeType":"6773","endLine":113,"endColumn":4},{"ruleId":"6591","severity":1,"message":"6774","line":113,"column":6,"nodeType":"6593","endLine":113,"endColumn":8,"suggestions":"7377"},{"ruleId":"6776","severity":1,"message":"6777","line":571,"column":19,"nodeType":"6778","endLine":571,"endColumn":43},{"ruleId":"6776","severity":1,"message":"6779","line":581,"column":19,"nodeType":"6778","endLine":581,"endColumn":45},{"ruleId":"6776","severity":1,"message":"6780","line":596,"column":11,"nodeType":"6778","endLine":601,"endColumn":13},{"ruleId":"6776","severity":1,"message":"6781","line":611,"column":11,"nodeType":"6778","endLine":616,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7107","line":16,"column":9,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6967","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6875","line":11,"column":10,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":34},{"ruleId":"6554","severity":1,"message":"6849","line":13,"column":7,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6965","line":15,"column":7,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6968","line":45,"column":13,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6926","line":56,"column":9,"nodeType":"6556","messageId":"6557","endLine":56,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6896","line":57,"column":10,"nodeType":"6556","messageId":"6557","endLine":57,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6878","line":57,"column":20,"nodeType":"6556","messageId":"6557","endLine":57,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6962","line":3,"column":16,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6963","line":3,"column":26,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6899","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":12},{"ruleId":"6554","severity":1,"message":"6894","line":7,"column":10,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6964","line":8,"column":10,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6849","line":12,"column":7,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6965","line":14,"column":7,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6966","line":55,"column":7,"nodeType":"6556","messageId":"6557","endLine":55,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6878","line":66,"column":10,"nodeType":"6556","messageId":"6557","endLine":66,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6563","line":2,"column":22,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6747","line":5,"column":21,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6675","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6676","line":17,"column":10,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6945","line":23,"column":8,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6697","line":29,"column":7,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6731","line":73,"column":7,"nodeType":"6556","messageId":"6557","endLine":73,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6946","line":75,"column":24,"nodeType":"6556","messageId":"6557","endLine":75,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6677","line":76,"column":10,"nodeType":"6556","messageId":"6557","endLine":76,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6678","line":76,"column":25,"nodeType":"6556","messageId":"6557","endLine":76,"endColumn":41},{"ruleId":"6554","severity":1,"message":"6679","line":78,"column":9,"nodeType":"6556","messageId":"6557","endLine":78,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6947","line":80,"column":9,"nodeType":"6556","messageId":"6557","endLine":80,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6948","line":84,"column":5,"nodeType":"6556","messageId":"6557","endLine":84,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6949","line":85,"column":5,"nodeType":"6556","messageId":"6557","endLine":85,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6709","line":86,"column":5,"nodeType":"6556","messageId":"6557","endLine":86,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6950","line":88,"column":5,"nodeType":"6556","messageId":"6557","endLine":88,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6951","line":89,"column":5,"nodeType":"6556","messageId":"6557","endLine":89,"endColumn":33},{"ruleId":"6554","severity":1,"message":"6952","line":90,"column":5,"nodeType":"6556","messageId":"6557","endLine":90,"endColumn":34},{"ruleId":"6554","severity":1,"message":"6953","line":91,"column":5,"nodeType":"6556","messageId":"6557","endLine":91,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6680","line":92,"column":5,"nodeType":"6556","messageId":"6557","endLine":92,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6706","line":93,"column":5,"nodeType":"6556","messageId":"6557","endLine":93,"endColumn":33},{"ruleId":"6554","severity":1,"message":"6954","line":96,"column":9,"nodeType":"6556","messageId":"6557","endLine":96,"endColumn":33},{"ruleId":"6554","severity":1,"message":"6563","line":2,"column":22,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6936","line":3,"column":25,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6675","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6676","line":16,"column":10,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6903","line":17,"column":8,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":18,"column":8,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6904","line":19,"column":8,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6905","line":20,"column":8,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6906","line":21,"column":8,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6945","line":22,"column":8,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6908","line":23,"column":10,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6955","line":26,"column":8,"nodeType":"6556","messageId":"6557","endLine":26,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6731","line":45,"column":7,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6910","line":47,"column":10,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6677","line":48,"column":10,"nodeType":"6556","messageId":"6557","endLine":48,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6678","line":48,"column":25,"nodeType":"6556","messageId":"6557","endLine":48,"endColumn":41},{"ruleId":"6554","severity":1,"message":"6679","line":50,"column":9,"nodeType":"6556","messageId":"6557","endLine":50,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6956","line":51,"column":10,"nodeType":"6556","messageId":"6557","endLine":51,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6957","line":51,"column":22,"nodeType":"6556","messageId":"6557","endLine":51,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6947","line":53,"column":9,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6958","line":56,"column":5,"nodeType":"6556","messageId":"6557","endLine":56,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6959","line":57,"column":5,"nodeType":"6556","messageId":"6557","endLine":57,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6948","line":58,"column":5,"nodeType":"6556","messageId":"6557","endLine":58,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6709","line":60,"column":5,"nodeType":"6556","messageId":"6557","endLine":60,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6950","line":61,"column":5,"nodeType":"6556","messageId":"6557","endLine":61,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6951","line":62,"column":5,"nodeType":"6556","messageId":"6557","endLine":62,"endColumn":33},{"ruleId":"6554","severity":1,"message":"6952","line":63,"column":5,"nodeType":"6556","messageId":"6557","endLine":63,"endColumn":34},{"ruleId":"6554","severity":1,"message":"6953","line":64,"column":5,"nodeType":"6556","messageId":"6557","endLine":64,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6680","line":65,"column":5,"nodeType":"6556","messageId":"6557","endLine":65,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6706","line":66,"column":5,"nodeType":"6556","messageId":"6557","endLine":66,"endColumn":33},{"ruleId":"6591","severity":1,"message":"6960","line":71,"column":6,"nodeType":"6593","endLine":71,"endColumn":8,"suggestions":"7378"},{"ruleId":"6554","severity":1,"message":"6617","line":73,"column":9,"nodeType":"6556","messageId":"6557","endLine":73,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6919","line":79,"column":9,"nodeType":"6556","messageId":"6557","endLine":79,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6746","line":4,"column":10,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6747","line":4,"column":18,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6751","line":4,"column":45,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":51},{"ruleId":"6554","severity":1,"message":"6862","line":8,"column":10,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6631","line":22,"column":22,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6632","line":22,"column":30,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6577","line":24,"column":22,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":35},{"ruleId":"6591","severity":1,"message":"6863","line":105,"column":6,"nodeType":"6593","endLine":105,"endColumn":8,"suggestions":"7379"},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6574","line":6,"column":10,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6730","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6732","line":26,"column":9,"nodeType":"6556","messageId":"6557","endLine":26,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6739","line":31,"column":5,"nodeType":"6556","messageId":"6557","endLine":31,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6622","line":42,"column":11,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6661","line":42,"column":17,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6740","line":45,"column":9,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":23},{"ruleId":"6591","severity":1,"message":"6741","line":73,"column":6,"nodeType":"6593","endLine":73,"endColumn":8,"suggestions":"7380"},{"ruleId":"6554","severity":1,"message":"6743","line":84,"column":9,"nodeType":"6556","messageId":"6557","endLine":84,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6744","line":91,"column":9,"nodeType":"6556","messageId":"6557","endLine":91,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6745","line":103,"column":9,"nodeType":"6556","messageId":"6557","endLine":103,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6729","line":1,"column":38,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":44},{"ruleId":"6554","severity":1,"message":"6563","line":7,"column":22,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6574","line":8,"column":10,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6730","line":11,"column":3,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6731","line":25,"column":7,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6732","line":29,"column":9,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6622","line":45,"column":11,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6661","line":45,"column":17,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":23},{"ruleId":"6591","severity":1,"message":"6733","line":71,"column":6,"nodeType":"6593","endLine":71,"endColumn":8,"suggestions":"7381"},{"ruleId":"6554","severity":1,"message":"6735","line":73,"column":9,"nodeType":"6556","messageId":"6557","endLine":73,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6736","line":89,"column":9,"nodeType":"6556","messageId":"6557","endLine":89,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6737","line":98,"column":9,"nodeType":"6556","messageId":"6557","endLine":98,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6738","line":112,"column":9,"nodeType":"6556","messageId":"6557","endLine":112,"endColumn":30},{"ruleId":"6554","severity":1,"message":"7107","line":16,"column":9,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6573","line":2,"column":20,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":34},{"ruleId":"6554","severity":1,"message":"6574","line":2,"column":36,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":53},{"ruleId":"6554","severity":1,"message":"6883","line":6,"column":3,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6605","line":5,"column":26,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6606","line":5,"column":55,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":60},{"ruleId":"6554","severity":1,"message":"6607","line":23,"column":7,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6602","line":2,"column":10,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6603","line":2,"column":17,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6604","line":6,"column":11,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6601","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6600","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7225","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":27},{"ruleId":"6554","severity":1,"message":"7226","line":9,"column":10,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7105","line":10,"column":10,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7328","line":19,"column":11,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6665","line":19,"column":25,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":41},{"ruleId":"6591","severity":1,"message":"6598","line":22,"column":6,"nodeType":"6593","endLine":22,"endColumn":8,"suggestions":"7382"},{"ruleId":"6554","severity":1,"message":"6597","line":10,"column":10,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":33},{"ruleId":"6554","severity":1,"message":"6899","line":2,"column":8,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":12},{"ruleId":"6554","severity":1,"message":"6569","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6785","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6839","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":12},{"ruleId":"6554","severity":1,"message":"6749","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6900","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6901","line":12,"column":8,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6577","line":24,"column":22,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6902","line":53,"column":7,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6574","line":5,"column":10,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6730","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6739","line":23,"column":5,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6622","line":34,"column":11,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6661","line":34,"column":17,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6717","line":35,"column":11,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6740","line":37,"column":9,"nodeType":"6556","messageId":"6557","endLine":37,"endColumn":23},{"ruleId":"6591","severity":1,"message":"6884","line":52,"column":6,"nodeType":"6593","endLine":52,"endColumn":8,"suggestions":"7383"},{"ruleId":"6554","severity":1,"message":"6743","line":64,"column":9,"nodeType":"6556","messageId":"6557","endLine":64,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6744","line":71,"column":9,"nodeType":"6556","messageId":"6557","endLine":71,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6745","line":83,"column":9,"nodeType":"6556","messageId":"6557","endLine":83,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6834","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6835","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6836","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6746","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6750","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6837","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6662","line":12,"column":8,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6649","line":13,"column":8,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6834","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6835","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6836","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6746","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6750","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6837","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6566","line":14,"column":8,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6729","line":1,"column":38,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":44},{"ruleId":"6554","severity":1,"message":"6563","line":5,"column":22,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6574","line":6,"column":10,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6730","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6731","line":18,"column":7,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6886","line":19,"column":10,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6887","line":19,"column":16,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6888","line":27,"column":5,"nodeType":"6556","messageId":"6557","endLine":27,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6889","line":29,"column":5,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6890","line":30,"column":5,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6765","line":34,"column":5,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6727","line":38,"column":11,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6661","line":38,"column":24,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6716","line":39,"column":11,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":21},{"ruleId":"6591","severity":1,"message":"6891","line":52,"column":6,"nodeType":"6593","endLine":52,"endColumn":8,"suggestions":"7384"},{"ruleId":"6554","severity":1,"message":"6735","line":54,"column":9,"nodeType":"6556","messageId":"6557","endLine":54,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6893","line":60,"column":9,"nodeType":"6556","messageId":"6557","endLine":60,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7107","line":14,"column":9,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7171","line":11,"column":10,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7172","line":18,"column":7,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7173","line":19,"column":7,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6985","line":30,"column":7,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7174","line":36,"column":11,"nodeType":"6556","messageId":"6557","endLine":36,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6577","line":40,"column":22,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7175","line":41,"column":10,"nodeType":"6556","messageId":"6557","endLine":41,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7176","line":41,"column":24,"nodeType":"6556","messageId":"6557","endLine":41,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7177","line":42,"column":10,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7178","line":42,"column":17,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":25},{"ruleId":"6591","severity":1,"message":"7179","line":60,"column":6,"nodeType":"6593","endLine":60,"endColumn":8,"suggestions":"7385"},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7262","line":2,"column":8,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6563","line":2,"column":22,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7106","line":8,"column":10,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7181","line":9,"column":10,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7182","line":102,"column":9,"nodeType":"6556","messageId":"6557","endLine":102,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6817","line":104,"column":24,"nodeType":"6556","messageId":"6557","endLine":104,"endColumn":37},{"ruleId":"6554","severity":1,"message":"7061","line":109,"column":5,"nodeType":"6556","messageId":"6557","endLine":109,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7183","line":111,"column":9,"nodeType":"6556","messageId":"6557","endLine":111,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6577","line":120,"column":22,"nodeType":"6556","messageId":"6557","endLine":120,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7160","line":121,"column":10,"nodeType":"6556","messageId":"6557","endLine":121,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7161","line":121,"column":27,"nodeType":"6556","messageId":"6557","endLine":121,"endColumn":45},{"ruleId":"6554","severity":1,"message":"6957","line":128,"column":22,"nodeType":"6556","messageId":"6557","endLine":128,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7184","line":129,"column":10,"nodeType":"6556","messageId":"6557","endLine":129,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7185","line":129,"column":24,"nodeType":"6556","messageId":"6557","endLine":129,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7186","line":130,"column":10,"nodeType":"6556","messageId":"6557","endLine":130,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7187","line":130,"column":24,"nodeType":"6556","messageId":"6557","endLine":130,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7188","line":131,"column":10,"nodeType":"6556","messageId":"6557","endLine":131,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7189","line":131,"column":18,"nodeType":"6556","messageId":"6557","endLine":131,"endColumn":27},{"ruleId":"6554","severity":1,"message":"7190","line":132,"column":10,"nodeType":"6556","messageId":"6557","endLine":132,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7191","line":132,"column":19,"nodeType":"6556","messageId":"6557","endLine":132,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7192","line":137,"column":9,"nodeType":"6556","messageId":"6557","endLine":137,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7193","line":138,"column":10,"nodeType":"6556","messageId":"6557","endLine":138,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7194","line":138,"column":22,"nodeType":"6556","messageId":"6557","endLine":138,"endColumn":35},{"ruleId":"6591","severity":1,"message":"6829","line":163,"column":6,"nodeType":"6593","endLine":163,"endColumn":35,"suggestions":"7386"},{"ruleId":"6554","severity":1,"message":"7196","line":200,"column":9,"nodeType":"6556","messageId":"6557","endLine":200,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6621","line":201,"column":13,"nodeType":"6556","messageId":"6557","endLine":201,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7197","line":201,"column":17,"nodeType":"6556","messageId":"6557","endLine":201,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7198","line":201,"column":27,"nodeType":"6556","messageId":"6557","endLine":201,"endColumn":34},{"ruleId":"7199","severity":1,"message":"7200","line":205,"column":22,"nodeType":"7201","messageId":"7202","endLine":205,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7203","line":223,"column":9,"nodeType":"6556","messageId":"6557","endLine":223,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7204","line":236,"column":9,"nodeType":"6556","messageId":"6557","endLine":236,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7205","line":322,"column":9,"nodeType":"6556","messageId":"6557","endLine":322,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7206","line":425,"column":9,"nodeType":"6556","messageId":"6557","endLine":425,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6746","line":3,"column":3,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6747","line":4,"column":3,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6748","line":5,"column":3,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":12},{"ruleId":"6554","severity":1,"message":"6749","line":6,"column":3,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":8},{"ruleId":"6554","severity":1,"message":"6750","line":7,"column":3,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6751","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6752","line":11,"column":3,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":10},{"ruleId":"6554","severity":1,"message":"6569","line":12,"column":3,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":6},{"ruleId":"6554","severity":1,"message":"6563","line":15,"column":22,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6753","line":18,"column":10,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6754","line":23,"column":10,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6731","line":32,"column":7,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6609","line":34,"column":9,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6717","line":35,"column":9,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6716","line":36,"column":9,"nodeType":"6556","messageId":"6557","endLine":36,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6755","line":37,"column":9,"nodeType":"6556","messageId":"6557","endLine":37,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6945","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6563","line":12,"column":22,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6573","line":13,"column":45,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":59},{"ruleId":"6554","severity":1,"message":"6937","line":15,"column":3,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6730","line":16,"column":3,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6670","line":21,"column":10,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6577","line":54,"column":22,"nodeType":"6556","messageId":"6557","endLine":54,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7229","line":56,"column":10,"nodeType":"6556","messageId":"6557","endLine":56,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7230","line":56,"column":15,"nodeType":"6556","messageId":"6557","endLine":56,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6765","line":67,"column":5,"nodeType":"6556","messageId":"6557","endLine":67,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7231","line":68,"column":5,"nodeType":"6556","messageId":"6557","endLine":68,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7229","line":77,"column":11,"nodeType":"6556","messageId":"6557","endLine":77,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6893","line":85,"column":9,"nodeType":"6556","messageId":"6557","endLine":85,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7232","line":94,"column":9,"nodeType":"6556","messageId":"6557","endLine":94,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6621","line":95,"column":13,"nodeType":"6556","messageId":"6557","endLine":95,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7233","line":102,"column":9,"nodeType":"6556","messageId":"6557","endLine":102,"endColumn":23},{"ruleId":"6591","severity":1,"message":"7086","line":111,"column":6,"nodeType":"6593","endLine":111,"endColumn":8,"suggestions":"7387"},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6563","line":11,"column":22,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6697","line":27,"column":7,"nodeType":"6556","messageId":"6557","endLine":27,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6698","line":59,"column":26,"nodeType":"6556","messageId":"6557","endLine":59,"endColumn":37},{"ruleId":"6554","severity":1,"message":"6699","line":66,"column":10,"nodeType":"6556","messageId":"6557","endLine":66,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6700","line":66,"column":23,"nodeType":"6556","messageId":"6557","endLine":66,"endColumn":37},{"ruleId":"6554","severity":1,"message":"6701","line":69,"column":10,"nodeType":"6556","messageId":"6557","endLine":69,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6702","line":70,"column":10,"nodeType":"6556","messageId":"6557","endLine":70,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6703","line":71,"column":11,"nodeType":"6556","messageId":"6557","endLine":71,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6704","line":71,"column":31,"nodeType":"6556","messageId":"6557","endLine":71,"endColumn":45},{"ruleId":"6554","severity":1,"message":"6705","line":71,"column":47,"nodeType":"6556","messageId":"6557","endLine":71,"endColumn":60},{"ruleId":"6554","severity":1,"message":"6706","line":74,"column":5,"nodeType":"6556","messageId":"6557","endLine":74,"endColumn":33},{"ruleId":"6554","severity":1,"message":"6707","line":75,"column":5,"nodeType":"6556","messageId":"6557","endLine":75,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6708","line":76,"column":5,"nodeType":"6556","messageId":"6557","endLine":76,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6709","line":77,"column":5,"nodeType":"6556","messageId":"6557","endLine":77,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6710","line":81,"column":5,"nodeType":"6556","messageId":"6557","endLine":81,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6711","line":87,"column":5,"nodeType":"6556","messageId":"6557","endLine":87,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6712","line":91,"column":5,"nodeType":"6556","messageId":"6557","endLine":91,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6713","line":92,"column":5,"nodeType":"6556","messageId":"6557","endLine":92,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6746","line":3,"column":31,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":37},{"ruleId":"6554","severity":1,"message":"6747","line":3,"column":39,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":43},{"ruleId":"6554","severity":1,"message":"7064","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6751","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":9},{"ruleId":"6554","severity":1,"message":"7118","line":11,"column":3,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7388","line":13,"column":3,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7389","line":14,"column":3,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7390","line":15,"column":3,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7391","line":18,"column":3,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":12},{"ruleId":"6554","severity":1,"message":"7392","line":19,"column":3,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7393","line":20,"column":4,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7394","line":21,"column":3,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":10},{"ruleId":"6554","severity":1,"message":"7395","line":22,"column":3,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":12},{"ruleId":"6554","severity":1,"message":"7396","line":23,"column":3,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":6},{"ruleId":"6554","severity":1,"message":"7397","line":24,"column":3,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":11},{"ruleId":"6554","severity":1,"message":"7181","line":25,"column":3,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7119","line":38,"column":8,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7071","line":146,"column":11,"nodeType":"6556","messageId":"6557","endLine":146,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7072","line":146,"column":27,"nodeType":"6556","messageId":"6557","endLine":146,"endColumn":46},{"ruleId":"6554","severity":1,"message":"6633","line":148,"column":9,"nodeType":"6556","messageId":"6557","endLine":148,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6634","line":149,"column":9,"nodeType":"6556","messageId":"6557","endLine":149,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7112","line":153,"column":10,"nodeType":"6556","messageId":"6557","endLine":153,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7113","line":153,"column":24,"nodeType":"6556","messageId":"6557","endLine":153,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6577","line":154,"column":22,"nodeType":"6556","messageId":"6557","endLine":154,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7114","line":158,"column":11,"nodeType":"6556","messageId":"6557","endLine":158,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7120","line":165,"column":10,"nodeType":"6556","messageId":"6557","endLine":165,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7121","line":166,"column":10,"nodeType":"6556","messageId":"6557","endLine":166,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7122","line":166,"column":23,"nodeType":"6556","messageId":"6557","endLine":166,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7123","line":167,"column":9,"nodeType":"6556","messageId":"6557","endLine":167,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7124","line":168,"column":9,"nodeType":"6556","messageId":"6557","endLine":168,"endColumn":18},{"ruleId":"6591","severity":1,"message":"6931","line":175,"column":6,"nodeType":"6593","endLine":175,"endColumn":8,"suggestions":"7398"},{"ruleId":"6591","severity":1,"message":"7126","line":181,"column":6,"nodeType":"6593","endLine":181,"endColumn":14,"suggestions":"7399"},{"ruleId":"6591","severity":1,"message":"7128","line":187,"column":6,"nodeType":"6593","endLine":187,"endColumn":30,"suggestions":"7400"},{"ruleId":"6591","severity":1,"message":"7130","line":187,"column":7,"nodeType":"7131","endLine":187,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6920","line":263,"column":9,"nodeType":"6556","messageId":"6557","endLine":263,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7401","line":276,"column":9,"nodeType":"6556","messageId":"6557","endLine":276,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6714","line":10,"column":10,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6715","line":15,"column":8,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6610","line":23,"column":26,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6716","line":24,"column":27,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":37},{"ruleId":"6554","severity":1,"message":"6717","line":24,"column":55,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":65},{"ruleId":"6591","severity":1,"message":"6718","line":39,"column":6,"nodeType":"6593","endLine":39,"endColumn":8,"suggestions":"7402"},{"ruleId":"6554","severity":1,"message":"6746","line":3,"column":31,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":37},{"ruleId":"6554","severity":1,"message":"6747","line":3,"column":39,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6839","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7024","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":11},{"ruleId":"6554","severity":1,"message":"7064","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6751","line":11,"column":3,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6564","line":13,"column":3,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7388","line":14,"column":3,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7389","line":15,"column":3,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7390","line":16,"column":3,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7391","line":19,"column":3,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":12},{"ruleId":"6554","severity":1,"message":"7392","line":20,"column":3,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7181","line":26,"column":3,"nodeType":"6556","messageId":"6557","endLine":26,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6662","line":32,"column":8,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7107","line":89,"column":9,"nodeType":"6556","messageId":"6557","endLine":89,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6663","line":90,"column":10,"nodeType":"6556","messageId":"6557","endLine":90,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6664","line":90,"column":18,"nodeType":"6556","messageId":"6557","endLine":90,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6673","line":91,"column":11,"nodeType":"6556","messageId":"6557","endLine":91,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6631","line":91,"column":21,"nodeType":"6556","messageId":"6557","endLine":91,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6674","line":91,"column":40,"nodeType":"6556","messageId":"6557","endLine":91,"endColumn":52},{"ruleId":"6554","severity":1,"message":"7108","line":92,"column":9,"nodeType":"6556","messageId":"6557","endLine":92,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7109","line":93,"column":9,"nodeType":"6556","messageId":"6557","endLine":93,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7110","line":97,"column":10,"nodeType":"6556","messageId":"6557","endLine":97,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7111","line":97,"column":24,"nodeType":"6556","messageId":"6557","endLine":97,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7112","line":98,"column":10,"nodeType":"6556","messageId":"6557","endLine":98,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7113","line":98,"column":24,"nodeType":"6556","messageId":"6557","endLine":98,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6577","line":100,"column":22,"nodeType":"6556","messageId":"6557","endLine":100,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7114","line":101,"column":11,"nodeType":"6556","messageId":"6557","endLine":101,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6705","line":105,"column":5,"nodeType":"6556","messageId":"6557","endLine":105,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7115","line":106,"column":5,"nodeType":"6556","messageId":"6557","endLine":106,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7116","line":107,"column":5,"nodeType":"6556","messageId":"6557","endLine":107,"endColumn":18},{"ruleId":"6591","severity":1,"message":"7086","line":115,"column":6,"nodeType":"6593","endLine":115,"endColumn":8,"suggestions":"7403"},{"ruleId":"6554","severity":1,"message":"6748","line":4,"column":10,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6669","line":4,"column":21,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6746","line":4,"column":31,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":37},{"ruleId":"6554","severity":1,"message":"6747","line":4,"column":39,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6751","line":5,"column":10,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7106","line":6,"column":10,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7105","line":17,"column":10,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6670","line":19,"column":10,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7107","line":168,"column":9,"nodeType":"6556","messageId":"6557","endLine":168,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6663","line":169,"column":10,"nodeType":"6556","messageId":"6557","endLine":169,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6664","line":169,"column":18,"nodeType":"6556","messageId":"6557","endLine":169,"endColumn":27},{"ruleId":"6554","severity":1,"message":"7336","line":170,"column":11,"nodeType":"6556","messageId":"6557","endLine":170,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6631","line":170,"column":16,"nodeType":"6556","messageId":"6557","endLine":170,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7329","line":170,"column":35,"nodeType":"6556","messageId":"6557","endLine":170,"endColumn":43},{"ruleId":"6554","severity":1,"message":"7330","line":171,"column":9,"nodeType":"6556","messageId":"6557","endLine":171,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7331","line":172,"column":9,"nodeType":"6556","messageId":"6557","endLine":172,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7332","line":176,"column":10,"nodeType":"6556","messageId":"6557","endLine":176,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7333","line":176,"column":19,"nodeType":"6556","messageId":"6557","endLine":176,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7112","line":177,"column":10,"nodeType":"6556","messageId":"6557","endLine":177,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7113","line":177,"column":24,"nodeType":"6556","messageId":"6557","endLine":177,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6577","line":179,"column":22,"nodeType":"6556","messageId":"6557","endLine":179,"endColumn":35},{"ruleId":"6591","severity":1,"message":"7086","line":184,"column":6,"nodeType":"6593","endLine":184,"endColumn":8,"suggestions":"7404"},{"ruleId":"6554","severity":1,"message":"6748","line":3,"column":10,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6669","line":3,"column":21,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6662","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6663","line":42,"column":10,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6664","line":42,"column":18,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6635","line":46,"column":11,"nodeType":"6556","messageId":"6557","endLine":46,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6665","line":51,"column":5,"nodeType":"6556","messageId":"6557","endLine":51,"endColumn":21},{"ruleId":"6591","severity":1,"message":"6666","line":64,"column":6,"nodeType":"6593","endLine":64,"endColumn":8,"suggestions":"7405"},{"ruleId":"6554","severity":1,"message":"6668","line":88,"column":9,"nodeType":"6556","messageId":"6557","endLine":88,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6662","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6631","line":90,"column":19,"nodeType":"6556","messageId":"6557","endLine":90,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6632","line":90,"column":27,"nodeType":"6556","messageId":"6557","endLine":90,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6633","line":91,"column":9,"nodeType":"6556","messageId":"6557","endLine":91,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6634","line":92,"column":9,"nodeType":"6556","messageId":"6557","endLine":92,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6635","line":97,"column":11,"nodeType":"6556","messageId":"6557","endLine":97,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6636","line":101,"column":5,"nodeType":"6556","messageId":"6557","endLine":101,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6637","line":102,"column":5,"nodeType":"6556","messageId":"6557","endLine":102,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6638","line":103,"column":5,"nodeType":"6556","messageId":"6557","endLine":103,"endColumn":15},{"ruleId":"6591","severity":1,"message":"6639","line":113,"column":6,"nodeType":"6593","endLine":113,"endColumn":8,"suggestions":"7406"},{"ruleId":"6554","severity":1,"message":"6641","line":135,"column":9,"nodeType":"6556","messageId":"6557","endLine":135,"endColumn":21},{"ruleId":"6558","replacedBy":"7407"},{"ruleId":"6560","replacedBy":"7408"},{"ruleId":"6554","severity":1,"message":"6608","line":31,"column":11,"nodeType":"6556","messageId":"6557","endLine":31,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6609","line":32,"column":11,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6610","line":33,"column":11,"nodeType":"6556","messageId":"6557","endLine":33,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6585","line":35,"column":10,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6586","line":35,"column":17,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":25},{"ruleId":"6591","severity":1,"message":"6611","line":40,"column":19,"nodeType":"6556","endLine":40,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6612","line":58,"column":5,"nodeType":"6556","messageId":"6557","endLine":58,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6613","line":69,"column":11,"nodeType":"6556","messageId":"6557","endLine":69,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6614","line":69,"column":28,"nodeType":"6556","messageId":"6557","endLine":69,"endColumn":44},{"ruleId":"6554","severity":1,"message":"6615","line":69,"column":46,"nodeType":"6556","messageId":"6557","endLine":69,"endColumn":57},{"ruleId":"6591","severity":1,"message":"6595","line":73,"column":6,"nodeType":"6593","endLine":73,"endColumn":8,"suggestions":"7409"},{"ruleId":"6554","severity":1,"message":"6617","line":107,"column":9,"nodeType":"6556","messageId":"6557","endLine":107,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6618","line":130,"column":9,"nodeType":"6556","messageId":"6557","endLine":130,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6999","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6605","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6839","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6606","line":15,"column":3,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":8},{"ruleId":"6554","severity":1,"message":"6925","line":22,"column":8,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7133","line":23,"column":8,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7134","line":24,"column":8,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6901","line":25,"column":8,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6908","line":26,"column":10,"nodeType":"6556","messageId":"6557","endLine":26,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6894","line":27,"column":10,"nodeType":"6556","messageId":"6557","endLine":27,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6964","line":28,"column":10,"nodeType":"6556","messageId":"6557","endLine":28,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7135","line":29,"column":8,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7136","line":30,"column":8,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7137","line":34,"column":8,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":31},{"ruleId":"6554","severity":1,"message":"7138","line":37,"column":8,"nodeType":"6556","messageId":"6557","endLine":37,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7139","line":40,"column":8,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6697","line":50,"column":7,"nodeType":"6556","messageId":"6557","endLine":50,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7141","line":52,"column":7,"nodeType":"6556","messageId":"6557","endLine":52,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7142","line":66,"column":7,"nodeType":"6556","messageId":"6557","endLine":66,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7143","line":81,"column":7,"nodeType":"6556","messageId":"6557","endLine":81,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7144","line":107,"column":7,"nodeType":"6556","messageId":"6557","endLine":107,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7145","line":136,"column":7,"nodeType":"6556","messageId":"6557","endLine":136,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6965","line":165,"column":7,"nodeType":"6556","messageId":"6557","endLine":165,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7146","line":216,"column":7,"nodeType":"6556","messageId":"6557","endLine":216,"endColumn":11},{"ruleId":"6554","severity":1,"message":"7147","line":233,"column":7,"nodeType":"6556","messageId":"6557","endLine":233,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7148","line":288,"column":7,"nodeType":"6556","messageId":"6557","endLine":288,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6926","line":415,"column":9,"nodeType":"6556","messageId":"6557","endLine":415,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7150","line":416,"column":11,"nodeType":"6556","messageId":"6557","endLine":416,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7151","line":416,"column":27,"nodeType":"6556","messageId":"6557","endLine":416,"endColumn":41},{"ruleId":"6554","severity":1,"message":"7152","line":417,"column":10,"nodeType":"6556","messageId":"6557","endLine":417,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7153","line":417,"column":19,"nodeType":"6556","messageId":"6557","endLine":417,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7154","line":421,"column":11,"nodeType":"6556","messageId":"6557","endLine":421,"endColumn":28},{"ruleId":"6591","severity":1,"message":"6931","line":445,"column":7,"nodeType":"6593","endLine":445,"endColumn":9,"suggestions":"7410"},{"ruleId":"6554","severity":1,"message":"6747","line":11,"column":3,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6748","line":20,"column":10,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6749","line":20,"column":21,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6925","line":21,"column":8,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6900","line":23,"column":8,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7411","line":34,"column":8,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":27},{"ruleId":"6554","severity":1,"message":"7412","line":35,"column":8,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":31},{"ruleId":"6554","severity":1,"message":"7413","line":37,"column":8,"nodeType":"6556","messageId":"6557","endLine":37,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7068","line":39,"column":8,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7069","line":41,"column":8,"nodeType":"6556","messageId":"6557","endLine":41,"endColumn":37},{"ruleId":"6554","severity":1,"message":"7070","line":43,"column":8,"nodeType":"6556","messageId":"6557","endLine":43,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7414","line":44,"column":8,"nodeType":"6556","messageId":"6557","endLine":44,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7081","line":47,"column":20,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6926","line":57,"column":9,"nodeType":"6556","messageId":"6557","endLine":57,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6577","line":58,"column":22,"nodeType":"6556","messageId":"6557","endLine":58,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6610","line":59,"column":11,"nodeType":"6556","messageId":"6557","endLine":59,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6632","line":59,"column":22,"nodeType":"6556","messageId":"6557","endLine":59,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6584","line":59,"column":33,"nodeType":"6556","messageId":"6557","endLine":59,"endColumn":46},{"ruleId":"6554","severity":1,"message":"7071","line":60,"column":11,"nodeType":"6556","messageId":"6557","endLine":60,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7072","line":60,"column":27,"nodeType":"6556","messageId":"6557","endLine":60,"endColumn":46},{"ruleId":"6554","severity":1,"message":"7073","line":72,"column":19,"nodeType":"6556","messageId":"6557","endLine":72,"endColumn":36},{"ruleId":"6554","severity":1,"message":"7074","line":73,"column":21,"nodeType":"6556","messageId":"6557","endLine":73,"endColumn":40},{"ruleId":"6554","severity":1,"message":"6713","line":74,"column":21,"nodeType":"6556","messageId":"6557","endLine":74,"endColumn":40},{"ruleId":"6554","severity":1,"message":"6628","line":77,"column":11,"nodeType":"6556","messageId":"6557","endLine":77,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6927","line":83,"column":9,"nodeType":"6556","messageId":"6557","endLine":83,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6928","line":94,"column":9,"nodeType":"6556","messageId":"6557","endLine":94,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6929","line":105,"column":9,"nodeType":"6556","messageId":"6557","endLine":105,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6930","line":116,"column":9,"nodeType":"6556","messageId":"6557","endLine":116,"endColumn":40},{"ruleId":"6591","severity":1,"message":"7075","line":130,"column":6,"nodeType":"6593","endLine":130,"endColumn":8,"suggestions":"7415"},{"ruleId":"6554","severity":1,"message":"6999","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6746","line":7,"column":3,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6839","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6564","line":20,"column":3,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7135","line":23,"column":3,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":11},{"ruleId":"6554","severity":1,"message":"7416","line":24,"column":3,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":6},{"ruleId":"6554","severity":1,"message":"7417","line":25,"column":3,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7418","line":26,"column":3,"nodeType":"6556","messageId":"6557","endLine":26,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7419","line":27,"column":3,"nodeType":"6556","messageId":"6557","endLine":27,"endColumn":12},{"ruleId":"6554","severity":1,"message":"7420","line":28,"column":3,"nodeType":"6556","messageId":"6557","endLine":28,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7421","line":29,"column":3,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7422","line":30,"column":3,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7423","line":31,"column":3,"nodeType":"6556","messageId":"6557","endLine":31,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6650","line":32,"column":3,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":10},{"ruleId":"6554","severity":1,"message":"7424","line":33,"column":3,"nodeType":"6556","messageId":"6557","endLine":33,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6925","line":35,"column":8,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7133","line":36,"column":8,"nodeType":"6556","messageId":"6557","endLine":36,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7134","line":37,"column":8,"nodeType":"6556","messageId":"6557","endLine":37,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6901","line":38,"column":8,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6908","line":39,"column":10,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6894","line":40,"column":10,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6964","line":41,"column":10,"nodeType":"6556","messageId":"6557","endLine":41,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7136","line":43,"column":8,"nodeType":"6556","messageId":"6557","endLine":43,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7137","line":46,"column":8,"nodeType":"6556","messageId":"6557","endLine":46,"endColumn":31},{"ruleId":"6554","severity":1,"message":"7138","line":49,"column":8,"nodeType":"6556","messageId":"6557","endLine":49,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7139","line":52,"column":8,"nodeType":"6556","messageId":"6557","endLine":52,"endColumn":31},{"ruleId":"6554","severity":1,"message":"7140","line":55,"column":8,"nodeType":"6556","messageId":"6557","endLine":55,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6697","line":59,"column":7,"nodeType":"6556","messageId":"6557","endLine":59,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7425","line":60,"column":7,"nodeType":"6556","messageId":"6557","endLine":60,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7426","line":69,"column":7,"nodeType":"6556","messageId":"6557","endLine":69,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7141","line":78,"column":7,"nodeType":"6556","messageId":"6557","endLine":78,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7142","line":92,"column":7,"nodeType":"6556","messageId":"6557","endLine":92,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7143","line":107,"column":7,"nodeType":"6556","messageId":"6557","endLine":107,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7144","line":133,"column":7,"nodeType":"6556","messageId":"6557","endLine":133,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7145","line":162,"column":7,"nodeType":"6556","messageId":"6557","endLine":162,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6965","line":191,"column":7,"nodeType":"6556","messageId":"6557","endLine":191,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7146","line":242,"column":7,"nodeType":"6556","messageId":"6557","endLine":242,"endColumn":11},{"ruleId":"6554","severity":1,"message":"7147","line":259,"column":7,"nodeType":"6556","messageId":"6557","endLine":259,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7148","line":314,"column":7,"nodeType":"6556","messageId":"6557","endLine":314,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7149","line":439,"column":7,"nodeType":"6556","messageId":"6557","endLine":439,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6926","line":460,"column":9,"nodeType":"6556","messageId":"6557","endLine":460,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7150","line":461,"column":11,"nodeType":"6556","messageId":"6557","endLine":461,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7151","line":461,"column":27,"nodeType":"6556","messageId":"6557","endLine":461,"endColumn":41},{"ruleId":"6554","severity":1,"message":"7152","line":462,"column":10,"nodeType":"6556","messageId":"6557","endLine":462,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7153","line":462,"column":19,"nodeType":"6556","messageId":"6557","endLine":462,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7154","line":466,"column":10,"nodeType":"6556","messageId":"6557","endLine":466,"endColumn":27},{"ruleId":"6591","severity":1,"message":"6931","line":490,"column":6,"nodeType":"6593","endLine":490,"endColumn":8,"suggestions":"7427"},{"ruleId":"6554","severity":1,"message":"6747","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6748","line":15,"column":10,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6749","line":15,"column":21,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6925","line":16,"column":8,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6900","line":18,"column":8,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7411","line":29,"column":8,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":27},{"ruleId":"6554","severity":1,"message":"7412","line":30,"column":8,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":31},{"ruleId":"6554","severity":1,"message":"7413","line":32,"column":8,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7068","line":34,"column":8,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7069","line":36,"column":8,"nodeType":"6556","messageId":"6557","endLine":36,"endColumn":37},{"ruleId":"6554","severity":1,"message":"7070","line":38,"column":8,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7414","line":39,"column":8,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7081","line":42,"column":20,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":28},{"ruleId":"6554","severity":1,"message":"7428","line":43,"column":10,"nodeType":"6556","messageId":"6557","endLine":43,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6926","line":52,"column":9,"nodeType":"6556","messageId":"6557","endLine":52,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6577","line":53,"column":22,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6610","line":54,"column":11,"nodeType":"6556","messageId":"6557","endLine":54,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6632","line":54,"column":22,"nodeType":"6556","messageId":"6557","endLine":54,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6584","line":54,"column":33,"nodeType":"6556","messageId":"6557","endLine":54,"endColumn":46},{"ruleId":"6554","severity":1,"message":"7071","line":55,"column":11,"nodeType":"6556","messageId":"6557","endLine":55,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7072","line":55,"column":27,"nodeType":"6556","messageId":"6557","endLine":55,"endColumn":46},{"ruleId":"6554","severity":1,"message":"7073","line":66,"column":19,"nodeType":"6556","messageId":"6557","endLine":66,"endColumn":36},{"ruleId":"6554","severity":1,"message":"7074","line":67,"column":21,"nodeType":"6556","messageId":"6557","endLine":67,"endColumn":40},{"ruleId":"6554","severity":1,"message":"6713","line":68,"column":21,"nodeType":"6556","messageId":"6557","endLine":68,"endColumn":40},{"ruleId":"6554","severity":1,"message":"6628","line":71,"column":11,"nodeType":"6556","messageId":"6557","endLine":71,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6927","line":74,"column":9,"nodeType":"6556","messageId":"6557","endLine":74,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6928","line":85,"column":9,"nodeType":"6556","messageId":"6557","endLine":85,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6929","line":96,"column":9,"nodeType":"6556","messageId":"6557","endLine":96,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6930","line":107,"column":9,"nodeType":"6556","messageId":"6557","endLine":107,"endColumn":40},{"ruleId":"6591","severity":1,"message":"7075","line":121,"column":6,"nodeType":"6593","endLine":121,"endColumn":8,"suggestions":"7429"},{"ruleId":"6554","severity":1,"message":"6748","line":19,"column":10,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6839","line":19,"column":21,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6749","line":19,"column":27,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6925","line":20,"column":8,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7133","line":21,"column":8,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6900","line":22,"column":8,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7311","line":32,"column":8,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":27},{"ruleId":"6554","severity":1,"message":"7312","line":41,"column":8,"nodeType":"6556","messageId":"6557","endLine":41,"endColumn":31},{"ruleId":"6554","severity":1,"message":"7313","line":42,"column":8,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7314","line":43,"column":8,"nodeType":"6556","messageId":"6557","endLine":43,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6731","line":53,"column":7,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6926","line":55,"column":9,"nodeType":"6556","messageId":"6557","endLine":55,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6610","line":56,"column":11,"nodeType":"6556","messageId":"6557","endLine":56,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6815","line":57,"column":10,"nodeType":"6556","messageId":"6557","endLine":57,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6577","line":57,"column":22,"nodeType":"6556","messageId":"6557","endLine":57,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6927","line":78,"column":9,"nodeType":"6556","messageId":"6557","endLine":78,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6928","line":89,"column":9,"nodeType":"6556","messageId":"6557","endLine":89,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6929","line":100,"column":9,"nodeType":"6556","messageId":"6557","endLine":100,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6930","line":111,"column":9,"nodeType":"6556","messageId":"6557","endLine":111,"endColumn":40},{"ruleId":"6591","severity":1,"message":"6931","line":125,"column":6,"nodeType":"6593","endLine":125,"endColumn":8,"suggestions":"7430"},{"ruleId":"6554","severity":1,"message":"6747","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6748","line":15,"column":10,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6749","line":15,"column":21,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6925","line":16,"column":8,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6900","line":18,"column":8,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7411","line":29,"column":8,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":27},{"ruleId":"6554","severity":1,"message":"7412","line":30,"column":8,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":31},{"ruleId":"6554","severity":1,"message":"7413","line":32,"column":8,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7068","line":34,"column":8,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7069","line":36,"column":8,"nodeType":"6556","messageId":"6557","endLine":36,"endColumn":37},{"ruleId":"6554","severity":1,"message":"7070","line":38,"column":8,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7414","line":39,"column":8,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7081","line":42,"column":20,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6926","line":52,"column":9,"nodeType":"6556","messageId":"6557","endLine":52,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6577","line":53,"column":22,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6610","line":54,"column":11,"nodeType":"6556","messageId":"6557","endLine":54,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6632","line":54,"column":22,"nodeType":"6556","messageId":"6557","endLine":54,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6584","line":54,"column":33,"nodeType":"6556","messageId":"6557","endLine":54,"endColumn":46},{"ruleId":"6554","severity":1,"message":"7071","line":55,"column":11,"nodeType":"6556","messageId":"6557","endLine":55,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7072","line":55,"column":27,"nodeType":"6556","messageId":"6557","endLine":55,"endColumn":46},{"ruleId":"6554","severity":1,"message":"7073","line":66,"column":19,"nodeType":"6556","messageId":"6557","endLine":66,"endColumn":36},{"ruleId":"6554","severity":1,"message":"7074","line":67,"column":21,"nodeType":"6556","messageId":"6557","endLine":67,"endColumn":40},{"ruleId":"6554","severity":1,"message":"6713","line":68,"column":21,"nodeType":"6556","messageId":"6557","endLine":68,"endColumn":40},{"ruleId":"6554","severity":1,"message":"6628","line":71,"column":11,"nodeType":"6556","messageId":"6557","endLine":71,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6927","line":74,"column":9,"nodeType":"6556","messageId":"6557","endLine":74,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6928","line":85,"column":9,"nodeType":"6556","messageId":"6557","endLine":85,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6929","line":96,"column":9,"nodeType":"6556","messageId":"6557","endLine":96,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6930","line":107,"column":9,"nodeType":"6556","messageId":"6557","endLine":107,"endColumn":40},{"ruleId":"6591","severity":1,"message":"7075","line":121,"column":6,"nodeType":"6593","endLine":121,"endColumn":8,"suggestions":"7431"},{"ruleId":"6554","severity":1,"message":"6834","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6835","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6836","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6746","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6750","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6837","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6566","line":14,"column":8,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6565","line":15,"column":8,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7107","line":14,"column":9,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6754","line":6,"column":10,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":26},{"ruleId":"6591","severity":1,"message":"6858","line":66,"column":6,"nodeType":"6593","endLine":66,"endColumn":8,"suggestions":"7432"},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6746","line":4,"column":10,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6747","line":4,"column":18,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6631","line":61,"column":19,"nodeType":"6556","messageId":"6557","endLine":61,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6632","line":61,"column":27,"nodeType":"6556","messageId":"6557","endLine":61,"endColumn":36},{"ruleId":"6591","severity":1,"message":"6860","line":83,"column":6,"nodeType":"6593","endLine":83,"endColumn":8,"suggestions":"7433"},{"ruleId":"6591","severity":1,"message":"6856","line":72,"column":6,"nodeType":"6593","endLine":72,"endColumn":8,"suggestions":"7434"},{"ruleId":"6591","severity":1,"message":"6831","line":42,"column":6,"nodeType":"6593","endLine":42,"endColumn":8,"suggestions":"7435"},{"ruleId":"6554","severity":1,"message":"7238","line":1,"column":8,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6746","line":3,"column":10,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7436","line":9,"column":7,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":11},{"ruleId":"6554","severity":1,"message":"7437","line":21,"column":7,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":12},{"ruleId":"6554","severity":1,"message":"7146","line":39,"column":7,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":11},{"ruleId":"6554","severity":1,"message":"7438","line":241,"column":7,"nodeType":"6556","messageId":"6557","endLine":241,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6563","line":2,"column":22,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6747","line":5,"column":21,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6675","line":11,"column":3,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6676","line":18,"column":10,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6945","line":24,"column":8,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6697","line":33,"column":7,"nodeType":"6556","messageId":"6557","endLine":33,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6731","line":72,"column":7,"nodeType":"6556","messageId":"6557","endLine":72,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6946","line":75,"column":24,"nodeType":"6556","messageId":"6557","endLine":75,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6677","line":76,"column":10,"nodeType":"6556","messageId":"6557","endLine":76,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6678","line":76,"column":25,"nodeType":"6556","messageId":"6557","endLine":76,"endColumn":41},{"ruleId":"6554","severity":1,"message":"6679","line":78,"column":9,"nodeType":"6556","messageId":"6557","endLine":78,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6947","line":82,"column":9,"nodeType":"6556","messageId":"6557","endLine":82,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7091","line":83,"column":9,"nodeType":"6556","messageId":"6557","endLine":83,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7166","line":85,"column":5,"nodeType":"6556","messageId":"6557","endLine":85,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6948","line":86,"column":5,"nodeType":"6556","messageId":"6557","endLine":86,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6949","line":87,"column":5,"nodeType":"6556","messageId":"6557","endLine":87,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6709","line":88,"column":5,"nodeType":"6556","messageId":"6557","endLine":88,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6950","line":90,"column":5,"nodeType":"6556","messageId":"6557","endLine":90,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6951","line":91,"column":5,"nodeType":"6556","messageId":"6557","endLine":91,"endColumn":33},{"ruleId":"6554","severity":1,"message":"6952","line":92,"column":5,"nodeType":"6556","messageId":"6557","endLine":92,"endColumn":34},{"ruleId":"6554","severity":1,"message":"6953","line":93,"column":5,"nodeType":"6556","messageId":"6557","endLine":93,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6680","line":94,"column":5,"nodeType":"6556","messageId":"6557","endLine":94,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6706","line":95,"column":5,"nodeType":"6556","messageId":"6557","endLine":95,"endColumn":33},{"ruleId":"6591","severity":1,"message":"6960","line":100,"column":6,"nodeType":"6593","endLine":100,"endColumn":8,"suggestions":"7439"},{"ruleId":"6554","severity":1,"message":"6954","line":102,"column":9,"nodeType":"6556","messageId":"6557","endLine":102,"endColumn":33},{"ruleId":"6554","severity":1,"message":"6662","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6670","line":20,"column":10,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7316","line":21,"column":10,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6634","line":107,"column":9,"nodeType":"6556","messageId":"6557","endLine":107,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6577","line":110,"column":22,"nodeType":"6556","messageId":"6557","endLine":110,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7317","line":113,"column":10,"nodeType":"6556","messageId":"6557","endLine":113,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6636","line":117,"column":5,"nodeType":"6556","messageId":"6557","endLine":117,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6637","line":118,"column":5,"nodeType":"6556","messageId":"6557","endLine":118,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6638","line":119,"column":5,"nodeType":"6556","messageId":"6557","endLine":119,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6912","line":120,"column":5,"nodeType":"6556","messageId":"6557","endLine":120,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6913","line":121,"column":5,"nodeType":"6556","messageId":"6557","endLine":121,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6914","line":122,"column":5,"nodeType":"6556","messageId":"6557","endLine":122,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6915","line":123,"column":5,"nodeType":"6556","messageId":"6557","endLine":123,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6916","line":124,"column":5,"nodeType":"6556","messageId":"6557","endLine":124,"endColumn":21},{"ruleId":"6591","severity":1,"message":"7318","line":129,"column":6,"nodeType":"6593","endLine":129,"endColumn":8,"suggestions":"7440"},{"ruleId":"6554","severity":1,"message":"6617","line":159,"column":9,"nodeType":"6556","messageId":"6557","endLine":159,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6920","line":167,"column":9,"nodeType":"6556","messageId":"6557","endLine":167,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6936","line":2,"column":25,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6748","line":3,"column":10,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6669","line":3,"column":21,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6746","line":5,"column":15,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7064","line":5,"column":23,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6564","line":5,"column":31,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6903","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6904","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6905","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6906","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6907","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6908","line":12,"column":10,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6909","line":13,"column":10,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7277","line":15,"column":8,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6697","line":17,"column":7,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":19},{"ruleId":"6591","severity":1,"message":"7278","line":64,"column":6,"nodeType":"6593","endLine":64,"endColumn":8,"suggestions":"7441"},{"ruleId":"6554","severity":1,"message":"7035","line":1,"column":38,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":45},{"ruleId":"6554","severity":1,"message":"6748","line":5,"column":10,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6669","line":5,"column":21,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6903","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6904","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6905","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6906","line":12,"column":8,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6907","line":13,"column":8,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6908","line":14,"column":10,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6909","line":15,"column":10,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7286","line":95,"column":9,"nodeType":"6556","messageId":"6557","endLine":95,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7150","line":96,"column":11,"nodeType":"6556","messageId":"6557","endLine":96,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7280","line":96,"column":27,"nodeType":"6556","messageId":"6557","endLine":96,"endColumn":43},{"ruleId":"6554","severity":1,"message":"7281","line":96,"column":45,"nodeType":"6556","messageId":"6557","endLine":96,"endColumn":62},{"ruleId":"6554","severity":1,"message":"7114","line":103,"column":5,"nodeType":"6556","messageId":"6557","endLine":103,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6612","line":104,"column":5,"nodeType":"6556","messageId":"6557","endLine":104,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7241","line":109,"column":5,"nodeType":"6556","messageId":"6557","endLine":109,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6622","line":133,"column":13,"nodeType":"6556","messageId":"6557","endLine":133,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7287","line":134,"column":13,"nodeType":"6556","messageId":"6557","endLine":134,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6625","line":135,"column":13,"nodeType":"6556","messageId":"6557","endLine":135,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7288","line":136,"column":13,"nodeType":"6556","messageId":"6557","endLine":136,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7289","line":137,"column":13,"nodeType":"6556","messageId":"6557","endLine":137,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7290","line":138,"column":13,"nodeType":"6556","messageId":"6557","endLine":138,"endColumn":27},{"ruleId":"6554","severity":1,"message":"7220","line":139,"column":13,"nodeType":"6556","messageId":"6557","endLine":139,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7221","line":140,"column":13,"nodeType":"6556","messageId":"6557","endLine":140,"endColumn":21},{"ruleId":"6591","severity":1,"message":"7291","line":184,"column":6,"nodeType":"6593","endLine":184,"endColumn":8,"suggestions":"7442"},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6756","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6747","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7080","line":16,"column":20,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7082","line":17,"column":28,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6962","line":20,"column":16,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6963","line":20,"column":26,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6849","line":27,"column":7,"nodeType":"6556","messageId":"6557","endLine":27,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6965","line":32,"column":7,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6926","line":56,"column":9,"nodeType":"6556","messageId":"6557","endLine":56,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6632","line":57,"column":22,"nodeType":"6556","messageId":"6557","endLine":57,"endColumn":31},{"ruleId":"6554","severity":1,"message":"7239","line":58,"column":10,"nodeType":"6556","messageId":"6557","endLine":58,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7240","line":58,"column":21,"nodeType":"6556","messageId":"6557","endLine":58,"endColumn":33},{"ruleId":"6554","severity":1,"message":"6567","line":59,"column":11,"nodeType":"6556","messageId":"6557","endLine":59,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6815","line":60,"column":10,"nodeType":"6556","messageId":"6557","endLine":60,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6577","line":60,"column":22,"nodeType":"6556","messageId":"6557","endLine":60,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6896","line":61,"column":10,"nodeType":"6556","messageId":"6557","endLine":61,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6878","line":61,"column":20,"nodeType":"6556","messageId":"6557","endLine":61,"endColumn":31},{"ruleId":"6554","severity":1,"message":"7114","line":64,"column":5,"nodeType":"6556","messageId":"6557","endLine":64,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6612","line":65,"column":5,"nodeType":"6556","messageId":"6557","endLine":65,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7241","line":70,"column":5,"nodeType":"6556","messageId":"6557","endLine":70,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7242","line":79,"column":9,"nodeType":"6556","messageId":"6557","endLine":79,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6747","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7080","line":14,"column":20,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7082","line":16,"column":28,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6962","line":17,"column":16,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6963","line":17,"column":26,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6572","line":18,"column":10,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6675","line":18,"column":36,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":58},{"ruleId":"6554","severity":1,"message":"7243","line":21,"column":10,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7077","line":22,"column":10,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6849","line":26,"column":7,"nodeType":"6556","messageId":"6557","endLine":26,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6926","line":31,"column":9,"nodeType":"6556","messageId":"6557","endLine":31,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6631","line":32,"column":22,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6632","line":32,"column":30,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7244","line":32,"column":41,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":54},{"ruleId":"6554","severity":1,"message":"6815","line":33,"column":10,"nodeType":"6556","messageId":"6557","endLine":33,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6577","line":33,"column":22,"nodeType":"6556","messageId":"6557","endLine":33,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6610","line":35,"column":11,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7114","line":37,"column":5,"nodeType":"6556","messageId":"6557","endLine":37,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6612","line":38,"column":5,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7241","line":43,"column":5,"nodeType":"6556","messageId":"6557","endLine":43,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6748","line":3,"column":10,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6669","line":3,"column":21,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6903","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6904","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6905","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6906","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6907","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6908","line":12,"column":10,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6909","line":13,"column":10,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6697","line":16,"column":7,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":19},{"ruleId":"6591","severity":1,"message":"7348","line":126,"column":6,"nodeType":"6593","endLine":126,"endColumn":8,"suggestions":"7443"},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6662","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6663","line":67,"column":10,"nodeType":"6556","messageId":"6557","endLine":67,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6664","line":67,"column":18,"nodeType":"6556","messageId":"6557","endLine":67,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6635","line":70,"column":11,"nodeType":"6556","messageId":"6557","endLine":70,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6665","line":75,"column":5,"nodeType":"6556","messageId":"6557","endLine":75,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6933","line":98,"column":9,"nodeType":"6556","messageId":"6557","endLine":98,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6934","line":107,"column":9,"nodeType":"6556","messageId":"6557","endLine":107,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6935","line":121,"column":9,"nodeType":"6556","messageId":"6557","endLine":121,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6563","line":11,"column":22,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6573","line":12,"column":29,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6731","line":111,"column":7,"nodeType":"6556","messageId":"6557","endLine":111,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6938","line":113,"column":9,"nodeType":"6556","messageId":"6557","endLine":113,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6943","line":114,"column":38,"nodeType":"6556","messageId":"6557","endLine":114,"endColumn":59},{"ruleId":"6554","severity":1,"message":"6944","line":116,"column":9,"nodeType":"6556","messageId":"6557","endLine":116,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6747","line":3,"column":39,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6577","line":105,"column":22,"nodeType":"6556","messageId":"6557","endLine":105,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7254","line":117,"column":27,"nodeType":"6556","messageId":"6557","endLine":117,"endColumn":48},{"ruleId":"6554","severity":1,"message":"7255","line":123,"column":9,"nodeType":"6556","messageId":"6557","endLine":123,"endColumn":34},{"ruleId":"6554","severity":1,"message":"7256","line":132,"column":9,"nodeType":"6556","messageId":"6557","endLine":132,"endColumn":33},{"ruleId":"6554","severity":1,"message":"7257","line":226,"column":9,"nodeType":"6556","messageId":"6557","endLine":226,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"7245","line":5,"column":28,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":46},{"ruleId":"6554","severity":1,"message":"6756","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6967","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6747","line":13,"column":3,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6962","line":19,"column":16,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6963","line":19,"column":26,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6572","line":20,"column":10,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6675","line":20,"column":36,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":58},{"ruleId":"6554","severity":1,"message":"7077","line":24,"column":10,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6849","line":29,"column":7,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6926","line":58,"column":9,"nodeType":"6556","messageId":"6557","endLine":58,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6631","line":59,"column":19,"nodeType":"6556","messageId":"6557","endLine":59,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6632","line":59,"column":27,"nodeType":"6556","messageId":"6557","endLine":59,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6653","line":59,"column":38,"nodeType":"6556","messageId":"6557","endLine":59,"endColumn":48},{"ruleId":"6554","severity":1,"message":"6815","line":60,"column":10,"nodeType":"6556","messageId":"6557","endLine":60,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6577","line":60,"column":22,"nodeType":"6556","messageId":"6557","endLine":60,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6896","line":61,"column":10,"nodeType":"6556","messageId":"6557","endLine":61,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6878","line":61,"column":20,"nodeType":"6556","messageId":"6557","endLine":61,"endColumn":31},{"ruleId":"6554","severity":1,"message":"7114","line":66,"column":11,"nodeType":"6556","messageId":"6557","endLine":66,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6636","line":68,"column":11,"nodeType":"6556","messageId":"6557","endLine":68,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7207","line":68,"column":27,"nodeType":"6556","messageId":"6557","endLine":68,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7208","line":68,"column":41,"nodeType":"6556","messageId":"6557","endLine":68,"endColumn":54},{"ruleId":"6554","severity":1,"message":"7246","line":72,"column":5,"nodeType":"6556","messageId":"6557","endLine":72,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6637","line":73,"column":5,"nodeType":"6556","messageId":"6557","endLine":73,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6638","line":74,"column":5,"nodeType":"6556","messageId":"6557","endLine":74,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6912","line":75,"column":5,"nodeType":"6556","messageId":"6557","endLine":75,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6915","line":78,"column":5,"nodeType":"6556","messageId":"6557","endLine":78,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6916","line":79,"column":5,"nodeType":"6556","messageId":"6557","endLine":79,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6563","line":2,"column":22,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6936","line":3,"column":25,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6675","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6676","line":17,"column":10,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6903","line":18,"column":8,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":19,"column":8,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6904","line":20,"column":8,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6905","line":21,"column":8,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6906","line":22,"column":8,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6945","line":23,"column":8,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6908","line":24,"column":10,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6697","line":29,"column":7,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6731","line":45,"column":7,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6910","line":49,"column":10,"nodeType":"6556","messageId":"6557","endLine":49,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6677","line":50,"column":10,"nodeType":"6556","messageId":"6557","endLine":50,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6678","line":50,"column":25,"nodeType":"6556","messageId":"6557","endLine":50,"endColumn":41},{"ruleId":"6554","severity":1,"message":"6679","line":52,"column":9,"nodeType":"6556","messageId":"6557","endLine":52,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6956","line":53,"column":10,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6957","line":53,"column":22,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6947","line":54,"column":9,"nodeType":"6556","messageId":"6557","endLine":54,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6958","line":58,"column":5,"nodeType":"6556","messageId":"6557","endLine":58,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6959","line":59,"column":5,"nodeType":"6556","messageId":"6557","endLine":59,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6948","line":60,"column":5,"nodeType":"6556","messageId":"6557","endLine":60,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6949","line":61,"column":5,"nodeType":"6556","messageId":"6557","endLine":61,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6709","line":62,"column":5,"nodeType":"6556","messageId":"6557","endLine":62,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6950","line":63,"column":5,"nodeType":"6556","messageId":"6557","endLine":63,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6951","line":64,"column":5,"nodeType":"6556","messageId":"6557","endLine":64,"endColumn":33},{"ruleId":"6554","severity":1,"message":"6952","line":65,"column":5,"nodeType":"6556","messageId":"6557","endLine":65,"endColumn":34},{"ruleId":"6554","severity":1,"message":"6953","line":66,"column":5,"nodeType":"6556","messageId":"6557","endLine":66,"endColumn":30},{"ruleId":"6554","severity":1,"message":"6680","line":67,"column":5,"nodeType":"6556","messageId":"6557","endLine":67,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6706","line":68,"column":5,"nodeType":"6556","messageId":"6557","endLine":68,"endColumn":33},{"ruleId":"6591","severity":1,"message":"7264","line":73,"column":6,"nodeType":"6593","endLine":73,"endColumn":8,"suggestions":"7444"},{"ruleId":"6554","severity":1,"message":"6617","line":75,"column":9,"nodeType":"6556","messageId":"6557","endLine":75,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6919","line":81,"column":9,"nodeType":"6556","messageId":"6557","endLine":81,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6756","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6747","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7080","line":15,"column":20,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7081","line":15,"column":31,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7082","line":17,"column":28,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6962","line":19,"column":16,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6963","line":19,"column":26,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6849","line":24,"column":7,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6965","line":26,"column":7,"nodeType":"6556","messageId":"6557","endLine":26,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6926","line":49,"column":9,"nodeType":"6556","messageId":"6557","endLine":49,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6632","line":50,"column":22,"nodeType":"6556","messageId":"6557","endLine":50,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6567","line":51,"column":11,"nodeType":"6556","messageId":"6557","endLine":51,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6577","line":52,"column":22,"nodeType":"6556","messageId":"6557","endLine":52,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6896","line":53,"column":10,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6878","line":53,"column":20,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6899","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":12},{"ruleId":"6554","severity":1,"message":"6756","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6572","line":7,"column":10,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7077","line":9,"column":10,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6849","line":12,"column":7,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6965","line":14,"column":7,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":14},{"ruleId":"6591","severity":1,"message":"7078","line":77,"column":6,"nodeType":"6593","endLine":77,"endColumn":8,"suggestions":"7445"},{"ruleId":"6554","severity":1,"message":"6563","line":2,"column":22,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6675","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6676","line":17,"column":10,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6903","line":18,"column":8,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":19,"column":8,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6904","line":20,"column":8,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6905","line":21,"column":8,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6906","line":22,"column":8,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6945","line":23,"column":8,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6908","line":24,"column":10,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6955","line":27,"column":8,"nodeType":"6556","messageId":"6557","endLine":27,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6697","line":29,"column":7,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6965","line":31,"column":7,"nodeType":"6556","messageId":"6557","endLine":31,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6731","line":45,"column":7,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6577","line":47,"column":22,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6910","line":48,"column":10,"nodeType":"6556","messageId":"6557","endLine":48,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6677","line":49,"column":10,"nodeType":"6556","messageId":"6557","endLine":49,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6678","line":49,"column":25,"nodeType":"6556","messageId":"6557","endLine":49,"endColumn":41},{"ruleId":"6554","severity":1,"message":"6679","line":51,"column":9,"nodeType":"6556","messageId":"6557","endLine":51,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6956","line":52,"column":10,"nodeType":"6556","messageId":"6557","endLine":52,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6957","line":52,"column":22,"nodeType":"6556","messageId":"6557","endLine":52,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6947","line":53,"column":9,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7091","line":54,"column":9,"nodeType":"6556","messageId":"6557","endLine":54,"endColumn":14},{"ruleId":"6591","severity":1,"message":"7092","line":64,"column":6,"nodeType":"6593","endLine":64,"endColumn":8,"suggestions":"7446"},{"ruleId":"6554","severity":1,"message":"6617","line":66,"column":9,"nodeType":"6556","messageId":"6557","endLine":66,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6919","line":72,"column":9,"nodeType":"6556","messageId":"6557","endLine":72,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6563","line":3,"column":22,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6670","line":8,"column":10,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6697","line":10,"column":7,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6965","line":12,"column":7,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6731","line":34,"column":7,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6938","line":36,"column":9,"nodeType":"6556","messageId":"6557","endLine":36,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6577","line":37,"column":22,"nodeType":"6556","messageId":"6557","endLine":37,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7088","line":38,"column":39,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":53},{"ruleId":"6591","severity":1,"message":"7089","line":43,"column":6,"nodeType":"6593","endLine":43,"endColumn":8,"suggestions":"7447"},{"ruleId":"6554","severity":1,"message":"6756","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6747","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7081","line":15,"column":20,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6967","line":16,"column":8,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6962","line":18,"column":16,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6963","line":18,"column":26,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6572","line":19,"column":10,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6675","line":19,"column":36,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":58},{"ruleId":"6554","severity":1,"message":"7083","line":22,"column":10,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6849","line":25,"column":7,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6965","line":27,"column":7,"nodeType":"6556","messageId":"6557","endLine":27,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6926","line":60,"column":9,"nodeType":"6556","messageId":"6557","endLine":60,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6577","line":61,"column":22,"nodeType":"6556","messageId":"6557","endLine":61,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6631","line":62,"column":21,"nodeType":"6556","messageId":"6557","endLine":62,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6674","line":62,"column":40,"nodeType":"6556","messageId":"6557","endLine":62,"endColumn":52},{"ruleId":"6554","severity":1,"message":"6896","line":63,"column":10,"nodeType":"6556","messageId":"6557","endLine":63,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6878","line":63,"column":20,"nodeType":"6556","messageId":"6557","endLine":63,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6665","line":67,"column":11,"nodeType":"6556","messageId":"6557","endLine":67,"endColumn":27},{"ruleId":"6554","severity":1,"message":"7084","line":67,"column":29,"nodeType":"6556","messageId":"6557","endLine":67,"endColumn":43},{"ruleId":"6554","severity":1,"message":"7085","line":67,"column":45,"nodeType":"6556","messageId":"6557","endLine":67,"endColumn":60},{"ruleId":"6591","severity":1,"message":"7086","line":72,"column":6,"nodeType":"6593","endLine":72,"endColumn":8,"suggestions":"7448"},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6747","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7080","line":14,"column":20,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7081","line":14,"column":31,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7082","line":16,"column":28,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6962","line":17,"column":16,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6963","line":17,"column":26,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6572","line":18,"column":10,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6675","line":18,"column":36,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":58},{"ruleId":"6554","severity":1,"message":"6670","line":20,"column":10,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7243","line":21,"column":10,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7077","line":22,"column":10,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6849","line":25,"column":7,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6926","line":30,"column":9,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6631","line":31,"column":22,"nodeType":"6556","messageId":"6557","endLine":31,"endColumn":28},{"ruleId":"6554","severity":1,"message":"7244","line":31,"column":41,"nodeType":"6556","messageId":"6557","endLine":31,"endColumn":54},{"ruleId":"6554","severity":1,"message":"6577","line":32,"column":22,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":35},{"ruleId":"6591","severity":1,"message":"7086","line":37,"column":6,"nodeType":"6593","endLine":37,"endColumn":8,"suggestions":"7449"},{"ruleId":"6554","severity":1,"message":"6756","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":13},{"ruleId":"6554","severity":1,"message":"6967","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6747","line":12,"column":3,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7081","line":17,"column":20,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6962","line":18,"column":16,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6963","line":18,"column":26,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6572","line":19,"column":10,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6675","line":19,"column":36,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":58},{"ruleId":"6554","severity":1,"message":"7077","line":23,"column":10,"nodeType":"6556","messageId":"6557","endLine":23,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6849","line":26,"column":7,"nodeType":"6556","messageId":"6557","endLine":26,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6926","line":45,"column":9,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6631","line":46,"column":19,"nodeType":"6556","messageId":"6557","endLine":46,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6653","line":46,"column":38,"nodeType":"6556","messageId":"6557","endLine":46,"endColumn":48},{"ruleId":"6554","severity":1,"message":"6577","line":47,"column":22,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6896","line":48,"column":10,"nodeType":"6556","messageId":"6557","endLine":48,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6878","line":48,"column":20,"nodeType":"6556","messageId":"6557","endLine":48,"endColumn":31},{"ruleId":"6554","severity":1,"message":"7114","line":52,"column":11,"nodeType":"6556","messageId":"6557","endLine":52,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6636","line":53,"column":11,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7207","line":53,"column":27,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7208","line":53,"column":41,"nodeType":"6556","messageId":"6557","endLine":53,"endColumn":54},{"ruleId":"6591","severity":1,"message":"7086","line":57,"column":6,"nodeType":"6593","endLine":57,"endColumn":8,"suggestions":"7450"},{"ruleId":"6554","severity":1,"message":"6748","line":3,"column":10,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6669","line":3,"column":21,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6903","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6904","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6905","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6906","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6907","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6908","line":11,"column":10,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6909","line":12,"column":10,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7282","line":13,"column":10,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6670","line":14,"column":10,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":29},{"ruleId":"6591","severity":1,"message":"6941","line":94,"column":6,"nodeType":"6593","endLine":94,"endColumn":8,"suggestions":"7451"},{"ruleId":"6591","severity":1,"message":"7284","line":101,"column":5,"nodeType":"6593","endLine":101,"endColumn":13,"suggestions":"7452"},{"ruleId":"6554","severity":1,"message":"6936","line":2,"column":25,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6563","line":5,"column":22,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6573","line":6,"column":29,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6937","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6730","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6670","line":13,"column":10,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6697","line":16,"column":7,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6731","line":45,"column":7,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6938","line":47,"column":9,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6939","line":48,"column":11,"nodeType":"6556","messageId":"6557","endLine":48,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6710","line":48,"column":19,"nodeType":"6556","messageId":"6557","endLine":48,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6940","line":48,"column":29,"nodeType":"6556","messageId":"6557","endLine":48,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6713","line":48,"column":45,"nodeType":"6556","messageId":"6557","endLine":48,"endColumn":64},{"ruleId":"6591","severity":1,"message":"6941","line":56,"column":6,"nodeType":"6593","endLine":56,"endColumn":8,"suggestions":"7453"},{"ruleId":"6554","severity":1,"message":"6728","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6748","line":3,"column":10,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6669","line":3,"column":21,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6748","line":3,"column":10,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6669","line":3,"column":21,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6903","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6904","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6905","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6906","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6907","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6908","line":11,"column":10,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6909","line":12,"column":10,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6670","line":14,"column":10,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7152","line":86,"column":10,"nodeType":"6556","messageId":"6557","endLine":86,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7153","line":86,"column":19,"nodeType":"6556","messageId":"6557","endLine":86,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7150","line":87,"column":11,"nodeType":"6556","messageId":"6557","endLine":87,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7280","line":87,"column":27,"nodeType":"6556","messageId":"6557","endLine":87,"endColumn":43},{"ruleId":"6554","severity":1,"message":"7281","line":87,"column":45,"nodeType":"6556","messageId":"6557","endLine":87,"endColumn":62},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6746","line":3,"column":3,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6747","line":4,"column":3,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6669","line":13,"column":8,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6670","line":14,"column":10,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6651","line":20,"column":10,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6652","line":36,"column":11,"nodeType":"6556","messageId":"6557","endLine":36,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6631","line":36,"column":19,"nodeType":"6556","messageId":"6557","endLine":36,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6632","line":36,"column":27,"nodeType":"6556","messageId":"6557","endLine":36,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6653","line":36,"column":38,"nodeType":"6556","messageId":"6557","endLine":36,"endColumn":48},{"ruleId":"6554","severity":1,"message":"6654","line":39,"column":10,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6655","line":39,"column":17,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6577","line":40,"column":22,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6656","line":42,"column":9,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6748","line":3,"column":10,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6669","line":3,"column":21,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6903","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6904","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6905","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6906","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6907","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6908","line":12,"column":10,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6909","line":13,"column":10,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6697","line":18,"column":7,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6910","line":39,"column":10,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6946","line":39,"column":24,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6911","line":40,"column":10,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7266","line":40,"column":23,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":37},{"ruleId":"6554","severity":1,"message":"7267","line":41,"column":10,"nodeType":"6556","messageId":"6557","endLine":41,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6635","line":43,"column":11,"nodeType":"6556","messageId":"6557","endLine":43,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7268","line":44,"column":11,"nodeType":"6556","messageId":"6557","endLine":44,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7269","line":44,"column":27,"nodeType":"6556","messageId":"6557","endLine":44,"endColumn":41},{"ruleId":"6591","severity":1,"message":"7270","line":52,"column":6,"nodeType":"6593","endLine":52,"endColumn":8,"suggestions":"7454"},{"ruleId":"6591","severity":1,"message":"7272","line":59,"column":6,"nodeType":"6593","endLine":59,"endColumn":14,"suggestions":"7455"},{"ruleId":"6554","severity":1,"message":"6654","line":4,"column":7,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":12},{"ruleId":"6554","severity":1,"message":"7274","line":2,"column":15,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7056","line":3,"column":8,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":12},{"ruleId":"6554","severity":1,"message":"7058","line":4,"column":8,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6834","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6835","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7057","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6836","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6746","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6750","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6837","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6662","line":12,"column":8,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6649","line":13,"column":8,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6566","line":14,"column":8,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6565","line":15,"column":8,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7044","line":19,"column":9,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":16},{"ruleId":"6591","severity":1,"message":"6853","line":73,"column":6,"nodeType":"6593","endLine":73,"endColumn":8,"suggestions":"7456"},{"ruleId":"6554","severity":1,"message":"6670","line":8,"column":10,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":29},{"ruleId":"6554","severity":1,"message":"7105","line":9,"column":10,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":28},{"ruleId":"6554","severity":1,"message":"7335","line":14,"column":10,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7336","line":30,"column":11,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6631","line":30,"column":16,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6632","line":30,"column":24,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":33},{"ruleId":"6554","severity":1,"message":"7329","line":30,"column":35,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6577","line":39,"column":22,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7337","line":50,"column":9,"nodeType":"6556","messageId":"6557","endLine":50,"endColumn":24},{"ruleId":"6591","severity":1,"message":"7338","line":95,"column":5,"nodeType":"6593","endLine":95,"endColumn":7,"suggestions":"7457"},{"ruleId":"6591","severity":1,"message":"7340","line":103,"column":6,"nodeType":"6593","endLine":103,"endColumn":18,"suggestions":"7458"},{"ruleId":"6591","severity":1,"message":"7342","line":112,"column":6,"nodeType":"6593","endLine":112,"endColumn":27,"suggestions":"7459"},{"ruleId":"6591","severity":1,"message":"6831","line":40,"column":6,"nodeType":"6593","endLine":40,"endColumn":8,"suggestions":"7460"},{"ruleId":"6591","severity":1,"message":"6865","line":50,"column":6,"nodeType":"6593","endLine":50,"endColumn":8,"suggestions":"7461"},{"ruleId":"6591","severity":1,"message":"6867","line":46,"column":6,"nodeType":"6593","endLine":46,"endColumn":8,"suggestions":"7462"},{"ruleId":"6591","severity":1,"message":"6873","line":41,"column":6,"nodeType":"6593","endLine":41,"endColumn":8,"suggestions":"7463"},{"ruleId":"6591","severity":1,"message":"6871","line":50,"column":6,"nodeType":"6593","endLine":50,"endColumn":8,"suggestions":"7464"},{"ruleId":"6591","severity":1,"message":"6869","line":41,"column":6,"nodeType":"6593","endLine":41,"endColumn":8,"suggestions":"7465"},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6662","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6670","line":17,"column":10,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6815","line":77,"column":10,"nodeType":"6556","messageId":"6557","endLine":77,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6577","line":77,"column":22,"nodeType":"6556","messageId":"6557","endLine":77,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6663","line":78,"column":10,"nodeType":"6556","messageId":"6557","endLine":78,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6664","line":78,"column":18,"nodeType":"6556","messageId":"6557","endLine":78,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6665","line":86,"column":5,"nodeType":"6556","messageId":"6557","endLine":86,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6933","line":109,"column":9,"nodeType":"6556","messageId":"6557","endLine":109,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6934","line":118,"column":9,"nodeType":"6556","messageId":"6557","endLine":118,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6935","line":165,"column":9,"nodeType":"6556","messageId":"6557","endLine":165,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6936","line":2,"column":25,"nodeType":"6556","messageId":"6557","endLine":2,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6563","line":4,"column":22,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6573","line":5,"column":29,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6937","line":7,"column":3,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6730","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6670","line":12,"column":10,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6731","line":84,"column":7,"nodeType":"6556","messageId":"6557","endLine":84,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6938","line":86,"column":9,"nodeType":"6556","messageId":"6557","endLine":86,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6713","line":92,"column":5,"nodeType":"6556","messageId":"6557","endLine":92,"endColumn":24},{"ruleId":"6591","severity":1,"message":"7260","line":98,"column":6,"nodeType":"6593","endLine":98,"endColumn":8,"suggestions":"7466"},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":27,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6748","line":3,"column":10,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6669","line":3,"column":21,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6903","line":5,"column":8,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":6,"column":8,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6904","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6905","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6906","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6907","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6908","line":11,"column":10,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6909","line":12,"column":10,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6697","line":16,"column":7,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6910","line":37,"column":10,"nodeType":"6556","messageId":"6557","endLine":37,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6911","line":38,"column":10,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6635","line":39,"column":11,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6617","line":59,"column":9,"nodeType":"6556","messageId":"6557","endLine":59,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6919","line":63,"column":9,"nodeType":"6556","messageId":"6557","endLine":63,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6920","line":68,"column":9,"nodeType":"6556","messageId":"6557","endLine":68,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6921","line":72,"column":9,"nodeType":"6556","messageId":"6557","endLine":72,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6903","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6662","line":8,"column":8,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6904","line":9,"column":8,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6905","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6906","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6907","line":12,"column":8,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6908","line":13,"column":10,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6909","line":14,"column":10,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6910","line":65,"column":10,"nodeType":"6556","messageId":"6557","endLine":65,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6911","line":66,"column":10,"nodeType":"6556","messageId":"6557","endLine":66,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6577","line":67,"column":23,"nodeType":"6556","messageId":"6557","endLine":67,"endColumn":36},{"ruleId":"6554","severity":1,"message":"6635","line":68,"column":11,"nodeType":"6556","messageId":"6557","endLine":68,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6912","line":76,"column":5,"nodeType":"6556","messageId":"6557","endLine":76,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6913","line":77,"column":5,"nodeType":"6556","messageId":"6557","endLine":77,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6914","line":78,"column":5,"nodeType":"6556","messageId":"6557","endLine":78,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6915","line":79,"column":5,"nodeType":"6556","messageId":"6557","endLine":79,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6916","line":80,"column":5,"nodeType":"6556","messageId":"6557","endLine":80,"endColumn":21},{"ruleId":"6591","severity":1,"message":"6917","line":85,"column":6,"nodeType":"6593","endLine":85,"endColumn":8,"suggestions":"7467"},{"ruleId":"6554","severity":1,"message":"6617","line":87,"column":9,"nodeType":"6556","messageId":"6557","endLine":87,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6919","line":91,"column":9,"nodeType":"6556","messageId":"6557","endLine":91,"endColumn":26},{"ruleId":"6554","severity":1,"message":"6920","line":96,"column":9,"nodeType":"6556","messageId":"6557","endLine":96,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6921","line":100,"column":9,"nodeType":"6556","messageId":"6557","endLine":100,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6922","line":104,"column":9,"nodeType":"6556","messageId":"6557","endLine":104,"endColumn":30},{"ruleId":"6554","severity":1,"message":"7035","line":1,"column":46,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":53},{"ruleId":"6554","severity":1,"message":"6786","line":7,"column":3,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":10},{"ruleId":"6554","severity":1,"message":"6564","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7037","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7001","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7038","line":11,"column":3,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7003","line":12,"column":3,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":5},{"ruleId":"6554","severity":1,"message":"7004","line":13,"column":3,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":5},{"ruleId":"6554","severity":1,"message":"7005","line":14,"column":3,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":5},{"ruleId":"6554","severity":1,"message":"7039","line":15,"column":3,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":9},{"ruleId":"6554","severity":1,"message":"7040","line":17,"column":10,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7041","line":17,"column":28,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":42},{"ruleId":"6554","severity":1,"message":"6967","line":19,"column":8,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6746","line":20,"column":10,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6747","line":20,"column":18,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7044","line":41,"column":9,"nodeType":"6556","messageId":"6557","endLine":41,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7011","line":42,"column":9,"nodeType":"6556","messageId":"6557","endLine":42,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6654","line":43,"column":10,"nodeType":"6556","messageId":"6557","endLine":43,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6655","line":43,"column":17,"nodeType":"6556","messageId":"6557","endLine":43,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6702","line":45,"column":10,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7045","line":45,"column":24,"nodeType":"6556","messageId":"6557","endLine":45,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6939","line":47,"column":11,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7046","line":47,"column":19,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6765","line":47,"column":33,"nodeType":"6556","messageId":"6557","endLine":47,"endColumn":47},{"ruleId":"6554","severity":1,"message":"6965","line":49,"column":9,"nodeType":"6556","messageId":"6557","endLine":49,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7048","line":109,"column":9,"nodeType":"6556","messageId":"6557","endLine":109,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7049","line":179,"column":9,"nodeType":"6556","messageId":"6557","endLine":179,"endColumn":29},{"ruleId":"6591","severity":1,"message":"7050","line":187,"column":6,"nodeType":"6593","endLine":187,"endColumn":14,"suggestions":"7468"},{"ruleId":"6554","severity":1,"message":"7023","line":4,"column":3,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7024","line":6,"column":3,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6974","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7025","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7026","line":12,"column":3,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6669","line":13,"column":3,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":11},{"ruleId":"6554","severity":1,"message":"6751","line":14,"column":3,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":9},{"ruleId":"6554","severity":1,"message":"7027","line":20,"column":8,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7028","line":21,"column":10,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7029","line":24,"column":10,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":27},{"ruleId":"6554","severity":1,"message":"7030","line":25,"column":10,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6716","line":112,"column":11,"nodeType":"6556","messageId":"6557","endLine":112,"endColumn":21},{"ruleId":"6591","severity":1,"message":"7031","line":122,"column":6,"nodeType":"6593","endLine":122,"endColumn":20,"suggestions":"7469"},{"ruleId":"6591","severity":1,"message":"7033","line":129,"column":6,"nodeType":"6593","endLine":129,"endColumn":14,"suggestions":"7470"},{"ruleId":"6558","replacedBy":"7471"},{"ruleId":"6560","replacedBy":"7472"},{"ruleId":"6554","severity":1,"message":"7035","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6569","line":3,"column":3,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":6},{"ruleId":"6554","severity":1,"message":"7059","line":4,"column":3,"nodeType":"6556","messageId":"6557","endLine":4,"endColumn":10},{"ruleId":"6554","severity":1,"message":"7037","line":5,"column":3,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7001","line":6,"column":3,"nodeType":"6556","messageId":"6557","endLine":6,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7038","line":7,"column":3,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7003","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":5},{"ruleId":"6554","severity":1,"message":"7004","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":5},{"ruleId":"6554","severity":1,"message":"7005","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":5},{"ruleId":"6554","severity":1,"message":"7039","line":11,"column":3,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":9},{"ruleId":"6554","severity":1,"message":"7040","line":13,"column":10,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7041","line":13,"column":28,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":42},{"ruleId":"6554","severity":1,"message":"7298","line":15,"column":10,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6572","line":16,"column":10,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6675","line":16,"column":36,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":58},{"ruleId":"6554","severity":1,"message":"6632","line":69,"column":22,"nodeType":"6556","messageId":"6557","endLine":69,"endColumn":31},{"ruleId":"6554","severity":1,"message":"6577","line":74,"column":22,"nodeType":"6556","messageId":"6557","endLine":74,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6628","line":76,"column":5,"nodeType":"6556","messageId":"6557","endLine":76,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7096","line":79,"column":5,"nodeType":"6556","messageId":"6557","endLine":79,"endColumn":22},{"ruleId":"6554","severity":1,"message":"6589","line":89,"column":5,"nodeType":"6556","messageId":"6557","endLine":89,"endColumn":8},{"ruleId":"6591","severity":1,"message":"7097","line":162,"column":6,"nodeType":"6593","endLine":162,"endColumn":8,"suggestions":"7473"},{"ruleId":"6591","severity":1,"message":"7099","line":168,"column":6,"nodeType":"6593","endLine":168,"endColumn":8,"suggestions":"7474"},{"ruleId":"6554","severity":1,"message":"6581","line":15,"column":10,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6582","line":29,"column":10,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6583","line":71,"column":22,"nodeType":"6556","messageId":"6557","endLine":71,"endColumn":32},{"ruleId":"6554","severity":1,"message":"6584","line":71,"column":34,"nodeType":"6556","messageId":"6557","endLine":71,"endColumn":47},{"ruleId":"6554","severity":1,"message":"6585","line":81,"column":10,"nodeType":"6556","messageId":"6557","endLine":81,"endColumn":15},{"ruleId":"6554","severity":1,"message":"6586","line":81,"column":17,"nodeType":"6556","messageId":"6557","endLine":81,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6587","line":82,"column":34,"nodeType":"6556","messageId":"6557","endLine":82,"endColumn":42},{"ruleId":"6554","severity":1,"message":"6588","line":82,"column":44,"nodeType":"6556","messageId":"6557","endLine":82,"endColumn":52},{"ruleId":"6554","severity":1,"message":"6577","line":83,"column":22,"nodeType":"6556","messageId":"6557","endLine":83,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6589","line":95,"column":5,"nodeType":"6556","messageId":"6557","endLine":95,"endColumn":8},{"ruleId":"6554","severity":1,"message":"6590","line":99,"column":5,"nodeType":"6556","messageId":"6557","endLine":99,"endColumn":14},{"ruleId":"6591","severity":1,"message":"6592","line":161,"column":6,"nodeType":"6593","endLine":161,"endColumn":8,"suggestions":"7475"},{"ruleId":"6591","severity":1,"message":"6595","line":165,"column":6,"nodeType":"6593","endLine":165,"endColumn":8,"suggestions":"7476"},{"ruleId":"6554","severity":1,"message":"7157","line":14,"column":8,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7066","line":18,"column":8,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7067","line":19,"column":8,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6580","line":34,"column":9,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7477","line":5,"column":3,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":7},{"ruleId":"6554","severity":1,"message":"6838","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":11},{"ruleId":"6554","severity":1,"message":"7309","line":15,"column":8,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7310","line":16,"column":8,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7132","line":17,"column":8,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7066","line":18,"column":8,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7067","line":19,"column":8,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7478","line":20,"column":8,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7479","line":21,"column":8,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7480","line":22,"column":10,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6579","line":30,"column":9,"nodeType":"6556","messageId":"6557","endLine":30,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6580","line":34,"column":9,"nodeType":"6556","messageId":"6557","endLine":34,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6569","line":12,"column":10,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":13},{"ruleId":"6554","severity":1,"message":"7064","line":12,"column":15,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":21},{"ruleId":"6554","severity":1,"message":"7157","line":14,"column":8,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7066","line":18,"column":8,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7067","line":19,"column":8,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6580","line":32,"column":9,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7157","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7309","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7310","line":12,"column":8,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7132","line":13,"column":8,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7066","line":14,"column":8,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7067","line":15,"column":8,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6579","line":25,"column":9,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6580","line":29,"column":9,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6579","line":24,"column":9,"nodeType":"6556","messageId":"6557","endLine":24,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6580","line":28,"column":9,"nodeType":"6556","messageId":"6557","endLine":28,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7309","line":11,"column":8,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7310","line":12,"column":8,"nodeType":"6556","messageId":"6557","endLine":12,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7132","line":13,"column":8,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7066","line":14,"column":8,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7067","line":15,"column":8,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":17},{"ruleId":"6554","severity":1,"message":"6579","line":25,"column":9,"nodeType":"6556","messageId":"6557","endLine":25,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6580","line":29,"column":9,"nodeType":"6556","messageId":"6557","endLine":29,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6899","line":3,"column":8,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":12},{"ruleId":"6554","severity":1,"message":"7064","line":5,"column":10,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6746","line":5,"column":18,"nodeType":"6556","messageId":"6557","endLine":5,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6649","line":13,"column":8,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7065","line":14,"column":8,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7132","line":16,"column":8,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7066","line":17,"column":8,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":24},{"ruleId":"6554","severity":1,"message":"7067","line":18,"column":8,"nodeType":"6556","messageId":"6557","endLine":18,"endColumn":17},{"ruleId":"6554","severity":1,"message":"7481","line":21,"column":3,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7482","line":22,"column":3,"nodeType":"6556","messageId":"6557","endLine":22,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6849","line":28,"column":7,"nodeType":"6556","messageId":"6557","endLine":28,"endColumn":18},{"ruleId":"6554","severity":1,"message":"6579","line":35,"column":9,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":23},{"ruleId":"6554","severity":1,"message":"6580","line":39,"column":9,"nodeType":"6556","messageId":"6557","endLine":39,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6945","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6563","line":11,"column":10,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6578","line":16,"column":7,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":20},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":15,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":24},{"ruleId":"6554","severity":1,"message":"6945","line":10,"column":8,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6563","line":11,"column":10,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6578","line":17,"column":7,"nodeType":"6556","messageId":"6557","endLine":17,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7094","line":40,"column":22,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7095","line":40,"column":41,"nodeType":"6556","messageId":"6557","endLine":40,"endColumn":55},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7105","line":10,"column":10,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6746","line":3,"column":31,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":37},{"ruleId":"6554","severity":1,"message":"6747","line":3,"column":39,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6839","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7024","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":11},{"ruleId":"6554","severity":1,"message":"7064","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6751","line":11,"column":3,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6564","line":13,"column":3,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7388","line":14,"column":3,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7389","line":15,"column":3,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7390","line":16,"column":3,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7391","line":19,"column":3,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":12},{"ruleId":"6554","severity":1,"message":"7392","line":20,"column":3,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7181","line":26,"column":3,"nodeType":"6556","messageId":"6557","endLine":26,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6662","line":32,"column":8,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7483","line":37,"column":8,"nodeType":"6556","messageId":"6557","endLine":37,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7107","line":173,"column":9,"nodeType":"6556","messageId":"6557","endLine":173,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6663","line":174,"column":10,"nodeType":"6556","messageId":"6557","endLine":174,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6664","line":174,"column":18,"nodeType":"6556","messageId":"6557","endLine":174,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6673","line":175,"column":11,"nodeType":"6556","messageId":"6557","endLine":175,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6631","line":175,"column":21,"nodeType":"6556","messageId":"6557","endLine":175,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6674","line":175,"column":40,"nodeType":"6556","messageId":"6557","endLine":175,"endColumn":52},{"ruleId":"6554","severity":1,"message":"7108","line":176,"column":9,"nodeType":"6556","messageId":"6557","endLine":176,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7109","line":177,"column":9,"nodeType":"6556","messageId":"6557","endLine":177,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7110","line":181,"column":10,"nodeType":"6556","messageId":"6557","endLine":181,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7111","line":181,"column":24,"nodeType":"6556","messageId":"6557","endLine":181,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7112","line":182,"column":10,"nodeType":"6556","messageId":"6557","endLine":182,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7113","line":182,"column":24,"nodeType":"6556","messageId":"6557","endLine":182,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6577","line":184,"column":22,"nodeType":"6556","messageId":"6557","endLine":184,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7114","line":185,"column":11,"nodeType":"6556","messageId":"6557","endLine":185,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6705","line":189,"column":5,"nodeType":"6556","messageId":"6557","endLine":189,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7115","line":190,"column":5,"nodeType":"6556","messageId":"6557","endLine":190,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7116","line":191,"column":5,"nodeType":"6556","messageId":"6557","endLine":191,"endColumn":18},{"ruleId":"6591","severity":1,"message":"7086","line":199,"column":6,"nodeType":"6593","endLine":199,"endColumn":8,"suggestions":"7484"},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7105","line":10,"column":10,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6746","line":3,"column":31,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":37},{"ruleId":"6554","severity":1,"message":"6747","line":3,"column":39,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6839","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7024","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":11},{"ruleId":"6554","severity":1,"message":"7064","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6751","line":11,"column":3,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6564","line":13,"column":3,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7388","line":14,"column":3,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7389","line":15,"column":3,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7390","line":16,"column":3,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7391","line":19,"column":3,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":12},{"ruleId":"6554","severity":1,"message":"7392","line":20,"column":3,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7181","line":26,"column":3,"nodeType":"6556","messageId":"6557","endLine":26,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6662","line":32,"column":8,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7483","line":37,"column":8,"nodeType":"6556","messageId":"6557","endLine":37,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7107","line":90,"column":9,"nodeType":"6556","messageId":"6557","endLine":90,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6663","line":91,"column":10,"nodeType":"6556","messageId":"6557","endLine":91,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6664","line":91,"column":18,"nodeType":"6556","messageId":"6557","endLine":91,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6673","line":92,"column":11,"nodeType":"6556","messageId":"6557","endLine":92,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6631","line":92,"column":21,"nodeType":"6556","messageId":"6557","endLine":92,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6674","line":92,"column":40,"nodeType":"6556","messageId":"6557","endLine":92,"endColumn":52},{"ruleId":"6554","severity":1,"message":"7108","line":93,"column":9,"nodeType":"6556","messageId":"6557","endLine":93,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7109","line":94,"column":9,"nodeType":"6556","messageId":"6557","endLine":94,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7110","line":98,"column":10,"nodeType":"6556","messageId":"6557","endLine":98,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7111","line":98,"column":24,"nodeType":"6556","messageId":"6557","endLine":98,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7112","line":99,"column":10,"nodeType":"6556","messageId":"6557","endLine":99,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7113","line":99,"column":24,"nodeType":"6556","messageId":"6557","endLine":99,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6577","line":101,"column":22,"nodeType":"6556","messageId":"6557","endLine":101,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7114","line":102,"column":11,"nodeType":"6556","messageId":"6557","endLine":102,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6705","line":106,"column":5,"nodeType":"6556","messageId":"6557","endLine":106,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7115","line":107,"column":5,"nodeType":"6556","messageId":"6557","endLine":107,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7116","line":108,"column":5,"nodeType":"6556","messageId":"6557","endLine":108,"endColumn":18},{"ruleId":"6591","severity":1,"message":"7086","line":116,"column":6,"nodeType":"6593","endLine":116,"endColumn":8,"suggestions":"7485"},{"ruleId":"6554","severity":1,"message":"6669","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6670","line":8,"column":10,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6671","line":14,"column":10,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6672","line":21,"column":7,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6673","line":35,"column":11,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6631","line":35,"column":21,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6632","line":35,"column":29,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6674","line":35,"column":40,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":52},{"ruleId":"6554","severity":1,"message":"6577","line":38,"column":22,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6669","line":7,"column":8,"nodeType":"6556","messageId":"6557","endLine":7,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6670","line":8,"column":10,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6671","line":14,"column":10,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6672","line":21,"column":7,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6673","line":35,"column":11,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6631","line":35,"column":21,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6632","line":35,"column":29,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6674","line":35,"column":40,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":52},{"ruleId":"6554","severity":1,"message":"6577","line":38,"column":22,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7105","line":10,"column":10,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6670","line":8,"column":10,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6671","line":14,"column":10,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6672","line":21,"column":7,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6673","line":35,"column":11,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6631","line":35,"column":21,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6632","line":35,"column":29,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6674","line":35,"column":40,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":52},{"ruleId":"6554","severity":1,"message":"6577","line":38,"column":22,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":35},{"ruleId":"6554","severity":1,"message":"6746","line":3,"column":31,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":37},{"ruleId":"6554","severity":1,"message":"6747","line":3,"column":39,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6839","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7024","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":11},{"ruleId":"6554","severity":1,"message":"7064","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6751","line":11,"column":3,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6564","line":13,"column":3,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7388","line":14,"column":3,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7389","line":15,"column":3,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7390","line":16,"column":3,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7391","line":19,"column":3,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":12},{"ruleId":"6554","severity":1,"message":"7392","line":20,"column":3,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7181","line":26,"column":3,"nodeType":"6556","messageId":"6557","endLine":26,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6662","line":32,"column":8,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7483","line":37,"column":8,"nodeType":"6556","messageId":"6557","endLine":37,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7486","line":93,"column":7,"nodeType":"6556","messageId":"6557","endLine":93,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7487","line":133,"column":7,"nodeType":"6556","messageId":"6557","endLine":133,"endColumn":25},{"ruleId":"6554","severity":1,"message":"7107","line":173,"column":9,"nodeType":"6556","messageId":"6557","endLine":173,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6663","line":174,"column":10,"nodeType":"6556","messageId":"6557","endLine":174,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6664","line":174,"column":18,"nodeType":"6556","messageId":"6557","endLine":174,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6673","line":175,"column":11,"nodeType":"6556","messageId":"6557","endLine":175,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6631","line":175,"column":21,"nodeType":"6556","messageId":"6557","endLine":175,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6674","line":175,"column":40,"nodeType":"6556","messageId":"6557","endLine":175,"endColumn":52},{"ruleId":"6554","severity":1,"message":"7108","line":176,"column":9,"nodeType":"6556","messageId":"6557","endLine":176,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7109","line":177,"column":9,"nodeType":"6556","messageId":"6557","endLine":177,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7110","line":181,"column":10,"nodeType":"6556","messageId":"6557","endLine":181,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7111","line":181,"column":24,"nodeType":"6556","messageId":"6557","endLine":181,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7112","line":182,"column":10,"nodeType":"6556","messageId":"6557","endLine":182,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7113","line":182,"column":24,"nodeType":"6556","messageId":"6557","endLine":182,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6577","line":184,"column":22,"nodeType":"6556","messageId":"6557","endLine":184,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7114","line":185,"column":11,"nodeType":"6556","messageId":"6557","endLine":185,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6705","line":189,"column":5,"nodeType":"6556","messageId":"6557","endLine":189,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7115","line":190,"column":5,"nodeType":"6556","messageId":"6557","endLine":190,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7116","line":191,"column":5,"nodeType":"6556","messageId":"6557","endLine":191,"endColumn":18},{"ruleId":"6591","severity":1,"message":"7086","line":199,"column":6,"nodeType":"6593","endLine":199,"endColumn":8,"suggestions":"7488"},{"ruleId":"6554","severity":1,"message":"6619","line":1,"column":17,"nodeType":"6556","messageId":"6557","endLine":1,"endColumn":26},{"ruleId":"6554","severity":1,"message":"7105","line":10,"column":10,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":28},{"ruleId":"6554","severity":1,"message":"6746","line":3,"column":31,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":37},{"ruleId":"6554","severity":1,"message":"6747","line":3,"column":39,"nodeType":"6556","messageId":"6557","endLine":3,"endColumn":43},{"ruleId":"6554","severity":1,"message":"6839","line":8,"column":3,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7024","line":9,"column":3,"nodeType":"6556","messageId":"6557","endLine":9,"endColumn":11},{"ruleId":"6554","severity":1,"message":"7064","line":10,"column":3,"nodeType":"6556","messageId":"6557","endLine":10,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6751","line":11,"column":3,"nodeType":"6556","messageId":"6557","endLine":11,"endColumn":9},{"ruleId":"6554","severity":1,"message":"6564","line":13,"column":3,"nodeType":"6556","messageId":"6557","endLine":13,"endColumn":7},{"ruleId":"6554","severity":1,"message":"7388","line":14,"column":3,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":8},{"ruleId":"6554","severity":1,"message":"7389","line":15,"column":3,"nodeType":"6556","messageId":"6557","endLine":15,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7390","line":16,"column":3,"nodeType":"6556","messageId":"6557","endLine":16,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7391","line":19,"column":3,"nodeType":"6556","messageId":"6557","endLine":19,"endColumn":12},{"ruleId":"6554","severity":1,"message":"7392","line":20,"column":3,"nodeType":"6556","messageId":"6557","endLine":20,"endColumn":19},{"ruleId":"6554","severity":1,"message":"7181","line":26,"column":3,"nodeType":"6556","messageId":"6557","endLine":26,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6662","line":32,"column":8,"nodeType":"6556","messageId":"6557","endLine":32,"endColumn":16},{"ruleId":"6554","severity":1,"message":"7483","line":37,"column":8,"nodeType":"6556","messageId":"6557","endLine":37,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6965","line":59,"column":7,"nodeType":"6556","messageId":"6557","endLine":59,"endColumn":14},{"ruleId":"6554","severity":1,"message":"7486","line":93,"column":7,"nodeType":"6556","messageId":"6557","endLine":93,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7107","line":173,"column":9,"nodeType":"6556","messageId":"6557","endLine":173,"endColumn":14},{"ruleId":"6554","severity":1,"message":"6663","line":174,"column":10,"nodeType":"6556","messageId":"6557","endLine":174,"endColumn":16},{"ruleId":"6554","severity":1,"message":"6664","line":174,"column":18,"nodeType":"6556","messageId":"6557","endLine":174,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6673","line":175,"column":11,"nodeType":"6556","messageId":"6557","endLine":175,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6631","line":175,"column":21,"nodeType":"6556","messageId":"6557","endLine":175,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6674","line":175,"column":40,"nodeType":"6556","messageId":"6557","endLine":175,"endColumn":52},{"ruleId":"6554","severity":1,"message":"7108","line":176,"column":9,"nodeType":"6556","messageId":"6557","endLine":176,"endColumn":23},{"ruleId":"6554","severity":1,"message":"7109","line":177,"column":9,"nodeType":"6556","messageId":"6557","endLine":177,"endColumn":20},{"ruleId":"6554","severity":1,"message":"7110","line":181,"column":10,"nodeType":"6556","messageId":"6557","endLine":181,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7111","line":181,"column":24,"nodeType":"6556","messageId":"6557","endLine":181,"endColumn":39},{"ruleId":"6554","severity":1,"message":"7112","line":182,"column":10,"nodeType":"6556","messageId":"6557","endLine":182,"endColumn":22},{"ruleId":"6554","severity":1,"message":"7113","line":182,"column":24,"nodeType":"6556","messageId":"6557","endLine":182,"endColumn":39},{"ruleId":"6554","severity":1,"message":"6577","line":184,"column":22,"nodeType":"6556","messageId":"6557","endLine":184,"endColumn":35},{"ruleId":"6554","severity":1,"message":"7114","line":185,"column":11,"nodeType":"6556","messageId":"6557","endLine":185,"endColumn":25},{"ruleId":"6554","severity":1,"message":"6705","line":189,"column":5,"nodeType":"6556","messageId":"6557","endLine":189,"endColumn":18},{"ruleId":"6554","severity":1,"message":"7115","line":190,"column":5,"nodeType":"6556","messageId":"6557","endLine":190,"endColumn":15},{"ruleId":"6554","severity":1,"message":"7116","line":191,"column":5,"nodeType":"6556","messageId":"6557","endLine":191,"endColumn":18},{"ruleId":"6591","severity":1,"message":"7086","line":199,"column":6,"nodeType":"6593","endLine":199,"endColumn":8,"suggestions":"7489"},{"ruleId":"6554","severity":1,"message":"6670","line":8,"column":10,"nodeType":"6556","messageId":"6557","endLine":8,"endColumn":29},{"ruleId":"6554","severity":1,"message":"6671","line":14,"column":10,"nodeType":"6556","messageId":"6557","endLine":14,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6672","line":21,"column":7,"nodeType":"6556","messageId":"6557","endLine":21,"endColumn":21},{"ruleId":"6554","severity":1,"message":"6673","line":35,"column":11,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":19},{"ruleId":"6554","severity":1,"message":"6631","line":35,"column":21,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":27},{"ruleId":"6554","severity":1,"message":"6632","line":35,"column":29,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":38},{"ruleId":"6554","severity":1,"message":"6674","line":35,"column":40,"nodeType":"6556","messageId":"6557","endLine":35,"endColumn":52},{"ruleId":"6554","severity":1,"message":"6577","line":38,"column":22,"nodeType":"6556","messageId":"6557","endLine":38,"endColumn":35},"no-unused-vars","'Loading' is defined but never used.","Identifier","unusedVar","no-native-reassign",["7490"],"no-negated-in-lhs",["7491"],"'Main' is defined but never used.","'Link' is defined but never used.","'Text' is defined but never used.","'Badge' is defined but never used.","'NotificationsIcon' is defined but never used.","'user' is assigned a value but never used.","'CssBaseline' is defined but never used.","'Box' is defined but never used.","'RecoilRoot' is defined but never used.","'atom' is defined but never used.","'selector' is defined but never used.","'useRecoilValue' is defined but never used.","'useSetRecoilState' is defined but never used.","'MenuListItems' is defined but never used.","'headerlogo' is defined but never used.","'setLoginLevel' is assigned a value but never used.","'ToolbarHeader' is assigned a value but never used.","'handleClickPay' is assigned a value but never used.","'handleClickTable' is assigned a value but never used.","'useBoolean' is defined but never used.","'useCurrency' is defined but never used.","'employeeId' is assigned a value but never used.","'setEmployeeId' is assigned a value but never used.","'empId' is assigned a value but never used.","'setEmpId' is assigned a value but never used.","'setValue' is assigned a value but never used.","'register' is assigned a value but never used.","'age' is assigned a value but never used.","'leave_bal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'birthdate', 'reporting_email', and 'tap_checkbox'. Either include them or remove the dependency array.","ArrayExpression",["7492"],"React Hook useEffect has a missing dependency: 'setAllEmpId'. Either include it or remove the dependency array.",["7493"],"'headEmployeesTableCells' is defined but never used.","React Hook useEffect has a missing dependency: 'loadExpenses'. Either include it or remove the dependency array.",["7494"],"'PayslipsPeriods' is defined but never used.","'PayslipPeriods' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'currentUser' is assigned a value but never used.","'Flex' is defined but never used.","'Stack' is defined but never used.","'Wrapper' is assigned a value but never used.","'designations' is assigned a value but never used.","'departments' is assigned a value but never used.","'employees' is assigned a value but never used.","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'employees_loading' is assigned a value but never used.","'loadDepartments' is assigned a value but never used.","'loadDesignations' is assigned a value but never used.","'resetTables' is assigned a value but never used.",["7495"],"'handleDialogOpen' is assigned a value but never used.","'calculateAge' is assigned a value but never used.","'useEffect' is defined but never used.","'SET_SINGLEEMPLOYEE' is defined but never used.","'id' is assigned a value but never used.","'name' is assigned a value but never used.","'ic_no' is assigned a value but never used.","'email' is assigned a value but never used.","'gender' is assigned a value but never used.","'useReducer' is defined but never used.","'useForm' is defined but never used.","'isEditing' is assigned a value but never used.",["7490"],["7491"],"'filter' is assigned a value but never used.","'setFilter' is assigned a value but never used.","'updateLeaves' is assigned a value but never used.","'addLeaves' is assigned a value but never used.","'loadEmployees' is assigned a value but never used.","'leaves_loading' is assigned a value but never used.","'deleteLeave' is assigned a value but never used.","'loadLeaves' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'editLeaveID' and 'setLeaveId'. Either include them or remove the dependency array.",["7496"],"'delete_Leave' is assigned a value but never used.","'SET_SINGLELEAVE' is defined but never used.","'RESET_TABLES' is defined but never used.","'from_date' is assigned a value but never used.","'to_date' is assigned a value but never used.","'reason' is assigned a value but never used.","'no_of_days' is assigned a value but never used.","'status' is assigned a value but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'useDeleteLeaves' is defined but never used.","'leaves' is assigned a value but never used.","'setLeaveId' is assigned a value but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'initialValues' is assigned a value but never used.","'SET_SINGLEEXPENSE' is defined but never used.","'date' is assigned a value but never used.","'purchased_date' is assigned a value but never used.","'remark' is assigned a value but never used.","'amount' is assigned a value but never used.","'EditIcon' is defined but never used.","'isLoad' is assigned a value but never used.","'setIsLoad' is assigned a value but never used.","'expenses_loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'expenses' and 'expensesdata'. Either include them or remove the dependency array.",["7497"],"'approve_Expense' is assigned a value but never used.","'MenuItem' is defined but never used.","'useEmployeesContext' is defined but never used.","'useDeleteExpenses' is defined but never used.","'initial_values' is assigned a value but never used.","'expenses' is assigned a value but never used.","'setExpenseId' is assigned a value but never used.","'useRecoilValueLoadable' is defined but never used.","'fetchDailyAllowancesSelector' is defined but never used.","'tmpallowsdata' is assigned a value but never used.","'setTmpallowsdata' is assigned a value but never used.","'allows_empid' is assigned a value but never used.","'dailyallowance_period' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'allows_period' and 'getSingleBatchDailyAllowance'. Either include them or remove the dependency array.",["7498"],["7490"],["7491"],"'SET_SINGLEDAILYALLOWANCE' is defined but never used.","'LOAD_DAILYALLOWANCES' is defined but never used.","'LOAD_DAILYALLOWSDETLS' is defined but never used.","'period' is assigned a value but never used.","'location' is assigned a value but never used.","'manager_name' is assigned a value but never used.","no-dupe-keys","Duplicate key 'setDailyAllowsDetlPeriod'.","ObjectExpression","unexpected","React Hook useEffect has a missing dependency: 'loadEmployees'. Either include it or remove the dependency array.",["7499"],"'FILTERSTRING' is assigned a value but never used.","'psbpayrunId' is assigned a value but never used.","'isLoadInput' is assigned a value but never used.","'setIsLoadInput' is assigned a value but never used.","'payrunId' is assigned a value but never used.","'payrunstatus' is assigned a value but never used.","'loadPeriodExpenses' is assigned a value but never used.","'periodexpenses' is assigned a value but never used.","'updateExpense' is assigned a value but never used.","'getSingleBatchDailyAllowance' is assigned a value but never used.","'singlebatchdailyallowance' is assigned a value but never used.","'updateDailyAllowance' is assigned a value but never used.","'deleteDailyAllowance' is assigned a value but never used.","'getPayrun' is assigned a value but never used.","'single_payslip' is assigned a value but never used.","'pending_payslips' is assigned a value but never used.","'loadPendingPayslips' is assigned a value but never used.","'payrunIdState' is defined but never used.","'BatchPayslips' is defined but never used.","'allowances' is assigned a value but never used.","'deductions' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadAllowances', 'loadDeductions', and 'loadEmployees'. Either include them or remove the dependency array.",["7500"],"'SET_SINGLEPAYSLIP' is defined but never used.","'GET_SINGLE_PAYSLIPEARNING_BEGIN' is defined but never used.","'GET_SINGLE_PAYSLIPEARNING_SUCCESS' is defined but never used.","'GET_SINGLE_PAYSLIPEARNING_ERROR' is defined but never used.","'GET_SINGLE_PAYSLIPDEDUCTION_BEGIN' is defined but never used.","'GET_SINGLE_PAYSLIPDEDUCTION_SUCCESS' is defined but never used.","'GET_SINGLE_PAYSLIPDEDUCTION_ERROR' is defined but never used.","'description' is assigned a value but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'payPeriodEndMonthState' is defined but never used.","'history' is assigned a value but never used.","'payEarningData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getSingleBatchPayslipEarnings', 'payslip_period', and 'single_payslip.empid'. Either include them or remove the dependency array.",["7501"],"'calc_Earning' is assigned a value but never used.","'update_PayslipEarning' is assigned a value but never used.","'add_PayslipEarning' is assigned a value but never used.","'delete_PayslipEarning' is assigned a value but never used.","'loadPayslipDeductions' is assigned a value but never used.","'calc_Deduction' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getSingleBatchPayslipDeductions', 'payslip_period', and 'single_payslip.empid'. Either include them or remove the dependency array.",["7502"],"'update_PayslipDeduction' is assigned a value but never used.","'add_PayslipDeduction' is assigned a value but never used.","'delete_PayslipDeduction' is assigned a value but never used.","'Button' is defined but never used.","'Icon' is defined but never used.","'TextField' is defined but never used.","'Paper' is defined but never used.","'Typography' is defined but never used.","'Select' is defined but never used.","'Toolbar' is defined but never used.","'useDesignations' is defined but never used.","'useTablesContext' is defined but never used.","'currency' is assigned a value but never used.","'axios' is defined but never used.",["7490"],["7491"],"'Checkbox' is defined but never used.","'calc' is assigned a value but never used.","'setCalc' is assigned a value but never used.","'isPayslipEditing' is assigned a value but never used.","'addPayslip' is assigned a value but never used.","'loadPayslips' is assigned a value but never used.","'payslip_period' is assigned a value but never used.","'payslip_earning_amount' is assigned a value but never used.","'payslip_deduction_amount' is assigned a value but never used.","'loadAllowances' is assigned a value but never used.","'loadDeductions' is assigned a value but never used.","'setPayEarningData' is assigned a value but never used.","'setPayDeductionData' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'editPayslipID' and 'getSinglePayslip'. Either include them or remove the dependency array.",["7503"],"react/jsx-pascal-case","Imported JSX component Payslip_ViewEarnings must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Payslip_ViewDeductions must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Payslip_Earnings must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Payslip_Deductions must be in PascalCase or SCREAMING_SNAKE_CASE",["7490"],["7491"],"'Switch' is defined but never used.","'Container' is defined but never used.","'Heading' is defined but never used.","'Example' is defined but never used.","'SideDrawer' is defined but never used.","'SingleEmployee' is defined but never used.","'SingleLeave' is defined but never used.","'SingleExpense' is defined but never used.","'SingleDailyAllowance' is defined but never used.","'SingleDailyAllowsDetls' is defined but never used.","'BatchDailyAllowances' is defined but never used.","'SinglePayslip' is defined but never used.","'Payrun' is defined but never used.","'Payrunbatch' is defined but never used.","'Home' is defined but never used.","'AllEmployees' is defined but never used.","'Leave' is defined but never used.","'Expenses' is defined but never used.","'Payslip' is defined but never used.","'Payroll' is defined but never used.","'Departments' is defined but never used.","'Designation' is defined but never used.","'Tables' is defined but never used.","'Clients' is defined but never used.","'Allowances' is defined but never used.","'DailyAllowances' is defined but never used.","'Error' is defined but never used.","'useRecoilStateLoadable' is defined but never used.","'allowsDataState' is defined but never used.","'fetchDailyAllowsDetlsSelector' is defined but never used.","'useDailyAllowsDetlsBatch' is defined but never used.","'loginLevel' is assigned a value but never used.","'dailyallows' is assigned a value but never used.","'dailyAllowsId' is assigned a value but never used.","no-use-before-define","'useDailyAllowsDetlsBatch' was used before it was defined.","usedBeforeDefined","'addDailyAllowsDetl' is assigned a value but never used.","'dailyallowsdetls_loading' is assigned a value but never used.","'updateDailyAllowsDetl' is assigned a value but never used.","'deleteDailyAllowsDetl' is assigned a value but never used.","'getSingleBatchDailyAllowsDetl' is assigned a value but never used.","'singlebatch_dailyallowsdetl_loading' is assigned a value but never used.","'single_dailyallowance' is assigned a value but never used.","'editDailyAllowanceID' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setDailyAllowsDetlsId', 'setDailyAllowsDetlsPeriod', and 'setDailyAllowsId'. Either include them or remove the dependency array.",["7504"],"React Hook useEffect has a missing dependency: 'setPayItemId'. Either include it or remove the dependency array.",["7505"],["7506"],"'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'CardMedia' is defined but never used.","'MoreVertIcon' is defined but never used.","'Collapse' is defined but never used.","'Grid' is defined but never used.","'Avatar' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'MenuList' is defined but never used.","'ClickAwayListener' is defined but never used.","'Grow' is defined but never used.","'Popper' is defined but never used.","'img' is defined but never used.","'drawerWidth' is assigned a value but never used.","'handleExpandClick' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'editEmployeeID', 'getSingleEmployee', 'loadDepartments', and 'loadDesignations'. Either include them or remove the dependency array.",["7507"],"'SET_SINGLETRAINING' is defined but never used.","React Hook useEffect has missing dependencies: 'editEmployeeID' and 'setEducationId'. Either include them or remove the dependency array.",["7508"],"React Hook useEffect has missing dependencies: 'editEmployeeID' and 'setExperienceId'. Either include them or remove the dependency array.",["7509"],"React Hook useEffect has missing dependencies: 'editEmployeeID' and 'setFamilyId'. Either include them or remove the dependency array.",["7510"],"'useTrainingsContext' is defined but never used.","React Hook useEffect has missing dependencies: 'editEmployeeID' and 'setTrainingId'. Either include them or remove the dependency array.",["7511"],"React Hook useEffect has missing dependencies: 'editEmployeeID' and 'getSingleBatchTraining'. Either include them or remove the dependency array.",["7512"],"React Hook useEffect has missing dependencies: 'editEmployeeID' and 'getSingleBatchLeave'. Either include them or remove the dependency array.",["7513"],"React Hook useEffect has missing dependencies: 'editEmployeeID' and 'loadSingleBatchFamily'. Either include them or remove the dependency array.",["7514"],"React Hook useEffect has missing dependencies: 'editEmployeeID' and 'loadSingleBatchExperience'. Either include them or remove the dependency array.",["7515"],"React Hook useEffect has missing dependencies: 'editEmployeeID' and 'loadSingleBatchEducation'. Either include them or remove the dependency array.",["7516"],"'fetchDepartmentsSelector' is defined but never used.","'url' is assigned a value but never used.","'fetchUserDetails' is assigned a value but never used.","'setUserdata' is assigned a value but never used.",["7490"],["7491"],["7490"],["7491"],"'allowsDataDetlsState' is defined but never used.","React Hook useEffect has missing dependencies: 'getSingleBatchPayslipDeductions', 'payPeriod', and 'payPeriodEmpId'. Either include them or remove the dependency array.",["7517"],"'load' is assigned a value but never used.","'setLoad' is assigned a value but never used.","'addPayslipEarning' is assigned a value but never used.","'updatePayslipEarning' is assigned a value but never used.","'deletePayslipEarning' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getSingleBatchPayslipEarnings', 'payPeriod', and 'payPeriodEmpId'. Either include them or remove the dependency array.",["7518"],"'update_Payslip' is assigned a value but never used.","'useRecoilState' is defined but never used.","'onleavesdata' is assigned a value but never used.","'userdata' is assigned a value but never used.",["7490"],["7491"],"'clsx' is defined but never used.","'CardLayout3' is defined but never used.","'Copyright' is defined but never used.","'useStyles' is assigned a value but never used.","'AddIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'CheckIcon' is defined but never used.","'SearchIcon' is defined but never used.","'LeaveForm' is defined but never used.","'CustomDialog' is defined but never used.","'AlertDialog' is defined but never used.","'isDialogOpen' is assigned a value but never used.","'isAlertOpen' is assigned a value but never used.","'getSingleLeave' is assigned a value but never used.","'setEditLeaveID' is assigned a value but never used.","'setIsLeaveEditingOn' is assigned a value but never used.","'setIsLeaveEditingOff' is assigned a value but never used.","'resetSingleLeave' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadPendingLeaves'. Either include it or remove the dependency array.",["7519"],"'handleDialogClose' is assigned a value but never used.","'handleAlertOpen' is assigned a value but never used.","'handleAlertClose' is assigned a value but never used.","'handleOnDeleteConfirm' is assigned a value but never used.",["7490"],["7491"],"'CardLayout' is defined but never used.","'fixedHeightPaper' is assigned a value but never used.","'handleLeaveDialogOpen' is assigned a value but never used.","'handleExpenseDialogOpen' is assigned a value but never used.","'handlePayslipDialogOpen' is assigned a value but never used.","'handleDailyAllowancesDialogOpen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentyear'. Either include it or remove the dependency array.",["7520"],"'handleExpenseFormDialogOpen' is assigned a value but never used.","'handleExpenseFormAlertOpen' is assigned a value but never used.","'Save_ExpenseData' is assigned a value but never used.","'MTableToolbar' is defined but never used.","'payPeriodState' is defined but never used.","'setPayPeriodEmpId' is assigned a value but never used.","'payrun' is assigned a value but never used.","'payrun_loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setPayrunStatusId' and 'status'. Either include them or remove the dependency array.",["7521"],"'update_payrun_loading' is assigned a value but never used.","'Save_PayslipData' is assigned a value but never used.","'ArrowBackIcon' is defined but never used.","'setIsDialogOpen' is assigned a value but never used.","'setEmpID' is assigned a value but never used.","'singlebatch_dailyallowance' is assigned a value but never used.","'singlebatch_dailyallowance_loading' is assigned a value but never used.","'setEditDailyAllowanceID' is assigned a value but never used.","'setIsDailyAllowanceEditingOn' is assigned a value but never used.","'setIsDailyAllowanceEditingOff' is assigned a value but never used.","'resetSingleDailyAllowance' is assigned a value but never used.","'Save_DailyAllowancesData' is assigned a value but never used.","'DailyAllowsDetlsTable' is defined but never used.","'allowsdata' is assigned a value but never used.","'setAllowsdata' is assigned a value but never used.","'dailyallowances' is assigned a value but never used.","'loadPendingDailyAllowances' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setDailyAllowsStatusId'. Either include it or remove the dependency array.",["7522"],"'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'loginLevelState' is defined but never used.","'columns' is assigned a value but never used.","'loadUsers' is assigned a value but never used.","'MaterialTable' is defined but never used.","'wpexpirydata' is assigned a value but never used.","'useTable' is defined but never used.","'ReactWhatsapp' is defined but never used.","'AdvancedImage' is defined but never used.","'accessibility' is defined but never used.","'responsive' is defined but never used.","'Input' is defined but never used.","'InputGroup' is defined but never used.","'InputLeftAddon' is defined but never used.","'NumberInput' is defined but never used.","'NumberInputField' is defined but never used.","'NumberInputStepper' is defined but never used.","'NumberIncrementStepper' is defined but never used.","'NumberDecrementStepper' is defined but never used.","'usePayrun' is defined but never used.","'useExpenses' is defined but never used.","'selectmonths' is assigned a value but never used.","'longMonth' is assigned a value but never used.","'payslipsbatch' is assigned a value but never used.","'setPSBPayrunId' is assigned a value but never used.","'setError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'payrun_loading'. Either include it or remove the dependency array.",["7523"],"'yy' is assigned a value but never used.","'mm' is assigned a value but never used.","'d' is assigned a value but never used.","'tmpsiteallows' is assigned a value but never used.","'tmpexpsclaims' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPayrun', 'loadEmployees', 'loadUnpaidDailyAllows', and 'loadUnpaidExpenses'. Either include them or remove the dependency array.",["7524"],"'useReactToPrint' is defined but never used.","'dayjs' is defined but never used.","'Spacer' is defined but never used.","'Thead' is defined but never used.","'Tfoot' is defined but never used.","'Tr' is defined but never used.","'Th' is defined but never used.","'Td' is defined but never used.","'TableCaption' is defined but never used.","'ModalHeader' is defined but never used.","'Wrap' is defined but never used.","'WrapItem' is defined but never used.","'paydataState' is defined but never used.","'componentRef' is assigned a value but never used.","'getSingleBatchPayslip' is assigned a value but never used.","'singlebatch_payslip_loading' is assigned a value but never used.","'singlebatch_payslip_error' is assigned a value but never used.","'setPayrunId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadPayitems'. Either include it or remove the dependency array.",["7525"],"React Hook useEffect has missing dependencies: 'payslip_period' and 'setPSBPayrunId'. Either include them or remove the dependency array.",["7526"],"React Hook useEffect has a missing dependency: 'calcPayrunTotals'. Either include it or remove the dependency array.",["7527"],"'handleShowSumm' is assigned a value but never used.","'ButtonGroup' is defined but never used.","'GridItem' is defined but never used.","'FormControlLabel' is defined but never used.","'ListSubheader' is defined but never used.","'CurrencyTextField' is defined but never used.","'Autocomplete' is defined but never used.","'useUpdatePayslips' is defined but never used.","'usePayslipsContext' is defined but never used.","React Hook useEffect has missing dependencies: 'formdata' and 'setLoadFormdata'. Either include them or remove the dependency array. If 'setLoadFormdata' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["7528"],"React Hook useEffect has missing dependencies: 'handleCalc' and 'state'. Either include them or remove the dependency array.",["7529"],"'useMemo' is defined but never used.","'ReactToPrint' is defined but never used.","'Table' is defined but never used.","'Tbody' is defined but never used.","'chakra' is defined but never used.","'TriangleDownIcon' is defined but never used.","'TriangleUpIcon' is defined but never used.","'useSortBy' is defined but never used.","'ComponentToPrint' is defined but never used.","'classes' is assigned a value but never used.","'setPayrunStatus' is assigned a value but never used.","'updatePayrun' is assigned a value but never used.","'handlePrint' is assigned a value but never used.","'exportPdfTable' is assigned a value but never used.","'handleSaveCalcTotals' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleCalcTotals'. Either include it or remove the dependency array.",["7530"],"'DashboardMain' is defined but never used.","'useEmployees' is defined but never used.","'role' is assigned a value but never used.","'setRole' is assigned a value but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","'Divider' is defined but never used.","'openDialog' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'handleOpenDialog' is assigned a value but never used.","'handleCloseDialog' is assigned a value but never used.","'HStack' is defined but never used.","'MenuIcon' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'MoneyIcon' is defined but never used.","'PayslipTableViewStaff' is defined but never used.","'DailyAllowancesTableViewStaff' is defined but never used.","'OnLeavesViewStaff' is defined but never used.","'singleemployee' is assigned a value but never used.","'setSingleEmployeeId' is assigned a value but never used.","'loadPendingLeaves' is assigned a value but never used.","'loadPendingExpenses' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loginLevel.loginUserId', 'setEditEmployeeID', and 'setIsEditingOn'. Either include them or remove the dependency array.",["7531"],"'leaves_url' is defined but never used.","React Hook useEffect has missing dependencies: 'loadEmpLeaves' and 'loginLevel.loginUserId'. Either include them or remove the dependency array.",["7532"],"'EmailIcon' is defined but never used.","'ViewIcon' is defined but never used.","'addDays' is defined but never used.","'expenses_url' is defined but never used.","'expenses_error' is assigned a value but never used.","'loadEmpExpenses' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loginLevel.loginUserId' and 'setFilter'. Either include them or remove the dependency array.",["7533"],"'payslips_error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadEmpPayslips' and 'loginLevel.loginUserId'. Either include them or remove the dependency array.",["7534"],"'title' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadEmpDailyAllowances' and 'loginLevel.loginUserId'. Either include them or remove the dependency array.",["7535"],"'setEditEmployeeID' is assigned a value but never used.","'setIsEditingOn' is assigned a value but never used.","'getSingleEmployee' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loginLevel.loginUserId' and 'setSingleEmployeeId'. Either include them or remove the dependency array.",["7536"],"React Hook useEffect has missing dependencies: 'birthdate' and 'reporting_email'. Either include them or remove the dependency array.",["7537"],["7490"],["7491"],"React Hook useEffect has missing dependencies: 'getSingleEmployee', 'loadDepartments', 'loadDesignations', 'loginLevel.loginUserId', and 'setEditEmployeeID'. Either include them or remove the dependency array.",["7538"],"'useExpensesContext' is defined but never used.","'Alert' is defined but never used.","'toast' is assigned a value but never used.","'updateExpenses' is assigned a value but never used.","'addExpenses' is assigned a value but never used.","'expensesdata' is assigned a value but never used.","'setExpensesdata' is assigned a value but never used.","'alertSuccess' is assigned a value but never used.","'setAlertSuccess' is assigned a value but never used.","'editEmployeeID' is assigned a value but never used.","'addExpense' is assigned a value but never used.","'deleteExpense' is assigned a value but never used.",["7539"],"'SimpleGrid' is defined but never used.","'CustomAlertDialog' is defined but never used.","'isOpen' is assigned a value but never used.","'isLeaveYear' is assigned a value but never used.","'setLeaveYear' is assigned a value but never used.","'onClose' is assigned a value but never used.","'cancelRef' is assigned a value but never used.",["7540"],"React Hook useEffect has missing dependencies: 'currentyear', 'loginLevel.loginUserId', 'selectleaveyear', 'setLeaveId', and 'setLeaveYr'. Either include them or remove the dependency array.",["7541"],"React Hook useEffect has missing dependencies: 'Calc_Leave' and 'leaves'. Either include them or remove the dependency array.",["7542"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'MonetizationOnIcon' is defined but never used.","'CardLayout2' is defined but never used.","'CardLayout4' is defined but never used.","'BarChart' is defined but never used.","'BarChartStack' is defined but never used.","'ExpenseSummaryTableView' is defined but never used.","'SummaryTableView' is defined but never used.","'PayslipSummaryTableView' is defined but never used.","'ExportLeave2Excel' is defined but never used.","'months' is assigned a value but never used.","'monthsname' is assigned a value but never used.","'expchartdata' is assigned a value but never used.","'sitechartdata' is assigned a value but never used.","'paychartdata' is assigned a value but never used.","'data' is assigned a value but never used.","'paysummcolumns' is assigned a value but never used.","'paysummdata' is assigned a value but never used.","'dataset' is assigned a value but never used.","'expensesperiod' is assigned a value but never used.","'setExpPeriodId' is assigned a value but never used.","'expdata' is assigned a value but never used.","'setExpData' is assigned a value but never used.","'selectpayrollyear' is assigned a value but never used.",["7543"],["7544"],"'FlightIcon' is defined but never used.","'addDailyAllows' is assigned a value but never used.","'updateDailyAllows' is assigned a value but never used.","'allowsDetlsdata' is assigned a value but never used.","'setAllowsDetlsdata' is assigned a value but never used.","'allows_period' is assigned a value but never used.","'toLoadDetls' is assigned a value but never used.","'setToLoadDetls' is assigned a value but never used.","'loadEmpDailyAllowances' is assigned a value but never used.","'dailyallowances_loading' is assigned a value but never used.","'dailyallowances_error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loginLevel.loginUserId' and 'setDailyAllowsId'. Either include them or remove the dependency array.",["7545"],"'handleAllowsDetlDialogOpen' is assigned a value but never used.","'useDailyAllowancesContext' is defined but never used.","'selectYear' is assigned a value but never used.","'selectMonth' is assigned a value but never used.","'dailyallowsdetls' is assigned a value but never used.","'allowsPeriod' is assigned a value but never used.","'setAllowsPeriod' is assigned a value but never used.","'alert' is assigned a value but never used.","'setAlert' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'input', 'loginLevel.loginUser', 'loginLevel.loginUserId', 'loginLevel.perdiem_fee', 'loginLevel.reporting_to', 'loginLevel.siteallows_fee', and 'setInput'. Either include them or remove the dependency array.",["7546"],"'useDisclosure' is defined but never used.","'isFetching' is assigned a value but never used.","'addDailyAllowsDetls' is assigned a value but never used.","'allowsdataId' is assigned a value but never used.","'setAllowsdataId' is assigned a value but never used.","'tabledeldata' is assigned a value but never used.","'setTableDelData' is assigned a value but never used.","'isCalc' is assigned a value but never used.","'setIsCalc' is assigned a value but never used.","'isBuild' is assigned a value but never used.","'setIsBuild' is assigned a value but never used.","'totalsValues' is assigned a value but never used.","'isRowIndex' is assigned a value but never used.","'setIsRowIndex' is assigned a value but never used.",["7547"],"'build_dailyallowsdata' is assigned a value but never used.","'jobbonus' is assigned a value but never used.","'perdiem' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'save_siteallows' is assigned a value but never used.","'save_AllowsDetls' is assigned a value but never used.","'handle_calc' is assigned a value but never used.","'update_SiteAllowsTotals' is assigned a value but never used.","'leaves_error' is assigned a value but never used.","'loadEmpLeaves' is assigned a value but never used.",["7548"],["7490"],["7491"],"'reducer' is defined but never used.","'field_width' is assigned a value but never used.","'password' is assigned a value but never used.","'reset' is assigned a value but never used.","'errors' is assigned a value but never used.","'withDefaultColorScheme' is defined but never used.","'setValue' is defined but never used.","'updateEmployee' is assigned a value but never used.","'leave_bf' is assigned a value but never used.","'leave_cd' is assigned a value but never used.","'reporting_email' is assigned a value but never used.","'checktap' is assigned a value but never used.","'setCheckTap' is assigned a value but never used.","'TrainingsTableStaff' is defined but never used.","'headLeaveTableCells' is defined but never used.","'payrunState' is defined but never used.","'items' is assigned a value but never used.","'emp' is assigned a value but never used.","'setEmp' is assigned a value but never used.","'payslip_endmonthdate' is assigned a value but never used.","'add_Payslip' is assigned a value but never used.","'delete_Payslip' is assigned a value but never used.",["7549"],"'bank_name' is assigned a value but never used.","'total_allowances_bnd' is assigned a value but never used.","'total_deductions_bnd' is assigned a value but never used.","'React' is defined but never used.","'emaildata' is assigned a value but never used.","'setEmailData' is assigned a value but never used.","'setIsEditingOff' is assigned a value but never used.","'handleEmailButtonClick' is assigned a value but never used.","'useLeavesContext' is defined but never used.","'setTrainingId' is assigned a value but never used.","'differenceInMonths' is defined but never used.","'editLeaveID' is assigned a value but never used.",["7550"],["7490"],["7491"],["7490"],["7491"],"'useCustomToast' is defined but never used.",["7551"],"'update_employee_error' is assigned a value but never used.","'handleLeaveFormDialogOpen' is assigned a value but never used.","'handleLeaveFormAlertOpen' is assigned a value but never used.","'Save_LeaveData' is assigned a value but never used.",["7490"],["7491"],"React Hook useEffect has a missing dependency: 'getBatchPayrun'. Either include it or remove the dependency array.",["7552"],"'PropTypes' is defined but never used.",["7553"],"React Hook useEffect has missing dependencies: 'period' and 'setDailyAllowsPeriodId'. Either include them or remove the dependency array.",["7554"],"'setIsAlertOpen' is assigned a value but never used.","'totals' is assigned a value but never used.","'expensesstatus' is assigned a value but never used.","'setExpStatusId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'month', 'setExpPeriodMthId', 'setExpPeriodYrId', and 'year'. Either include them or remove the dependency array.",["7555"],"React Hook useEffect has missing dependencies: 'Calc_Totals' and 'expensesperiod'. Either include them or remove the dependency array.",["7556"],"'char' is defined but never used.",["7490"],["7491"],"'Export2Excel' is defined but never used.","React Hook useEffect has missing dependencies: 'month', 'setLeavePeriodMthId', 'setLeavePeriodYrId', and 'year'. Either include them or remove the dependency array.",["7557"],"'setExpPeriodYrId' is assigned a value but never used.","'setExpPeriodMthId' is assigned a value but never used.","'useExpensesPeriod' is defined but never used.",["7558"],"React Hook useEffect has missing dependencies: 'Build_data' and 'payrunstatus'. Either include them or remove the dependency array.",["7559"],"'currentyear' is assigned a value but never used.","'icno' is assigned a value but never used.","'designation' is assigned a value but never used.","'department' is assigned a value but never used.","'leave_entitled' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Build_EmpData'. Either include it or remove the dependency array.",["7560"],"'OnLeavesView' is defined but never used.","'WPExpiryView' is defined but never used.","'batchpayslips' is assigned a value but never used.",["7561"],"'SwitchCase' is assigned a value but never used.","'formatPrice' is defined but never used.","'selectedRowIds' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'setState'. Either include it or remove the dependency array. If 'setState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["7562"],"MemberExpression","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["7490"],["7491"],"'PeopleIcon' is defined but never used.","'LayersIcon' is defined but never used.","'LeaveTableViewAdmin' is defined but never used.","'TrainingsTableViewAdmin' is defined but never used.","'WPExpiryViewAdmin' is defined but never used.","'EmployeeTableLeaveView' is defined but never used.",["7563"],"'useLeaves' is defined but never used.","'isUpdate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setLeaveStatusId'. Either include it or remove the dependency array.",["7564"],"React Hook useEffect has missing dependencies: 'allows_period', 'editDailyAllowanceID', and 'getSingleBatchDailyAllowsDetl'. Either include them or remove the dependency array.",["7565"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'index' is assigned a value but never used.",["7566"],"'loadExpenses' is assigned a value but never used.","'setHocId' is assigned a value but never used.","'updateHoc' is assigned a value but never used.","'addHoc' is assigned a value but never used.","'hocdata' is assigned a value but never used.","'setHocdata' is assigned a value but never used.",["7567"],"'useDeleteHoc' is defined but never used.","'hoc' is assigned a value but never used.","'handleSentEmail' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setHoclocationId'. Either include it or remove the dependency array.",["7568"],"React Hook useEffect has a missing dependency: 'setHocwhatdetailsId'. Either include it or remove the dependency array.",["7569"],"React Hook useEffect has missing dependencies: 'setHocwhyId' and 'setHocwhydetailsId'. Either include them or remove the dependency array.",["7570"],["7490"],["7491"],["7490"],["7491"],"React Hook useEffect has missing dependencies: 'month', 'setHocPeriodMthId', 'setHocPeriodYrId', and 'year'. Either include them or remove the dependency array.",["7571"],["7572"],["7490"],["7491"],"'Appbanner' is defined but never used.","'SingleEmployeeStaff' is defined but never used.","'UserAccess' is defined but never used.","'Login' is defined but never used.","'EmployeeFormStaff' is defined but never used.",["7573"],["7574"],["7575"],["7576"],["7577"],"'getMonth' is defined but never used.","'employees_url' is defined but never used.","'paydata' is assigned a value but never used.","'setPaydata' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'jobs' is assigned a value but never used.","'setJobs' is assigned a value but never used.","'ColoredDateCellWrapper' is assigned a value but never used.",["7578"],["7579"],["7580"],["7581"],["7582"],["7583"],["7584"],["7585"],["7586"],["7587"],["7588"],["7589"],["7590"],["7591"],["7592"],["7593"],"'Modal' is defined but never used.","'ModalOverlay' is defined but never used.","'ModalContent' is defined but never used.","'ModalBody' is defined but never used.","'ModalCloseButton' is defined but never used.","'Tabs' is defined but never used.","'TabList' is defined but never used.","'TabPanels' is defined but never used.","'Tab' is defined but never used.","'TabPanel' is defined but never used.",["7594"],["7595"],["7596"],"'UpdateLeaveYear' is assigned a value but never used.",["7597"],["7598"],["7599"],["7600"],["7601"],["7490"],["7491"],["7602"],["7603"],"'LeaveTableViewStaff' is defined but never used.","'TrainingsTableViewStaff' is defined but never used.","'ExpenseTableViewStaff' is defined but never used.","'WPExpiryViewStaff' is defined but never used.",["7604"],"'Bar' is defined but never used.","'Cell' is defined but never used.","'ResponsiveContainer' is defined but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.","'XAxis' is defined but never used.","'YAxis' is defined but never used.","'CartesianGrid' is defined but never used.","'Legend' is defined but never used.","'barchartdata' is assigned a value but never used.","'linechartdata' is assigned a value but never used.",["7605"],"'items' is defined but never used.",["7606"],["7607"],["7608"],["7609"],["7610"],["7611"],["7612"],"'cols' is assigned a value but never used.","'cols1' is assigned a value but never used.","'multiDataSet' is assigned a value but never used.",["7613"],["7614"],["7615"],["7616"],["7617"],["7618"],["7619"],["7620"],["7621"],["7622"],["7623"],["7624"],["7625"],["7626"],["7627"],["7628"],["7629"],["7630"],["7631"],["7632"],["7633"],["7634"],["7635"],["7636"],["7637"],["7638"],["7639"],["7640"],["7641"],["7642"],["7643"],["7644"],["7490"],["7491"],["7645"],["7646"],["7647"],["7648"],"'List' is defined but never used.","'ExpandLess' is defined but never used.","'ExpandMore' is defined but never used.","'MdCheckCircle' is defined but never used.","'FaPeopleCarry' is defined but never used.","'FaCommentsDollar' is defined but never used.","'ExpenseForm' is defined but never used.",["7649"],["7650"],"'columns_despatch' is assigned a value but never used.","'columns_inprogress' is assigned a value but never used.",["7651"],["7652"],"no-global-assign","no-unsafe-negation",{"desc":"7653","fix":"7654"},{"desc":"7655","fix":"7656"},{"desc":"7657","fix":"7658"},{"desc":"7655","fix":"7659"},{"desc":"7660","fix":"7661"},{"desc":"7662","fix":"7663"},{"desc":"7664","fix":"7665"},{"desc":"7666","fix":"7667"},{"desc":"7668","fix":"7669"},{"desc":"7670","fix":"7671"},{"desc":"7672","fix":"7673"},{"desc":"7674","fix":"7675"},{"desc":"7676","fix":"7677"},{"desc":"7678","fix":"7679"},{"desc":"7678","fix":"7680"},{"desc":"7681","fix":"7682"},{"desc":"7683","fix":"7684"},{"desc":"7685","fix":"7686"},{"desc":"7687","fix":"7688"},{"desc":"7689","fix":"7690"},{"desc":"7691","fix":"7692"},{"desc":"7693","fix":"7694"},{"desc":"7695","fix":"7696"},{"desc":"7697","fix":"7698"},{"desc":"7699","fix":"7700"},{"desc":"7701","fix":"7702"},{"desc":"7703","fix":"7704"},{"desc":"7705","fix":"7706"},{"desc":"7707","fix":"7708"},{"desc":"7709","fix":"7710"},{"desc":"7711","fix":"7712"},{"desc":"7713","fix":"7714"},{"desc":"7715","fix":"7716"},{"desc":"7717","fix":"7718"},{"desc":"7719","fix":"7720"},{"desc":"7721","fix":"7722"},{"desc":"7723","fix":"7724"},{"desc":"7725","fix":"7726"},{"desc":"7727","fix":"7728"},{"desc":"7729","fix":"7730"},{"desc":"7731","fix":"7732"},{"desc":"7733","fix":"7734"},{"desc":"7735","fix":"7736"},{"desc":"7737","fix":"7738"},{"desc":"7739","fix":"7740"},{"desc":"7741","fix":"7742"},{"desc":"7743","fix":"7744"},{"desc":"7733","fix":"7745"},{"desc":"7707","fix":"7746"},{"desc":"7747","fix":"7748"},{"desc":"7749","fix":"7750"},{"desc":"7707","fix":"7751"},{"desc":"7707","fix":"7752"},{"desc":"7753","fix":"7754"},{"desc":"7755","fix":"7756"},{"desc":"7757","fix":"7758"},{"desc":"7733","fix":"7759"},{"desc":"7733","fix":"7760"},{"desc":"7733","fix":"7761"},{"desc":"7660","fix":"7762"},{"desc":"7763","fix":"7764"},{"desc":"7709","fix":"7765"},{"desc":"7766","fix":"7767"},{"desc":"7768","fix":"7769"},{"desc":"7770","fix":"7771"},{"desc":"7772","fix":"7773"},{"desc":"7709","fix":"7774"},{"desc":"7775","fix":"7776"},{"desc":"7777","fix":"7778"},{"desc":"7711","fix":"7779"},{"desc":"7780","fix":"7781"},{"desc":"7707","fix":"7782"},{"desc":"7783","fix":"7784"},{"desc":"7785","fix":"7786"},{"desc":"7705","fix":"7787"},{"desc":"7733","fix":"7788"},{"desc":"7789","fix":"7790"},{"desc":"7791","fix":"7792"},{"desc":"7793","fix":"7794"},{"desc":"7795","fix":"7796"},{"desc":"7707","fix":"7797"},{"desc":"7713","fix":"7798"},{"desc":"7715","fix":"7799"},{"desc":"7717","fix":"7800"},{"desc":"7719","fix":"7801"},{"desc":"7721","fix":"7802"},{"desc":"7711","fix":"7803"},{"desc":"7743","fix":"7804"},{"desc":"7666","fix":"7805"},{"desc":"7753","fix":"7806"},{"desc":"7676","fix":"7807"},{"desc":"7674","fix":"7808"},{"desc":"7711","fix":"7809"},{"desc":"7689","fix":"7810"},{"desc":"7672","fix":"7811"},{"desc":"7670","fix":"7812"},{"desc":"7657","fix":"7813"},{"desc":"7701","fix":"7814"},{"desc":"7703","fix":"7815"},{"desc":"7755","fix":"7816"},{"desc":"7757","fix":"7817"},{"desc":"7733","fix":"7818"},{"desc":"7707","fix":"7819"},{"desc":"7747","fix":"7820"},{"desc":"7749","fix":"7821"},{"desc":"7668","fix":"7822"},{"desc":"7733","fix":"7823"},{"desc":"7733","fix":"7824"},{"desc":"7662","fix":"7825"},{"desc":"7660","fix":"7826"},{"desc":"7655","fix":"7827"},{"desc":"7707","fix":"7828"},{"desc":"7729","fix":"7829"},{"desc":"7707","fix":"7830"},{"desc":"7729","fix":"7831"},{"desc":"7707","fix":"7832"},{"desc":"7729","fix":"7833"},{"desc":"7685","fix":"7834"},{"desc":"7687","fix":"7835"},{"desc":"7683","fix":"7836"},{"desc":"7678","fix":"7837"},{"desc":"7711","fix":"7838"},{"desc":"7783","fix":"7839"},{"desc":"7772","fix":"7840"},{"desc":"7777","fix":"7841"},{"desc":"7795","fix":"7842"},{"desc":"7766","fix":"7843"},{"desc":"7731","fix":"7844"},{"desc":"7737","fix":"7845"},{"desc":"7735","fix":"7846"},{"desc":"7733","fix":"7847"},{"desc":"7733","fix":"7848"},{"desc":"7733","fix":"7849"},{"desc":"7709","fix":"7850"},{"desc":"7775","fix":"7851"},{"desc":"7709","fix":"7852"},{"desc":"7768","fix":"7853"},{"desc":"7770","fix":"7854"},{"desc":"7681","fix":"7855"},{"desc":"7789","fix":"7856"},{"desc":"7791","fix":"7857"},{"desc":"7793","fix":"7858"},{"desc":"7678","fix":"7859"},{"desc":"7691","fix":"7860"},{"desc":"7693","fix":"7861"},{"desc":"7699","fix":"7862"},{"desc":"7697","fix":"7863"},{"desc":"7695","fix":"7864"},{"desc":"7763","fix":"7865"},{"desc":"7705","fix":"7866"},{"desc":"7727","fix":"7867"},{"desc":"7723","fix":"7868"},{"desc":"7725","fix":"7869"},{"desc":"7739","fix":"7870"},{"desc":"7741","fix":"7871"},{"desc":"7653","fix":"7872"},{"desc":"7655","fix":"7873"},{"desc":"7733","fix":"7874"},{"desc":"7733","fix":"7875"},{"desc":"7733","fix":"7876"},{"desc":"7733","fix":"7877"},"Update the dependencies array to be: [birthdate, reporting_email, tap_checkbox]",{"range":"7878","text":"7879"},"Update the dependencies array to be: [setAllEmpId]",{"range":"7880","text":"7881"},"Update the dependencies array to be: [loadExpenses]",{"range":"7882","text":"7883"},{"range":"7884","text":"7881"},"Update the dependencies array to be: [editLeaveID, setLeaveId]",{"range":"7885","text":"7886"},"Update the dependencies array to be: [expenses, expensesdata]",{"range":"7887","text":"7888"},"Update the dependencies array to be: [allows_period, getSingleBatchDailyAllowance]",{"range":"7889","text":"7890"},"Update the dependencies array to be: [loadEmployees]",{"range":"7891","text":"7892"},"Update the dependencies array to be: [loadAllowances, loadDeductions, loadEmployees]",{"range":"7893","text":"7894"},"Update the dependencies array to be: [getSingleBatchPayslipEarnings, payslip_period, single_payslip.empid]",{"range":"7895","text":"7896"},"Update the dependencies array to be: [getSingleBatchPayslipDeductions, payslip_period, single_payslip.empid]",{"range":"7897","text":"7898"},"Update the dependencies array to be: [editPayslipID, getSinglePayslip]",{"range":"7899","text":"7900"},"Update the dependencies array to be: [allows_period, allows_empid, setDailyAllowsId, setDailyAllowsDetlsPeriod, setDailyAllowsDetlsId]",{"range":"7901","text":"7902"},"Update the dependencies array to be: [setPayItemId]",{"range":"7903","text":"7904"},{"range":"7905","text":"7904"},"Update the dependencies array to be: [editEmployeeID, getSingleEmployee, loadDepartments, loadDesignations]",{"range":"7906","text":"7907"},"Update the dependencies array to be: [editEmployeeID, setEducationId]",{"range":"7908","text":"7909"},"Update the dependencies array to be: [editEmployeeID, setExperienceId]",{"range":"7910","text":"7911"},"Update the dependencies array to be: [editEmployeeID, setFamilyId]",{"range":"7912","text":"7913"},"Update the dependencies array to be: [editEmployeeID, setTrainingId]",{"range":"7914","text":"7915"},"Update the dependencies array to be: [editEmployeeID, getSingleBatchTraining]",{"range":"7916","text":"7917"},"Update the dependencies array to be: [editEmployeeID, getSingleBatchLeave]",{"range":"7918","text":"7919"},"Update the dependencies array to be: [editEmployeeID, loadSingleBatchFamily]",{"range":"7920","text":"7921"},"Update the dependencies array to be: [editEmployeeID, loadSingleBatchExperience]",{"range":"7922","text":"7923"},"Update the dependencies array to be: [editEmployeeID, loadSingleBatchEducation]",{"range":"7924","text":"7925"},"Update the dependencies array to be: [getSingleBatchPayslipDeductions, payPeriod, payPeriodEmpId]",{"range":"7926","text":"7927"},"Update the dependencies array to be: [getSingleBatchPayslipEarnings, payPeriod, payPeriodEmpId]",{"range":"7928","text":"7929"},"Update the dependencies array to be: [loadPendingLeaves]",{"range":"7930","text":"7931"},"Update the dependencies array to be: [currentyear]",{"range":"7932","text":"7933"},"Update the dependencies array to be: [setPayrunStatusId, status]",{"range":"7934","text":"7935"},"Update the dependencies array to be: [setDailyAllowsStatusId]",{"range":"7936","text":"7937"},"Update the dependencies array to be: [loadPaybatch, payrun_loading]",{"range":"7938","text":"7939"},"Update the dependencies array to be: [getPayrun, loadEmployees, loadUnpaidDailyAllows, loadUnpaidExpenses]",{"range":"7940","text":"7941"},"Update the dependencies array to be: [loadPayitems]",{"range":"7942","text":"7943"},"Update the dependencies array to be: [payslip_period, psbpayrunId, setPSBPayrunId]",{"range":"7944","text":"7945"},"Update the dependencies array to be: [calcPayrunTotals, isCalc]",{"range":"7946","text":"7947"},"Update the dependencies array to be: [formdata, loadFormdata, setLoadFormdata]",{"range":"7948","text":"7949"},"Update the dependencies array to be: [handleCalc, isLoad, state]",{"range":"7950","text":"7951"},"Update the dependencies array to be: [handleCalcTotals, isCalc]",{"range":"7952","text":"7953"},"Update the dependencies array to be: [loginLevel.loginUserId, setEditEmployeeID, setIsEditingOn]",{"range":"7954","text":"7955"},"Update the dependencies array to be: [loadEmpLeaves, loginLevel.loginUserId]",{"range":"7956","text":"7957"},"Update the dependencies array to be: [loginLevel.loginUserId, setFilter]",{"range":"7958","text":"7959"},"Update the dependencies array to be: [loadEmpPayslips, loginLevel.loginUserId]",{"range":"7960","text":"7961"},"Update the dependencies array to be: [loadEmpDailyAllowances, loginLevel.loginUserId]",{"range":"7962","text":"7963"},"Update the dependencies array to be: [loginLevel.loginUserId, setSingleEmployeeId]",{"range":"7964","text":"7965"},"Update the dependencies array to be: [birthdate, reporting_email]",{"range":"7966","text":"7967"},"Update the dependencies array to be: [getSingleEmployee, loadDepartments, loadDesignations, loginLevel.loginUserId, setEditEmployeeID]",{"range":"7968","text":"7969"},{"range":"7970","text":"7959"},{"range":"7971","text":"7933"},"Update the dependencies array to be: [currentyear, isLoad, loginLevel.loginUserId, selectleaveyear, setLeaveId, setLeaveYr]",{"range":"7972","text":"7973"},"Update the dependencies array to be: [Calc_Leave, leaves]",{"range":"7974","text":"7975"},{"range":"7976","text":"7933"},{"range":"7977","text":"7933"},"Update the dependencies array to be: [dailyAllowsId, loginLevel.loginUserId, setDailyAllowsId]",{"range":"7978","text":"7979"},"Update the dependencies array to be: [input, loginLevel.loginUser, loginLevel.loginUserId, loginLevel.perdiem_fee, loginLevel.reporting_to, loginLevel.siteallows_fee, setInput]",{"range":"7980","text":"7981"},"Update the dependencies array to be: [allows_empid, allows_period, setDailyAllowsDetlsId, setDailyAllowsDetlsPeriod, setDailyAllowsId]",{"range":"7982","text":"7983"},{"range":"7984","text":"7959"},{"range":"7985","text":"7959"},{"range":"7986","text":"7959"},{"range":"7987","text":"7886"},"Update the dependencies array to be: [getBatchPayrun]",{"range":"7988","text":"7989"},{"range":"7990","text":"7935"},"Update the dependencies array to be: [period, setDailyAllowsPeriodId]",{"range":"7991","text":"7992"},"Update the dependencies array to be: [month, setExpPeriodMthId, setExpPeriodYrId, year]",{"range":"7993","text":"7994"},"Update the dependencies array to be: [Calc_Totals, expensesperiod, isCalc]",{"range":"7995","text":"7996"},"Update the dependencies array to be: [month, setLeavePeriodMthId, setLeavePeriodYrId, year]",{"range":"7997","text":"7998"},{"range":"7999","text":"7935"},"Update the dependencies array to be: [Build_data, isCalc, payrunstatus]",{"range":"8000","text":"8001"},"Update the dependencies array to be: [Build_EmpData]",{"range":"8002","text":"8003"},{"range":"8004","text":"7937"},"Update the dependencies array to be: [selectedFlatRows, setState]",{"range":"8005","text":"8006"},{"range":"8007","text":"7933"},"Update the dependencies array to be: [setLeaveStatusId]",{"range":"8008","text":"8009"},"Update the dependencies array to be: [allows_period, editDailyAllowanceID, getSingleBatchDailyAllowsDetl]",{"range":"8010","text":"8011"},{"range":"8012","text":"7931"},{"range":"8013","text":"7959"},"Update the dependencies array to be: [setHoclocationId]",{"range":"8014","text":"8015"},"Update the dependencies array to be: [setHocwhatdetailsId, whatstatus]",{"range":"8016","text":"8017"},"Update the dependencies array to be: [whystatus, category, setHocwhyId, setHocwhydetailsId]",{"range":"8018","text":"8019"},"Update the dependencies array to be: [month, setHocPeriodMthId, setHocPeriodYrId, year]",{"range":"8020","text":"8021"},{"range":"8022","text":"7933"},{"range":"8023","text":"7939"},{"range":"8024","text":"7941"},{"range":"8025","text":"7943"},{"range":"8026","text":"7945"},{"range":"8027","text":"7947"},{"range":"8028","text":"7937"},{"range":"8029","text":"7969"},{"range":"8030","text":"7892"},{"range":"8031","text":"7979"},{"range":"8032","text":"7902"},{"range":"8033","text":"7900"},{"range":"8034","text":"7937"},{"range":"8035","text":"7915"},{"range":"8036","text":"7898"},{"range":"8037","text":"7896"},{"range":"8038","text":"7883"},{"range":"8039","text":"7927"},{"range":"8040","text":"7929"},{"range":"8041","text":"7981"},{"range":"8042","text":"7983"},{"range":"8043","text":"7959"},{"range":"8044","text":"7933"},{"range":"8045","text":"7973"},{"range":"8046","text":"7975"},{"range":"8047","text":"7894"},{"range":"8048","text":"7959"},{"range":"8049","text":"7959"},{"range":"8050","text":"7888"},{"range":"8051","text":"7886"},{"range":"8052","text":"7881"},{"range":"8053","text":"7933"},{"range":"8054","text":"7955"},{"range":"8055","text":"7933"},{"range":"8056","text":"7955"},{"range":"8057","text":"7933"},{"range":"8058","text":"7955"},{"range":"8059","text":"7911"},{"range":"8060","text":"7913"},{"range":"8061","text":"7909"},{"range":"8062","text":"7904"},{"range":"8063","text":"7937"},{"range":"8064","text":"8009"},{"range":"8065","text":"7998"},{"range":"8066","text":"8003"},{"range":"8067","text":"8021"},{"range":"8068","text":"7992"},{"range":"8069","text":"7957"},{"range":"8070","text":"7963"},{"range":"8071","text":"7961"},{"range":"8072","text":"7959"},{"range":"8073","text":"7959"},{"range":"8074","text":"7959"},{"range":"8075","text":"7935"},{"range":"8076","text":"8001"},{"range":"8077","text":"7935"},{"range":"8078","text":"7994"},{"range":"8079","text":"7996"},{"range":"8080","text":"7907"},{"range":"8081","text":"8015"},{"range":"8082","text":"8017"},{"range":"8083","text":"8019"},{"range":"8084","text":"7904"},{"range":"8085","text":"7917"},{"range":"8086","text":"7919"},{"range":"8087","text":"7925"},{"range":"8088","text":"7923"},{"range":"8089","text":"7921"},{"range":"8090","text":"7989"},{"range":"8091","text":"7931"},{"range":"8092","text":"7953"},{"range":"8093","text":"7949"},{"range":"8094","text":"7951"},{"range":"8095","text":"7965"},{"range":"8096","text":"7967"},{"range":"8097","text":"7879"},{"range":"8098","text":"7881"},{"range":"8099","text":"7959"},{"range":"8100","text":"7959"},{"range":"8101","text":"7959"},{"range":"8102","text":"7959"},[4502,4504],"[birthdate, reporting_email, tap_checkbox]",[4561,4563],"[setAllEmpId]",[794,796],"[loadExpenses]",[2745,2747],[3145,3147],"[editLeaveID, setLeaveId]",[2647,2649],"[expenses, expensesdata]",[2415,2417],"[allows_period, getSingleBatchDailyAllowance]",[1318,1320],"[loadEmployees]",[1614,1616],"[loadAllowances, loadDeductions, loadEmployees]",[2130,2132],"[getSingleBatchPayslipEarnings, payslip_period, single_payslip.empid]",[2234,2236],"[getSingleBatchPayslipDeductions, payslip_period, single_payslip.empid]",[3406,3408],"[editPayslipID, getSinglePayslip]",[3372,3401],"[allows_period, allows_empid, setDailyAllowsId, setDailyAllowsDetlsPeriod, setDailyAllowsDetlsId]",[1165,1167],"[setPayItemId]",[1162,1164],[2678,2680],"[editEmployeeID, getSingleEmployee, loadDepartments, loadDesignations]",[1959,1961],"[editEmployeeID, setEducationId]",[1902,1904],"[editEmployeeID, setExperienceId]",[2516,2518],"[editEmployeeID, setFamilyId]",[3170,3172],"[editEmployeeID, setTrainingId]",[1185,1187],"[editEmployeeID, getSingleBatchTraining]",[1106,1108],"[editEmployeeID, getSingleBatchLeave]",[967,969],"[editEmployeeID, loadSingleBatchFamily]",[1148,1150],"[editEmployeeID, loadSingleBatchExperience]",[956,958],"[editEmployeeID, loadSingleBatchEducation]",[1539,1541],"[getSingleBatchPayslipDeductions, payPeriod, payPeriodEmpId]",[1538,1540],"[getSingleBatchPayslipEarnings, payPeriod, payPeriodEmpId]",[2341,2343],"[loadPendingLeaves]",[4542,4544],"[currentyear]",[2038,2040],"[setPayrunStatusId, status]",[2644,2646],"[setDailyAllowsStatusId]",[3471,3485],"[loadPaybatch, payrun_loading]",[12038,12040],"[getPayrun, loadEmployees, loadUnpaidDailyAllows, loadUnpaidExpenses]",[5449,5451],"[loadPayitems]",[5746,5759],"[payslip_period, psbpayrunId, setPSBPayrunId]",[5839,5847],"[calcPayrunTotals, isCalc]",[2997,3011],"[formdata, loadFormdata, setLoadFormdata]",[3114,3122],"[handleCalc, isLoad, state]",[5369,5377],"[handleCalcTotals, isCalc]",[4403,4405],"[loginLevel.loginUserId, setEditEmployeeID, setIsEditingOn]",[1888,1890],"[loadEmpLeaves, loginLevel.loginUserId]",[2190,2192],"[loginLevel.loginUserId, setFilter]",[1497,1499],"[loadEmpPayslips, loginLevel.loginUserId]",[2358,2360],"[loadEmpDailyAllowances, loginLevel.loginUserId]",[4317,4319],"[loginLevel.loginUserId, setSingleEmployeeId]",[4450,4452],"[birthdate, reporting_email]",[3019,3021],"[getSingleEmployee, loadDepartments, loadDesignations, loginLevel.loginUserId, setEditEmployeeID]",[3456,3458],[4951,4953],[5115,5123],"[currentyear, isLoad, loginLevel.loginUserId, selectleaveyear, setLeaveId, setLeaveYr]",[5202,5226],"[Calc_Leave, leaves]",[8255,8257],[7901,7903],[3547,3562],"[dailyAllowsId, loginLevel.loginUserId, setDailyAllowsId]",[2477,2479],"[input, loginLevel.loginUser, loginLevel.loginUserId, loginLevel.perdiem_fee, loginLevel.reporting_to, loginLevel.siteallows_fee, setInput]",[5729,5758],"[allows_empid, allows_period, setDailyAllowsDetlsId, setDailyAllowsDetlsPeriod, setDailyAllowsId]",[1976,1978],[3787,3789],[1328,1330],[3212,3214],[2407,2409],"[getBatchPayrun]",[2077,2079],[2674,2676],"[period, setDailyAllowsPeriodId]",[1862,1864],"[month, setExpPeriodMthId, setExpPeriodYrId, year]",[1977,1985],"[Calc_Totals, expensesperiod, isCalc]",[1725,1727],"[month, setLeavePeriodMthId, setLeavePeriodYrId, year]",[2012,2014],[2121,2129],"[Build_data, isCalc, payrunstatus]",[5225,5227],"[Build_EmpData]",[3901,3903],[2693,2711],"[selectedFlatRows, setState]",[4705,4707],[4053,4055],"[setLeaveStatusId]",[2741,2743],"[allows_period, editDailyAllowanceID, getSingleBatchDailyAllowsDetl]",[2508,2510],[4195,4197],[3648,3650],"[setHoclocationId]",[3846,3858],"[setHocwhatdetailsId, whatstatus]",[4109,4130],"[whystatus, category, setHocwhyId, setHocwhydetailsId]",[2738,2740],"[month, setHocPeriodMthId, setHocPeriodYrId, year]",[7958,7960],[3471,3485],[12038,12040],[5451,5453],[5748,5761],[5841,5849],[3901,3903],[3019,3021],[1318,1320],[3547,3562],[3372,3401],[3406,3408],[2644,2646],[3170,3172],[2234,2236],[2130,2132],[794,796],[1539,1541],[1538,1540],[2477,2479],[5729,5758],[3802,3804],[5148,5150],[5312,5320],[5399,5423],[1614,1616],[3575,3577],[4597,4599],[2013,2015],[3212,3214],[2745,2747],[7958,7960],[4735,4737],[9302,9304],[4583,4585],[4705,4707],[4582,4584],[1902,1904],[2516,2518],[1959,1961],[1162,1164],[3637,3639],[4053,4055],[1725,1727],[5225,5227],[2738,2740],[2674,2676],[1888,1890],[2358,2360],[1497,1499],[2190,2192],[1328,1330],[1976,1978],[2012,2014],[2121,2129],[2077,2079],[1862,1864],[1977,1985],[2678,2680],[3648,3650],[3846,3858],[4109,4130],[1165,1167],[1185,1187],[1106,1108],[956,958],[1148,1150],[967,969],[2407,2409],[2508,2510],[5393,5401],[2997,3011],[3114,3122],[4317,4319],[4450,4452],[4502,4504],[4561,4563],[5499,5501],[3610,3612],[5505,5507],[5500,5502]]