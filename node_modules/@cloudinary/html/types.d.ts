import { CloudinaryImage } from "@cloudinary/base/assets/CloudinaryImage";
import { VideoCodecAction } from "@cloudinary/base/actions/transcode/VideoCodecAction";
export declare type Plugin = (element: HTMLImageElement | HTMLVideoElement, cloudinaryImage: CloudinaryImage, htmlPluginState?: HtmlPluginState) => Promise<string | void>;
export declare type Plugins = Plugin[];
export declare type AccessibilityMode = 'darkmode' | 'brightmode' | 'monochrome' | 'colorblind';
export declare type PlaceholderMode = 'vectorize' | 'pixelate' | 'blur' | 'predominant-color';
export declare type HtmlPluginState = {
    cleanupCallbacks: Function[];
    pluginEventSubscription: Function[];
};
export declare type VideoSources = {
    type: VideoType;
    codecs: Array<string>;
    transcode: VideoCodecAction;
}[] | undefined;
export declare type VideoType = 'flv' | '3gp' | 'mov' | 'mpg' | 'avi' | 'wmv' | 'ogv' | string;
